<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>懒羊羊</title>
  
  <subtitle>我是不会和普通的羊一般见识的。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.xxlaila.cn/"/>
  <updated>2019-12-05T06:50:05.550Z</updated>
  <id>https://www.xxlaila.cn/</id>
  
  <author>
    <name>xxlaila</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>k8s v1.14 prometheus与grafana部署</title>
    <link href="https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus与grafana部署/</id>
    <published>2019-12-04T09:55:44.000Z</published>
    <updated>2019-12-05T06:50:05.550Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-prometheus是读取Metrcs、etcd、api的其中数据。<a id="more"></a></p><h4 id="查看etcd的metrics输出信息"><a href="#查看etcd的metrics输出信息" class="headerlink" title="查看etcd的metrics输出信息"></a>查看etcd的metrics输出信息</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># curl --cacert <span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca.pem --cert <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span>etcd.pem --key <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span>etcd-key.pem https:<span class="comment">//172.21.17.30:2379/metrics</span></span><br></pre></td></tr></table></figure><h4 id="查看kube-apiserver的metrics信息"><a href="#查看kube-apiserver的metrics信息" class="headerlink" title="查看kube-apiserver的metrics信息"></a>查看kube-apiserver的metrics信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get --raw /metrics</span></span><br></pre></td></tr></table></figure><h4 id="下载官方的yaml文件"><a href="#下载官方的yaml文件" class="headerlink" title="下载官方的yaml文件"></a>下载官方的yaml文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git clone https://github.com/coreos/kube-prometheus</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd kube-prometheus/manifests</span></span><br><span class="line"><span class="comment"># mkdir -p operator node-exporter alertmanager grafana kube-state-metrics prometheus serviceMonitor adapter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mv *-serviceMonitor* serviceMonitor/</span></span><br><span class="line"><span class="comment"># mv grafana-* grafana/</span></span><br><span class="line"><span class="comment"># mv kube-state-metrics-* kube-state-metrics/</span></span><br><span class="line"><span class="comment"># mv alertmanager-* alertmanager/</span></span><br><span class="line"><span class="comment"># mv node-exporter-* node-exporter/</span></span><br><span class="line"><span class="comment"># mv prometheus-adapter* adapter/</span></span><br><span class="line"><span class="comment"># mv prometheus-* prometheus/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd setup/</span></span><br><span class="line"><span class="comment"># mv prometheus-operator* ../operator/</span></span><br><span class="line"><span class="comment"># mv 0namespace-namespace.yaml ../</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd ..</span></span><br><span class="line"><span class="comment"># ls -ltrh</span></span><br><span class="line">-rw-r--r-- 1 root root   60 Dec  3 17:45 0namespace-namespace.yaml</span><br><span class="line">drwxr-xr-x 2 root root  219 Dec  3 17:46 grafana</span><br><span class="line">drwxr-xr-x 2 root root  305 Dec  3 17:46 kube-state-metrics</span><br><span class="line">drwxr-xr-x 2 root root  200 Dec  3 17:46 node-exporter</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  3 17:47 operator</span><br><span class="line">drwxr-xr-x 2 root root  149 Dec  4 13:40 alertmanager</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 09:56 prometheus</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 10:01 adapter</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 11:55 serviceMonitor</span><br></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署前需要修改文件；</p><h4 id="创建监控etcd-secret"><a href="#创建监控etcd-secret" class="headerlink" title="创建监控etcd secret"></a>创建监控etcd secret</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etcd 监控要用到证书同时需要修改prometheus-prometheus.yaml。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n monitoring create secret generic etcd-certs --from-file=/etc/kubernetes/ssl/ca.pem --from-file=etcd-key.pem --from-file=etcd.pem</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get secret -n monitoring</span></span><br><span class="line">etcd-certs                        Opaque                                3      5d15h</span><br></pre></td></tr></table></figure><h4 id="修改prometheus-prometheus-yaml"><a href="#修改prometheus-prometheus-yaml" class="headerlink" title="修改prometheus-prometheus.yaml"></a>修改prometheus-prometheus.yaml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd prometheus/</span></span><br><span class="line"><span class="comment"># vim prometheus-prometheus.yaml</span></span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: Prometheus</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    prometheus: k8s</span><br><span class="line">  name: k8s</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  alerting:</span><br><span class="line">    alertmanagers:</span><br><span class="line">    - name: alertmanager-main</span><br><span class="line">      namespace: monitoring</span><br><span class="line">      port: web</span><br><span class="line">  baseImage: quay.io/prometheus/prometheus</span><br><span class="line">  nodeSelector:</span><br><span class="line">    kubernetes.io/os: linux</span><br><span class="line">  podMonitorSelector: &#123;&#125;</span><br><span class="line">  replicas: 2</span><br><span class="line">  <span class="comment"># 添加etcd 证书</span></span><br><span class="line">  secrets:</span><br><span class="line">  - etcd-certs</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      memory: 400Mi</span><br><span class="line">  <span class="comment"># 设置数据保留天数</span></span><br><span class="line">  retention: 7d</span><br><span class="line">  <span class="comment"># 创建外部存储pvc</span></span><br><span class="line">  storage:</span><br><span class="line">    volumeClaimTemplate:</span><br><span class="line">      spec:</span><br><span class="line">        accessModes:</span><br><span class="line">        - ReadWriteOnce</span><br><span class="line">        metadata:</span><br><span class="line">          annotations:</span><br><span class="line">            storageclass.kubernetes.io/is-default-class: <span class="literal">true</span></span><br><span class="line">          labels:</span><br><span class="line">            prometheus: prometheus-data-pvc</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 25Gi</span><br><span class="line">  ruleSelector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      prometheus: k8s</span><br><span class="line">      role: alert-rules</span><br><span class="line">  securityContext:</span><br><span class="line">    fsGroup: 2000</span><br><span class="line">    runAsNonRoot: <span class="literal">true</span></span><br><span class="line">    runAsUser: 1000</span><br><span class="line">  serviceAccountName: prometheus-k8s</span><br><span class="line">  serviceMonitorNamespaceSelector: &#123;&#125;</span><br><span class="line">  serviceMonitorSelector: &#123;&#125;</span><br><span class="line">  version: v2.11.0</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>storageclass.kubernetes.io/is-default-class: true</code> 是设置的默认动态存储，可以参考<a href="https://www.xxlaila.cn/2019/08/12/kube-nfs-%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/">kube-nfs-动态存储</a></p><h4 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署前吧adapter 目录下面的 <code>prometheus-adapter-apiService.yaml</code> 重命名，因为前面安装了metrics。如果这里在覆盖安装，就会导致<code>metrics.k8s.io</code>报错。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># kubectl apply -f 0namespace-namespace.yaml</span></span><br><span class="line"><span class="keyword">namespace</span>/monitoring created</span><br><span class="line"></span><br><span class="line"><span class="meta"># kubectl apply -f operator/</span></span><br><span class="line"><span class="meta"># kubectl -n monitoring get pod|grep operator</span></span><br><span class="line">prometheus-<span class="keyword">operator</span><span class="number">-548</span>c6dc45c-vz6l6   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">40</span>h</span><br><span class="line"></span><br><span class="line"><span class="meta"># kubectl apply -f adapter/</span></span><br><span class="line"><span class="meta"># kubectl apply -f alertmanager/</span></span><br><span class="line"><span class="meta"># kubectl apply -f node-exporter/</span></span><br><span class="line"><span class="meta"># kubectl apply -f kube-state-metrics/</span></span><br><span class="line"><span class="meta"># kubectl apply -f grafana/</span></span><br><span class="line"><span class="meta"># kubectl apply -f prometheus/</span></span><br><span class="line"><span class="meta"># kubectl apply -f serviceMonitor/</span></span><br></pre></td></tr></table></figure><h4 id="查看部署状态"><a href="#查看部署状态" class="headerlink" title="查看部署状态"></a>查看部署状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get all -n monitoring</span></span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/alertmanager-main-0                    2/2     Running   0          40h</span><br><span class="line">pod/alertmanager-main-1                    2/2     Running   0          40h</span><br><span class="line">pod/alertmanager-main-2                    2/2     Running   0          40h</span><br><span class="line">pod/grafana-5db74b88f4-7mt8c               1/1     Running   0          40h</span><br><span class="line">pod/kube-state-metrics-54f98c4687-mz5lq    3/3     Running   0          18h</span><br><span class="line">pod/node-exporter-hb66c                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-l2s8g                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-sjbmg                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-vw87m                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-zr8fk                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-zxcwl                    2/2     Running   0          40h</span><br><span class="line">pod/prometheus-adapter-8667948d79-tcz47    1/1     Running   0          18h</span><br><span class="line">pod/prometheus-k8s-0                       3/3     Running   1          20h</span><br><span class="line">pod/prometheus-k8s-1                       3/3     Running   1          20h</span><br><span class="line">pod/prometheus-operator-548c6dc45c-vz6l6   1/1     Running   0          40h</span><br><span class="line"></span><br><span class="line">NAME                            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">service/alertmanager-main       ClusterIP   10.254.101.249   &lt;none&gt;        9093/TCP                     40h</span><br><span class="line">service/alertmanager-operated   ClusterIP   None             &lt;none&gt;        9093/TCP,9094/TCP,9094/UDP   40h</span><br><span class="line">service/etcd                    ClusterIP   None             &lt;none&gt;        2379/TCP                     17h</span><br><span class="line">service/grafana                 ClusterIP   10.254.214.6     &lt;none&gt;        3000/TCP                     40h</span><br><span class="line">service/kube-state-metrics      ClusterIP   None             &lt;none&gt;        8443/TCP,9443/TCP            18h</span><br><span class="line">service/node-exporter           ClusterIP   None             &lt;none&gt;        9100/TCP                     40h</span><br><span class="line">service/prometheus-adapter      ClusterIP   10.254.60.49     &lt;none&gt;        443/TCP                      18h</span><br><span class="line">service/prometheus-k8s          ClusterIP   10.254.41.152    &lt;none&gt;        9090/TCP                     40h</span><br><span class="line">service/prometheus-operated     ClusterIP   None             &lt;none&gt;        9090/TCP                     20h</span><br><span class="line">service/prometheus-operator     ClusterIP   None             &lt;none&gt;        8080/TCP                     40h</span><br><span class="line"></span><br><span class="line">NAME                           DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE</span><br><span class="line">daemonset.apps/node-exporter   6         6         6       6            6           kubernetes.io/os=linux   40h</span><br><span class="line"></span><br><span class="line">NAME                                  READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/grafana               1/1     1            1           40h</span><br><span class="line">deployment.apps/kube-state-metrics    1/1     1            1           18h</span><br><span class="line">deployment.apps/prometheus-adapter    1/1     1            1           18h</span><br><span class="line">deployment.apps/prometheus-operator   1/1     1            1           40h</span><br><span class="line"></span><br><span class="line">NAME                                             DESIRED   CURRENT   READY   AGE</span><br><span class="line">replicaset.apps/grafana-5db74b88f4               1         1         1       40h</span><br><span class="line">replicaset.apps/kube-state-metrics-54f98c4687    1         1         1       18h</span><br><span class="line">replicaset.apps/prometheus-adapter-8667948d79    1         1         1       18h</span><br><span class="line">replicaset.apps/prometheus-operator-548c6dc45c   1         1         1       40h</span><br><span class="line"></span><br><span class="line">NAME                                 READY   AGE</span><br><span class="line">statefulset.apps/alertmanager-main   3/3     40h</span><br><span class="line">statefulset.apps/prometheus-k8s      2/2     20h</span><br></pre></td></tr></table></figure><h4 id="配置ingress"><a href="#配置ingress" class="headerlink" title="配置ingress"></a>配置ingress</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;ingress-monitor.yaml &lt;&lt;EOF </span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: prometheus.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: prometheus-k8s</span><br><span class="line">          servicePort: 9090</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: grafana.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: grafana</span><br><span class="line">          servicePort: 3000</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: alertmanager.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: alertmanager-main</span><br><span class="line">          servicePort: 9093</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f ingress-monitor.yaml</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在浏览器打开域名即可访问</p><h3 id="常用应用监控"><a href="#常用应用监控" class="headerlink" title="常用应用监控"></a>常用应用监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kubernetes 自身常见的监控有kube-apiserver、kube-scheduler、kube-controller-manager、etcd。node节点常见的有kubelt、kube-proxy。在serviceMonitor目录下面默认的文件只能满足kube-apiserver、kubelt两个，其他的修改单独修改文件才能监控。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 上面阐述的是集群是二进制方式安装，而不是以pod形式进行安装。</p><h4 id="kube-scheduler监控"><a href="#kube-scheduler监控" class="headerlink" title="kube-scheduler监控"></a>kube-scheduler监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-scheduler的service、endpoints不在kubernetes集群内，可以通过<code>kubectl get ep -n kube-system</code> 进行查看，修改 <code>prometheus-serviceMonitorKubeScheduler.yaml</code>，在该文件添加如下内容或者新起一个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;&gt; prometheus-serviceMonitorKubeScheduler.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-scheduler</span><br><span class="line">  name: kube-scheduler</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10251</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10251</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-scheduler</span><br><span class="line">  name: kube-scheduler</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10251</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorKubeScheduler.yaml</span></span><br></pre></td></tr></table></figure><h4 id="kube-controller-manager-监控"><a href="#kube-controller-manager-监控" class="headerlink" title="kube-controller-manager 监控"></a>kube-controller-manager 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-controller-manager修改，因为kubernetes 集群是采用ssl证书安装，默认的kube-controller-manager是没有使用ssl加密的，所以这里需要使用ssl证书，及https，否则不能监控。就会提示什么403、x509、400错误。</p><ul><li><p>prometheus-serviceMonitorKubeControllerManager.yaml 修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat prometheus-serviceMonitorKubeControllerManager.yaml</span></span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">    interval: 30s</span><br><span class="line">    honorLabels: <span class="literal">true</span></span><br><span class="line">    port: https-metrics</span><br><span class="line">    scheme: https</span><br><span class="line">    tlsConfig:</span><br><span class="line">      insecureSkipVerify: <span class="literal">true</span></span><br><span class="line">    metricRelabelings:</span><br><span class="line">    - action: drop</span><br><span class="line">      regex: etcd_(debugging|disk|request|server).*</span><br><span class="line">      sourceLabels:</span><br><span class="line">      - __name__</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-controller-manager</span><br></pre></td></tr></table></figure></li><li><p>新建kube-controller-manager-service.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;kube-controller-manager-service.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    component: kube-controller-manager</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 10252</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10252</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 10252</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorKubeControllerManager.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f kube-controller-manager-service.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="etcd-监控"><a href="#etcd-监控" class="headerlink" title="etcd 监控"></a>etcd 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; etcd 不在k8s集群内部所以要创建Endpoints、Service</p><ul><li>prometheus-serviceMonitoretcd.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitoretcd.yaml&lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    component: kube-controller-manager</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 2379</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 2379</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 2379</span><br><span class="line">    protocol: TCP</span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - interval: 10s</span><br><span class="line">    port: https-metrics</span><br><span class="line">    scheme: https</span><br><span class="line">    tlsConfig:</span><br><span class="line">      caFile: /etc/prometheus/secrets/etcd-certs/ca.pem</span><br><span class="line">      certFile: /etc/prometheus/secrets/etcd-certs/etcd.pem</span><br><span class="line">      keyFile: /etc/prometheus/secrets/etcd-certs/etcd-key.pem</span><br><span class="line">      insecureSkipVerify: <span class="literal">true</span></span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: etcd</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitoretcd.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="kube-proxy-监控"><a href="#kube-proxy-监控" class="headerlink" title="kube-proxy 监控"></a>kube-proxy 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kube-proxy的metrics收集端口为10249，可以查看kub-proxy的安装文档。使用的是http方式，不需要ssl加密</p><ul><li><p>新建 kube-proxy.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;  kube-proxy.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    component: kube-proxy</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10249</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10249</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.16.204</span><br><span class="line">  - ip: 172.21.16.231</span><br><span class="line">  - ip: ……</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10249</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>新建 prometheus-serviceMonitorProxy.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitorProxy.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - interval: 30s</span><br><span class="line">    port: http-metrics</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-proxy</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorProxy.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f kube-proxy.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="查看service、endpoints"><a href="#查看service、endpoints" class="headerlink" title="查看service、endpoints"></a>查看service、endpoints</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc,endpoints -n kube-system</span></span><br><span class="line">NAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">service/etcd                      ClusterIP   None             &lt;none&gt;        2379/TCP                 3m41s</span><br><span class="line">service/kube-controller-manager   ClusterIP   None             &lt;none&gt;        10252/TCP                16h</span><br><span class="line">service/kube-dns                  ClusterIP   10.254.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   7d16h</span><br><span class="line">service/kube-proxy                ClusterIP   None             &lt;none&gt;        10249/TCP                37m</span><br><span class="line">service/kube-scheduler            ClusterIP   None             &lt;none&gt;        10251/TCP                18h</span><br><span class="line">service/kubelet                   ClusterIP   None             &lt;none&gt;        10250/TCP                40h</span><br><span class="line">service/kubernetes-dashboard      NodePort    10.254.139.196   &lt;none&gt;        443:31417/TCP            6d18h</span><br><span class="line">service/metrics-server            ClusterIP   10.254.196.151   &lt;none&gt;        443/TCP                  2d23h</span><br><span class="line"></span><br><span class="line">NAME                                ENDPOINTS                                                                 AGE</span><br><span class="line">endpoints/etcd                      172.21.16.110:2379,172.21.17.30:2379,172.21.17.31:2379                    3m41s</span><br><span class="line">endpoints/kube-controller-manager   172.21.16.110:10252,172.21.17.30:10252,172.21.17.31:10252                 16h</span><br><span class="line">endpoints/kube-dns                  10.244.1.46:53,10.244.4.36:53,10.244.1.46:53 + 3 more...                  7d16h</span><br><span class="line">endpoints/kube-proxy                172.21.16.204:10249,172.21.16.231:10249,172.21.17.34:10249 + 3 more...    37m</span><br><span class="line">endpoints/kube-scheduler            172.21.16.110:10251,172.21.17.30:10251,172.21.17.31:10251                 7d16h</span><br><span class="line">endpoints/kubelet                   172.21.16.204:10255,172.21.16.231:10255,172.21.17.34:10255 + 15 more...   40h</span><br><span class="line">endpoints/kubernetes-dashboard      10.244.6.27:8443                                                          6d18h</span><br><span class="line">endpoints/metrics-server            172.21.17.34:4443                                                         2d23h</span><br></pre></td></tr></table></figure><h4 id="查看接口信息"><a href="#查看接口信息" class="headerlink" title="查看接口信息"></a>查看接口信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions| grep monitoring</span></span><br><span class="line">monitoring.coreos.com/v1</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get --raw "/apis/monitoring.coreos.com/v1"|jq .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get --raw "/apis/monitoring.coreos.com/v1/servicemonitors"|jq .</span></span><br></pre></td></tr></table></figure><h3 id="查看验证"><a href="#查看验证" class="headerlink" title="查看验证"></a>查看验证</h3><h4 id="Prometheus-的Targets监控"><a href="#Prometheus-的Targets监控" class="headerlink" title="Prometheus 的Targets监控"></a>Prometheus 的Targets监控</h4><p><img src="https://img.xxlaila.cn/1575513127483.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513184822.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513219480.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575517225144.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575519980419.jpg" alt="img"></p><h4 id="granfa-查看"><a href="#granfa-查看" class="headerlink" title="granfa 查看"></a>granfa 查看</h4><p><img src="https://img.xxlaila.cn/1575513263070.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513304800.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513339328.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kube-prometheus是读取Metrcs、etcd、api的其中数据。
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="prometheus" scheme="https://www.xxlaila.cn/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>centos 7 升级内核</title>
    <link href="https://www.xxlaila.cn/2019/12/03/centos-7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"/>
    <id>https://www.xxlaila.cn/2019/12/03/centos-7-升级内核/</id>
    <published>2019-12-03T09:01:03.000Z</published>
    <updated>2019-12-03T09:21:24.879Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="centos-7-升级内核版本"><a href="#centos-7-升级内核版本" class="headerlink" title="centos 7 升级内核版本"></a>centos 7 升级内核版本</h3><h4 id="查看当前内核版本"><a href="#查看当前内核版本" class="headerlink" title="查看当前内核版本"></a>查看当前内核版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">3.10.0-693.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">Linux k8s-master-01-3.kxl 3.10.0-693.el7.x86_64 <span class="comment">#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="更新yum源仓库和插件"><a href="#更新yum源仓库和插件" class="headerlink" title="更新yum源仓库和插件"></a>更新yum源仓库和插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y update</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h3 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h3><h4 id="导入ELRepo仓库的公共密钥"><a href="#导入ELRepo仓库的公共密钥" class="headerlink" title="导入ELRepo仓库的公共密钥"></a>导入ELRepo仓库的公共密钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br></pre></td></tr></table></figure><h4 id="安装ELRepo仓库的yum源"><a href="#安装ELRepo仓库的yum源" class="headerlink" title="安装ELRepo仓库的yum源"></a>安装ELRepo仓库的yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm</span></span><br></pre></td></tr></table></figure><h4 id="查看可用的系统内核包"><a href="#查看可用的系统内核包" class="headerlink" title="查看可用的系统内核包"></a>查看可用的系统内核包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum --disablerepo="*" --enablerepo="elrepo-kernel" list available</span></span><br><span class="line">elrepo-kernel                                                                                                                                                                      | 2.9 kB  00:00:00     </span><br><span class="line">elrepo-kernel/primary_db                                                                                                                                                           | 1.8 MB  00:00:00     </span><br><span class="line">Available Packages</span><br><span class="line">kernel-lt.x86_64                                                                                     4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-devel.x86_64                                                                               4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-doc.noarch                                                                                 4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-headers.x86_64                                                                             4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools.x86_64                                                                               4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs.x86_64                                                                          4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs-devel.x86_64                                                                    4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel-ml.x86_64                                                                                     5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-devel.x86_64                                                                               5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-doc.noarch                                                                                 5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-headers.x86_64                                                                             5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools.x86_64                                                                               5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs.x86_64                                                                          5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs-devel.x86_64                                                                    5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">perf.x86_64                                                                                          5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">python-perf.x86_64                                                                                   5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结果为长期维护版本lt为4.4，最新主线稳定版ml为5.4，这里安装的是4.4</p><h4 id="安装kernel"><a href="#安装kernel" class="headerlink" title="安装kernel"></a>安装kernel</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y --enablerepo=elrepo-kernel install kernel-lt.x86_64-4.4.205-1.el7.elrepo kernel-lt-devel.x86_64-4.4.205-1.el7.elrepo</span></span><br></pre></td></tr></table></figure><h3 id="设置-grub2"><a href="#设置-grub2" class="headerlink" title="设置 grub2"></a>设置 grub2</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内核安装好后，需要设置为默认启动选项并重启后才会生效</p><h4 id="查看系统上的所有可用内核"><a href="#查看系统上的所有可用内核" class="headerlink" title="查看系统上的所有可用内核"></a>查看系统上的所有可用内核</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># awk -F\' '$1=="menuentry " &#123;print i++ " : " $2&#125;' /etc/grub2.cfg</span></span><br><span class="line">0 : CentOS Linux (4.4.205-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">1 : CentOS Linux (3.10.0-957.12.1.el7.x86_64) 7 (Core)</span><br><span class="line">2 : CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)</span><br><span class="line">3 : CentOS Linux (0-rescue-d1f142097d497f24c021d7de9b81cab4) 7 (Core)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器上存在4 个内核，我们要使用 4.4 这个版本，可以通过 grub2-set-default 0 命令或编辑 /etc/default/grub 文件来设置</p><h4 id="设置新的内核为grub2的默认版本"><a href="#设置新的内核为grub2的默认版本" class="headerlink" title="设置新的内核为grub2的默认版本"></a>设置新的内核为grub2的默认版本</h4><ul><li><p>方法1<br>通过 grub2-set-default 0 命令设置，其中 0 是上面查询出来的可用内核</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grub2-set-default 0</span></span><br></pre></td></tr></table></figure></li><li><p>方法2<br>编辑 /etc/default/grub 文件，设置 GRUB_DEFAULT=0，通过上面查询显示的编号为 0 的内核作为默认内核。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/default/grub</span></span><br><span class="line">GRUB_TIMEOUT=1</span><br><span class="line">GRUB_DISTRIBUTOR=<span class="string">"<span class="variable">$(sed 's, release .*$,,g' /etc/system-release)</span>"</span></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_DISABLE_SUBMENU=<span class="literal">true</span></span><br><span class="line">GRUB_TERMINAL=<span class="string">"serial console"</span></span><br><span class="line">GRUB_SERIAL_COMMAND=<span class="string">"serial --speed=115200"</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">"console=tty0 crashkernel=auto console=ttyS0,115200"</span></span><br><span class="line">GRUB_DISABLE_RECOVERY=<span class="string">"true"</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="生成-grub-配置文件并重启"><a href="#生成-grub-配置文件并重启" class="headerlink" title="生成 grub 配置文件并重启"></a>生成 grub 配置文件并重启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grub2-mkconfig -o /boot/grub2/grub.cfg</span></span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-4.4.205-1.el7.elrepo.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-957.12.1.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-957.12.1.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-0-rescue-d1f142097d497f24c021d7de9b81cab4</span><br><span class="line">Found initrd image: /boot/initramfs-0-rescue-d1f142097d497f24c021d7de9b81cab4.img</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">4.4.205-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><h3 id="删除旧内核"><a href="#删除旧内核" class="headerlink" title="删除旧内核"></a>删除旧内核</h3><h4 id="查看系统中全部的内核"><a href="#查看系统中全部的内核" class="headerlink" title="查看系统中全部的内核"></a>查看系统中全部的内核</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa | grep kernel</span></span><br><span class="line">kernel<span class="_">-lt</span>-devel-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">kernel-3.10.0-693.el7.x86_64</span><br><span class="line">kernel-3.10.0-957.12.1.el7.x86_64</span><br><span class="line">kernel<span class="_">-lt</span>-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">kernel-tools-libs-3.10.0-1062.4.3.el7.x86_64</span><br><span class="line">kernel-3.10.0-1062.4.3.el7.x86_64</span><br><span class="line">kernel-tools-3.10.0-1062.4.3.el7.x86_64</span><br></pre></td></tr></table></figure><h4 id="yum-remove-删除旧内核的-RPM-包"><a href="#yum-remove-删除旧内核的-RPM-包" class="headerlink" title="yum remove 删除旧内核的 RPM 包"></a>yum remove 删除旧内核的 RPM 包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum remove kernel-3.10.0-693.el7.x86_64 kernel-3.10.0-957.12.1.el7.x86_64 kernel-tools-libs-3.10.0-1062.4.3.el7.x86_64 kernel-3.10.0-1062.4.3.el7.x86_64 kernel-tools-3.10.0-1062.4.3.el7.x86_64</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;centos-7-升级内核版本&quot;&gt;&lt;a href=&quot;#centos-7-升级内核版本&quot; class=&quot;headerlink&quot; title=&quot;centos 7 升级内核版本&quot;&gt;&lt;/a&gt;centos 7 升级内核版本&lt;/h3&gt;&lt;h4 id=&quot;查看当前内核版本&quot;&gt;&lt;a href=&quot;#查看当前内核版本&quot; class=&quot;headerlink&quot; title=&quot;查看当前内核版本&quot;&gt;&lt;/a&gt;查看当前内核版本&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# uname -r&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.10.0-693.el7.x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# uname -a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux k8s-master-01-3.kxl 3.10.0-693.el7.x86_64 &lt;span class=&quot;comment&quot;&gt;#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="centos" scheme="https://www.xxlaila.cn/categories/centos/"/>
    
    
      <category term="kernel" scheme="https://www.xxlaila.cn/tags/kernel/"/>
    
  </entry>
  
  <entry>
    <title>flannel cni容器部署</title>
    <link href="https://www.xxlaila.cn/2019/11/29/flannel-cni%E5%AE%B9%E5%99%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/29/flannel-cni容器部署/</id>
    <published>2019-11-29T03:50:55.000Z</published>
    <updated>2019-11-29T06:38:18.272Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="flannel-cni-配置"><a href="#flannel-cni-配置" class="headerlink" title="flannel cni 配置"></a>flannel cni 配置</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除原有的网络组件，采用容器方式进行部署。</p><h3 id="kube-controller-manager修改"><a href="#kube-controller-manager修改" class="headerlink" title="kube-controller-manager修改"></a>kube-controller-manager修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动参数增加如下两项<a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--allocate-node-cidrs=<span class="literal">true</span></span><br><span class="line">--cluster-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><p><strong>参数</strong>:</p><ul><li>1.是否应在云提供商上分配和设置Pod的CIDR</li><li>2.集群中Pod的CIDR范围。要求–allocate-node-cidrs为true</li></ul><p>kube-controller-manager参数<a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/" target="_blank" rel="noopener">详细说明</a></p><h3 id="kubelet-修改"><a href="#kubelet-修改" class="headerlink" title="kubelet 修改"></a>kubelet 修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kubelet修改两个配置文件，kubelet-config.yaml 文件已更新</p><h4 id="kubelet-service启动文件"><a href="#kubelet-service启动文件" class="headerlink" title="kubelet.service启动文件"></a>kubelet.service启动文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--network-plugin=cni</span><br><span class="line">--cni-conf-dir=/etc/cni/net.d</span><br><span class="line">--cni-bin-dir=/opt/cni/bin</span><br></pre></td></tr></table></figure><p>kubele参数<a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/" target="_blank" rel="noopener">详细说明</a></p><h4 id="kube-proxy-修改子网"><a href="#kube-proxy-修改子网" class="headerlink" title="kube-proxy 修改子网"></a>kube-proxy 修改子网</h4><ul><li>kube-proxy-config.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clusterCIDR: 10.244.0.0/16</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k8s<a href="https://www.xxlaila.cn/2019/09/11/kubernetes-v1-14%E5%AE%89%E8%A3%85/">集群安装文档</a>已经更新，node<a href="https://www.xxlaila.cn/2019/09/16/kubernetes-v1-14-node%E5%AE%89%E8%A3%85/">节点安装文档</a>已经更新。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先停止node 的flananel、 kubelet、kube-proxy。在删除/etc/cni/net.d/、/run/flannel/subnet.env、/var/lib/cni/flannel 的历史文件，重启网卡，除了flannel不启动，其他均启动。全新安装不需要这么操作，flannel证书也不需要复制。<a href="https://github.com/containernetworking/cni" target="_blank" rel="noopener">二进制安装参考</a></p><h3 id="下载cni插件"><a href="#下载cni插件" class="headerlink" title="下载cni插件"></a>下载cni插件</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cni <a href="https://github.com/containernetworking/plugins/releases" target="_blank" rel="noopener">插件下载</a>，解压后，放在各个节点的 /opt/cni/bin 下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ls -l /opt/cni/bin/</span><br><span class="line">total 70144</span><br><span class="line">-rwxr-xr-x 1 root root  4159253 Nov 26 16:32 bandwidth</span><br><span class="line">-rwxr-xr-x 1 root root  4628074 Nov 26 16:32 bridge</span><br><span class="line">-rwxr-xr-x 1 root root 12124236 Nov 26 16:32 dhcp</span><br><span class="line">-rwxr-xr-x 1 root root  5894275 Nov 26 16:32 firewall</span><br><span class="line">-rwxr-xr-x 1 root root  3069556 Nov 26 16:32 flannel</span><br><span class="line">-rwxr-xr-x 1 root root  4113837 Nov 26 16:32 host-device</span><br><span class="line">-rwxr-xr-x 1 root root  3614305 Nov 26 16:32 host-local</span><br><span class="line">-rwxr-xr-x 1 root root  4275320 Nov 26 16:32 ipvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3209373 Nov 26 16:32 loopback</span><br><span class="line">-rwxr-xr-x 1 root root  4346248 Nov 26 16:32 macvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3895553 Nov 26 16:32 portmap</span><br><span class="line">-rwxr-xr-x 1 root root  4546828 Nov 26 16:32 ptp</span><br><span class="line">-rwxr-xr-x 1 root root  3392736 Nov 26 16:32 sbr</span><br><span class="line">-rwxr-xr-x 1 root root  2885430 Nov 26 16:32 static</span><br><span class="line">-rwxr-xr-x 1 root root  3356497 Nov 26 16:32 tuning</span><br><span class="line">-rwxr-xr-x 1 root root  4275168 Nov 26 16:32 vlan</span><br></pre></td></tr></table></figure><h3 id="flannel-部署"><a href="#flannel-部署" class="headerlink" title="flannel 部署"></a>flannel 部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/v0.11.0/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line">kubectl apply -f ./kube-flannel.yml</span><br></pre></td></tr></table></figure><h3 id="查看flannel安装情况"><a href="#查看flannel安装情况" class="headerlink" title="查看flannel安装情况"></a>查看flannel安装情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get po,svc -o wide</span></span><br><span class="line">NAME                 READY   STATUS    RESTARTS   AGE   IP           NODE            NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/nginx-ds-b9wgm   1/1     Running   0          43h   10.244.6.2   172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-dd9mb   1/1     Running   0          43h   10.244.1.3   172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-lcrn5   1/1     Running   0          43h   10.244.4.2   172.21.16.231   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-n52vr   1/1     Running   0          43h   10.244.2.2   172.21.17.40    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-twdxm   1/1     Running   0          43h   10.244.5.2   172.21.16.204   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-z72mx   1/1     Running   0          43h   10.244.3.2   172.21.17.38    &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE   SELECTOR</span><br><span class="line">service/kubernetes   ClusterIP   10.254.0.1      &lt;none&gt;        443/TCP        44h   &lt;none&gt;</span><br><span class="line">service/nginx-ds     NodePort    10.254.230.34   &lt;none&gt;        80:31286/TCP   43h   app=nginx-ds</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get po,svc -o wide -n kube-system</span></span><br><span class="line">NAME                                              READY   STATUS    RESTARTS   AGE     IP              NODE            NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/coredns-5579b8778b-dlk4c                      1/1     Running   4          43h     10.244.1.2      172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-2t8rn                   1/1     Running   0          44h     172.21.17.41    172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-9sb8v                   1/1     Running   0          44h     172.21.16.231   172.21.16.231   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-npl5k                   1/1     Running   0          44h     172.21.17.34    172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-r5n8r                   1/1     Running   0          44h     172.21.16.204   172.21.16.204   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-wpfxw                   1/1     Running   0          44h     172.21.17.40    172.21.17.40    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-x2v8z                   1/1     Running   0          44h     172.21.17.38    172.21.17.38    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kubernetes-dashboard-65dfbf6f4f-sc92h         1/1     Running   0          21h     10.244.6.10     172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/metrics-server-v0.3.4-5cd6d6b55f-psq2z        2/2     Running   0          3h20m   172.21.17.34    172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/traefik-ingress-controller-56b6d5b864-srnmm   1/1     Running   0          155m    172.21.17.41    172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE     SELECTOR</span><br><span class="line">service/kube-dns                  ClusterIP   10.254.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   43h     k8s-app=kube-dns</span><br><span class="line">service/kubernetes-dashboard      NodePort    10.254.139.196   &lt;none&gt;        443:31417/TCP            21h     k8s-app=kubernetes-dashboard</span><br><span class="line">service/metrics-server            ClusterIP   10.254.201.191   &lt;none&gt;        443/TCP                  3h56m   k8s-app=metrics-server</span><br><span class="line">service/traefik-ingress-service   ClusterIP   None             &lt;none&gt;        80/TCP,8080/TCP          154m    k8s-app=traefik-ingress-lb</span><br><span class="line">service/traefik-web-ui            ClusterIP   10.254.78.17     &lt;none&gt;        80/TCP                   23h     k8s-app=traefik-ingress-lb</span><br></pre></td></tr></table></figure><h3 id="查看节点的网络"><a href="#查看节点的网络" class="headerlink" title="查看节点的网络"></a>查看节点的网络</h3><ul><li><p>node-01</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">cni0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.6.1  netmask 255.255.255.0  broadcast 10.244.6.255</span><br><span class="line">        ether 42:56:73:73:c5:69  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 121976  bytes 48185929 (45.9 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 143012  bytes 112170228 (106.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.21.17.41  netmask 255.255.240.0  broadcast 172.21.31.255</span><br><span class="line">        ether fa:16:3e:a0:b1:af  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 1878425  bytes 997129342 (950.9 MiB)</span><br><span class="line">        RX errors 0  dropped 29  overruns 0  frame 0</span><br><span class="line">        TX packets 1014950  bytes 378435170 (360.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.6.0  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        ether 32:83:f7:e6:de:77  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 207502  bytes 36217464 (34.5 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 242424  bytes 246992876 (235.5 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 15889  bytes 7196484 (6.8 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 15889  bytes 7196484 (6.8 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">vethb26f5960: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        ether a6:a8:18:c3:f0:16  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 23  bytes 2075 (2.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 49  bytes 4330 (4.2 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li><li><p>node-02</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">cni0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.4.1  netmask 255.255.255.0  broadcast 10.244.4.255</span><br><span class="line">        ether 82:14:33:5c:b0:b7  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 150228  bytes 747318135 (712.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 214837  bytes 209342880 (199.6 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.21.16.231  netmask 255.255.240.0  broadcast 172.21.31.255</span><br><span class="line">        ether fa:16:3e:d8:23:fe  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 10290258  bytes 3436274673 (3.2 GiB)</span><br><span class="line">        RX errors 0  dropped 19  overruns 0  frame 0</span><br><span class="line">        TX packets 9490095  bytes 3777352983 (3.5 GiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.4.0  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        ether ee:a3:ff:37:3a:61  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 280851  bytes 31096456 (29.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 262931  bytes 968429571 (923.5 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 653134  bytes 200562497 (191.2 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 653134  bytes 200562497 (191.2 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">veth8aa15f82: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        ether fa:23:1e:b0:65:20  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 49191  bytes 4622232 (4.4 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 53647  bytes 19011709 (18.1 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;flannel-cni-配置&quot;&gt;&lt;a href=&quot;#flannel-cni-配置&quot; class=&quot;headerlink&quot; title=&quot;flannel cni 配置&quot;&gt;&lt;/a&gt;flannel cni 配置&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;删除原有的网络组件，采用容器方式进行部署。&lt;/p&gt;&lt;h3 id=&quot;kube-controller-manager修改&quot;&gt;&lt;a href=&quot;#kube-controller-manager修改&quot; class=&quot;headerlink&quot; title=&quot;kube-controller-manager修改&quot;&gt;&lt;/a&gt;kube-controller-manager修改&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;启动参数增加如下两项
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="flannel" scheme="https://www.xxlaila.cn/tags/flannel/"/>
    
  </entry>
  
  <entry>
    <title>k8s-dashboard v2.0.0部署</title>
    <link href="https://www.xxlaila.cn/2019/11/28/k8s-dashboard-v2-0-0%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/28/k8s-dashboard-v2-0-0部署/</id>
    <published>2019-11-28T07:47:19.000Z</published>
    <updated>2019-12-02T07:01:32.306Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Kubernetes Dashboard 从v2.0.0-beta1版本开始，集成了一个metrics-scraper的组件，可以通过 Kubernetes 的 Metrics API 收集一些基础资源的监控信息，并在web页面展示</p><a id="more"></a><h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta6/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure><h3 id="使用-openssl-签发证书"><a href="#使用-openssl-签发证书" class="headerlink" title="使用 openssl 签发证书"></a>使用 openssl 签发证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir certs</span><br><span class="line">openssl req -nodes -newkey rsa:2048 -keyout certs/dashboard.key -out certs/dashboard.csr -subj <span class="string">"/C=/ST=/L=/O=/OU=/CN=kubernetes-dashboard"</span></span><br><span class="line">openssl x509 -req -sha256 -days 10000 -<span class="keyword">in</span> certs/dashboard.csr -signkey certs/dashboard.key -out certs/dashboard.crt</span><br></pre></td></tr></table></figure><h3 id="安装-Dashboard"><a href="#安装-Dashboard" class="headerlink" title="安装 Dashboard"></a>安装 Dashboard</h3><h4 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace kubernetes-dashboard</span><br></pre></td></tr></table></figure><h4 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret generic kubernetes-dashboard-certs --from-file=certs -n kubernetes-dashboard</span><br></pre></td></tr></table></figure><h4 id="修改recommended-yaml"><a href="#修改recommended-yaml" class="headerlink" title="修改recommended.yaml"></a>修改recommended.yaml</h4><ul><li><p>注释namespace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br></pre></td></tr></table></figure></li><li><p>使用自签发的证书<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用自签发的证书,注释掉 kubernetes-dashboard-certs 的 Secret 定义</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-certs</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f recommended.yaml</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用-NodePort-暴露服务"><a href="#使用-NodePort-暴露服务" class="headerlink" title="使用 NodePort 暴露服务"></a>使用 NodePort 暴露服务</h4><ul><li><p>新建 external-https-svc.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;external-https-svc.yaml&lt;&lt;EOF</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-external</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f external-https-svc.yaml</span><br></pre></td></tr></table></figure></li><li><p>查看验证</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># kubectl <span class="keyword">get</span> svc,pods -n kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">NAME                                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">service/dashboard-metrics-scraper       ClusterIP   <span class="number">10.254</span><span class="number">.199</span><span class="number">.169</span>   &lt;none&gt;        <span class="number">8000</span>/TCP        <span class="number">9</span>m50s</span><br><span class="line">service/kubernetes-dashboard            ClusterIP   <span class="number">10.254</span><span class="number">.73</span><span class="number">.119</span>    &lt;none&gt;        <span class="number">443</span>/TCP         <span class="number">9</span>m51s</span><br><span class="line">service/kubernetes-dashboard-<span class="keyword">external</span>   NodePort    <span class="number">10.254</span><span class="number">.169</span><span class="number">.250</span>   &lt;none&gt;        <span class="number">443</span>:<span class="number">32318</span>/TCP   <span class="number">11</span>m</span><br><span class="line"></span><br><span class="line">NAME                                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/dashboard-metrics-scraper<span class="number">-69f</span>cc6d9df<span class="number">-4</span>lctd   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">9</span>m49s</span><br><span class="line">pod/kubernetes-dashboard<span class="number">-77</span>d4694b5f-vkgfz        <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">9</span>m49s</span><br></pre></td></tr></table></figure></li></ul><p>使用之前的密钥认证登录，未出图，查了一下，说的是兼容问题，v1.15.0以上就没问题<br><img src="https://img.xxlaila.cn/1574927727171.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Kubernetes Dashboard 从v2.0.0-beta1版本开始，集成了一个metrics-scraper的组件，可以通过 Kubernetes 的 Metrics API 收集一些基础资源的监控信息，并在web页面展示&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="dashboard v2.0.0" scheme="https://www.xxlaila.cn/tags/dashboard-v2-0-0/"/>
    
  </entry>
  
  <entry>
    <title>logstash详解</title>
    <link href="https://www.xxlaila.cn/2019/11/21/logstash%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.xxlaila.cn/2019/11/21/logstash详解/</id>
    <published>2019-11-21T03:51:23.000Z</published>
    <updated>2019-11-27T01:15:35.606Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前篇文件<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>粗略的完成了部署，但是真正是批量使用的时候发现还是有很多不足，优化的点还是非常的多。<a id="more"></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用ElasticSearch时一般需要自己创建ElasticSearch的索引的Mapping，当索引非常多的时候，可能需要配置一个索引模板Template来对类似的索引做统一配置，让索引模板Template中配置匹配索引的规则，来确定该Template会被应用到哪些索引上。</p><h3 id="Template配置方式"><a href="#Template配置方式" class="headerlink" title="Template配置方式"></a>Template配置方式</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash在整合ElasticSearch的时候，有三种方式可以来进行Template的配置。</p><h4 id="使用ElasticSearch默认自带的索引模板"><a href="#使用ElasticSearch默认自带的索引模板" class="headerlink" title="使用ElasticSearch默认自带的索引模板"></a>使用ElasticSearch默认自带的索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElasticSearch默认自带了一个名字为”logstash”的模板，默认应用于Logstash写入数据到ElasticSearch使用，我们可以在通过es的api接口、或者在kibana dev tools窗口通过GET /_template/来进行查看</p><ul><li><p>api 查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET http://127.0.0.1:9200/_template  -s | python -m json.tool</span><br><span class="line"></span><br><span class="line">$ curl -XGET http://127.0.0.1:9200/_template?pretty</span><br></pre></td></tr></table></figure></li><li><p>kibana 查看<br><img src="https://img.xxlaila.cn/1574314182454.jpg" alt="img"></p></li><li><p>优点: 最简单，无须任何配置</p></li><li><p>缺点: 无法自定义一些配置，例如：分词方式</p></li></ul><h4 id="在Logstash-Indexer端自定义配置索引模板"><a href="#在Logstash-Indexer端自定义配置索引模板" class="headerlink" title="在Logstash Indexer端自定义配置索引模板"></a>在Logstash Indexer端自定义配置索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash的output插件中使用template指定本机器上的一个模板json文件路径，可以在json文件中设置对应的Template模板信息。前面的章节就使用的这种方式。</p><ul><li>优点：配置简单</li><li>缺点：因为分散在Logstash Indexer机器上，维护起来比较麻烦</li></ul><h4 id="在ElasticSearch服务端自定义配置索引模板"><a href="#在ElasticSearch服务端自定义配置索引模板" class="headerlink" title="在ElasticSearch服务端自定义配置索引模板"></a>在ElasticSearch服务端自定义配置索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由ElasticSearch负责加载模板。这种方式需要在ElasticSearch的集群中的config/templates路径下配置模板json。而且ElasticSearch提供了Restful API接口维护索引模板信息。</p><ul><li>优点：维护比较容易，可动态更改，全局生效。</li><li>缺点：需要注意模板的命名规则，比较容易通过看Template名字就能够确定模板应用到哪些索引</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;三种索引方式都有优缺点；但是使用第三种方式是最好的，就像之前<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>就使用的是第二种方式，然后是在用的时候发现，logstash是多台服务器，维护起来非常非常的麻烦。如果logstash 和ElasticSearch只有一台服务器，可以使用第二种方式，在Logstash Indexer端维护Template文件即可。</p><h3 id="模版类型"><a href="#模版类型" class="headerlink" title="模版类型"></a>模版类型</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElasticSearch的模板类型主要由两种：静态模板和动态模板</p><h4 id="静态模板"><a href="#静态模板" class="headerlink" title="静态模板"></a>静态模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;适合索引字段数据固定的场景，一旦配置完成，不能向里面加入多余的字段，否则会报错</p><ul><li>优点：scheam已知，业务场景明确，不容易出现因字段随便映射从而造成元数据撑爆es内存，从而导致es集群全部宕机</li><li>缺点：字段数多的情况下配置稍繁琐，针对于每个索引可能需要的模板都不同，很有可能需要配置很多个模板</li></ul><h4 id="动态模板"><a href="#动态模板" class="headerlink" title="动态模板"></a>动态模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;适合字段数不明确，大量字段的配置类型相同的场景，可以按照类型规则动态添加新字段，新加字段不会报错。主要需要配置 <code>dynamic_templates</code>。</p><ul><li>优点：可动态添加任意字段，无须改动schema</li><li>缺点：无标准schema导致数据不规则，如果添加的字段非常多，有可能造成ES集群宕机</li></ul><p><strong>注</strong>: 模板在设置生效后，仅对ES集群中新建立的索引生效，而对已存在的索引及时索引名满足模板的匹配规则，也不会生效，因此如果需要改变现有索引的Mapping信息，仍需要在正确的Mapping基础上建立新的索引，并将数据从原索引拷贝至新索引，变更新索引别名为原索引这种方式来实现。</p><h3 id="模板结构"><a href="#模板结构" class="headerlink" title="模板结构"></a>模板结构</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模版的结构如<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>里面所提到的。分四部分</p><ul><li>通用设置: 主要是模板匹配索引的过滤规则，影响该模板对哪些索引生效；</li><li>settings: 配置索引的公共参数，比如索引的replicas，以及分片数shards等参数；</li><li>mappings: 最重要的一部分，在这部分中配置每个type下的每个field的相关属性，比如field类型（string,long,date等等），是否分词，是否在内存中缓存等等属性都在这部分配置；</li><li>aliases: 索引别名，索引别名可用在索引数据迁移等用途上。</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当我们在定制索引模版的时候，这时候我们需要参考研发给的日志标准和需要的日志标准格式，以及日志样本等，给出一些运维的见解。否则做出来的东西不一定满足需求，又要重新来做。着重参考如下:</p><ul><li>是否存储</li><li>是否分词</li><li>以什么来建立索引</li><li>字段类型是什么</li><li>如何排序</li><li>字段数是否固定</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结合这些，我们还可以参考词库的维护，ElasticSearch后期结构的变化调整，如果这些不考虑，在后期量起来以后，改动任何一项都需要去重新建立索引。是非常蛋疼的。</p><h3 id="创建模版"><a href="#创建模版" class="headerlink" title="创建模版"></a>创建模版</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里采用第三种三种方式建立模版，登录kibana，在dev tools栏下面，删除默认的logstash-<em>模版，然后创建一个logstash-</em>的模版，这样当新的索引来了以后，就会加载这个模版。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前篇文件&lt;a href=&quot;http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/&quot;&gt;elk部署&lt;/a&gt;粗略的完成了部署，但是真正是批量使用的时候发现还是有很多不足，优化的点还是非常的多。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="logstash" scheme="https://www.xxlaila.cn/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>logstash监控</title>
    <link href="https://www.xxlaila.cn/2019/11/19/logstash%E7%9B%91%E6%8E%A7/"/>
    <id>https://www.xxlaila.cn/2019/11/19/logstash监控/</id>
    <published>2019-11-19T02:35:56.000Z</published>
    <updated>2019-11-19T07:04:24.071Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="logstash-api-监控"><a href="#logstash-api-监控" class="headerlink" title="logstash api 监控"></a>logstash api 监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash 5.0 开始，提供了输出自身进程的指标和状态监控的 API。这大大降低了我们监控 Logstash 的难度。<a id="more"></a>可以使用Logstash提供的监视API来检索这些指标。默认情况下api可用，不需任何额外的配置，或者可以配置X-Pack监视以将数据发送到监视群集。这个直接在kibana页面进行配置。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash收集的指标包括:</p><ul><li>节点信息: 接口目前支持三种类型：pipeline、os、jvm。</li><li>插件信息: 包括已安装插件的列表。</li><li>节点统计指标: JVM统计信息，进程统计信息，与事件相关的统计信息和管道运行时统计信息。</li><li>热线程统计</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;检索常规信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"build_date"</span> : <span class="string">"2018-08-18T00:25:22Z"</span>,</span><br><span class="line">  <span class="string">"build_sha"</span> : <span class="string">"f8014ac54e6c8ff6c071c0960ca1b00e9735f43a"</span>,</span><br><span class="line">  <span class="string">"build_snapshot"</span> : <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="pipeline-指标"><a href="#pipeline-指标" class="headerlink" title="pipeline 指标"></a>pipeline 指标</h3><h4 id="工作程序数量，批处理大小和批处理延迟"><a href="#工作程序数量，批处理大小和批处理延迟" class="headerlink" title="工作程序数量，批处理大小和批处理延迟"></a>工作程序数量，批处理大小和批处理延迟</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/pipelines?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"pipelines"</span> : &#123;</span><br><span class="line">    <span class="string">"main"</span> : &#123;</span><br><span class="line">      <span class="string">"workers"</span> : 4,</span><br><span class="line">      <span class="string">"batch_size"</span> : 125,</span><br><span class="line">      <span class="string">"batch_delay"</span> : 50,</span><br><span class="line">      <span class="string">"config_reload_automatic"</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"config_reload_interval"</span> : 3000000000,</span><br><span class="line">      <span class="string">"dead_letter_queue_enabled"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="特定管道的信息"><a href="#特定管道的信息" class="headerlink" title="特定管道的信息"></a>特定管道的信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/pipelines/main?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"pipelines"</span> : &#123;</span><br><span class="line">    <span class="string">"main"</span> : &#123;</span><br><span class="line">      <span class="string">"workers"</span> : 4,</span><br><span class="line">      <span class="string">"batch_size"</span> : 125,</span><br><span class="line">      <span class="string">"batch_delay"</span> : 50,</span><br><span class="line">      <span class="string">"config_reload_automatic"</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"config_reload_interval"</span> : 3000000000,</span><br><span class="line">      <span class="string">"dead_letter_queue_enabled"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="OS-信息"><a href="#OS-信息" class="headerlink" title="OS 信息"></a>OS 信息</h3><h4 id="显示了操作系统名称，体系结构，版本和可用处理器"><a href="#显示了操作系统名称，体系结构，版本和可用处理器" class="headerlink" title="显示了操作系统名称，体系结构，版本和可用处理器"></a>显示了操作系统名称，体系结构，版本和可用处理器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/os?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"os"</span> : &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"Linux"</span>,</span><br><span class="line">    <span class="string">"arch"</span> : <span class="string">"amd64"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.10.0-693.11.1.el7.x86_64"</span>,</span><br><span class="line">    <span class="string">"available_processors"</span> : 4</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="jvm-信息"><a href="#jvm-信息" class="headerlink" title="jvm 信息"></a>jvm 信息</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示节点级别的JVM统计信息，例如JVM进程ID，版本，VM信息，内存使用情况以及有关垃圾收集器的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/jvm?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"jvm"</span> : &#123;</span><br><span class="line">    <span class="string">"pid"</span> : 20827,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"1.8.0_144"</span>,</span><br><span class="line">    <span class="string">"vm_version"</span> : <span class="string">"1.8.0_144"</span>,</span><br><span class="line">    <span class="string">"vm_vendor"</span> : <span class="string">"Oracle Corporation"</span>,</span><br><span class="line">    <span class="string">"vm_name"</span> : <span class="string">"Java HotSpot(TM) 64-Bit Server VM"</span>,</span><br><span class="line">    <span class="string">"start_time_in_millis"</span> : 1574066157917,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"heap_init_in_bytes"</span> : 3221225472,</span><br><span class="line">      <span class="string">"heap_max_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"non_heap_init_in_bytes"</span> : 2555904,</span><br><span class="line">      <span class="string">"non_heap_max_in_bytes"</span> : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"gc_collectors"</span> : [ <span class="string">"ParNew"</span>, <span class="string">"ConcurrentMarkSweep"</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插件信息"><a href="#插件信息" class="headerlink" title="插件信息"></a>插件信息</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件信息API获取有关当前安装的所有Logstash插件的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/plugins?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"total"</span> : 98,</span><br><span class="line">  <span class="string">"plugins"</span> : [ &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-cef"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"5.0.3"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-collectd"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.8"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-dots"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.6"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-edn"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.6"</span></span><br><span class="line">  &#125;,……………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="节点统计指表"><a href="#节点统计指表" class="headerlink" title="节点统计指表"></a>节点统计指表</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;节点统计信息API检索有关Logstash的运行时统计信息。</p><h4 id="jvm统计"><a href="#jvm统计" class="headerlink" title="jvm统计"></a>jvm统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/jvm?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"jvm"</span> : &#123;</span><br><span class="line">    <span class="string">"threads"</span> : &#123;</span><br><span class="line">      <span class="string">"count"</span> : 55,</span><br><span class="line">      <span class="string">"peak_count"</span> : 56</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"heap_used_percent"</span> : 10,</span><br><span class="line">      <span class="string">"heap_committed_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"heap_max_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"heap_used_in_bytes"</span> : 348033216,</span><br><span class="line">      <span class="string">"non_heap_used_in_bytes"</span> : 170512848,</span><br><span class="line">      <span class="string">"non_heap_committed_in_bytes"</span> : 201850880,</span><br><span class="line">      <span class="string">"pools"</span> : &#123;</span><br><span class="line">        <span class="string">"survivor"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 1629704,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 34865152</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"old"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 230612312,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 230612312,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 2872311808,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 2872311808,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 2872311808</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"young"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 115791200,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 279183360</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"gc"</span> : &#123;</span><br><span class="line">      <span class="string">"collectors"</span> : &#123;</span><br><span class="line">        <span class="string">"old"</span> : &#123;</span><br><span class="line">          <span class="string">"collection_time_in_millis"</span> : 301,</span><br><span class="line">          <span class="string">"collection_count"</span> : 2</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"young"</span> : &#123;</span><br><span class="line">          <span class="string">"collection_time_in_millis"</span> : 2536,</span><br><span class="line">          <span class="string">"collection_count"</span> : 98</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"uptime_in_millis"</span> : 66149287</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="进程统计"><a href="#进程统计" class="headerlink" title="进程统计"></a>进程统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/process?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"process"</span> : &#123;</span><br><span class="line">    <span class="string">"open_file_descriptors"</span> : 169,</span><br><span class="line">    <span class="string">"peak_open_file_descriptors"</span> : 170,</span><br><span class="line">    <span class="string">"max_file_descriptors"</span> : 16384,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"total_virtual_in_bytes"</span> : 7337734144</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"cpu"</span> : &#123;</span><br><span class="line">      <span class="string">"total_in_millis"</span> : 593350,</span><br><span class="line">      <span class="string">"percent"</span> : 0,</span><br><span class="line">      <span class="string">"load_average"</span> : &#123;</span><br><span class="line">        <span class="string">"1m"</span> : 0.01,</span><br><span class="line">        <span class="string">"5m"</span> : 0.07,</span><br><span class="line">        <span class="string">"15m"</span> : 0.1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="events"><a href="#events" class="headerlink" title="events"></a>events</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s localhost:9600/_node/stats/events?pretty=<span class="literal">true</span></span><br><span class="line">&#123; </span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"events"</span> : &#123;</span><br><span class="line">    <span class="string">"in"</span> : 103628,</span><br><span class="line">    <span class="string">"filtered"</span> : 103628,</span><br><span class="line">    <span class="string">"out"</span> : 103628,</span><br><span class="line">    <span class="string">"duration_in_millis"</span> : 96810,</span><br><span class="line">    <span class="string">"queue_push_duration_in_millis"</span> : 5104</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="管道统计"><a href="#管道统计" class="headerlink" title="管道统计"></a>管道统计</h3><ul><li>每个管道输入，过滤或输出的事件数</li><li>每个已配置的滤波器或输出级的统计信息</li><li>有关配置重新加载成功和失败的信息（启用配置重新加载时）</li><li>关于持久性队列信息（当 永久队列被启用）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/pipelines?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过包含管道ID来查看特定管道的统计信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/pipelines/main?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="刷新统计"><a href="#刷新统计" class="headerlink" title="刷新统计"></a>刷新统计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示有关配置重新加载成功和失败的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/reloads?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"reloads"</span> : &#123;</span><br><span class="line">    <span class="string">"successes"</span> : 0,</span><br><span class="line">    <span class="string">"failures"</span> : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="os-统计"><a href="#os-统计" class="headerlink" title="os 统计"></a>os 统计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当Logstash在容器中运行时，请求将返回一个包含cgroup信息的JSON文档，提供CPU负载的更准确视图，包括是否对容器进行了限制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/os?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"os"</span> : &#123;</span><br><span class="line">    <span class="string">"cgroup"</span> : &#123;</span><br><span class="line">      <span class="string">"cpuacct"</span> : &#123;</span><br><span class="line">        <span class="string">"usage_nanos"</span> : 20928023701495776,</span><br><span class="line">        <span class="string">"control_group"</span> : <span class="string">"/"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"cpu"</span> : &#123;</span><br><span class="line">        <span class="string">"cfs_quota_micros"</span> : -1,</span><br><span class="line">        <span class="string">"control_group"</span> : <span class="string">"/"</span>,</span><br><span class="line">        <span class="string">"stat"</span> : &#123;</span><br><span class="line">          <span class="string">"number_of_times_throttled"</span> : 0,</span><br><span class="line">          <span class="string">"time_throttled_nanos"</span> : 0,</span><br><span class="line">          <span class="string">"number_of_elapsed_periods"</span> : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"cfs_period_micros"</span> : 100000</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="热线程api"><a href="#热线程api" class="headerlink" title="热线程api"></a>热线程api</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;热线程API获取Logstash的当前热线程。热线程是Java线程，具有很高的CPU使用率，并且执行时间比正常时间长。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/hot_threads?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"hot_threads"</span> : &#123;</span><br><span class="line">    <span class="string">"time"</span> : <span class="string">"2019-11-19T11:07:05+08:00"</span>,</span><br><span class="line">    <span class="string">"busiest_threads"</span> : 3,</span><br><span class="line">    <span class="string">"threads"</span> : [ &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-23@[main]&gt;worker1"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 42,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.1,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-24@[main]&gt;worker2"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 43,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.06,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-22@[main]&gt;worker0"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 41,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.06,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可执行的参数:</p><ul><li>threads: 返回的热线程数。预设值为10。</li><li>stacktrace_size: 要为每个线程报告的堆栈跟踪的深度。默认值为50。</li><li>human: 如果为true，则返回纯文本而不是JSON格式。默认为false。</li><li>ignore_idle_threads: 如果为true，则不返回空闲线程。默认值为true。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/hot_threads?human=true'</span></span><br><span class="line">Hot threads at 2019-11-19T11:07:43+08:00, busiestThreads=3:</span><br><span class="line">================================================================================</span><br><span class="line">0.1 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-23@[main]&gt;worker1'</span>, thread id: 42</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0.06 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-24@[main]&gt;worker2'</span>, thread id: 43</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0.06 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-22@[main]&gt;worker0'</span>, thread id: 41</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的一些api监控，可以写成脚本的形式，使用zabbix来进行监控。除了使用zabbix来监控logstash外，我们还可以使用自带的x-pack来进行监控，<a href="https://www.elastic.co/guide/en/logstash/6.6/logstash-monitoring-overview.html" target="_blank" rel="noopener">介绍可以参考官方</a>。</p><h3 id="X-Pack监视概述"><a href="#X-Pack监视概述" class="headerlink" title="X-Pack监视概述"></a>X-Pack监视概述</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修改logstash.yml配置文件，在配置文件里面只需要修改两个参数即可 <code>xpack.monitoring.enabled</code> 、<code>xpack.monitoring.elasticsearch.url</code>。监控Elasticsearch的是启用 <code>xpack.monitoring.collection.enabled</code></p><h4 id="修改logstash-yml"><a href="#修改logstash-yml" class="headerlink" title="修改logstash.yml"></a>修改logstash.yml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat logstash.yml</span><br><span class="line">xpack.monitoring.enabled: <span class="literal">true</span></span><br><span class="line">xpack.monitoring.elasticsearch.url: [<span class="string">"http://es1:9200"</span>,<span class="string">"http://es2:9200"</span>,<span class="string">"http://es3:9200"</span>]</span><br></pre></td></tr></table></figure><h4 id="重启logstash"><a href="#重启logstash" class="headerlink" title="重启logstash"></a>重启logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo  systemctl  restart logstash</span><br></pre></td></tr></table></figure><h4 id="kibana-查看"><a href="#kibana-查看" class="headerlink" title="kibana 查看"></a>kibana 查看</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录kibana进行查看<br><img src="https://img.xxlaila.cn/1574146864906.jpg" alt="img"></p><p>点击node查看<br><img src="https://img.xxlaila.cn/1574146937095.jpg" alt="img"></p><p>这里顺道点考kibana<br><img src="https://img.xxlaila.cn/1574147026997.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;logstash-api-监控&quot;&gt;&lt;a href=&quot;#logstash-api-监控&quot; class=&quot;headerlink&quot; title=&quot;logstash api 监控&quot;&gt;&lt;/a&gt;logstash api 监控&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Logstash 5.0 开始，提供了输出自身进程的指标和状态监控的 API。这大大降低了我们监控 Logstash 的难度。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="logstash" scheme="https://www.xxlaila.cn/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>elk部署</title>
    <link href="https://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/15/elk部署/</id>
    <published>2019-11-15T07:46:03.000Z</published>
    <updated>2019-11-21T09:21:53.487Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;公司重新设定了日志的标准格式，日志打印格式均为json格式，之前是用filebeat进行收集的，没任何问题，但是这次的这个标准日志推的时候出现了，在日志显示和多行收集的时候出现了问题。<a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;java应用在报错的时候一般会提示一个很长的错误信息，如果在日志标准里面加入堆内存的错误，那信息就更长，一条日志就更大了，所以这里就得考量这个堆内存错误要打印多少问题。在显示的时候也遇到一个问题就是内容没有被索引，google一下查询是<code>not_analyzed</code>字符串默认设置导致的。查询得知对超过ignore_above的字符串，analyzer 不会进行处理。所以就不会索引，导致的结果就是最终搜索引擎搜索不到。这个选项主要对 not_analyzed 字段有用，这些字段通常用来进行过滤、聚合和排序。而且这些字段都是结构化的，所以一般不会允许在这些字段中索引过长的项。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;针对这些问题，和研发达成如协议，研发限制一条日志的message输出的长度，日志格式采用json，里面的字段不管。与似乎就要重置一下filebeat的参数，以及需要单独的建立自定义es模版，在logstash建立索引的时候需要用我们自定义的模版来建立索引。</p><h3 id="filebeat"><a href="#filebeat" class="headerlink" title="filebeat"></a>filebeat</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filebeat安装不阐述</p><h4 id="filebeat配置文件"><a href="#filebeat配置文件" class="headerlink" title="filebeat配置文件"></a>filebeat配置文件</h4><ul><li>filebeat.yml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat filebeat.yml </span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">  - <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    paths:</span><br><span class="line">      - /opt/logs/*/*.<span class="built_in">log</span></span><br><span class="line">  tags: [<span class="string">"system"</span>]</span><br><span class="line">  exclude_files: [<span class="string">'.gz$'</span>]</span><br><span class="line">  fields:</span><br><span class="line">    env: dev</span><br><span class="line">    logtype: system-java</span><br><span class="line">  queue_size: 3000</span><br><span class="line">  multiline.pattern: <span class="string">'^[[:space:]]'</span></span><br><span class="line">  multiline.negate: <span class="literal">false</span></span><br><span class="line">  multiline.match: after</span><br><span class="line">  multiline.max_lines: 500</span><br><span class="line">  multiline.timeout: 5s</span><br><span class="line">  registry_file: /var/lib/filebeat/registry</span><br><span class="line">  harvester_buffer_sizeedit: 16384</span><br><span class="line">  max_bytes: 10485760</span><br><span class="line">  max_message_bytes: 1000000</span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">false</span></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">"logstash:5555"</span>,<span class="string">"logstash:5556"</span>]</span><br><span class="line">  loadbalance: <span class="literal">true</span></span><br><span class="line">  worker: 1</span><br></pre></td></tr></table></figure></li></ul><h5 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h5><ul><li>input.type: 默认log，从日志文件读取每一行。stdin，从标准输入读取</li><li>paths: 日志文件路径列表，可用通配符，不递归</li><li>tags: 标记tag，可用于分组</li><li>exclude_files: 排除文件，后接一个正则表达式的列表，默认无</li><li>fields: 添加附件字段，可以使values，arrays，dictionaries或者任何嵌套数据<ul><li>env: 设置环境环境</li><li>logtype: 设置类别，在logstash里面判断，可用于建设不通的索引或者到不通的es集群里面</li></ul></li><li>queue_size: 处理管道中单个事件内的队列大小，默认1000</li><li>multiline.pattern: 多行匹配模式，后接正则表达式，默认无</li><li>multiline.negate: 多行匹配模式后配置的模式是否取反，默认false</li><li>multiline.match: 定义多行内容被添加到模式匹配行之后还是之前，默认无，可以被设置为after或者before</li><li>multiline.max_lines: 单一多行匹配聚合的最大行数，超过定义行数后的行会被丢弃，默认500</li><li>multiline.timeout: 多行匹配超时时间，超过超时时间后的当前多行匹配事件将停止并发送，然后开始一个新的多行匹配事件，默认5秒</li><li>registry_file: 指定 注册表文件，用于记录上次读取的位置，默认位于filebeat下的data目录</li><li>harvester_buffer_sizeedit: 每个采集器在获取文件时使用的缓冲区的大小（以字节为单位）。默认是16384</li><li>max_bytes: 单个日志消息可以拥有的最大字节数。之后的所有字节max_bytes被丢弃并且不被发送。此设置对于可能变大的多行日志消息特别有用。默认值是10MB（10485760）</li><li>max_message_bytes: 允许的最大json消息大小，默认为1000000，超出的会被丢弃，应该小于broker的  message.max.bytes（broker能接收消息的最大字节数）</li><li>output.logstash: 输出到logstash，从节点列表中选取不同的节点发送数据，达到 Round-Robin 负载均衡的效果。<ul><li>worker: 配置每个主机发布事件的worker数量。在负载均衡模式下最好启用。</li></ul></li></ul><h3 id="logstash-部署"><a href="#logstash-部署" class="headerlink" title="logstash 部署"></a>logstash 部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装不阐述，这里使用的自定义elasticsearch模版，可参考</p><h4 id="elasticsearch-模版"><a href="#elasticsearch-模版" class="headerlink" title="elasticsearch 模版"></a>elasticsearch 模版</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Json日志文件中的KEY的位置不固定、或字段数不明确时使用动态映射模板。这里创建一个动态模版，模版是拷贝默认的 <code>logstash-*</code>模版来进行稍加修改的，<code>index_patterns</code> 该模版参数指定任意索引名称，并且指定允许添加新字段，匹配所有string类型的新字段会创建一个raw的嵌套字段，raw嵌套字段类型text，使用 <code>ignore_above</code>改变默认的长度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">$ cat dev-java-template.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"order"</span>: 5,</span><br><span class="line">  <span class="string">"index_patterns"</span>: [</span><br><span class="line">    <span class="string">"*"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"settings"</span>: &#123;</span><br><span class="line">    <span class="string">"index"</span>: &#123;</span><br><span class="line">      <span class="string">"number_of_shards"</span>: <span class="string">"5"</span>,</span><br><span class="line">      <span class="string">"number_of_replicas"</span>: <span class="string">"1"</span>,</span><br><span class="line">      <span class="string">"refresh_interval"</span>: <span class="string">"10s"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"mappings"</span>: &#123;</span><br><span class="line">    <span class="string">"_default_"</span>: &#123;</span><br><span class="line">      <span class="string">"dynamic_templates"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"message_field"</span>: &#123;</span><br><span class="line">            <span class="string">"match"</span>: <span class="string">"message"</span>,</span><br><span class="line">            <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"mapping"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">              <span class="string">"norms"</span> : <span class="literal">false</span>,</span><br><span class="line">              <span class="string">"fields"</span>: &#123;</span><br><span class="line">                <span class="string">"raw"</span>: &#123;</span><br><span class="line">                  <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                  <span class="string">"ignore_above"</span>: 10922</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"strings_fields"</span>: &#123;</span><br><span class="line">            <span class="string">"match"</span>: <span class="string">"*"</span>,</span><br><span class="line">            <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"mapping"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">              <span class="string">"norms"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="string">"fields"</span>: &#123;</span><br><span class="line">                <span class="string">"raw"</span>: &#123;</span><br><span class="line">                  <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                  <span class="string">"ignore_above"</span>: 10922</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"properties"</span>:&#123;</span><br><span class="line">        <span class="string">"@timestamp"</span>: &#123;</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"date"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"@version"</span>: &#123;</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"geoip"</span>: &#123;</span><br><span class="line">          <span class="string">"dynamic"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="string">"properties"</span>: &#123;</span><br><span class="line">            <span class="string">"ip"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"ip"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"location"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"geo_point"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"latitude"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"longitude"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aliases"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注</strong>:</p><ul><li>dynamic_templates: 配置具体的动态模板匹配项</li><li>match_mapping_type: “string” 是匹配固定的类型</li><li>match: message 匹配字段名为message的数据</li><li>mapping: 将匹配的数据项映射为定义的数据类型</li></ul><h4 id="logstash-配置文件"><a href="#logstash-配置文件" class="headerlink" title="logstash 配置文件"></a>logstash 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">$ cat java.conf</span><br><span class="line">input  &#123;</span><br><span class="line">        beats &#123;</span><br><span class="line">                port =&gt; 5555</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">        <span class="comment"># application system logs</span></span><br><span class="line">        <span class="keyword">if</span> [fields][logtype] == <span class="string">"system-java"</span> &#123;</span><br><span class="line">                json &#123;</span><br><span class="line">                    <span class="built_in">source</span> =&gt; <span class="string">"message"</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># application business logs</span></span><br><span class="line">        <span class="keyword">if</span> [fileds][logtype] == <span class="string">"business-java"</span> &#123;</span><br><span class="line">json &#123;</span><br><span class="line"><span class="built_in">source</span> =&gt; <span class="string">"message"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">        <span class="comment"># application system logs</span></span><br><span class="line">        <span class="keyword">if</span> [fields][logtype] == <span class="string">"system-java"</span> &#123;</span><br><span class="line">                elasticsearch &#123;</span><br><span class="line">codec =&gt; <span class="string">"json"</span></span><br><span class="line">                        hosts =&gt; [<span class="string">"es1:9200"</span>,<span class="string">"es2:9200"</span>,<span class="string">"es3:9200"</span>]</span><br><span class="line">                        index =&gt; <span class="string">"%&#123;[fields][kxlenv]&#125;-%&#123;[projectName]&#125;-%&#123;[logType]&#125;-%&#123;+YYYY-MM&#125;"</span></span><br><span class="line">                        template_overwrite =&gt; <span class="literal">true</span></span><br><span class="line">                        template_name =&gt; <span class="string">"system-java"</span></span><br><span class="line">                        template =&gt; <span class="string">"/opt/templates/java.template"</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># applicatio business logs</span></span><br><span class="line"><span class="keyword">if</span> [fields][logtype] == <span class="string">"business-java"</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">                        action =&gt; <span class="string">"index"</span></span><br><span class="line">hosts =&gt; [<span class="string">"es1:9200"</span>,<span class="string">"es2:9200"</span>,<span class="string">"es3:9200"</span>]</span><br><span class="line">index =&gt; <span class="string">"%&#123;[fields][kxlenv]&#125;-%&#123;[projectName]&#125;-%&#123;[logType]&#125;-%&#123;+YYYY-MM&#125;"</span></span><br><span class="line">template_overwrite =&gt; <span class="literal">true</span></span><br><span class="line">                        template =&gt; <span class="string">"/opt/templates/dev-java-template.json"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>** 注 **:</p><ul><li>template : 指定template模板文件</li><li>template_overwrite : 是否覆盖ES中的template，默认是false</li><li>index: 是提取变量来进行创建索引，对应动态模版的里面 <code>index_patterns</code></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><h4 id="重启logstash"><a href="#重启logstash" class="headerlink" title="重启logstash"></a>重启logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart logstash</span><br></pre></td></tr></table></figure><h4 id="重启filebeat"><a href="#重启filebeat" class="headerlink" title="重启filebeat"></a>重启filebeat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart filebeat</span><br></pre></td></tr></table></figure><h4 id="打开kibana验证"><a href="#打开kibana验证" class="headerlink" title="打开kibana验证"></a>打开kibana验证</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里我们打开kibana进行验证，看看自动创建的索引是否引用了自定义模版</p><ul><li><p>自定义模版<br><img src="https://img.xxlaila.cn/1574308152194.jpg" alt="img"></p></li><li><p>默认模版<br><img src="https://img.xxlaila.cn/1574308234494.jpg" alt="img"></p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;公司重新设定了日志的标准格式，日志打印格式均为json格式，之前是用filebeat进行收集的，没任何问题，但是这次的这个标准日志推的时候出现了，在日志显示和多行收集的时候出现了问题。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="elk" scheme="https://www.xxlaila.cn/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>mongodb语法实践</title>
    <link href="https://www.xxlaila.cn/2019/11/14/mongodb%E8%AF%AD%E6%B3%95%E5%AE%9E%E8%B7%B5/"/>
    <id>https://www.xxlaila.cn/2019/11/14/mongodb语法实践/</id>
    <published>2019-11-14T01:12:09.000Z</published>
    <updated>2019-11-19T07:19:43.652Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="Days-11-14"><a href="#Days-11-14" class="headerlink" title="Days(11.14)"></a>Days(11.14)</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mongodb之前都是负责搭建、维护、备份、监控等操作。闲时来总结一下语法。<a id="more"></a></p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><h4 id="根据条件查询数据量"><a href="#根据条件查询数据量" class="headerlink" title="根据条件查询数据量"></a>根据条件查询数据量</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录数据库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.getCollection(<span class="string">'Tables'</span>).find(&#123;<span class="string">"字段"</span>:<span class="string">"条件"</span>,<span class="string">"字段"</span>:<span class="string">"条件"</span>&#125;).count();</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看数据库表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; show collections</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看mongodb的连接数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.serverStatus().connections</span><br></pre></td></tr></table></figure><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><h4 id="创建用户、数据库"><a href="#创建用户、数据库" class="headerlink" title="创建用户、数据库"></a>创建用户、数据库</h4><ul><li><p>创建数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; use xxx</span><br></pre></td></tr></table></figure></li><li><p>创建一个用户，拥有基本的读写权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createUser(&#123;user:<span class="string">"xxx"</span>,<span class="built_in">pwd</span>:<span class="string">"xxx"</span>,roles:[&#123;role:<span class="string">"readWrite"</span>,db:<span class="string">"xxx"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure></li><li><p>创建用户需要赋予dbAdmin权限</p></li></ul><p><strong>dbAdmin</strong>: 允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createUser(&#123;user:<span class="string">"demo"</span>,<span class="built_in">pwd</span>:<span class="string">"demo"</span>,roles:[&#123;role:<span class="string">"readWrite"</span>,db:<span class="string">"kxlChannel"</span>&#125;,&#123;role:<span class="string">"dbAdmin"</span>,db:<span class="string">"kxlChannel"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure><p><strong>注</strong>: role 权限要是readWrite,不能赋予dbadmin，否则不能操作数据库</p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><h4 id="删除账户和数据库"><a href="#删除账户和数据库" class="headerlink" title="删除账户和数据库"></a>删除账户和数据库</h4><ul><li><p>删除账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropUser(<span class="string">"xxx"</span>)</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropDatabase(<span class="string">"xxx"</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.ensureIndex(&#123;<span class="string">"字段"</span>:1&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br><span class="line">&gt; db.表.ensureIndex(&#123;<span class="string">"字段"</span>:1&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><h4 id="查看索引"><a href="#查看索引" class="headerlink" title="查看索引"></a>查看索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.getIndexes()</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看表数据是否引用了索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.find(&#123;<span class="string">"字段"</span>:<span class="string">"值"</span>&#125;).explain()</span><br></pre></td></tr></table></figure><h4 id="删除指定索引"><a href="#删除指定索引" class="headerlink" title="删除指定索引"></a>删除指定索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.dropIndex(<span class="string">"索引"</span>)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除表全部索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.dropIndexes()</span><br></pre></td></tr></table></figure><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><h4 id="根据条件导出部分数据"><a href="#根据条件导出部分数据" class="headerlink" title="根据条件导出部分数据"></a>根据条件导出部分数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  mongoexport --db=数据库 --collection=表 --username=账户 --password=密码 --authenticationDatabase=认证的数据库  --query=<span class="string">'&#123;"条件","条件"&#125;'</span> --fields=<span class="string">"导出的字段"</span> --<span class="built_in">type</span>=csv --out=/home/ll</span><br></pre></td></tr></table></figure><ul><li>参数介绍:<br>–db: 数据库<br>–collection: 表<br>–username: 账户<br>–password: 密码<br>–authenticationDatabase: 需要认证的数据库<br>–query: 条件<br>–fields: 导出的字段<br>–type: 导出的格式，默认是json，这里导出为csv，支持两种json和csv格式<br>–out: 导出路径文件</li></ul><p>更多参数参考 –help</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">general options:</span><br><span class="line">      --<span class="built_in">help</span>                                      <span class="built_in">print</span> usage</span><br><span class="line">      --version                                   <span class="built_in">print</span> the tool version and <span class="built_in">exit</span></span><br><span class="line">verbosity options:</span><br><span class="line">  -v, --verbose=&lt;level&gt;                           more detailed <span class="built_in">log</span> output (include multiple <span class="built_in">times</span> <span class="keyword">for</span> more verbosity, e.g. -vvvvv, or specify a numeric value, e.g. --verbose=N)</span><br><span class="line">      --quiet                                     hide all <span class="built_in">log</span> output</span><br><span class="line">connection options:</span><br><span class="line">  -h, --host=&lt;hostname&gt;                           mongodb host to connect to (setname/host1,host2 <span class="keyword">for</span> replica sets)</span><br><span class="line">      --port=&lt;port&gt;                               server port (can also use --host hostname:port)</span><br><span class="line">kerberos options:</span><br><span class="line">      --gssapiServiceName=&lt;service-name&gt;          service name to use when authenticating using GSSAPI/Kerberos (<span class="string">'mongodb'</span> by default)</span><br><span class="line">      --gssapiHostName=&lt;host-name&gt;                hostname to use when authenticating using GSSAPI/Kerberos (remote server<span class="string">'s address by default)</span></span><br><span class="line"><span class="string">ssl options:</span></span><br><span class="line"><span class="string">      --ssl                                       connect to a mongod or mongos that has ssl enabled</span></span><br><span class="line"><span class="string">      --sslCAFile=&lt;filename&gt;                      the .pem file containing the root certificate chain from the certificate authority</span></span><br><span class="line"><span class="string">      --sslPEMKeyFile=&lt;filename&gt;                  the .pem file containing the certificate and key</span></span><br><span class="line"><span class="string">      --sslPEMKeyPassword=&lt;password&gt;              the password to decrypt the sslPEMKeyFile, if necessary</span></span><br><span class="line"><span class="string">      --sslCRLFile=&lt;filename&gt;                     the .pem file containing the certificate revocation list</span></span><br><span class="line"><span class="string">      --sslAllowInvalidCertificates               bypass the validation for server certificates</span></span><br><span class="line"><span class="string">      --sslAllowInvalidHostnames                  bypass the validation for server name</span></span><br><span class="line"><span class="string">      --sslFIPSMode                               use FIPS mode of the installed openssl library</span></span><br><span class="line"><span class="string">authentication options:</span></span><br><span class="line"><span class="string">  -u, --username=&lt;username&gt;                       username for authentication</span></span><br><span class="line"><span class="string">  -p, --password=&lt;password&gt;                       password for authentication</span></span><br><span class="line"><span class="string">      --authenticationDatabase=&lt;database-name&gt;    database that holds the user'</span>s credentials</span><br><span class="line">      --authenticationMechanism=&lt;mechanism&gt;       authentication mechanism to use</span><br><span class="line">namespace options:</span><br><span class="line">  -d, --db=&lt;database-name&gt;                        database to use</span><br><span class="line">  -c, --collection=&lt;collection-name&gt;              collection to use</span><br><span class="line">uri options:</span><br><span class="line">      --uri=mongodb-uri                           mongodb uri connection string</span><br><span class="line">output options:</span><br><span class="line">  -f, --fields=&lt;field&gt;[,&lt;field&gt;]*                 comma separated list of field names (required <span class="keyword">for</span> exporting CSV) e.g. -f <span class="string">"name,age"</span></span><br><span class="line">      --fieldFile=&lt;filename&gt;                      file with field names - 1 per line</span><br><span class="line">      --<span class="built_in">type</span>=&lt;<span class="built_in">type</span>&gt;                               the output format, either json or csv (defaults to <span class="string">'json'</span>) (default: json)</span><br><span class="line">  -o, --out=&lt;filename&gt;                            output file; <span class="keyword">if</span> not specified, stdout is used</span><br><span class="line">      --jsonArray                                 output to a JSON array rather than one object per line</span><br><span class="line">      --pretty                                    output JSON formatted to be human-readable</span><br><span class="line">      --noHeaderLine                              <span class="built_in">export</span> CSV data without a list of field names at the first line</span><br><span class="line">querying options:</span><br><span class="line">  -q, --query=&lt;json&gt;                              query filter, as a JSON string, e.g., <span class="string">'&#123;x:&#123;$gt:1&#125;&#125;'</span></span><br><span class="line">      --queryFile=&lt;filename&gt;                      path to a file containing a query filter (JSON)</span><br><span class="line">  -k, --slaveOk                                   allow secondary reads <span class="keyword">if</span> available (default <span class="literal">true</span>) (default: <span class="literal">false</span>)</span><br><span class="line">      --readPreference=&lt;string&gt;|&lt;json&gt;            specify either a preference name or a preference json object</span><br><span class="line">      --forceTableScan                            force a table scan (<span class="keyword">do</span> not use <span class="variable">$snapshot</span>)</span><br><span class="line">      --skip=&lt;count&gt;                              number of documents to skip</span><br><span class="line">      --<span class="built_in">limit</span>=&lt;count&gt;                             <span class="built_in">limit</span> the number of documents to <span class="built_in">export</span></span><br><span class="line">      --sort=&lt;json&gt;                               sort order, as a JSON string, e.g. <span class="string">'&#123;x:1&#125;'</span></span><br><span class="line">      --assertExists                              <span class="keyword">if</span> specified, <span class="built_in">export</span> fails <span class="keyword">if</span> the collection does not exist (default: <span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>mongodb 备份脚本可以<a href="https://github.com/xxlaila/backup-monitoring/tree/master/backup" target="_blank" rel="noopener">参考</a>本人写的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;Days-11-14&quot;&gt;&lt;a href=&quot;#Days-11-14&quot; class=&quot;headerlink&quot; title=&quot;Days(11.14)&quot;&gt;&lt;/a&gt;Days(11.14)&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mongodb之前都是负责搭建、维护、备份、监控等操作。闲时来总结一下语法。
    
    </summary>
    
      <category term="数据库" scheme="https://www.xxlaila.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mongodb" scheme="https://www.xxlaila.cn/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>istio部署(二)</title>
    <link href="https://www.xxlaila.cn/2019/11/08/istio%E9%83%A8%E7%BD%B2-%E4%BA%8C/"/>
    <id>https://www.xxlaila.cn/2019/11/08/istio部署-二/</id>
    <published>2019-11-08T08:34:20.000Z</published>
    <updated>2019-11-15T06:15:36.320Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面的一篇文章中我做了简单的部署，但是在疏忽bookinfo的时候出现了错误；然后研究了和学习了三天怎么来结局这个错误，这个错误不解决，没办法进行下一步。后学的路由规则完全没办法学习和测试。<a id="more"></a></p><h3 id="istio错误解决"><a href="#istio错误解决" class="headerlink" title="istio错误解决"></a>istio错误解决</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio的错误查看<a href="https://www.xxlaila.cn/2019/08/30/k8s%E9%83%A8%E7%BD%B2istio/">istio的部署</a>，本次根据这个错误来进行解决。</p><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><ul><li>apiserver日志</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个错误访问k8s的apiserver 问题，应该是超时。我们可以查看apiserver的日志，利用 journalctl 命令来筛选apiserver的日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># journalctl  -u  kube-apiserver  -f</span></span><br><span class="line"></span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 09:59:33.659161   31393 trace.go:81] Trace[40457478]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/istio-system/gateways"</span> (started: 2019-11-08 09:59:03.657132211 +0800 CST m=+328870.679516549) (total time: 30.001964129s):</span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[40457478]: [30.001964129s] [30.001043358s] END</span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 09:59:33.659790   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: net/http: request canceled <span class="keyword">while</span> waiting <span class="keyword">for</span> connection (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 09:59:39 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 09:59:39.979543   31393 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.metrics.k8s.io</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 10:00:03.764977   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: context deadline exceeded (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:03.765401   31393 trace.go:81] Trace[1649710078]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules"</span> (started: 2019-11-08 09:59:33.763211641 +0800 CST m=+328900.785596022) (total time: 30.00209862s):</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[1649710078]: [30.00209862s] [30.001534667s] END</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:33.840606   31393 trace.go:81] Trace[970347589]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/weather/virtualservices"</span> (started: 2019-11-08 10:00:03.83792882 +0800 CST m=+328930.860313362) (total time: 30.002612137s):</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[970347589]: [30.002612137s] [30.001075132s] END</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 10:00:33.841663   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: context deadline exceeded (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 10:00:38 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:38.260710   31393 trace.go:81] Trace[460935607]: <span class="string">"GuaranteedUpdate etcd3: *v1.Endpoints"</span> (started: 2019-11-08 10:00:37.644096515 +0800 CST m=+328964.666480867) (total time: 616.515599ms):</span><br><span class="line">Nov 08 10:00:38 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[460935607]: [533.664848ms] [449.34458ms] Transaction prepared</span><br><span class="line">Nov 08 10:00:39 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:39.986622   31393 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.metrics.k8s.io</span><br><span class="line">Nov 08 10:01:38 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:01:38.780611   31393 trace.go:81] Trace[269873276]: <span class="string">"Get /api/v1/namespaces/default"</span> (started: 2019-11-08 10:01:37.631910347 +0800 CST m=+329024.654294682) (total time: 1.148554735s):</span><br><span class="line">Nov 08 10:01:38 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[269873276]: [1.148211464s] [1.148180236s] About to write a response</span><br></pre></td></tr></table></figure><ul><li><p>istio-pilot日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl logs istio-pilot-569499d666-rfjsh  -n istio-system discovery</span></span><br><span class="line">2019-11-08T07:26:14.097765ZinfoHandling event update <span class="keyword">for</span> pod istio-security-post-install-1.2.8-c52np <span class="keyword">in</span> namespace istio-system -&gt; 172.30.112.9</span><br><span class="line">2019-11-08T07:26:27.395268ZinfoHandling event update <span class="keyword">for</span> pod istio-security-post-install-1.2.8-c52np <span class="keyword">in</span> namespace istio-system -&gt; 172.30.112.9</span><br><span class="line">2019-11-08T07:26:38.227484ZinfoClient received GoAway with http2.ErrCodeEnhanceYourCalm.</span><br><span class="line">2019-11-08T07:26:38.227760ZinfopickfirstBalancer: HandleSubConnStateChange: 0xc0001fbaa0, CONNECTING</span><br><span class="line">2019-11-08T07:26:38.228913Zinfotransport: loopyWriter.run returning. connection error: desc = <span class="string">"transport is closing"</span></span><br><span class="line">2019-11-08T07:26:38.230352ZerrormcpError receiving MCP resource: rpc error: code = Unavailable desc = transport is closing</span><br><span class="line">2019-11-08T07:26:38.230387ZerrormcpError receiving MCP response: rpc error: code = Unavailable desc = transport is closing</span><br><span class="line">2019-11-08T07:26:38.235755ZinfopickfirstBalancer: HandleSubConnStateChange: 0xc0001fbaa0, READY</span><br><span class="line">2019-11-08T07:26:39.230701Zinfomcp(re)trying to establish new MCP sink stream</span><br></pre></td></tr></table></figure></li><li><p>istio-galley日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl logs istio-galley-64f7d8cc97-8nbpc  -n istio-system</span></span><br><span class="line">2019-11-08T07:23:38.860184ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125; ACK collection=istio/rbac/v1alpha1/serviceroles with version=<span class="string">"0"</span> nonce=<span class="string">"16"</span> inc=<span class="literal">false</span></span><br><span class="line">2019-11-08T07:23:38.860197ZinfomcpWatch(): created watch 28 <span class="keyword">for</span> istio/rbac/v1alpha1/serviceroles from group <span class="string">"default"</span>, version <span class="string">"0"</span></span><br><span class="line">2019-11-08T07:23:38.860217ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125; ACK collection=istio/networking/v1alpha3/gateways with version=<span class="string">"0"</span> nonce=<span class="string">"17"</span> inc=<span class="literal">false</span></span><br><span class="line">2019-11-08T07:23:38.860268ZinfomcpWatch(): created watch 29 <span class="keyword">for</span> istio/networking/v1alpha3/gateways from group <span class="string">"default"</span>, version <span class="string">"0"</span></span><br><span class="line">2019-11-08T07:26:38.227268Zinfotransport: Got too many pings from the client, closing the connection.</span><br><span class="line">2019-11-08T07:26:38.227414Zinfotransport: loopyWriter.run returning. Err: transport: Connection closing</span><br><span class="line">2019-11-08T07:26:38.228857Zinfotransport: http2Server.HandleStreams failed to <span class="built_in">read</span> frame: <span class="built_in">read</span> tcp 172.30.104.4:9901-&gt;172.30.104.7:57190: use of closed network connection</span><br><span class="line">2019-11-08T07:26:38.229130ZerrormcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125;: TERMINATED with errors: rpc error: code = Canceled desc = context canceled</span><br><span class="line">2019-11-08T07:26:38.229162ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125;: CLOSED</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前面其实有一个错误，忘记记录了，是一个tls的证书问题。根据上面的错误在google上找了好久，各种文档都查看了好久。就是安装的时候去验证tls证书，还有什么webhook问题。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;解决办法是；需要在apiserver里面需要配置 enable-admission-plugins，由于在安装的时候指定了某一个插件，导致这个未启用，如果没有配置该插件，默认其实是启用的。两个插件分别是：ValidatingAdmissionWebhook、MutatingAdmissionWebhook。安装文档里面已经修改，可以<a href="https://www.xxlaila.cn/2019/09/11/kubernetes-v1-14%E5%AE%89%E8%A3%85/">参考配置</a>，修改以后需要重启kube-apiserver。修改了这里还是不行。还需要重新安装istio。</p><ul><li><p>验证api-resources</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-resources | grep admissionregistration</span></span><br><span class="line">mutatingwebhookconfigurations                  admissionregistration.k8s.io   <span class="literal">false</span>        MutatingWebhookConfiguration</span><br><span class="line">validatingwebhookconfigurations                admissionregistration.k8s.io   <span class="literal">false</span>        ValidatingWebhookConfiguration</span><br></pre></td></tr></table></figure></li><li><p>启用 admissionregistration.k8s.io/v1alpha1 API</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions | grep admissionregistration.k8s.io</span></span><br><span class="line">admissionregistration.k8s.io/v1beta1</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用上面命令可以检查当前是否以启用，admissionregistration.k8s.io/v1alpha1 API，若不存在则需要在 apiserver 的配置中添加–runtime-config=admissionregistration.k8s.io/v1alpha1。</p><h3 id="重新安装istio"><a href="#重新安装istio" class="headerlink" title="重新安装istio"></a>重新安装istio</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">helm install install/kubernetes/helm/istio --<span class="built_in">wait</span> \</span><br><span class="line">    --name istio \</span><br><span class="line">    --namespace istio-system \</span><br><span class="line">    --<span class="built_in">set</span> global.mtls.enabled=<span class="literal">false</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.jaeger.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.provider=zipkin \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> servicegraph.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.gatewayName=ingressgateway \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.jaegerURL=http://jaeger-query:16686"</span> \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.grafanaURL=http://grafana:3000"</span> \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-ingressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-egressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> ingress.service.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> global.configValidation=<span class="literal">false</span> \</span><br><span class="line">    --<span class="built_in">set</span> ingress.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> gateways.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> mixer.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> prometheus.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> sidecarInjectorWebhook.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> pilot.env.PILOT_DISABLE_XDS_MARSHALING_TO_ANY=<span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>参数介绍<ul><li>global.mtls.enabled: 开启Mtls认证</li><li>kiali.enabled: 安装kiali</li><li>tracing.enabled: 启用tracing</li><li>grafana.enabled: 安装granfana</li><li>servicegraph.enabled: 启用servicegraph</li><li>global.k8sIngress.enabled: 启用k8sIngress</li><li>global.configValidation: 禁用参数校验</li><li>ingress.enabled: 否启用Ingress</li><li>gateways.enabled: 启用gateway</li><li>mixer.enabled: 启用mixer</li><li>prometheus.enabled: 启用prometheus</li><li>sidecarInjectorWebhook.enabled: 启用sidecarinjector<br><a href="https://www.cnblogs.com/CCE-SWR/p/9990291.html" target="_blank" rel="noopener">更多参数</a>介绍参考</li></ul></li></ul><h4 id="配置验证webhook"><a href="#配置验证webhook" class="headerlink" title="配置验证webhook"></a>配置验证webhook</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;完成以后我们需要配置和验证webhook</p><ul><li>admissionregistration.k8s.io/v1beta1 应是启用状态<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions | grep admissionregistration.k8s.io/v1beta1</span></span><br><span class="line">admissionregistration.k8s.io/v1beta1</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在前面的一篇文章中我做了简单的部署，但是在疏忽bookinfo的时候出现了错误；然后研究了和学习了三天怎么来结局这个错误，这个错误不解决，没办法进行下一步。后学的路由规则完全没办法学习和测试。
    
    </summary>
    
      <category term="istio" scheme="https://www.xxlaila.cn/categories/istio/"/>
    
    
      <category term="istio" scheme="https://www.xxlaila.cn/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>mysql8.0 错误</title>
    <link href="https://www.xxlaila.cn/2019/11/07/mysql8.0%E9%94%99%E8%AF%AF/"/>
    <id>https://www.xxlaila.cn/2019/11/07/mysql8.0错误/</id>
    <published>2019-11-07T01:36:43.000Z</published>
    <updated>2019-11-15T06:24:23.442Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h4 id="mysql-8-0-倒入数据报错"><a href="#mysql-8-0-倒入数据报错" class="headerlink" title="mysql 8.0 倒入数据报错"></a>mysql 8.0 倒入数据报错</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天数据库从5.6切换到8.0测试的时候，倒入数据到8.0版本报错，错误提示：2006 mysql server has gone away。<a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经过查询得知，导入SQL数据库结构+数据时，如果sql操作时间过长；或者是传送的数据太大（咧如使用insert…values的语句过长）；就会报这个错误。登录服务器查看了数据库连接超时的时间默认是8小时，问题应该不是出现在这里。登录老版本数据查看该数据库表的数据，发现该表存放是json的数据格式数据，而且很大，很长。根据这点消息，可以简单的知道问题</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种情况可以通过修改max_allowed_packed的配置参数来避免，修改my.cnf加大max_allowed_packet的值即可。</p><ul><li>解决办法<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;找到mysql目录下的my.ini配置文件，加入以下配置或者修改以下配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max_allowed_packet=300M</span><br></pre></td></tr></table></figure></li></ul><h4 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h4><ul><li><strong>max_allowed_packet</strong>: mysql根据配置文件会限制server接受的数据包大小。如果一次插入数据库中的数据太大的话就会失败，<a href="https://dev.mysql.com/doc/refman/8.0/en/packet-too-large.html" target="_blank" rel="noopener">官方介绍</a>，<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里我刚开始修改的是200M，还是出现这个错误，然后我看了一下sql文件大小是在260多M，索性我就把这个参数调整为300M，在执行倒入数据ok。这个参数调大不会影响服务器的性能，可以参考官方说明。</li></ul><h4 id="mysql-1067-Invalid-default-value-for"><a href="#mysql-1067-Invalid-default-value-for" class="headerlink" title="mysql 1067 - Invalid default value for"></a>mysql 1067 - Invalid default value for</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql 8.0 在倒入数据的时候提示: 1067 - Invalid default value for ‘xxx_date’。查询结果得知跨版本升级引起的默认值不兼容问题，登录老服务器查看该字段是一个时间字段，是一个datetime类型，而且默认是0，然后看了一下导出的数据数据格式居然是0000-00-00，该类型可能是默认值被限制了，查看 sql_mode。</p><h5 id="查看-sql-mode"><a href="#查看-sql-mode" class="headerlink" title="查看 sql_mode"></a>查看 sql_mode</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'sql_mode'</span>;</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Variable_name | Value                                                                                                                 |</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| sql_mode      | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION |</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.02 sec)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NO_ZERO_IN_DATE,NO_ZERO_DATE这两个参数限制时间不能为0</p><h5 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> session sql_mode=<span class="string">'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><p>这个我操作了，没成功，我用的永久修改成功导入的。不知道为啥，可能是姿势不对</p><h5 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改"></a>永久修改</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以直接修改my.cnf文件，在[mysqld]下面添加如下列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_mode=ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h4 id=&quot;mysql-8-0-倒入数据报错&quot;&gt;&lt;a href=&quot;#mysql-8-0-倒入数据报错&quot; class=&quot;headerlink&quot; title=&quot;mysql 8.0 倒入数据报错&quot;&gt;&lt;/a&gt;mysql 8.0 倒入数据报错&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天数据库从5.6切换到8.0测试的时候，倒入数据到8.0版本报错，错误提示：2006 mysql server has gone away。
    
    </summary>
    
      <category term="数据库" scheme="https://www.xxlaila.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="https://www.xxlaila.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>istio部署</title>
    <link href="https://www.xxlaila.cn/2019/10/29/istio%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/10/29/istio部署/</id>
    <published>2019-10-29T08:21:08.000Z</published>
    <updated>2019-11-06T07:30:39.462Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="Istio介绍"><a href="#Istio介绍" class="headerlink" title="Istio介绍"></a>Istio介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio代表的是Service Mesh的方案实现，Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。提供一种简单的方式来为已部署的服务建立网络，且提供具有负载均衡、服务间认证、监控、流量管理等功能。</p><a id="more"></a><h3 id="服务网格（Service-Mesh）"><a href="#服务网格（Service-Mesh）" class="headerlink" title="服务网格（Service Mesh）"></a>服务网格（Service Mesh）</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务网格（Service Mesh）用于描述构成这些应用程序的微服务网络以及应用之间的交互。随着规模和复杂性的增长，服务网格越来越难以理解和管理。它的需求包括服务发现、负载均衡、故障恢复、指标收集和监控以及通常更加复杂的运维需求，例如 A/B 测试、金丝雀发布、限流、访问控制和端到端认证等。而istio刚好提供了一套完整的解决方案，通过控制整个服务器网格提供行为洞察和操作控制来满足微服务应用的多样化</p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 服务网格逻辑上分为数据平面和控制平面。</p><ul><li>数据平面由一组以 sidecar 方式部署的智能代理（Envoy）组成。这些代理可以调节和控制微服务及 Mixer 之间所有的网络通信。</li><li>控制平面负责管理和配置代理来路由流量。此外控制平面配置 Mixer 以实施策略和收集遥测数据。</li></ul><p>构成每个面板的不同组件:<br><img src="https://img.xxlaila.cn/1567136153850.jpg" alt="img"></p><h4 id="istio-组件"><a href="#istio-组件" class="headerlink" title="istio 组件"></a>istio 组件</h4><ul><li>Envoy: Istio 使用 Envoy 代理的扩展版本，用于调解服务网格中所有服务的所有入站和出站流量，属于数据层面。Istio利用Envoy的内置功能实现如下指标:<ul><li>动态服务发现</li><li>负载均衡</li><li>TLS终止</li><li>HTTP/2和gRPC代理</li><li>断路器</li><li>健康检查</li><li>分阶段推出，按百分比分配流量</li><li>故障注入</li><li>丰富的指标</li></ul></li><li>Mixer: 是一个独立于平台的组件，负责在服务网格上执行访问控制和使用策略，并从 Envoy 代理和其他服务收集遥测数据</li><li>Pilot: 为 Envoy sidecar 提供服务发现功能，为智能路由（例如 A/B 测试、金丝雀部署等）和弹性（超时、重试、熔断器等）提供流量管理功能</li><li>Citadel: 通过内置身份和凭证管理赋能强大的服务间和最终用户身份验证。可用于升级服务网格中未加密的流量，并为运维人员提供基于服务标识而不是网络控制的强制执行策略的能力</li><li>Galley: 代表其他的 Istio 控制平面组件，用来验证用户编写的 Istio API 配置。随着时间的推移，Galley 将接管 Istio 获取配置、 处理和分配组件的顶级责任</li></ul><h3 id="Istion-安装"><a href="#Istion-安装" class="headerlink" title="Istion 安装"></a>Istion 安装</h3><h4 id="下载istio包"><a href="#下载istio包" class="headerlink" title="下载istio包"></a>下载istio包</h4><p>执行下载和自动解压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.2.8 sh -</span></span><br><span class="line"><span class="comment"># cd istio-1.2.8/bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cp istioctl /usr/bin/</span></span><br></pre></td></tr></table></figure><p>安装目录中包含：</p><ul><li><code>在 install/</code>: 目录中包含了 Kubernetes 安装所需的 .yaml 文件</li><li><code>samples/</code>: 目录中是示例应用</li><li><code>istioctl</code>: istioctl客户端二进制文件。手动将Envoy作为Sidecar代理注入并创建路由规则和策略时，将使用此工具。</li><li><code>istio.VERSION</code>: 配置文件</li></ul><h3 id="在kubernetes-集群中安装"><a href="#在kubernetes-集群中安装" class="headerlink" title="在kubernetes 集群中安装"></a>在kubernetes 集群中安装</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 会被安装到自己的 istio-system 命名空间，并且能够对所有其他命名空间的服务进行管理。这里采用helm进行安装，<a href="https://xxlaila.github.io/2019/09/04/k8s-helm/" target="_blank" rel="noopener">helm安装参考</a>，我们需要为Kiali设置身份验证凭据（监视）。用于后面的登录认证</p><h4 id="设置用户名和密码的环境变量"><a href="#设置用户名和密码的环境变量" class="headerlink" title="设置用户名和密码的环境变量"></a>设置用户名和密码的环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># KIALI_USERNAME=$(read -p 'Kiali Username: ' uval &amp;&amp; echo -n $uval | base64)</span></span><br><span class="line"><span class="comment"># KIALI_PASSPHRASE=$(read -sp 'Kiali Passphrase: ' pval &amp;&amp; echo -n $pval | base64)</span></span><br></pre></td></tr></table></figure><h4 id="创建命名空间"><a href="#创建命名空间" class="headerlink" title="创建命名空间"></a>创建命名空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NAMESPACE=istio-system</span></span><br><span class="line"><span class="comment"># kubectl create namespace $NAMESPACE</span></span><br></pre></td></tr></table></figure><ul><li>创建用于存储上面设置的用户名/密码的机密<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: kiali</span><br><span class="line">  namespace: <span class="variable">$NAMESPACE</span></span><br><span class="line">  labels:</span><br><span class="line">    app: kiali</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">data:</span><br><span class="line">  username: <span class="variable">$KIALI_USERNAME</span></span><br><span class="line">  passphrase: <span class="variable">$KIALI_PASSPHRASE</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用helm安装istio-CRD"><a href="#使用helm安装istio-CRD" class="headerlink" title="使用helm安装istio CRD"></a>使用helm安装istio CRD</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm install install/kubernetes/helm/istio-init --name istio-init --namespace istio-system</span></span><br><span class="line">NAME:   istio-init</span><br><span class="line">LAST DEPLOYED: Fri Nov  1 10:13:22 2019</span><br><span class="line">NAMESPACE: istio-system</span><br><span class="line">STATUS: DEPLOYED</span><br><span class="line"></span><br><span class="line">RESOURCES:</span><br><span class="line">==&gt; v1/ClusterRole</span><br><span class="line">NAME                     AGE</span><br><span class="line">istio-init-istio-system  0s</span><br><span class="line"></span><br><span class="line">==&gt; v1/ClusterRoleBinding</span><br><span class="line">NAME                                        AGE</span><br><span class="line">istio-init-admin-role-binding-istio-system  0s</span><br><span class="line"></span><br><span class="line">==&gt; v1/ConfigMap</span><br><span class="line">NAME          DATA  AGE</span><br><span class="line">istio-crd-10  1     0s</span><br><span class="line">istio-crd-11  1     0s</span><br><span class="line">istio-crd-12  1     0s</span><br><span class="line"></span><br><span class="line">==&gt; v1/Job</span><br><span class="line">NAME                     COMPLETIONS  DURATION  AGE</span><br><span class="line">istio-init-crd-10-1.2.8  0/1          0s</span><br><span class="line">istio-init-crd-11-1.2.8  0/1          0s</span><br><span class="line">istio-init-crd-12-1.2.8  0/1          0s</span><br><span class="line"></span><br><span class="line">==&gt; v1/ServiceAccount</span><br><span class="line">NAME                        SECRETS  AGE</span><br><span class="line">istio-init-service-account  0        0s</span><br></pre></td></tr></table></figure><h5 id="查看安装的CRD和pod"><a href="#查看安装的CRD和pod" class="headerlink" title="查看安装的CRD和pod"></a>查看安装的CRD和pod</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上述安装会把istio的23个crd都提交给kubernetes api 服务器。如果启用了证书管理，crd计数器为28个。我这里未启用证书管理，只有23个。还生成三个pod</p><ul><li><p>CRD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get CustomResourceDefinition</span></span><br><span class="line">NAME                                   CREATED AT</span><br><span class="line">adapters.config.istio.io               2019-10-29T08:41:31Z</span><br><span class="line">attributemanifests.config.istio.io     2019-10-29T08:41:30Z</span><br><span class="line">authorizationpolicies.rbac.istio.io    2019-10-29T08:41:36Z</span><br><span class="line">certificates.certmanager.k8s.io        2019-10-29T08:41:38Z</span><br><span class="line">challenges.certmanager.k8s.io          2019-10-29T08:41:40Z</span><br><span class="line">clusterissuers.certmanager.k8s.io      2019-10-29T08:41:37Z</span><br><span class="line">clusterrbacconfigs.rbac.istio.io       2019-10-29T08:41:26Z</span><br><span class="line">destinationrules.networking.istio.io   2019-10-29T08:41:25Z</span><br><span class="line">envoyfilters.networking.istio.io       2019-10-29T08:41:26Z</span><br><span class="line">gateways.networking.istio.io           2019-10-29T08:41:26Z</span><br><span class="line">handlers.config.istio.io               2019-10-29T08:41:33Z</span><br><span class="line">httpapispecbindings.config.istio.io    2019-10-29T08:41:27Z</span><br><span class="line">httpapispecs.config.istio.io           2019-10-29T08:41:28Z</span><br><span class="line">instances.config.istio.io              2019-10-29T08:41:32Z</span><br><span class="line">issuers.certmanager.k8s.io             2019-10-29T08:41:37Z</span><br><span class="line">meshpolicies.authentication.istio.io   2019-10-29T08:41:27Z</span><br><span class="line">orders.certmanager.k8s.io              2019-10-29T08:41:40Z</span><br><span class="line">policies.authentication.istio.io       2019-10-29T08:41:27Z</span><br><span class="line">quotaspecbindings.config.istio.io      2019-10-29T08:41:28Z</span><br><span class="line">quotaspecs.config.istio.io             2019-10-29T08:41:29Z</span><br><span class="line">rbacconfigs.rbac.istio.io              2019-10-29T08:41:31Z</span><br><span class="line">rules.config.istio.io                  2019-10-29T08:41:30Z</span><br><span class="line">serviceentries.networking.istio.io     2019-10-29T08:41:25Z</span><br><span class="line">servicerolebindings.rbac.istio.io      2019-10-29T08:41:31Z</span><br><span class="line">serviceroles.rbac.istio.io             2019-10-29T08:41:31Z</span><br><span class="line">sidecars.networking.istio.io           2019-10-29T08:41:34Z</span><br><span class="line">templates.config.istio.io              2019-10-29T08:41:32Z</span><br><span class="line">virtualservices.networking.istio.io    2019-10-29T08:41:25Z</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get crds | grep 'istio.io\|certmanager.k8s.io' | wc -l</span></span><br><span class="line">23</span><br></pre></td></tr></table></figure></li><li><p>pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods -n istio-system</span></span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">NAME                            READY   STATUS      RESTARTS   AGE</span><br><span class="line">istio-init-crd-10-1.2.8-pbtb8   0/1     Completed   0          47s</span><br><span class="line">istio-init-crd-11-1.2.8-shx6q   0/1     Completed   0          47s</span><br><span class="line">istio-init-crd-12-1.2.8-zmh2w   0/1     Completed   0          47s</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用helm安装各个组件"><a href="#使用helm安装各个组件" class="headerlink" title="使用helm安装各个组件"></a>使用helm安装各个组件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">helm install install/kubernetes/helm/istio --<span class="built_in">wait</span> \</span><br><span class="line">    --name istio \</span><br><span class="line">    --namespace istio-system \</span><br><span class="line">    --<span class="built_in">set</span> global.mtls.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> servicegraph.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.gatewayName=ingressgateway \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.createDemoSecret=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.contextPath=/ \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.jaegerURL=http://jaeger-query:16686"</span> \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.grafanaURL=http://grafana:3000"</span> \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-ingressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-egressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> sidecarInjectorWebhook.enabled=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;验证文件里面的服务是否都部署在kubernetes 服务中。确保部署的pod 在对应的kubernetes namespace 里面，并正常启动。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这期间将创建所需的RBAC权限，并部署Istio-Pilot，Istio-Mixer，Istio-Ingress，Istio-Egress和Istio-CA（证书颁发机构）。</p><h5 id="服务器验证"><a href="#服务器验证" class="headerlink" title="服务器验证"></a>服务器验证</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确保部署了以下Kubernetes服务：istio-pilot，istio-mixer，istio-ingress。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n istio-system</span></span><br><span class="line">NAME                     TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                                                                                                                                      AGE</span><br><span class="line">grafana                  ClusterIP   10.254.113.150   &lt;none&gt;        3000/TCP                                                                                                                                     3h22m</span><br><span class="line">istio-citadel            ClusterIP   10.254.27.143    &lt;none&gt;        8060/TCP,15014/TCP                                                                                                                           3h22m</span><br><span class="line">istio-galley             ClusterIP   10.254.155.177   &lt;none&gt;        443/TCP,15014/TCP,9901/TCP                                                                                                                   3h22m</span><br><span class="line">istio-ingressgateway     NodePort    10.254.170.109   &lt;none&gt;        15020:31952/TCP,80:31380/TCP,443:31390/TCP,31400:31400/TCP,15029:32532/TCP,15030:31518/TCP,15031:31525/TCP,15032:30404/TCP,15443:30309/TCP   3h22m</span><br><span class="line">istio-pilot              ClusterIP   10.254.228.182   &lt;none&gt;        15010/TCP,15011/TCP,8080/TCP,15014/TCP                                                                                                       3h22m</span><br><span class="line">istio-policy             ClusterIP   10.254.13.184    &lt;none&gt;        9091/TCP,15004/TCP,15014/TCP                                                                                                                 3h22m</span><br><span class="line">istio-sidecar-injector   ClusterIP   10.254.154.169   &lt;none&gt;        443/TCP                                                                                                                                      3h22m</span><br><span class="line">istio-telemetry          ClusterIP   10.254.71.72     &lt;none&gt;        9091/TCP,15004/TCP,15014/TCP,42422/TCP                                                                                                       3h22m</span><br><span class="line">jaeger-agent             ClusterIP   None             &lt;none&gt;        5775/UDP,6831/UDP,6832/UDP                                                                                                                   3h22m</span><br><span class="line">jaeger-collector         ClusterIP   10.254.100.29    &lt;none&gt;        14267/TCP,14268/TCP                                                                                                                          3h22m</span><br><span class="line">jaeger-query             ClusterIP   10.254.18.117    &lt;none&gt;        16686/TCP                                                                                                                                    3h22m</span><br><span class="line">kiali                    ClusterIP   10.254.156.117   &lt;none&gt;        20001/TCP                                                                                                                                    3h22m</span><br><span class="line">prometheus               ClusterIP   10.254.145.181   &lt;none&gt;        9090/TCP                                                                                                                                     3h22m</span><br><span class="line">tracing                  ClusterIP   10.254.87.72     &lt;none&gt;        80/TCP                                                                                                                                       3h22m</span><br><span class="line">zipkin                   ClusterIP   10.254.39.22     &lt;none&gt;        9411/TCP                                                                                                                                     3h22m</span><br></pre></td></tr></table></figure><h5 id="pod-验证"><a href="#pod-验证" class="headerlink" title="pod 验证"></a>pod 验证</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确保已部署相应的Kubernetes Pod，并且所有容器都已启动并正在运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods -n istio-system</span></span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">grafana-6fb9f8c5c7-n2plk                  1/1     Running     0          3h19m</span><br><span class="line">istio-citadel-7c9b84ddb6-n5h2n            1/1     Running     0          3h19m</span><br><span class="line">istio-galley-64f7d8cc97-zdbb6             1/1     Running     0          3h19m</span><br><span class="line">istio-grafana-post-install-1.2.8-98grv    0/1     Completed   0          3h19m</span><br><span class="line">istio-ingressgateway-65c7498b78-dfmfp     1/1     Running     0          3h19m</span><br><span class="line">istio-init-crd-10-1.2.8-wxxjn             0/1     Completed   0          3h20m</span><br><span class="line">istio-init-crd-11-1.2.8-brjhh             0/1     Completed   0          3h20m</span><br><span class="line">istio-init-crd-12-1.2.8-w8wnc             0/1     Completed   0          3h20m</span><br><span class="line">istio-pilot-569499d666-vhgn5              2/2     Running     0          3h19m</span><br><span class="line">istio-policy-5dbbc56db5-dmr4p             2/2     Running     3          3h19m</span><br><span class="line">istio-sidecar-injector-747cf74498-99drh   1/1     Running     0          3h19m</span><br><span class="line">istio-telemetry-7db5dd4c57-zngq7          2/2     Running     4          3h19m</span><br><span class="line">istio-tracing-5d8f57c8ff-vt2kn            1/1     Running     0          3h19m</span><br><span class="line">kiali-7d749f9dcb-68tlt                    1/1     Running     0          3h19m</span><br><span class="line">prometheus-776fdf7479-zbrxl               1/1     Running     0          3h19m</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 以一个项目的形式部署到 Kubernetes 集群中。我们可以看到，部署好的 pods 中，除了有 istio-citadel、、istio-ingressgateway、istio-pilot 等 Istio 本身的功能组件，还集成了微服务相关的监控工具，，如：grafana、jaeger-query、kiali、prometheus。这些功能丰富且强大的监控工具，帮助 Istio实现了微服务的可视化管理。</p><h3 id="部署BookInfo用程序"><a href="#部署BookInfo用程序" class="headerlink" title="部署BookInfo用程序"></a>部署BookInfo用程序</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在开始部署 Bookinfo 示例程序。部署Bookinfo条件是集群中至少有4个节点，而且每个节点的内存不得低于4G。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以部署安装随附的示例应用程序之一-BookInfo。这是一个简单的模拟书店应用程序，由四个服务组成，这些服务提供一个Web产品页面，书籍详细信息，评论（带有多个版本的评论服务）和评分-所有这些都使用Istio进行管理。</p><ul><li><p>BookInfo应用程序分为四个单独的微服务:</p><ul><li>productpage ：productpage 微服务会调用 details 和 reviews 两个微服务，用来生成页面。</li><li>details ：这个微服务包含了书籍的信息。</li><li>reviews ：这个微服务包含了书籍相关的评论。它还会调用 ratings 微服务。</li><li>ratings ：ratings 微服务中包含了由书籍评价组成的评级信息。</li></ul></li><li><p>reviews 微服务有 3 个版本：</p><ul><li>v1 版本不会调用 ratings 服务.</li><li>v2 版本会调用 ratings 服务，并使用 1 到 5 个黑色星形图标来显示评分信息</li><li>v3 版本会调用 ratings 服务，并使用 1 到 5 个红色星形图标来显示评分信息</li></ul></li><li><p>下图展示了这个应用的端到端架构<br><img src="https://img.xxlaila.cn/1572576628250.jpg" alt="img"></p></li></ul><h4 id="打标签"><a href="#打标签" class="headerlink" title="打标签"></a>打标签</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为 default 命名空间打上标签 istio-injection=enabled，实现 Sidecar 自动注入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl label namespace default istio-injection=enabled</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get namespace --show-labels</span></span><br><span class="line">NAME              STATUS   AGE   LABELS</span><br><span class="line">default           Active   43d   istio-injection=enabled</span><br><span class="line">istio-system      Active   29m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   43d   &lt;none&gt;</span><br><span class="line">kube-public       Active   43d   &lt;none&gt;</span><br><span class="line">kube-system       Active   43d   &lt;none&gt;</span><br><span class="line">monitoring        Active   35d   &lt;none&gt;</span><br><span class="line">weave             Active   35d   &lt;none&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>注意:</strong> 此步骤先不执行，如果这这个执行了，在后面部署Bookinfo的时候会提示如下错误<code>Error creating: Internal error occurred: failed calling webhook &quot;sidecar-injector.istio.io&quot;: Post https://istio-sidecar-injector.istio-system.svc:443/inject?timeout=30s: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</code>这一步有执行的可以执行以下命令进行删除</li></ul><ul><li>删除ns的label<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get ns --show-labels</span></span><br><span class="line">NAME              STATUS   AGE    LABELS</span><br><span class="line">default           Active   2d4h   istio-injection=enabled</span><br><span class="line">istio-system      Active   174m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-public       Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-system       Active   2d4h   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl label namespace default istio-injection-</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get ns --show-labels</span></span><br><span class="line">NAME              STATUS   AGE    LABELS</span><br><span class="line">default           Active   2d4h   &lt;none&gt;</span><br><span class="line">istio-system      Active   175m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-public       Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-system       Active   2d4h   &lt;none&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="部署Bookinfo"><a href="#部署Bookinfo" class="headerlink" title="部署Bookinfo"></a>部署Bookinfo</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;直接使用kubectl create其常规的YAML部署文件来部署我们的应用程序。将使用istioctl将Envoy容器注入到应用程序容器中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl create -f &lt;(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)</span></span><br><span class="line">service/details created</span><br><span class="line">serviceaccount/bookinfo-details created</span><br><span class="line">deployment.apps/details-v1 created</span><br><span class="line">service/ratings created</span><br><span class="line">serviceaccount/bookinfo-ratings created</span><br><span class="line">deployment.apps/ratings-v1 created</span><br><span class="line">service/reviews created</span><br><span class="line">serviceaccount/bookinfo-reviews created</span><br><span class="line">deployment.apps/reviews-v1 created</span><br><span class="line">deployment.apps/reviews-v2 created</span><br><span class="line">deployment.apps/reviews-v3 created</span><br><span class="line">service/productpage created</span><br><span class="line">serviceaccount/bookinfo-productpage created</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该命令将启动bookinfo应用程序体系结构图中显示的所有四个服务。已启动评论服务的所有3个版本，即v1，v2和v3。而在实际部署中，随着时间的推移会部署新版本的微服务，而不是同时部署所有版本。</p><h4 id="检查部署"><a href="#检查部署" class="headerlink" title="检查部署"></a>检查部署</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确认所有服务和Pod均已正确定义并正在运行。</p><ul><li><p>检查 services</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get services</span></span><br><span class="line">NAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">details       ClusterIP   10.254.61.113    &lt;none&gt;        9080/TCP   2m27s</span><br><span class="line">kubernetes    ClusterIP   10.254.0.1       &lt;none&gt;        443/TCP    43d</span><br><span class="line">productpage   ClusterIP   10.254.130.5     &lt;none&gt;        9080/TCP   2m23s</span><br><span class="line">ratings       ClusterIP   10.254.186.181   &lt;none&gt;        9080/TCP   2m26s</span><br><span class="line">reviews       ClusterIP   10.254.200.107   &lt;none&gt;        9080/TCP   2m25s</span><br></pre></td></tr></table></figure></li><li><p>检查 pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                              READY   STATUS    RESTARTS   AGE</span><br><span class="line">details-v1-c5b5f496d-lphgd        1/1     Running   0          15h</span><br><span class="line">load-generator-7fbcc7489f-vbpnx   1/1     Running   2          20d</span><br><span class="line">nginx-deploy-d494b9564-vx97s      1/1     Running   1          20d</span><br><span class="line">productpage-v1-c7765c886-97spj    1/1     Running   0          15h</span><br><span class="line">ratings-v1-f745cf57b-mdgxr        1/1     Running   0          15h</span><br><span class="line">reviews-v1-75b979578c-ghqqm       1/1     Running   0          15h</span><br><span class="line">reviews-v2-597bf96c8f-r659w       1/1     Running   0          15h</span><br><span class="line">reviews-v3-54c6c64795-tvsmq       1/1     Running   0          15h</span><br></pre></td></tr></table></figure></li><li><p>确认Bookinfo应用程序正在运行，请通过curl某个pod中的命令向其发送请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl exec -it $(kubectl get pod -l app=ratings -o jsonpath='&#123;.items[0].metadata.name&#125;') -c ratings -- curl productpage:9080/productpage | grep -o "&lt;title&gt;.*&lt;/title&gt;"</span></span><br><span class="line">&lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在每个服务旁边都注入了Envoy，架构将如下<br><img src="https://img.xxlaila.cn/1572577460804.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bookinfo服务已启动并正在运行，您需要使该应用程序可以从Kubernetes集群外部访问，例如，从浏览器访问。Istio网关用于此目的。但是我在部署 bookinfo-gateway 的时候出现错误，错误如下；然后看了一下 bookinfo-gateway就是提供一个web访问的程序，既然是提供的一个web访问，我就使用了Traefix来提供这个服务。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">Error</span> <span class="keyword">from</span><span class="built_in"> server </span>(Timeout): <span class="builtin-name">error</span> when creating <span class="string">"samples/bookinfo/networking/bookinfo-gateway.yaml"</span>: Timeout: request did <span class="keyword">not</span> complete within requested timeout 30s</span><br><span class="line"><span class="builtin-name">Error</span> <span class="keyword">from</span><span class="built_in"> server </span>(Timeout): <span class="builtin-name">error</span> when creating <span class="string">"samples/bookinfo/networking/bookinfo-gateway.yaml"</span>: Timeout: request did <span class="keyword">not</span> complete within requested timeout 30s</span><br></pre></td></tr></table></figure><h4 id="创建-bookinfo-gateway"><a href="#创建-bookinfo-gateway" class="headerlink" title="创建 bookinfo-gateway"></a>创建 bookinfo-gateway</h4><ul><li>istio-Ingress.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: istio-web-ui</span><br><span class="line">  namespace: </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: productpage</span><br><span class="line">          servicePort: 9080</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器输入<code>http://istio.xxlaila.cn</code> 来访问。用 productpage以查看BookInfo网页。如果您多次刷新页面，您应该会看到产品页面上显示的评论版本不同，并以循环方式显示（红色星星，黑色星星，无星星），因为我们尚未使用Istio来控制版本路由<br><img src="https://img.xxlaila.cn/1572578398765.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1572578189667.jpg" alt="img"></p><p>基本道这里，动态更改请求路由学习中，😂😂😂</p><h3 id="监控方式"><a href="#监控方式" class="headerlink" title="监控方式"></a>监控方式</h3><h4 id="生成服务图"><a href="#生成服务图" class="headerlink" title="生成服务图"></a>生成服务图</h4><p>要验证Kiali是否在您的集群中运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n istio-system get svc kiali</span></span><br><span class="line">NAME    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)     AGE</span><br><span class="line">kiali   ClusterIP   10.254.156.117   &lt;none&gt;        20001/TCP   4h38m</span><br></pre></td></tr></table></figure><p>流量发送到网格，有三种选择:<br>1.在网络浏览器中访问<a href="http://istio.xxlaila.cn/productpage" target="_blank" rel="noopener">http://istio.xxlaila.cn/productpage</a><br>2.多次使用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl http://istio.xxlaila.cn/productpage</span></span><br></pre></td></tr></table></figure><p>3.使用以下watch命令连续发送请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># watch -n 1 curl -o /dev/null -s -w %&#123;http_code&#125; http://istio.xxlaila.cn/productpage</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里需要配置Kiali UI，我们同样适用Traefix来进行配置</p><ul><li>kiali–Ingress.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; kiali--Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: kiali-web-ui</span><br><span class="line">  namespace: istio-system </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: istio-kiali.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: kiali</span><br><span class="line">          servicePort: 20001</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://istio-kiali.xxlaila.cn" target="_blank" rel="noopener">http://istio-kiali.xxlaila.cn</a> ， 要登录Kiali UI，请转到Kiali登录屏幕，然后输入存储在Kiali机密中的用户名和密码。账户密码是前面我们设置的</p><h4 id="1-网格概述"><a href="#1-网格概述" class="headerlink" title="1.网格概述"></a>1.网格概述</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录后立即显示的“概述”页面中查看网格的概述。“概述”页面显示了网格中具有服务的所有名称空间。以下屏幕截图显示了类似的页面<br><img src="https://img.xxlaila.cn/1572578943386.jpg" alt="img"></p><h4 id="2-空间图"><a href="#2-空间图" class="headerlink" title="2.空间图"></a>2.空间图</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要查看名称空间图，请在bookinfoBookinfo名称空间卡中单击图图标。图形图标位于名称空间卡的左下方，看起来像是一组相连的圈子。该页面类似于<br><img src="https://img.xxlaila.cn/1572579048298.jpg" alt="img"></p><h3 id="分布式跟踪系统"><a href="#分布式跟踪系统" class="headerlink" title="分布式跟踪系统"></a>分布式跟踪系统</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启用Istio的应用程序可以配置为使用流行的Jaeger分布式跟踪系统来收集跟踪范围。分布式跟踪使您可以查看用户在系统中发出的请求流，而Istio的模型则允许这样做，而与构建应用程序所使用的语言/框架/平台无关。使用Traefix来提供这个服务。</p><ul><li><p>Jaeger-Ingress.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; Jaeger-Ingress.yaml  &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: jaeger-web-ui</span><br><span class="line">  namespace: istio-system </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: jaeger.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: jaeger-query</span><br><span class="line">          servicePort: 16686</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f Jaeger-Ingress.yaml </span></span><br><span class="line">ingress.extensions/jaeger-web-ui unchanged</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://jaeger.xxlaila.cn" target="_blank" rel="noopener">http://jaeger.xxlaila.cn</a> ， 使用Bookinfo示例生成跟踪，要查看跟踪数据，必须将请求发送到服务。请求数量取决于Istio的采样率。您在安装Istio时设置此速率。默认采样率为1％。您需要至少发送100个请求，才能显示第一条跟踪。要将100个请求发送到productpage服务，请使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for i in `seq 1 100`; do curl -s -o /dev/null http://istio.xxlaila.cn/productpage; done</span></span><br></pre></td></tr></table></figure><ul><li><p>在仪表板的左侧窗格中，从“服务”下拉列表中选择productpage.default，然后单击“查找跟踪”<br><img src="https://img.xxlaila.cn/1572592255728.jpg" alt="img"></p></li><li><p>单击顶部的最新跟踪以查看与对/ productpage的最新请求相对应的详细信息<br><img src="https://img.xxlaila.cn/1572592385675.jpg" alt="img"></p></li></ul><h3 id="监视Istio"><a href="#监视Istio" class="headerlink" title="监视Istio"></a>监视Istio</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如何设置和使用Istio仪表板监视网格流量。作为监控的一部分，需要将安装Grafana Istio插件，并使用基于Web的界面查看服务网格流量数据。Grafana将用于可视化普罗米修斯数据。在执行部署的时候也部署了这两个服务。</p><h4 id="创建grafana-Ingress"><a href="#创建grafana-Ingress" class="headerlink" title="创建grafana Ingress"></a>创建grafana Ingress</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;grafana-istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-istio-web-ui</span><br><span class="line">  namespace: istio-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: grafana-istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: grafana</span><br><span class="line">          servicePort: 3000</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>执行创建，这里我们可以在以前的grafana里面添加数据库源，就不用在新起一个域名来进行访问<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再次加载Bookinfo应用程序（<a href="http://istio.xxlaila.cn/productpage）" target="_blank" rel="noopener">http://istio.xxlaila.cn/productpage）</a> ， 刷新页面几次（或发送命令几次）以产生少量流量。再次查看Istio仪表板。它应该反映所产生的流量。<br><img src="https://img.xxlaila.cn/1572593852626.jpg" alt="img"></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio 还提供了网格的全局视图以及网格中的服务和工作负载。您可以通过导航到特定的仪表板来获取有关服务和工作负载的更多详细信息。<br><img src="https://img.xxlaila.cn/1572594150893.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;提供了有关服务指标的详细信息，然后是该服务的客户端工作负载（正在调用此服务的工作负载）和服务工作负载（正在提供该服务的工作负载）。<br><img src="https://img.xxlaila.cn/1572594261333.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 在grafana 提供了很多的监控指标，可以分别点击看看<br><img src="https://img.xxlaila.cn/1572594330246.jpg" alt="img"></p><h3 id="查询Istio指标"><a href="#查询Istio指标" class="headerlink" title="查询Istio指标"></a>查询Istio指标</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio的数据是存储在prometheus里面的，这里我们通过prometheus进行直接数据的查询</p><h4 id="查看prometheus服务"><a href="#查看prometheus服务" class="headerlink" title="查看prometheus服务"></a>查看prometheus服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n istio-system get svc prometheus</span></span><br><span class="line">NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">prometheus   ClusterIP   10.254.145.181   &lt;none&gt;        9090/TCP   5h35m</span><br></pre></td></tr></table></figure><h4 id="prometheus-traefix"><a href="#prometheus-traefix" class="headerlink" title="prometheus traefix"></a>prometheus traefix</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过traefix 来代理prometheus，然后我们将流量发送到网格。</p><ul><li><p>prometheus-istio.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-istio-web-ui</span><br><span class="line">  namespace: istio-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: prometheus-istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: prometheus</span><br><span class="line">          servicePort: 9090</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-istio-Ingress.yaml </span></span><br><span class="line">ingress.extensions/prometheus-istio-web-ui created</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://prometheus-istio.xxlaila.cn" target="_blank" rel="noopener">http://prometheus-istio.xxlaila.cn</a> ，可以在输入框里面输入表达式来获取指，输入文本：istio_requests_total<br><img src="https://img.xxlaila.cn/1572594888435.jpg" alt="img"></p><ul><li><p>其他查询尝试：</p><ul><li><p>对productpage服务的所有请求总数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istio_requests_total&#123;destination_service=<span class="string">"productpage.default.svc.cluster.local"</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>对v3版本的评论服务的所有请求总数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istio_requests_total&#123;destination_service=<span class="string">"reviews.default.svc.cluster.local"</span>, destination_version=<span class="string">"v3"</span>&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>该查询将所有请求的当前总数返回到评论服务的v3。</p><ul><li>过去5分钟内对productpage服务所有实例的请求率：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rate(istio_requests_total&#123;destination_service=~<span class="string">"productpage.*"</span>, response_code=<span class="string">"200"</span>&#125;[5m])</span><br></pre></td></tr></table></figure></li></ul></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;Istio介绍&quot;&gt;&lt;a href=&quot;#Istio介绍&quot; class=&quot;headerlink&quot; title=&quot;Istio介绍&quot;&gt;&lt;/a&gt;Istio介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;istio代表的是Service Mesh的方案实现，Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。提供一种简单的方式来为已部署的服务建立网络，且提供具有负载均衡、服务间认证、监控、流量管理等功能。&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="istio" scheme="https://www.xxlaila.cn/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>pipeline核心高级篇</title>
    <link href="https://www.xxlaila.cn/2019/10/26/pipeline%E9%AB%98%E7%BA%A7%E7%AF%87/"/>
    <id>https://www.xxlaila.cn/2019/10/26/pipeline高级篇/</id>
    <published>2019-10-26T01:59:01.000Z</published>
    <updated>2019-10-28T02:40:59.762Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前面的两篇文章介绍了pipeline的基本使用和一些实际使用的例子，看似很不错，但是在实际应用也会出现很多的不足和问题，随之系统的庞大、服务的增加、人员的参差不齐会导致很多的问题。<a id="more"></a>届时会带来很大的维护成本和一些改动，所以我们在做事情之前就要考虑进去，一些意外事件的发生、或者是在将来即将会发生和需要改变的事情我们都要想到或者是预留口子，这样才在今后扩展、修改、引入都能有很好可塑性。</p><h3 id="jenkins-job介绍"><a href="#jenkins-job介绍" class="headerlink" title="jenkins job介绍"></a>jenkins job介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大多数情况下我们都是使用jenkins的普通job，普通的job好处是配置简单，结构化可以复杂，也可以单一。在使用jenkins job的时候我们分为两种：一种是单一job，一种是具有耦合性的。下面对两种情况进行对比和比较。</p><h4 id="jenkins-单一job"><a href="#jenkins-单一job" class="headerlink" title="jenkins 单一job"></a>jenkins 单一job</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在jenkins的传统模式下，单一的的job可以让维护人员可以很好的查看里面的逻辑步骤，job里面所有的任务都在这个所属的空间里面执行，它里面包含了：代码pull、编译、打包、复制包、发布包（使用内置的shell模块来写shell，这种应该不存在）。种单一job服务算得上是服务周到，不影响其他人，自己管理好自己的一亩三分地。好处是当出错以后影响范围小，容易控制。如下图：<br><img src="https://img.xxlaila.cn/1572064519037.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这中模式下，维护人员前期用看似比较轻松的工作建立起了整个发布流程。但是到了后期就不行了。之前我在的这家公司前期也是这么这么做的。开发完成后提交git，然后自动触发、构建、制品库、发布，在一个job里面就完成了。后来我们准备推行更好的devops方案的时候；发现以前的这个job建立有问题，一想到几百个微服务，几百个job需要去进行改造。顿时我们运维脸线一黑，虽然我们自己写了一个快速在jenkins上建立job，但是一想到几百个还是不好。为了解决这个问题，我们使用了job之间的任务关联，然后通过参数传递完成整个流程服务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种模式下的弊端就如上面所说的一样，但什么时候好的服务呢？好的服务又是什么样子的呢？这里也可以嵌套一些微服务的概念理论。如果我们要做到什么时候好的服务，我们得了解了解一下: 低耦合和高内聚。了解这个东西有助于我们在接下来的pipeline 流水线的设计，包括在后期devops的设计以及撸码都有很大的帮助。</p><h3 id="耦合性"><a href="#耦合性" class="headerlink" title="耦合性"></a>耦合性</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先我们来了解这一概念: “高内聚低耦合”。在软件设计中通常用耦合度和内聚度作为衡量模块独立程度的标准。划分模块的一个准则是高内聚低耦合。从模块粒度来看，高内聚：尽可能类的每个成员方法只完成一件事（最大限度的聚合）；低耦合：减少类内部，一个成员方法调用另一个成员方法。从类角度来看，高内聚低耦合：减少类内部，对其他类的调用；从功能块来看，高内聚低耦合：减少模块之间的交互复杂度（接口数量，参数数据）即横向：类与类之间、模块与模块之间；纵向：层次之间；尽可能，内容内聚，数据耦合。</p><h4 id="低耦合"><a href="#低耦合" class="headerlink" title="低耦合"></a>低耦合</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不同模块相互依赖多少？模块应尽可能独立于其他模块，以使对模块的更改不会严重影响其他模块。</p><h4 id="高耦合"><a href="#高耦合" class="headerlink" title="高耦合"></a>高耦合</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;高耦合将意味着您的模块对其他模块的内部运作了解太多。对其他模块了解太多的模块会使更改难以协调，并使模块能力变弱。如果模块A对模块B的了解过多，则对模块B内部的更改可能会破坏模块A的功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过实现低耦合，可以轻松更改模块内部，不必担心它们对系统中其他模块的影响。低耦合还使我们的模块彼此之间不相互依赖，因此更易于设计，编写和测试代码。我们还获得了易于重用和可组合的模块的优势。问题也被隔离到小的，独立的代码单元中。</p><p><strong>好处:</strong></p><ul><li>可维护性: 更改限制在一个模块中</li><li>可测试性: 单元测试中涉及的模块可以限制在最低限度</li><li>可读性: 需要分析的类减少</li></ul><h4 id="高内聚"><a href="#高内聚" class="headerlink" title="高内聚"></a>高内聚</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内聚性通常是指模块的元素如何相互组合。相关代码应彼此接近，以使其具有高度的凝聚力。易于维护的代码通常具有很高的内聚性。模块中的元素与该模块要提供的功能直接相关。如果需要修改一个功能，最好是在一个地方进行修改，然后可以尽快的发布。如果很多不同的地方要进行修改，就有可能需要发布多个微服务才能交互这个功能。在很多地方进行修改，不仅修改速度很慢，同时部署多个微服务也提高了风险。所以在找到问题域的边界域后可以确保相关的行为能放在同一个地方，并且它们会和其它边界以尽量低耦合的形式进行通信。</p><p><strong>好处:</strong></p><ul><li>可读性: 功能包含在单个模块中</li><li>可维护性: 调试往往包含在单个模块中</li><li>可重用性: 具有集中功能不会被无用的干扰</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内聚性低意味着组成某些功能的代码会散布在您的整个代码库中。不仅很难发现与您的模块相关的代码，而且很难在不同的模块之间跳转并跟踪的所有代码。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通俗的来讲，内聚是从功能角度来度量模块内的联系，好的内聚模块应恰好做一件事。描述的是模块内的功能联系。耦合是软件结构中各模块之间相互连接的一种度量，耦合强弱取决于模块间接口的复杂程度、进入或访问一个模块点以及通过接口的数据。</p><h4 id="可维护的代码"><a href="#可维护的代码" class="headerlink" title="可维护的代码"></a>可维护的代码</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般在编写可维护的代码有助于提高开发人员的生产力。具有高度可维护的代码使设计新功能和编写代码变得更加容易。模块化，基于组件的分层代码可提高生产率并降低进行更改时的风险。通过使代码保持松散耦合，可以在一个模块内编写代码，而不会影响其他模块。通过保持代码的内聚性，我们可以更轻松地编写易于使用的DRY代码。</p><p><strong>问题</strong>: 当我们遇到问题时，请评估修复、修改程序的程度。是更改一个模块，还是更改分散在整个系统中？在进行更改时，它是否可以解决所有的问题，还是会产生其他一些不可预知的问题？</p><p>在编写和使用代码库时:</p><ul><li>我要修复和创建的此功能模块是多少？</li><li>此更改是要在几个不同的地方进行？</li><li>我能否独立测试代码，测试整个代码有多难？</li><li>我们是否可以使代码更松散地耦合来改善？可以使用高内聚来改善我们的代码吗？</li></ul><h3 id="Jenkins-设计"><a href="#Jenkins-设计" class="headerlink" title="Jenkins 设计"></a>Jenkins 设计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有了上面的的理论与概念。根据这里理论和概念我们就可以设计出一套更好的devops流程。本文将kubernetes平台上来做这一套设计，并在实际的环境中应用。涉及的功能如下: 服务 Job、Code Job、Release、Notice四个功能任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每一个环境有错误，就会执行告警任务模块，告警目前使用的是<a href="https://github.com/xxlaila/jenkins-wechat-notice" target="_blank" rel="noopener">企业微信</a>。job之间需要传递JOB_NAME，env，version三个参数。在之前的devops设计里面整个job的调用设计还要多。形成了一个通用体系。在这个设计里面，当还需要增加一个任务流程，我们只需要修改pipeline，然后增加一个job，在下次构建的时候就会把我们新增加的流程给加进去，非常的方便。设计图如下：<br><img src="https://img.xxlaila.cn/1572081425995.jpg" alt="img"></p><h4 id="Project-Name"><a href="#Project-Name" class="headerlink" title="Project Name"></a>Project Name</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此job一般就是服务，job名称以服务的名称进行命名。里面包含了四个功能.</p><ul><li>Clone Code: clone 代码。</li><li>Build Code: 就是对开发提交的代码进行编译。</li><li>Env Version: 获取本次提交的hash，以hash为版本，结合环境来做一个版本记录，这里需要进行判断。uat/prod环境不需要env前缀。</li><li>Build Docker: 把编译完成后的二进制文件，打包成一个docker镜像。</li></ul><h4 id="Code-Test"><a href="#Code-Test" class="headerlink" title="Code Test"></a>Code Test</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用于测试进行对代码的自动化测试；自动化流程、性能等测试</p><h4 id="Release"><a href="#Release" class="headerlink" title="Release"></a>Release</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;主要是进行发布服务。当接受到上游job传递来的参数信息后，结合参数信息来进行对应的发布到kubernetes中namespace中，主要包含了以下功能</p><ul><li>Push Docker: 把前面打包的docker镜像推送到harbor</li><li>Edit Files: 修改发布的脚本</li><li>Release: 执行<code>kubectl</code>进行发布<ul><li>当发布到kubernetes中，kubernetes 会执行<a href="https://xxlaila.github.io/2019/09/27/k8s-pod%E5%81%A5%E5%BA%B7%E6%A3%80%E6%B5%8B/" target="_blank" rel="noopener">health检测</a>，如果启动失败，会进行通知</li></ul></li></ul><h4 id="Notice"><a href="#Notice" class="headerlink" title="Notice"></a>Notice</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此job主要用于通知。当接受到规则的告警通知以后，就会进行触发通知相关的人员。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前面的两篇文章介绍了pipeline的基本使用和一些实际使用的例子，看似很不错，但是在实际应用也会出现很多的不足和问题，随之系统的庞大、服务的增加、人员的参差不齐会导致很多的问题。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>pipeline多分支gitlab触发</title>
    <link href="https://www.xxlaila.cn/2019/10/25/pipeline%E5%A4%9A%E5%88%86%E6%94%AFgitlab%E8%A7%A6%E5%8F%91/"/>
    <id>https://www.xxlaila.cn/2019/10/25/pipeline多分支gitlab触发/</id>
    <published>2019-10-25T09:20:15.000Z</published>
    <updated>2019-10-28T08:42:04.528Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="enter password to read." />    <label for="hbePass">enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3cc72b058bc011e704b4e18d466f6690139d40f5ab03dc2d80c6caaa332121de">d69a90776b8106231e3f5503e1ddcc13e7f2de9f38f851fa9ae61619f0b38507d65dedabe4f957fbe6e1d3f55a08b2f8581f3e993da2f0ed45c134eae4833df2f4f856113e95258de031b4376ad060284a44b0f9ad319afa875c2ca62ef373e2ad910356f359179350d3e3a614e42659ccbf951926438158719f53c4904c8ba67ccae949142c471606e84181014f608fde45714e6906b159aee7f45a654b779839ed1c48c2e78052082221aab451afc751b719114b46993b904bf2bc2d42396bbafa3c5b2bdfac589bba1665f214378babc809a629f554922651484ac9211f431f54b963de123388a67ce00098eeec57f8ce9efb0d5ed9b2573023c61b09cb71c87d3fb79d1a50399fb420862487bfff133e9f4b604295a35a0a8fdd86cdac1d9082ea0437fd983dbc2603facb809b29e36029c7f8402cc48266e2af42e99f3ff763fb2527eb9d1c32d4b8ea770bff5fe452645f2f4be81220f60c9278f53db4b11d5866494a1a83dda4d9c1a7605a00be558018a32a9faa2694a2b0048b815aeb740c62863a23f46b905071af4db86a1a3f6da421e63f8528af7643887596664a6e70925e6c6bcba37d8ad5738625223235d86085d916ddb176bb18dc2aed74cc411f8f123293d9e67f7e275f544fa31500698eca6be12e281d65826d63a1bbdb706c48b654922ba798a9923008df4668217f630b8aef8da18c8afe848249e398fce7a09eb851b8e87a8ef05a27d4c2892b099bb9f70a2e9414c2f39e7385dd2de3f25442b7b77d7bcfcfa7fd78cdc4631f927433cec519da05e61d97f3c8977f8ce0d56eff8c129dddad23ada7ea6553ef36973a067b4fe613a0b510e62c94a6704f641228667549ed92bf3d036eb41b757b2f1d6c4f69bdea6c619a172f88a25866b73d8da96ab506ebbaa9ba3e6830b254de131596285df344c9bebe8754393c0982f77f3f4bfdb6c6cfb82a946d5df6fb2b73267f9d29a3833ebeb93a3f1ded78785f29f5d19542b3edacf00dfcbdd2129115b7104d88e82aafc130b2431ed371afb27e27f556eee8c24728d811fefe818c3f3a1ad070730fce64fc43157369cd750addec207dea58fb12766e3bca28861555ad921fd234bfb44432621bcaff16625051401bd6caf933f1d527dbbd5f0303a1d148c13a6fc5cdcca636588500bf94dd770f989ff87cfd164440c8a76d66cd861a6d6f5c7163149230a15fb0de4d708893542ddb9653d0aa7aa6cfe0c3311a10366d73ed09e0ab44ef4cf92e4eb31741a2a3d4a737c8c6a87aa7edab9b7751239b368ae55f97ca71ebfd6972663ceb423e1972f34f530743f627c575610854dc3ae3eb7e9c9c47def0c8fa37d49743e11399f0ee6b5e0dd7af088266d8b1d32e206467baa54ca15ad2cf58b4de53ab3e42c18f76daec62d93669744610e2e356cef80615642e66a89ad9896195d4a8b24df220d8d502b842c9794ec8c48066a321f0229f348fd6b2c2d15b4ab425e6bdb765eed79ce86d58e564ed7f0a83cc35a1f250ece16907b228a45f68a3a9796abae891dcad091e516f6ddd63af1794ba01b6e924fe7c37eaadade703f99b590eed9b533815b8f6ba9c8f5b4ec82b3a20fe7981a517d02a55184122be7795745b99dc54a4838063c585a0bdf216308b2e8b9fbdd58b89854c56fe7f24654f57ef3e9988bb90e8b465e266fd10c647dc67e4b0c553b38250b0af72107336e3944ed712f575ef7326b2b58da061c57a365c67fba9ea7b1465fd725de4dbbd606adf3f790c7ba09211d9241acd9a0c41fd5a093e118180df4562e631df9e34fa894f1a3f386f916e445af90a9787aa0802ae92d73d2f7f42ecebb53caf2b031b08728cc32dc5d61ba5ce1cc455bbedaf31205d6454147fd903549f9a19e5885f00a7e13c0121319646b161de5553249c197be7104b1924144e8ba2522ed492760b58e9602463239c5ccd04fff1e9c1731f57b0bfff61878b497f97f3a081778bfa661740267368000ac6e82fb59a68805bb682d0bee57d6d002814374e06af843b7a6d5a140c7725f5745ba6441893dbcad2977174ccd6a3167e0562434bec40ec7b2c190c803e847f78b886faddb08c8610a5a4d6ccf2a1c8e6a1fd14a782a7e00336760585ee1cb82915d3913087f6c74494d34e6e73495f79217058a87a060d7ff54a34e60d0a40022434d9592514422b86401b901822cd9337a589ff5bd01966bf864f220353e978db319ee090ef021846a4dd9b1ef96d5c4a163ce62b16a19d492018193d1842e6153c2a66922ca9cb24390f0441cfbbaa13624beaa3ca408e386d8c6696032a5a682f0b89d453dc94aa7198064c813e21882e78df69350ccdc2257b51acca4492536346aecd6f783f6cb56bc420e69a692685d5fdaf4b925af3286ed27a4ae7b871b4a9956f778afadca0e2bfc73f92712d11773b2d44dc0ae0d7552efa19024b43122c3f65bf18e2ce2ae99a35b4b01e9fc00ff3cf36312f0359cd03c2f2291e931e126067c2fb1220a00bcfa22c519075303aff06feacb7cac1feca8cc4c12ab35f3d6bb89115f5c58ecb934a95a83753dbbe794bdba4307daa57c78805098ff881640abae658c5e8d35e1298e8b256e2d359562c6102aea78203879ac22e6d09b81485370be0ae4cdc54b8815327afeb7970f9e08663514ba874573060c30a0dba30a23269c3ad178a572397e36d5a26e110dd7c927f725e5e3263bb42f911ec1aec7f5a553b1c96276b46c205ab805571e2b15e1243c9af1d8ca1aa101b9b93b09b0984e58bd1ea3da6f6b6f38ad06e2216b6595a37899b16e8a95c5b312f83d9274544468e0b042b60e8a91b808c2447d4989710b0641cac38822fcde5f4a1ab3b2a693e8863e21ae72b72f3c3f5ceca70665ce5e3c46e9b18e9d4e28471686d143da1092fb11ae449e542377c1fe61f34f6de395b007e5d2a8d0deaedc868d2c978971f63c8695f464517d112b9a762aae477e79b1275bca0f964a7e390dedb49c16034646024014df4fdf2fd83fdc5cbc106bba56c0cd6bc0f3b6fd39858f312f8aec6e2fd01809d304af83457619f383b96c1205e52be835d55d9f599f81064b4eb080c6f47771caed182c41fa35f7d17d427886463c39c9c40c5ec4bfb8929bbd26b7afe85d2afda85e77c5c051da6c18f8c4c5b78a45794edb2088311ae4e2152bb84325e7de1706a0a7e20c1742376ae7bcb78e50c0176a9cb3bcac9ebb008b8694491bfed02bce3643378130c50b6fb704721ec803c17f3ae07989d473f36b0a4ab5da5d6fb46f3c26f8224f6da9c008cea54ec7a7551d17a94e33fba3bfe9d5e6fbfeaded57058e333136be3a973607899ca1179ca84e7abc97e13b6f1bf86e4e6322859ada1cf278fe4f636f6efd3695a9b6680ccd3cb73a480271a3649c12372d17003198a193f482dcdb080d4e01500f201a50cb23d0c1cbe034a47dda703c2cab4c42007b84d5ee5aa2e129bf640a77ca306cd44792ae045456ef3e39a676e4b9ae67d3760e4a3fc5612a70afcfd5cfacfabd110726a08907e6c6ba135c84221d66dc3e5edbd5958341dd3232cebe099dbe81d51b02a6afeb256b68996d0c3f7b729897462ac88877f13158aafe3c0ea626a9a6d74d84e3348359e2b91aba992cf199124ac0f8f96e5e78bdf748beb52ab9099d6d601e2d6f0d1b7a47ff33789b879f9b3ae76bf2a98b90d9d2eed2663763ef1c063fedea5136f9a5538e29e5f2f6b3ec986d87f8bc4e0aa5d8dd47f38acf225c33c9aa243a87ec0672dbd017f460af45fd8d3948f0d919c90ad27cdfc2bd6c710b717de5be3a95897a185bd6ee40f3c2d10397d450c2a7eafa32da9ff7c48416f3c26c09ab98d6f451484b9a34cf2838b5721664f4b04f97f3507de0d4de3738b1f6268da21d7395febf323913f794583180a7abfc659936355b9fb36a04684e8071f001ae843c8da64e19a6d36b1335d0342298a63845ed872dd7d61fdf868c585e25815c0daa90fcdeb12615d21e6c6804aea3f363215395dcf281d25723da84de213382a9a6e08e71a4960dbdbb9ca44c16781025d9a97355afedc48a07f064cfb013911d41d4ee6fd4ba4642524e2e80b0eacf4717d563c4ba9c528f230cb732ae3a646980fd5462fd7346c180c8a0897fab6a6f55ce1fd64f3ecd4da397a03bb132d9e45ffc83f263263ca94f4ba378790ba6baa5f5c22565bfc0593c4978d07461574c12a0bdf62e61bb9ff3ada69e79141202749ea1119a3b4ed353a6b4f2f98e38843e8a1fe8d6cd475d32f49f4157f0ed39c72cdf67a8afde5eb0286fb06d8082712bf799034143ab873be02ed6c1dab8c87557efdbff0fcbbd4b018cc52f5244e0d87994bc2b385bedbcc333720d520b7c43e35cf4b0f8e01269d0f16e105c3681466c6af3c7732dcb2fc086c83a2f053fca630842e6a19edab01aa507fcfee3ea49350984600e41237a46f8cfe3d236676b0e754167500afbb60c3883bb9b218c3ee78d531cbc73d7760852d09944362782ffe1dee7dbc89ec1a7ca064ac672e4c32ed10acb51d21acd003255e833b1916ad71f65552a68f906dc192462c848d9076680d3ea07cdab6010a786a5680d6b7c350c5d0c95b13139765830c592bfc5b9bdb66726d2d6785d603c0a97f96f549e62c286bea60f34ef80058deb871380fb0756bb440c5a6d37c3d6d94fadbb2fbfae88f73b76f5799dee6c966b24ed794ae47cf4140b677989af078a16617b4bc41c1cf93e7bff8e34a2beb4bcc8997212a8a7c980f95ab7bca245e86ba0e3e4abb969572d54636d0c63c25e66aa6c33e969757e5ca882b6192c7fe2b2fa82ebf839053d8de996b3dd75d5a4b7d7b38c2997ff04da5a69921898e06f58b736a29464b54bcc61bfa6c1699f133c0a5171ddbd8d453e498060ccede6aa58f1b5b407ecd54135bb1ce2b2b6faf0fc651826efaf6734b49bccb50fa22553bd106ead708b1b62d93f50017818d94c08486b4de5a5689a3da430a6cbd4044e6eb5eb1ad4128466e4215a88c802358dcd7e848fe107c873695c81cbc167f9ec621eee9fb4cd925b56d67f8bba9f3b9ccd040a41c19511918eb05f2b6df73ae8545143c64d20ffa22732008b32b0aca5952c598b08adfb8d5cf52d4fc816ce7551b4e7527c7255c30cb04fe309a55a80e202fef9a59d60a941e6cd62c3c618e3d15957d30a9c3b0bd83627738122fb7e4e539809bdfbe738a88c6f3dbcab59fc55b990de4cec72fc7c4c658ab82c4a3c2603c7466b033b32561c16da04f366fa191b1f62cff774f9e1dec0bc114b4a4c7a3769bd9806dd3e8299752a3af53561979dbe61f81faf5c45bf68fbc59da7e72c33e40968f246a3ad51314fe27a6e2ab74a9907ae875403ef38df0ac309fc7d9648622091edcc9bac55b52d10b751d0e4afb7253bad031d608a0590a3b7c1f3639a55570b3c794c9b325733dfbf8226e58e72105764bb5c93ae84739c5b05e4253d1c34536119a14a6e087bb560b804f38e01c9ba6aa0d5775a7c84b6ffd6021fe2e7efa9192d7657f4262d56acff906187265c013b204ebef871f5cf6ae56ca0cc8c715d789de951ec9c088a08c014f0ad5dded1bc4090e2c234e452233ab827d0d000babb3fc2b6349b33c442af12cc7e89365f6366e1fd9a1dd9b427b1a42c9ed7ea63d5ad551ebc337c995911e2374a346840c3426949f123ac187f91a2237b4177b07470760c27d95bb22ea52b00df192d80991ceeb8b02e888b442da2b15737c5b2ab0b1b11d7f67f6956a76aefd10f8c304cff672a320727e427bcdc1c9a655fd4c5bb20dd8e5eaca5a917b8428de7e7b8fe1d39d1428627f09bd410369ec72c530c7b2a6dd0d54c92c2010efd1e84c6cd2dc4c503f32823cad44166bc81cd506813148e4ea9fe4de7c66be44a3a0481e9a72d33b011aa62ec0dbdfac0a8de9386bac65029f46d2c6f0e6d7f9714097522457d1ff4a5155cabd0210900c3e3829f3daf0a18b9396027d5335e0bc0104ac86d85525d059f568fe3ab79be82faf05517954300eb1233a2dc140677e693b201e4bccd9d1290913f455286387e52e3f20bfd369d49a3589dd94121a652c5e8f52461020b65c06e06c1be694cbf4dff1c28c645cd35b30aaa98a8f14c238b29a9245b00391c853dcd966f52b45014ba21147119b24ecac901114b38fa4f01c50c4527a92b3370028d94127da60e42fee7f80d9a4326e24800f188ec04ce999ddfc361171b11f0544baa09c948a8bf06329997ae39d72b753d4ce2a4db6df18c19fc1f8334856a54abdfcdf80e950824c00c91874d62fd32c1ec3bb64c63ece4e203258709d0e235418c76cc70fd9d9e3c5527bfbec399bb2738def080c8828be78cb04b1758f02230fa21cd739bdb9cade9c5000391164798f863a349e9e956aff34f7e608933765e1a23240681c2baaf8df10ada4de5b149346936429bb87ae2b6931c4e3b11c358ca889fe10da7114132aee08f8c3095b7f8dc3fbd9a38db1349cc28a6d81ef7c945b5461e23dcdb49d3f542ef6e0def7be86fc199aedc1077ee9b23a82aa8dd0d50739b8106223daf9cc1933ceb4b4aec90422158639302d5780445e5d3e964f88c83d4d62cb6c40c04ef001adea607f6eae14b6519ab98aed4e3e306a5eae51424f9a3409b2550b7acdb27a38a2245b91227f64f80507b57f1c23d60bebb15e1df0ee36643394dc17c3833a8cb6ddb5ff269257e5b08ab52ed5a59d84157f2aa82320dca9650f821787a5a6314f7c669f3966d80e6d5a3117fbd79d9924e26378ff5d2e364e5969d6e1e09e12f959df86bf3d6fd8e53de1f3adc5e4598715d35a879c4f4fe3a9dab0153f2d59851b862ce55db842f972c8239f8fe68c4a4e97c62a3ccc89a2c4e194db10c0648c05db566ec748036bd64dbc8fe08a75586b952dbd01eb7a8e127169ff69f987694d9fb76820f1f00023037da640150245502828514b8dfe51481dc456a5faa37dbca871c94e18ec8c53baf2d259b48252e53da6757336e1a5c1ad90dc8eb51ccf57ae529c1ecde44d685c274e5f3f1cfa9ddd127669a2a908957810275ef08658155e7de0d073fbdad9b3d5f85f048b1777c29458d2c35033239b4bf194feac20c066f8d482718d75b5ab26dd6c3ef2406919f445f1bcc0093cfc28e39003355dde64ad6e71bcd2ea2f82b968e6e526aeaba7894367fbcf5e45ded71280d2630776b4ecd17d11d11bcd67c6a7c3dd9e2a4428c4a5131bae30f6be691fbe3eaec964ff1dff0d5fc3897a2beb4f273c066d777522a5d4f379a48ecbf7257fa94413a08e746014eaded8f629be776a06d43b5d24a610949afb0f41da50b5e6ab8466d0ff226fe88d8d2e99918789e3bb8bd3e12506247f48104ffecb3e42a3da51aefb21be4daf13f59d36c3ce4ee16decb05b3a9fab34b8a89487596aa73ca9f0152b37a7f5c49134aed5933f26cf06e4cd27af7b8beaf2d995abd3b1b8d03b22feb77d53ed3a12e6e46aa6ce0f09f878b1689f63e6762787a5390db2e16614debc45e3d7e460b7933ec8a8bd5b648447ae729362e0c0a03bff50595ddb71a61927d14f87a5fd90cdb0eaddc231f1bfc32471d1e91d6d46072a3bacc7227d222eff7f3b05c5bcc1e89a5597ce9f50eb8626f049f088d8d77e570acebc63930e23c9937c9f9fac8024edbcacfad2fc978e0a1f16169f01f1bb0c281ae629b413e169f9ed0fc61a9f62582f17ce3997d50a433c2eabb5ee5b30a3b2578c5721d5784f4b2e9fee66d1ccf140c9718df33933a80f285890d89449bee80ed46f1ecc8edf556869a841b399a94eb36921f89d05e12767c8b61c4b82fc237b4d65adffefd57e4687425b77f07b6206dc19a6f8fc2ec2219068a72816247fadbd1151ba873490f584a55b70005b92b8919daa0090dca3dbe64d606f1caca4672656f9f32dd0074b897777b1ebebdeed0876bb4827f8ea14cb3c47f859b3cc86933932f777fd9624855e96762b7e25a45387b55df7565a5e3d4da546ebea0e7f3678435d04ebbe7793b257d9763b083f62524fce2873a99e3bbaaf924dc7d56875b4f4e93e3c4d2ffbfba4e7bdd201a70b91d41a22d6f0fb1f9f0bf0bfc2353efec0a3ec42df9622bf6553bd1ce80f032eeb776fe911862c8235c22864049be7866cd72b8860e55d9469a001fd3911c050b1254bacc01e950d72818812df8b95b746ed4c24eded84faf3314e5f34c517d591beb06f8d11fdb8f1f5dfcb2d0d8ffb1526adaf5553ccdcfe0cf02dfa310725157bfb575ff07a3e589cb38817ec1c91dd5558cd48f167d15002f19a11d83f3b23ab78c2d450a8b44e09b239f4b84fcd7f2d41bb87596ee52d35188b9bf2abce18677eeb4304efb0d430029a38f3a2e8760eac5a6ddf7a2f575ad7ae392daefb582dcd86302aed5f9b4b738a17300bc7a15721fc06c3acf9c957041adf4e2f06b5dc39a2789718c78e2e0867f5c6cb71ea22e21bbc04451193da0ca8d0487b160df58322db50e21ae742ca26276e134bf0c7c196015e824c05d03560c210292220bffb229041efdc4b880573c842ce66887ae6b24346d2fd96431a81044d889bda622d5f793d6846699614fee2d06548a8a81970a6f172318a616e587dbc60fa564c5a65860445735346bbd3621c73af1252d1d5f617f56bd9e6809a22871bec76bd83998df16177caf735fa8a563fb2a282cb4f333d3943c70eb8b638d458a36323b032f1f8e21c920688030fad3b181274ba434efda873096f09b5edc2dbeb558a28367d2be19d75e4734fc808f86bb18e9e8ff495275bdec251ba6f79275c86ab99b543616fcca699b9969e7d693983c7cfa7af24952723f3beb0457539d8c8febc6961025efcee0e82d7dd153c62203f231822bfda83bd0c03a54626dc02ea1e457978f44318ee0da0cdbb350f14b895eec869d3337c888d2f8dfbdc74aa360f71537afe543a72eb332c45348ed74e1c25445ff7bcab5b346556713726876d9fd3a57d57bc367ce0bbb64d883ece646f1bcb8505005e03b6400d1f7c8b75f5847357c343c85452db1338bcd71b1fde3648fcd79c3e7d025ae92c2ed860d315afe9451b87f7c70923e1479709cd6c3e21062eb2d6b3f09264a48817b25a30d3e3335f0ff22eeb93a73619565467eb8516463c46aa6790b261a402c130df83105c9a3e0f81fdb936a54571e4724812b4f4da41174f7b2f9b921e9282efc9f50e9c61cce369485debf6dffb3bb40605f4dfbcd8e8d79887fcbd8f64a8f7c4845ad3090ddd73ad609cafe9e54ef0f217a18624c351dac672b0bb8bc6ef9e7bcbd24eab86e7b9dfe5452ca2d2d77b4e8116a0abe35e349549390aeb6bd977d27f28c2e376b092f78234edf27a2090c4b2d8e608ea412da60956db081bb7e6a3b9fd8d690a3f6fc31aceffa5e62bbd3b87bd4d59eaf9cd45b1be990f0859247704486b26f618a03a8ca297fd6750ebc8def768c2c5b4775662a852835f1e280b762e5d7ae4ab0d84c2142c661f2bbe75b550a1a1e66cd1a63d33228a26d399e3dbba94ab042d329744bc5efdfe8eee4c009184fc6f0ccbd4a36dbe73eb7135b716436da31712c4cdb46308a7880c0a2b2b9a66d72a1dabd34555ca6a26282e3d5a50c57b8e765b082fc2c67bfeafe3cc6576bd546129bbb5303338a22eb4ef733559a793139a516ebe2a1d37adced84522c62c9fdb2f994a799ea76b912097c442f562eb8046fe30953ebcc77c167c25706b8de3fbae24927d64ae0f6682b6d29ec783c8f05108dc6e1c872873063960be257540b78807146e3dd472e9ddfd74bef6b3a623f532eea74a0c2d71f13db7726332731ba5af9f4a337ddc896129fa8bc1f8a932b8d518ba6ffbdba99aff393bf9850f01f07d5565f45fd436381c87a49c610638111d288aeb8ace5e055cd559495844e6917d9a7857a39716c231bc4633f2510c6b51691aa61f45082b257892b84e26af44f94926fdb744782ba94daf90e6e0bb0619d22c08e1748c1760c6edb27e94391ddd76690334b48fbbbdde4f61e0e66794f5f0b5888d8175f1fa867cbeb09b7a2c9cd483c8a30af258e7b8a75a9edc87daa218c31a448885137a1555a29ae905471dc567e1d9037ff4a2d999e8bcb37d60b00721fdb96e8fcdcbff795af16c8c6f752ad7b73dfadf08489f784e513f1ebd214b36804c7a624858e70ad6ff4ba79e46f83441e970f85354e8fdcf7b4b035c80a0c63d2c0ae66ea18956d799a49a0f316537ad84f55fe65ed846d06f92c648332d571fc058b7f4106a484eeaca8bb8e947cf885194227f0dfe4993aa5f69de5d5120decb2bb7eb9fe5a3175f824410d2d1e4cb52433b2c45d249fbb140865bec0b39898795da59c0810299d4265b8badea0bb3ff833911ba280750e1784df31ac883ff6cd7e64b2b231b570a31c271e7a413bb6b325135781d1fa50a5bd8448e927d873433f811cf4c0bddcd634c8d788a19592a8e69b68246c0e2a9273810694189e535efa5c61de373db2ce8f8c62647485e6a3e249fe00ea788ee211e4be1aed2515f0b5330d0b111e0ea48b5a3ead8235d362573fd0c51386342e154b49999a6dba25f66d63ad0d1c015ddb2fe66bee0a27c58ba04b2ba78e35cb847c0f46212ad261b683b47f82914e01eb952e46a08e7c9e1e7c9d0f155ae064cc120a7ac07784b6465e4edb38ed264121d0087b8dff1baf4c2a6830de89a9c8671d153ec7e964fbbdc237f2dd6b3046141328c426c1f4cae70ce5517641d9ed3c9ec33b97785bc00e5a938671253e846c90dc032154a8e340d48843a60d26c0a9590fb86952db6fe866f82f93a1b53b31f188c37274666ac47c15391e88febd7f9ec9d860173aef5240fba50202b1bc6b3daf8215a80eddc27f4174e8767067c1dc5d1cbe30326e42606f56072ba1893ac283c3f3ac1b5a79e9676188a15e32eb4ff8e32818055f20b9226da812776a98dadef5b0d23ca952ee636567f2821da77773e8c8159b8bfefa963237f41c6c8b9164df9b97a76c989352debe2663ca52c01c44677b8bfc4e35459c5394b34788cce5a6205e6be14a5e54c84dedd2f064f016d901114ee21c638e60973250646c14a5e9f8ec683720beebe8fa86c703adfeefa7c94520cbd96c3c3112e3a4f8f9596bc22cadeadd675617706504b44cd8cc79713136feb844b24156b02046a20b94c4dca5559dfa7c40cc614039b84a24ad1cfeeec0e70211099bfa7a5746c5aeb21aff9637f0a146f2fb2ab88f6421338ad7297d1229405f8afe71a00e74264f53caaea7d7f8e0eb5617becb856bd045528b24658611299a2e9854afef137fbd298129961296b55ddd0243a0a221c18d93fc25d7ab7a83a9141b1a0da53757d89e34f006820755b54630638958a2ba8e23937b9efe662815b6301c137fed18210312901f5cdd35507189d8c8d7530d8aefe2e8e51d9a17edd40a1f39529aebb1286119b969ea8006b16eaac193391e1735c918f4430bf26a6b806f1d98facbc3194671071fbb3243696531db632327df84b3d9bdc42111475250214c408da893e06088484165da6c4abac3317468f946fd8a14bd15f4d3b7b56a088ac3ba7ce0b485dcf73cb563da3361fcc9631b9c899b01c94af0bfca487a204df80402d29763e658fd866cf10a8ce998365bc78a33c3405803cde32eaf09d73304af949740bdb31dc31288ce165b6d696d7386d4c4ce2429888d1e169230d8022f688855aa53958667f1f90a31ab7be6860685a8c4e51232b3028f0ecbaf139ea755c0e6a4f0f15154bad6544a37d930a1059707c7f046852c7eaf52e1e5d6e746019b7c3627a8b325d8753f70202157501f668524d00d3e5c948e8e2adbf15a18548f7aaecace8429958bccdb0d8db35b456872797852833b97b6f5ca7849949c14075fdd33e140c08c6d825fa93e305f516962a80444fbfcd9c6febde3a6e8689b6cbbc8ed22d37a1ca940726cc4dc72d113bf4cf696d079e3b37fade446e678527125325ef9f8d41c07174cab807f3b51950dea7fc7aca1c6993c2f79445835c6a299add90d1d6d6ec16772bfb002ac1f926fd4b928843fd65558cce6564566be87cd62e1dfee5f3c70c889882199a523774f92f38793a44d44108f16f70586b82c4369ea8a6aa06c1a1fa200b2ac91c0795b270d2ea99523ef9aca8fce17a58aced9ef65a9046a88bae1452a203a30cd76a1708915b616f6150503c07299a13ac4816b6a5833183ffb2fe40d4643a6d1fdd34870a510097ffe62eb6c0f2e981c94010e8a9f9b72fa7090417ed89475d87f9b44730e2812d18fad1edb6d254e27a96d4a0aef0ba7c76a95a65c18597b320787a66aac6ce09ba2c91720aae09b9884e260b80ec9eddee660c9952fe638ceb469689c85da270ea4d881890b63b531888a323fd1599122401df007d3044d34293d75b341da936ee4d8f4e4bf8d2ac96c35763c81c888fb039463e6bd3ffb44a8b02707c9101a9c72a26bc3b40394199a42cd355b96298c59989bb532be198eb0fcf416a1f4d764cd43637e06fc1f0500ea647fe2f3aacfb6a066b095db8ccbda37ab8176515bec4ce0f6ec8f8283711679648b0cfdae4f73a6e748778be00f2bd94e2d8caf37f6f8af3b8918154006b82a05014d7394d9fa43cc057beadf0bb27e0df3f2d1d8310c4a8c4cb6fa4ec6a2c477102b00c8225e0c114a120b99fc0fc5b19950c0b2939c0632a2a06f6571790da924b395a320e45d7eb256d659a8096b5e284bdb48f23a6f92e0c2e53ddd8154b419848b0305b837c06c4a394f505861b4afdc660ef5d3c883f20d1d46f1e0dd4517affb00aa6deac1e66ce108be91565e1b040cf9ec4126524e6e62e00b0c56e0f0e0a439c16e412212caa53428c7b330a947215d5e417d6ea6d1a1deaf91bd5fe75fda87d783278192fe5c150f9fdfd14546caccc3d2830f20b233c1e678e13998596ce765348663ae8b7d79828d3b14f170ec4dab25c24bf251f8d931fcb2b64bdf2f26b489386e72c6070b4df83b2ff6e34cbde2fc72ab327e6b8ec3043436e8fb0562d6bf8e3db7350b0ea297c09d19350040071dd15eb239109036ad7f703d84c491727dff4a6718c07354d63e0f1aa26639e4c6361fb4bc5179437ed4532d9b3a5ce9a1af6ed95ee735e856070820c5c8e85ee098a99b31eb906a5e360b1552a17a141b5ee54f42ea0ef87fc12cb7c363991821d49590eb7c061f8844aecd15f55776b5b1d4bd9abea205bd5970bba745de57f6a2d19d671e0d4bb43566dd8585dc79853e4d5e0da1e69de3471f4ca641237c088003d060a6ef7edc8c88edf7a84b7db5149c5864b2fd3736d05cef5bf461f5e5af39a6b0dfcc6c9f627d783d56bc2eecc1cca190abfeb84c1a5495d8d9eedcc1608c627c1e0f3c03349c47f6b2bc30082b5dd4521be8240b455b0530e4e103d640092fb4f7ac1e93e60dea5dc09b524a6c8c5f3f3a45e16afdae1771de793b9f286e491cec619fcafeeb2bac270c6d49df8c4c0f772b86c3c4a5df2e8332713f1b3ebf601b170f2504980fe7dd43178074914f539b64fba631dd6454bbd06702ac44df846bd29545521ffc57fab2bd244a18454be55c1b18a1b8d46069bbf2d4226ed4bc369f700e2f4dee4498e704b6cbc5da6a8939292d424f5c4bebfb6db5845990020dd4d0ae2176e43e583ac275565aa1f746ec26235428e8c7a5ee59ddc743bffb4159fe9c5018f7631490631663543bfef475929437f93b7950defbbb4b9240d0db9e8eab4b1e9f93a680b575bdc570dd5049fec7d793b010a07f4836ec4084c3e5f517539f143ff8a859c85ab4985936ba9bb91c38a4b4b1a7373e375830f3beb4237980edbc94b7058099f27bdd80c1ab7c90403ed68cf455fdb96e91e172608c9a1521ab1dd8c49f1adabf32b096446175427aa2aff45772fba32c891b23977e95b22e9ed46d8116b9642ea3aac667d8308eea8710b5b1235ce00fa171ee9e54089eaf7ae8a4059425c876e3b6f0b143328fe8220ea52658a5aab48fee8a3c5d9ddcc309debb6626edbaebdf1ea8c1ff829f81dda8b39fe0241360aa9d13df1b385e654e783fc4137b6d79694a0fa57e7f758ebb003b879ae8fd146e286e45b27c6b4f6c73e01af37a84db8c6abd9f5a03f3d6b1873b6aa1af8491655667179795fa253a6d4234ad7c6d4c7c0552a31d806c17ab0ca14f687139f569261c5613810b866e70b01dc8e9215772c888a77953cd581f6ba0a2ca4369f4dd8d241325c45c07311b3271dc4767ad668c1d721196aa57dac56c0e1210f2733803f9516a154e3882b9f9ca6f2c005987c545e005ddba113e183c10b9a96425fb59fb59060f553b6da7a76c3f3f97c4fc644c43be62492334d9c557afce52089646ab77c7f6db98523215ed45c238ef3865fd437ec286f2b2ef9ae988fc568f286908150a88bf7cc5ab9fa7bad28fd2e50bb3df45785459815862fdefc73f9156ef5fbffbd37e801dbd531b177c48717d7ad49fc3e52c1b6ee6825805a0562767bb45798969a7c6d24ba0f99cf3c7ba2459575200528155ba5715516d940316041aa1d34308b2e9e3bae7c48cc266d332c159bc365147b90a35410118c6076cfc8d863804d2908e66e8a9fbe655bdceac8fe8fc2221d03ae9b133341d3f226d5e069efa615664aea899dcd96812802040bd4b7b2c7f5e76e581741f1e8b00fd9cb15aabe7599ec5b7184a9a425af4d2112ed496eaf8397ef27446fe5e9774e0edb5ea1ec3d21fe84bc2d2f727d145b1dafd4e1dde1d251ac63d261d2b8e4fce42f4a3c0dd4865550cf83b6fa117d95f93e9412d313ff089d688dda641de01adc4782c92d840ef9e2ec893a6e58f5edb8db1db2fb993a02c88d4e95cbc56881839710fdf7555de16cd4b72faeab5e9316cee777ec057e0948bb3604fe68ca7847368bdbe708e041ca66ecf175d5fb3bdfaf30e8913506f19f55481f4cd462c6adcb84f2d9074a468351b491aa18f0acc37d3971a28f4200483e8363ce8a9eb2c9079177bb03f5f5067edf19a7f0b5fdf387960ed123fd92268380797ab6b03920a3a3b1938ee96e2ac7fb13d029ea7a9a34cd717362081f508025f0154ab5c6c06e2f8ecabbb52b726d654e193cbb75c1b3e613aa7bf3a3718aa9329f133aa80fc25b204bfaaf054281ae765df67ccaba483cc9c84a7b15739480bf5b8a95f5882cdff851951f841f4601a542f253be33442e4865de849508a4a5a82ce48d5363b2a624c5382697c402e1877653672fc14d50c9f079219bc3e422a50dda256a277c92f57092aaf121ff5d6c6c1e80f2efbfa0c291292390bd549d08cd68491227f0a854d111c461f2750df7d13803e9a94874e0235d4fb3f75131e7d0e64253f8718e04be0e6ac1d553430f111d66b30fdbe447915e6f9e818dfac6c931473192faa924693cacb0ecc2fea3eda9ee22df7fbf549409a0362322303a5238881817a870b230fad5783433946192b5612635e00425dec132d9fdfa57e8d8ee1e7fca2857238a955a1e1fc905a8c54ef7cdfe1fe22db449bbf74229ce000699ba09d91342849b4c397853e205aeab393f9556052ae5c814c9e2bb3bc12e504da4ffe761c6675dae903a2ff7c03d0c4c2b32db922de0e4e81f8d66aa3ccc19adb354c38786f97b3be81ab3cd7dd3063958c31ed299816f1c618f5fc7d61d1c8c436bb1c20630c93589e3dd781286b149aec23d5baab0fc1387187eb2139add953565db0089ba5c82cd9c6db0ddd1b2bfebc806721a4731f48a8a552b3e3b582b9c7293feb5f9d0dc85ee07c53df0529bf2e2853da2a9e14f971afc5b54ddf3011cf699c4b62042fd0c7de051ed852d73a9dbb39dc28fecfd0f137bb8f903100d7d0661e19ad9e2bc66fe14c83ad0c1dd24be78f43e1ba6cfc7abaf15bde44171fa11feb78de98a2d74c5b2bc61dde87bd063b111f5bef08aecf09b94e672866454a63bc57983163fe8bee72bd492944605ecb7cf554d573d72c8ab61e4ee2760f7f18fe3fc9610e76dd610cf2f24040b3e444db449cd83333e8c122f39170b6c835d8be8a516dd7d1224c0e95372ccb6b71240b3e040d35892f3c1b56cfb0ede8e8365e5a37e52e6cfc4a6efc41516ee58f42c79f21e7a0c2f734eee20eeaf8466dfad9ffcf256b61504c060a2ce960b232917deeb56c816effef29757b93321df002b036a32c439680eb610aebfe81de3193f56d2b3d2662bbd548155b1a75a190fe1720b6a0f5251e3a62956d165ab34852d3e2c6b45af97acac02813aa27891d115c61f6e1dc7e0ab00e5380c57a66fd141965f6fff14cb61b28565fea93607051d5daa727c8b488fa9215c654cd265b2c3dcf2b0d5349ed4d598af2ec24bbaddc7a01b3af6cdbcbc18ee4f39639b1aac30cd165d642959ad0fa322ecdddb08fb3f7fb2b04211d14e490639991fc519dc57bf0095bba2a805c09560d9816897c68a936035908a8e1210311b2bfe6015b719b181ce74ca9a0c82bebd88ec84fe7c49566cfb2e87f6f5448f70199a006be84d24b96dd3554c11d20ea5d4fa45cd9f78d5f2479bbe74970855a9a33814994399f1a75f61782c124b32f831475f2f03c1a5d1f64d39b484cf414ea15d47d66ec1cf17a3e606e9d2012f8e6aff274054ce1947f6f5a59761edad1f71ec102c7c928bd08428987ddf9c2ad06959a4ff437d646205b6c1c3c1c05698bb291db4d10ae0871a89097339cc71bfa70c206de81c4a72d6b53c04df425481d317e7bf9fb10cc953be1b9c38412366f32e1f0c42a00a05f9a0958a0e0de036030c21c307a94aa84e129d1c5252d2ee197c87509653d22c86d188483117eaef27f222dd3e62447db8ba48721fdd47e745a8489535a43b87cbbe24c34e3897c233fab6279a58b36334e9f47ca72d874374d73a113652b1b99706ef09fa2fdeeb5e64d4452677757604c37393e1dd3f584a78a9215dd004583f22782af009b1ba2b3510d98d080fa0a605a6ae044040082b72560231f010b0b1be6acdcca20db28159e3622de07b84100510e7039628a48605f3f4cf4a8c3f8861549e316851d337c8095e7ef8a31e7a71dda92e9e3fd210058dc6ac856c61b75fbdca1240c3f33791988afc129214831af84ca568092534f60055e4f549a1677132ea6bf3ec2b90115fb9ab0c973c1afa83e0023f22352b87f9ffb57cbfe1b200ef11ebd51ebef6d6fd90626938dedd4d6fc1b9f5a24e21fabdbf3205ff3521d91424578a1041c13592dc5e8e2c435a80e3e0af99e189c29aff8ce9220547066d4df0d1d1bba90e3c3850f012f9efaa94714d9e5f3185101ddef4c512b4933418826e10f6dab142a19654708fd8186f38044de7d9e4101f339b197a9e1eb89d4271ebe457d814d9da50bec79ca89cbc2ef7ec9b69bbefb7ee138c1754b9330455ab34ea2a981a93bef887b44927190b8efccd1137ce52bc3ef27ce0d901df632bdcda60d7430868cc233057f9aa0ebe283df4282dc9d369b74a11111387cdb62460f8e0f35da06a2df13ad46711db29be55c8bb98997dcf20880b24b3cb6702d448d8f262da174cb07253ff6d90b3cb7fd7e443f1e4b02c935d2164eaced738be5cbf9b0ab106a7c991d1f8a95046ea607d58b8ce06f86075ca89161ce84d9867147bbb2cb3abaa7ac73555ef0c094c409109036d79e602fd4c2ab2fed5e0c93bc9a56d341783d13a69992f574aef95374193d22facc2d2898bf5bd36a0db9755c169cbdea5a7896ac08e3692ed0423839a2deae4bfe194ec375a59845ecff0456b22390a2c50452c81ce4729fefb761f35c7f6a8307e7cd3a2f1ddd336e64139a7b216106543a4913c9d1bf5226fed52f7b2fc4dd24b997a825a7bf8df794ab0e7c174b508356c30551499add8875050d8274bf481f4bd2e519fc373087996f11a162a3ef6d0fdaae2eb0d4782865cd0ed89b3140013d5c5db09b299807d629f70aa5ea158c8914a3d328b2dc6526b71b5986a691a611876379248a1eb894bc619ca5f384d809d6987fbe66b7007361a91fc113af63ef7c0813e4c9bdc85f02da93cfe8c91e6da524a5847f8ff80716894b4f128d9789713c56f12563288dc3054b018a17fde8f59c3a1cbf776c878c48781aa1f90f9b4d342981bffe40f5ce04c9c47139aedb4be66c7003c77a0fe5bc52d1a408a7027943b154e339ad54f073228df806f14c378b2477fb4574726b058a3bae2b4422840c9e02bf153ce8bc84d29495850286d55ec365c8c99b4c2a6d96cdf992e6137751f3b861f5461e250a7e7992f7778dad69beffa6085dd3bc480f535737bec44a37d6492f7326b2af9b930cf250e100bda4ea619b31a864d542e3f56152eb2435064ade4c4fc4ccadc78e06b3138a1a2fc2349d057fad84b1937927b3dfa851d6f2ba86edf644045d7cd2c9f791eb902a7532435e3466ab22aa576f291686d97cdf7565029f4f0d959e8c8e464dbbd7c1b3d3f89df973052b7fde7e6a82633d5e636a7c4f6ac57595c2f1d5dbdb7b1f94d67305f0a0555d86884b053e8af7f74b67abeb5529f9e7795d53a3583c4c60dd5e005bd29171c2e777b3a52e9034f684cae9638f3f31866355b4abcdba446e9b4ae73cc9603e7a03da160ec7e2bd917fca231c1a85aa84762d4ebe3a475ef483d68c6b91a276351382a98c3698c35b360b4460dcb3d68c8788246dc04e5733b7f8542a724261c1295d28c1ac658342ae55ee6597e4ec23a114bd3c807034aa52817d793e54fcb486b1cd537058cd160e736e442a38895f07dfc6e227635e2b4df3ec641ad3274f3f9cc7fe8587ea32f8d7f8e9d5a97ffd054b02604ec441bccb76112532f6ee947e35431aa2287fd801b4915e5ccccc4e669b873a3969b561a5d58c1375cb1bcafcd5cb945bf318ce3c8342124595cf0f97f0081e93b5d84354f115e93dfaa813165e0238adb73b9ca6a1832082101bd3d6da6e95d4ad60d3366391f42d8d78bd6aedc6d3806baef2a72ffd1e260395c2172e1cba91077b5bb0584f16a67605093075256350b9c5286df8a545582c45ae0ea22e3d5c04c2c150b55e3a0854862d660fdf042deb3554e654a594c1f38aa9f0027a77be3c2eb652db346ca217b78573264b68172324b9c133b252bf3401be00254c6754ce3bc975a3fdcddbfdb4edac17f4d3cb4e15dae00c5774c281f6b691fc3e0bbcdddc4288f629d70b9e200be8b63b84dcaf6dfe78f4b972fdc31a632e642844ed492e1b69e29a4cf4f421343abd3cfae3d476eff9d391e30ac3e10aab6b84c9842758824cb74dffb1c79fc81ca5821d7dd4737bcd3b065c64f6049ee6802ed417f1615717d91eca422ccc5618536ffbe9a3f859964ae212915ce691fbfa3d59c54b0e519765c59f2f73ffa01199da3365a0fe36ca3e7362073a8e47af5abac8512a7da187770f0fbcb68db458b2d12f9a1ea791231ef75fd726542e9125b42aca59aad067aad0f5709705b59d192f7779888ee9a901ffa8465861339a841027926e10484f775c4cb4a8064fbf4d8f58d3b07445d3b2130b916aa21386754cc4af82e8af59dee9b812be2b73902d6da7237d8d2ff1898472623009ea58563bdd4bd88e504b00863165f383d8300f21c1053a72e5858ee172454f3a1d9e53272ccf1efe38f9b7105094be6a75aa9776bab3fb6a89670d5c8d4840be453126dada8352c64594f2d22696b13bea270867ebd89f7a654c0f558bfb97dccd5ddbd704550cd3fe4959842885094bd7945d0d1c204df501274aad31dbd73efbca3b028908044ecaa402e62367501295fe50cd2aeccfa178444beaf69d4d23e7463fc42cc42af920afade18889ca74a30775f98727a2bce37ffb0e8fcfff50568a6ca0de9927b6a8d6f6a6a9bee3d1cea44e0b8342df254f61662ca21719ac1f5f901818285f4f2e9151edb95e592560c157eeab83140c268fbf7795d4695a4cf67de4859b54ad7ccb650e9f98ff8e5823fc42c4d3b17d243f332d99ed9d1d05b6932186b9fd38f13dc6fa9fb44238d864f816db35788655fa01bca737c027ba16f429f73e60c95bbf01122135cd3551a482b7b00163e31da9995466ec4ad0db5c69f47e9c24a136afe14c264d85ae2470fa1a4f63055cb63c468c6a431b260652eacdcf27c9f8e8c745f7f5dfc52390d7c09c397457bf497b5f1ca5aa716840208eb48bea494b09d5d3b6bbc1e51f48a319a1a67ae8a0c7abe9d942c125d82958cc34b1be9e8484806ec700fe553f2420bcdba2532970bd745c84e9b9bfd884848c8152f8ba08c45e480b97bc820622ed0b6fdb9ee26267f8920c4a56c04b88fd2169020eb47f9e2c2f6e3b8d05960513adc0d3dddc05d75fa3763740c9301abd85d765b17c42243ba471863d36f3cb8f89a0e1bb0ce296401335b4824178312cb64c37651850e81e693e9c8f3c26b8a32872f2fa89413cc633dc42f5ecd159e32e64b56013da0e6bd0947040428c88a2fba41e2c1aed49eac855e6182e58cf53c26aef8bf2de5e1ad426725794c10cc7ffa8785264ce8abb3393749b1f0585b182c1dd6666eddc68796fe959c7a50d8482c9b8e6f66f9fae7391d67dd914dbda0cbe310436af9205630927357544ae67a1611e06b48e6db24fb0bd8ec4a8bdea4490b9cc00eaa2a10433ba6337d0c73d547574b0cd960a53f0a61d8ca2b6b4d0620d79a27c7c27d0a727e0ef6e8fa4cd6b6215d60f6828715ceb6a0d57b41afee6ad5f3f21728f7dfef6beb06d959d5658a1b2eb8e6771d7c49ff4a3a0693883b92f61318b2edfa2a842a77de8bb46cb460bd8edced145ad0ecc6a2ed530ad596c221b13296a54207d7d841e8627d8d1c4a8d006e52ed217ca11395fcfd2542d022334e05d2173a2eec1d08b1111b822f5201c2d57e1d70357220ca9e5dde633437f1a56523c6b867b461d42f345be75c8d029fe2b17752c245fd395e910c904af09a1888b36f11136c46705f8ac81b8b067ccb061ff38c3c76fe85e2b4ef67f5aba7222b24ea380f4a77468ea22d84786065fbdf5244bcacbe2fdbefa278cb332df84dd040e03f03982a83fbdf19ba3e890b56b258e7a0b4c6707fa9573aaf2f6d41707c88a17634ae24d3c7a4a3fd22314269a76c041f56990e7e8186ceb613aa2455854ab046a7387a1021590ede252fc8567db7898385b14e18db6b5be9eac1e924cc467301ba7cdfc085e1f04320507fb3b816e3b2bcb80f00279ac4ea51a0ad37951999877fa5f1d496f25492a930561d648e494fd9256486b79c0d05d3fc66c9cd7e0147740d7e33d4fce1aee49799188a0af414c0c97a0aaa42f1903dd5606fa6ef30917ac140a6e2873a0f5c4b25df3da9c47fbb8c1509ef5bdcbe29b4cfe4a3e0ec3573d725ce399a0d73e5abfa09757e12ba06083e236147311cde5b40d8800721ffb4acdbdbb0d9b6ff3d9a70ba5a7a71ef37104b1d33b9a773f1d05df8d115ad71256ba9fd0632bf57f77d1caf4452c82012788ffef80d2bee75395ecb8d982dd7795925cb917045c73d569ede2066e929683e026a6cb3e0b4231c5062934ee83726597e4e3785da9ef11adffd47464acf1e77e1066996923ea5d2f6f4e2f91919d2cba5d4911c40d6f54f67e20b441d8fcf9d35f2393f6d245a55cfab695fa729fa09f1045ad0db9160c80db92210c4f1e6abbb675772f6701cc3d58423894befae8bbac7aea98d63078d538c9d23603e46636b2f89617e53c706a5bb028a336a472146254f55b3ae85cabe0afc8c449a13c0aa16b4203126f2962624682dc2e865d9e00827bd21a68ca77515a238e23a7026de3ae5131372bb1f72b9c832564a906667443fc5e622f36dfdccaa6b0820b60792dd9635b893fa3b2cec36a254590a069f86b266036c459adc8525e3550aab3070c246f343f7d4c87c134a597bf9d4cf9aa3bac5705aca21dfc8e61418219981fc62fe9c95a81317a6bad5a0bb0c9b03c0111141b46bc9c7cd10142212a37239bc13951a33536c69be7952b1fe5b849bd9af1cad98c28106cdebece15e2986c2f4e1132e0626474a83dbb584803097e404416aaac76ddb7ed350417760c493505f0a9a4282b1341637aecc2590b53622f180dfc53586465554a29f0f19fd056faf735ed4ff096440b2d4cd04d2384f5f85c395b2b1c74866a5cf3395393a059e333b3bc4357bbbcb888abe7ea633925e446b53245d5a9416cd40cd4152420e5d7fc210d177a30def00b499ca2bff81458428c0658fd370dd8ad0d6c7f796e0ca0ef5cc83b52cd666ee86eb85b3d7dff01dfa3f8140f5cc29ed786df03317886f4deebac5d109aaf75e51922a18b20515687fc8aa5133f5ed8b89a92a61d4313398c4f84fd5fcdffe8bb2c39b98a288611198cd891cf4cae9950d1f69e5ad2e665968e586b5e8437205e4ae8651cfd3e02599004bccb49b333b2455735cff822fe2711bca8dcb1bc3412939a5eab37453a3b39c4bbb7b614f883a4680f3a99570ef82fa2ee5e8a08e42ba2234d0af53bc645dd2726c88ceb3399e1a0320ab9486bd08b3be2073f8c6d4a31d93b274c4dc92794fb4c611a5713e478fe7a859e5c0e4ae6c0c4308103a4f5dcc6d87048e754c69d9ac4f15c3f89090c387154aed5aba581bfd7f3aaf883c38a80aadde9c6cb05030f14f567f0bacce9953f823607380821f65236059fb8ffeb826128c23fd320ebf2541cf06e4592b510291c2da0880b67cf18ddde1861acdbd044d13ba91c24216f6f5254485dc187a9f962c2aa46be9d4adb9c555a130e13c9ae58509d2f9a9f9f0e51412efc862ccbe38cc791f907006a4be492f4e3b5ddf651023b08da5895aa7f6394c5721dc3bb63017678a3db6c5561a0b2a70e71b20d7cbd8f4cfd77369b28a058689aacc067924bc489c5d6ab67d9b95201c753870400fe783c8b1db0c2b8d8b2b53c47e226c5fcfa130d3967397667ea82ee24d54437b9cc5c80a6528a20bb8f5779ef37b4130057f3f740b65b2961c50c46d0712643e9a9325d548a58ba4a49c41e63ddd91ee16a5b9af76462c472e7e3af2ef97bbed63d8916c5700ed494d4d149f7f5508061d275142fa66d2ecdc4725b50e66eed7fe6aa569b8b6d649baa98ea2582cf79fba43eda6655e349e51b275b9860224a797fac50d58847d1465a4f08f74a5df8651101e9bc1201abb082bd0bee40e7e75ece70e0dbd5addfdb7a659a4e6f3f7965442af0a3551d26a9037da0b3db9068bca63f9f87c32fd74533d4cb42cd95fed3c1ac36ddabc4cb73234a1e533c89d09cd16a064aa810ae93b4afb18177f30211eeaae7744633ed0155600c9ae97afe73984b3740802a42adb719a164de31f7ada62968ed43cd7a631df1cd7b5d6c2bb563ea0092a6316c323c0c14a42b8754af52229b1b1dda11a952a1e32cc38123421801cc8f34721e185e2d4313a4105aabcdfb560d4882f2fa34ba03d907bec07726b3def7654c460da1a05b1154bd2cfffb5f2d616403efd088811243d4d04b8952989ddb5c3e620b9df47dd007dd30360b10ebbaf2818a016af11a3b3e3d41def6a36b165dda3b20ffc2137d9c57280cc37f6c4d421f0756e22d4a5ea4ecfe99740186915114a97bbba95581489be5e458964270cba85c7a9f1902b744e827855b18cae70a4a4ceb070a46358c3d12645fc74b3675252e56c023b8a43d63ce380c6672c0dd6b4a1d56da9d26f423933e29ed82a09d014078775ebd3b5f25fa6ac00bc9f233ec201b4f8d7a21c2129d74cc0f3b79ecec316a74c488b28266a9568b78fdedb2cdaa5eccf319c38b1ec9481a329213651cb0c824d000e819baffc3251e3ad4cd61048d2799d87507e1ae7931d9c638bcfa47709a0af68ea2a6b7fa36a393638522b639937b937c390a5594d58dc4fb9b18460ae225360cd67a8af61bbb3e1ee2b8862ed09afc7d6d528284d8ed683cac177ff3c87df8ca04780a536b6ea846598a0e7f76cdddbdf70a49a5b5322842c7ef9d8bd3522f986a2a06cd93c12343b7fa9a973c1ffb32aca3166ed9de6a58fad6deb9dc5a568d6c70c3d2b653d8f151a5b7286620a16fe04184905171d7c0bfd90810f5c6b0004b26a6465c70e809d217dec499f168152c2032ef9679122e3a9d3e55bc1b28fc5e4f33299508d58b0a279f038c63059632c7895725151daf9fe187f1217af090cd370f2a11ab7f3f318662e1b434e15c0ed6a58c73f4cfeb9cc5ae9efb4e3c27240f30e60f6b289e507809ce3b7a6d5b1847b9e80ad4dee23a25f1e0d3f3e7af8e121704060f74f14d070d88af68e353972e55c3e32f59fd6bcb5c229bf41426d83f55e79ed63318235b398eb558ff40e8dcaaa6c13ef517556fb8edea6daa84913d24057989d662c254f5c292a9f07e0987f8f4751d03ff9b98146afd2c21e6cf3626baeacd53100bcdde5b0fe047cd8d000fb36f5ec22a7a0cbe7b28f9e161bbd1a646c44243096498da3c88ca0c5cbdaf9d595e3672d90e16558575fed3e2f64864d8e882c5abd1d7befb49e1636b47ac97f4bc4fb04a0d49199e5549703e90b5a5447c6ee04e845cbaeb61f9520b1acdde09b029a025bd5ed3743428449ccee799514e1f127dde231cbc5c0a881dbf6d2cbc0313c01b9c98dcf54967b03b88bc7d932afccb63c4d24a13c9eb14643464ad222b91ba92abe05d2f864543ec78dbc783cffa1aad9576bb660e09aabf3988607c21e9b32de5bd9f6542ac030ca3015cfefb7f7853d4e29ca5119907a5dff3ef35fc9a5afe09a934c04555621461a1d0f93670834782f7f4d4b9e12d32fa8b6d21b489789c84951adbd2ed21b2973da8530cbe4e0b312f2063bc12904465ea933afeeba3a6fcbe8b879bf2021a827b590cb29aa8457f420fd10692515911a3073d46b9668b9cef3a876203d74efbdfe3df74e87a0f7586e1fdfd66175b5f5e7bc7d87e258dd48d52c957f7d7400a793b9dbc9ee68f652707a6116c5f46287f106e9fd5dc619422d7d78a1234cd3e4fa17313f9368f40d49c5de4d41ab5f856795a63418dfa5cb9f489601c4f6e4bb22b588a1c0cc3ac9dcc5b4676a21411d72555ccb613e0d47dbdac9762e0daf610aa818e8cf280daa0d4ff90b2120b5656932676c0b79833908dc1fac161985b09f3173d19c34127c802b4d8d069e64550bdb5aa5adea6ff58e0c11cc3c40b6878e44bd5ab39cf9b15db0f46a796f64f5602eaa2dd2698068fb89591b6e873eb4f22e72e7a826babd798627c469bc933cc5f993ac8f159510f39d0a793ab8b7b7062998c013483222f393bc50add83b4b8ff93d957e076e7d79270111e4ad0e55708f23ba1286c4fb79964c8cf5fc42bfa6466cbae3fb0525f0e5a9456726f1fdda4f1ac68ad21dbf8266087c237c1aea5b1cc3e8c07a2240274330c1f94d18f03251140644cc8e48c041875fb4a24ae5c11b662da736bb1edc9016d84bd79f42dc2ac49c6660a8f6ac524cb06e77c1756b559c3eb2b021cca494e6c5b2fbe8c6484ba6fa4185f12eac3ba7fed4b9f409fa03a8915d3b0e5e6092d28fb8f34f3a44820055a5feb4648f2a62d2112b42f5b03e87335ad4aa54481bbf9c59aeef50610e120222cb59c03e839e38a1c3c5a79f214caca16e754a0709788d6d6d2df3c0932fe66d680b9bdac00acdb6dfa3e13edd1ca1e29bedbebef087925264444897dddff9a48de100960c64fa88a9487a63f1595258e6dd3141ff801a2667e8843eda0abe4cd2194d8a99816fb48b58eb6f49d5261ba558ec49ab9404ffa05a4d6d4d8f7cf619b5bb32ecfb18482252df370ebe398a70608e816388e05fb59a052b12d5162b7a28bbce34cba889e352e76bf783d304c1b01c3efb80ecb96eeadbb7407aaab83c3865755ce71c38b42db130f123253738d818ed000d800e10580a1a147bdf593c84142e0796e681727146e44bbc979325525acb13543af212e0561c26106bc10ffdd7ff64bae61fa250d9e44373d35bc457f136e9eb54c259eb5fffa2ff282a409594d4f569665f7eb30f7f95f340ab832893fa34a713c0cad6fe16a7bf14978641b921f75378393ed802c845e5432c75afc35cbb3507a2f3ecca8d80321e8326030cd68442fe9ed4e97526aed47f91f4e1ea2dd1d4e343ae64220b2984aed6474991cb02168fc39a04ecb3b199f7ad7cd6b3c6f97ca6146d40a1989edcabceae29f175dedc79373d8f30743a3d8829f334cd07f6bd82426cbbda961879f5c7b8ec9b4b004ec0f1cee6e05ab4d4c78e141452c9c46b6e58e9cb84ac6c7ea4ce8d934ac40d52f4647874ce64f1312ac205b4c03ce9eac236c1be358f560b3d2a7e81f6401b8e3bb5175a720b0c86236b49a83df5ac6304ccebed6433effbc07f71e91a61f712ccf8b1aff459865271db6ac1c8db2dea997d86b3409b15c6001b9e95d1003bd3352a8d95fd892b7d0d556a6c0273bbf712acebac15ce1bed6568472051816667f5910b53148b5b27eaa586233d5b0a6549869df460f977b5eacbc0954c56374b5e828a6ad33048084c44c8b236760f03d480aff68c13585377b61373a0a6936d5a9eb67e8c02d1b0dc3fbc9a10d9faafbee5e2ce3140fe1078ec7595bdb97ac567dbb77a9960829034f0adcb1295102e58a1f4efa26c9ea3122d683b41709679bc9dd50ac26dad88991d5e91986fb612a740d688ebb3d3fb4e1da497239a4ac231b86b75f847d15afd81ee86a42f00137f3dd7b4951c75675b9c1b32cb8cd71437e30d574dad083ebf7ef35defd2a3a00c9edb6bbc6e2b6ce55ea5737ed0e5d4553fc33b1a82fa641526a3d2d0ecbf15d93e6b185717120086ea471d9d1206533fec785d60efed05ba603b1ab94c07d2e67391d07d92759b1b0c1a8659b813b0a42cd6a205cad6f3ea51871523178b6b0055257351b2712e1c7d30a6c8e12af6d159350397ffa18de05c8e25f2eafb96664f41c2817e9fef3dd5897d1f4a90db9fba2379d450c09c7abcee105d08032583e342888824d89552f8e96dfc7d7f17725138fecd149ef1b85d50f3fbb431ddad0c46606d8ea13fb9f6cb0c2410db7dcbd412c812c9fb91ba6a930b12d3ac515aa53b77b4459f527a9d1a188d36690692873356e7b2e66f12441a0101da2884e1cb68946014cafa33e037ffa37a932ee5bd3bf2d25324b7ef673f0bbf9269d85d9e8814d618838c8237ddffa1679417b0dd2c5bf78cf0dbf7670821487d5f688cefcd417c9fba28b9a6295c9f7acfadb61214a0cde3071afdab5423bccfed1c3bae41c098b416e1241154ad9cf2f3623cc3cabf7a4e9163e0c90379ff62adcfbbfd1a0a2d56da97c0811e91d47c6a685cfdec78f07c50d06c912d77fb3b8801c61857dec58b62e2c680d8886a8e008b3407215c7159c64741143c6270f60015e47fba69c2783b0675e554fd7addde1c1a18f60bc542e7f3d6f67819a08db7e094f70e8728b7b9bc6d66061b2a3a247a98d124d4e88b1dd482e356fc2b4be85b36b448e1b9d7c3e269349e88714cfa4a2fc50212e0074d0d892cfcce42f6ba7f834f721ad70fbfd0e0916837efa4ede07a994078b69f9af7e52f5e69203da45764a0814e33fe9ef9eb43faf1907c7c6f097f17dee4a94207b30416cf21a7070140d26b588731ea91e4e227dece1127ac6ba5b5e80c804076e35dd2b8f835ea1d23eefe2cf588a6adfa0b89d6241a12ca437e32e2d96d24159f622db616668a4e99d18dc091d37859e0b12969d72d8175740a158f4241cd6bb6acf717018b8d140a213ed69b8a96dd736e1866f1dfe664cade1802c023b2e2edef5623f7567b6e9f78e7d23dfd167d75112b6f46ac74c23e4244c64e968e51ae70f911a569aa70361c86be6270568c58117480d8568b60c1ba397f6af6987c1eee7f2583562e40b6c0528a12346d3ae749f1e722105b5eb62cae413c2b3bcca51afb74d42cee4bd2f730c9687dbb34ae4da1bd51d4ef4cda953fab1b5ded4eed3d0bacf3c01a3862f50b70b1f0baaf26692f501101047d0cc47d31046c0c54c84eadb4ede90aff8765a246f5de5c8b6124e7b98a992c99d6fdf5d7c09ddb3e68da7550d9de8653985bbeed27f32f230b08b6d7a0ec36292dc639d21e1a0c3f02e4870b5513629285df3688d94722da16fdda6ff7164d43cc6c96db2e0bf3db480a756389b80eae6f346d10b8269f7c98a2e552a0a761a3564a504a988ae07f5dbf1bc69640e6811b5887e0f2b5b04586a7ac82e278662e7448e0593a7307995f83d305f04adee2a50a2c8979b11da7ef2c3f7c2f72ebaf6ff73fffad4f44d3723a5dbf6df6dcd1e4aa4e2ff6c2840e27835b7d7756df0673344c8e6269d5db4c700d6084edbf1868cc2b00ee79d62e236dfa85067293596228b102d638412f9472a79f089ca581f8179ed799ceb0ff7c058b387f7b8e69f7c5542896e75356ef758a3d10d336cab278ece9cd5421b4d71d314622a15c85c5152d33eefa65dfcb9fba8e7625160a2eda14510ccded5aa92cad85c06829cf83ab1fe2dbe5eceb5f6e03193d00f7c8cbc8d333bd0d043f580230926ad7d6dc3b7b68e37d85e626e6a7605ed775e9156f3d6b0f09a91bddb59eb270fce189a03ddb10d38e4ba35bc3e63c9a146f0f2e85e940c38e7dbbd2e514665f350a775967c254057e2df34f78b04585aa3b25ce93d2a9528501e364ce13ee4a098dde60d65ad0b7cf87784958d7c5831a884dffae8e88cd23fd779cff71561b597db7aeefddb80c03fd5add479bb21569543ef791f9b9e82ccfdd796996a048038cbffa1e9b491f6d46878c6514909ac2d33c6d15a23bd2eb2699124e29eb6dbdb67a33357b6b98f4a9d86d7cd029292c0991b9a36f520146b60e58708897893966a6c5afafe52a018e0b2a97304d13855b6bfeb8c0a3d948233ebf2b545474e43cc6fc338d4d15e4023a7556377b7ab0b854ad60379e7a6f1ada0a033e5adc2c4580c9fa0f8f3df00991bf7e1d95cd53267bd54ddb13cab1e2ace00faeb4514054b9c4b032412ee1ba9048040d5bd1e276276215a8bf45e4f456ad7a1f9d276cd8fe4e0030fcc6fc3e254b98bd941dc4758f8ec08f42ad1d0816a789d17a08c844df78abada86de9f7eb7e7061977813ce25de65104f0c130ff3c8e8d36b8b3407cc6d6b7262ddee43310953b16bccd233a8f9d8ffd7abed0a4bbb93697c9f635405dcf3c23fcecfba99b623f0e7d11c9bb8111b9c82fb556a556ca592b0fc0903e3b0eda4c7839c97167cbe59927097dc52d5184f59dace17a8f584ba36ef0a711f5a862b5a8fe6866f55bbe3c042a3248cdd63bc9bcbefe68794e85729c39cb59e0a4ecdf3e04101c1a0e9de8ff8fc6a880f16302f59f4879cfcdf1c9959d58f754f212ed83a35f68daea27946848b6d61c1286e59ad685d6e03267b193cdf1320bc411e603e5f28dc95798d8e6e30a07cab01ba9812fcaf7ae84b0961aa32d94917108d7f08e67bab452929ed14f3804a09974d36b619305808a976c6c1175aca278e11429ce7f774cfa433583a514ba6bdc454edd1ef0e138698878be2d53901d8621e2b1dbc193a5b9250af9801ffc3ab0b795798def2d71f6185c3f4ab3ea8527f58791cabed011bdc598efc9c4633c222bbb3d44bf2cd1657939eac30f13c5563392d5e74a82636cdec01a2649352cb7606658a135731ef47987ce158165b99b68b082e526d495b008a9b3fa1d96de6441782be940a8cacc7080ba6d0b0d87cdf628446037ba95a999c71840193342882207c47e59453541049653384f94a867e0c4f4a15e029ccb029f895c3e1adf52d878f5c2dab288ab9f29cd0dc0c2b96b3fbf95caf8093baf503ecb7287b12d5635cc0319a573cf574f3fd42aa031d01ccfbdd9e81578dadabd567b83b01d3e30147271bc1171d1b03723befd5351cb98f5ca91975c646a00e3519aab07a13aafe851987902583ec5c18c665392fecb2bf52d4fd0a8cf45b833cd2857554d60fd24660327df63ffa8805aa13a4efd73881721c92992b59818f60f99692f894e26c9dd1f8e2818f085e4a077637e9ac95fc49bfd131071a877a88d9b713dfde7706383233fde9ac0a408fbaf664b96200b0b687404cd5dfe43b2e32a24b999ca8bdee9ed36544c6be6148c54e935a49d031b07ffd3fc6dbb24acf930661c7926c0f4be02231140d6a39c2ed15854b0aeceffea3e158d9339031c3862e32cb3af2c8d402af6c0c4872af01c80957aca87d1ce1085cd30e0ce6d920855193e2e0fa5ba7c04018f700b1f6c535ce25f60f0345cecb768933825eca229f3de3d9fa64f2496e00d00d76bcec8847ac0704d6a5fdd35d00771c204ee6e204e1f3370c128bd3ee42a5ad38494cd58fac7a813b499b6ef55954361931e4d9f3563605903ad95c784850e4a6d8beec56a333bed744325c904cc9d749d42666d230ecd586eb436c19f094746811ce0371b9b79ab245c940f0a3b7fd63b3676003addca2474b59f79a54fd1a510365cf7bfab84bf8a3627ff6de87bac8092d4f58994de4e59bb02e3f8b0ffea504aa61ad9afcd895b203d830617e165a5f8d348ecff368e648fa98be1b30435f468787c413ab0d5e9be5d54840e39185c4b5e6085b7e57f5d9b63e0a783439c0a15a88d23af34ccbd1f7921e07a98b36fa3ece58b766e66f3875faec10e11cd8c70401c7ca2e34945ac0cd3ebcc6a74d4de773a3c1b97188068283deb6603c79f1f1a55eb503bce8076a60186bf1b403daee299da29d3219391bebdf81ed400e0ed5025fb0aeb9989b4adba817b600234cf114738a6c6c2ac4ddaba033a419cbc615fce34350bd5da44c10a025b4084c2d1501c9279eda4709780ce226704e605f2bc5a6eaed21b705213861555e0d7c98197e45bdfda75b2a4975aaf14fc19ea4a41f6b301998b71c2deb4ff1dcc9cc42b4a4ce546dba2142dab48479501981e1359679090327a28f487933ddd085f989139d747b29c3afbd59cdce358bd4647ba31ec9676d88ae6706af943c2ad4aef89b03f263d450cdfc55223ddf4933ea51de4c300fc8420938af15c64d1734175ebc08bf6852663a1358cd23decc030d4e777f1bc239b766ecfaeebedc3b35df819f9fda32d6b2806b332baf1de0ea09b38f55a78d5d7c7d35a00b27dd13f951dc279d9f010c605c9a83ad4b6b5b8ee7083d9e1b8fc5c7b475b630cc311c2e8ba7a343319db9d35ec060b0b5bec238e9b1edd5bd5fab08c349e6e32491c4ab6f341a81d6c44ece19cdb65d8cf170d6c4a5a00bd187fc575516459542632d6de13ac531a651723aaa3b6b52b8667fb74d349eeb052a179c72e5eeeb826ee6a7e64e2672b3dc78de671ed522b8597ff0674e927544b37b6b65774e0cb31cc48b92be8c0f36f125d2f452c2aa6c1cecc7ba40b238712c655cf6afee9f897b7d7e2729f7c703dfe8f9780eaaa626c426529c3e1de085607f00fc16f516efb042b7ae7bc66c876fa95d0746ac5518d55e572bba2b005fbdb059bdfbc0d861c68e32e5b9fedfd504e9f2f87d32cfb3c33b2a0e688260be2c2ad7cbe480536d5b0c59ef0aa2924dd38135fdd92d66610e44a1a9b66843d0134b7783157cf64632e49a8d41f1480ab86c31b1121322714ef6ca428b6632a678d54f9668aa95743b4e34da5b7430d8293d73ef8ef81bbf6fcc6dcde2d26f94cf46f0c665fbe57278ae35f507b46cc3dd3a8005d2d76e7744524cb04e57678b92049a12846ced666cab9c08df8a65dfa7e53d2abad7e542255db769faa4d52e266d2866e01d5d069f96f7b95fe4d3922f80a1f244999c8de47b319d4b567cdedd0d41f5dc507ec2476006c9b5a97d6acd893581507f4a518334916e1b40745a87783a3f502d651882f856bf5f5e365164535656adccb9c992c269bef1ede4841215341ae10ac5927fd89828e2160cde5fda74ad764cf9335f2d1ca9919c8693a5f8875ce83fa801073fbc924ad19e434c7145f6d4b65edec70a2823f5819a32106b969b255160ad388a9d10c0aa2b610980dbef0b1caf56dba349ee9285f5737b89438fa8e21261db11002477d82f2e42882aa872fe3c3673371f35f8f207a62a942964375dbedcbf8ce37c787998682a561e305222b8861b6c56501c3b5411d16a06eb74245db2e7ff154a5af2446bcfcea472ddb22f3cbdb8283e2ab748a4fe3c80cafeaadf8ecdaa186add46b3ab5fdf1a06296b70d044705bdc0d1e2715b5f6f3da0a8c70b5a9690be23dad389a6dbf451f8d9131c1c16d76a5c38b6c5f6190bd1d4191b45938b5517baf2cd2d691d1ec93702a560e27a876423f59d7461d345dde45530996e57defdb1589ef5f22259ddd6a119003c99f306184618b41ad06408507e4b72a20aa5c55a867e33ecb106bd6d81f88bd9f613db1dac72b4aa8d974b5b2e7eaa5bc8ad771361aa4de4c16167ec7a0c993c70cdf65886be042a43bc4b5ba616c228c1600c3bbdd4388c5390efb2f5a9e9c5140e65dbcd58f5ae6e416f76ecfacc30de7985302ec5c39fe2d868f41f7a873f8f96aaed7a4318877b7e5e27957f07116f7380c2e90cd24c4685a5e4d85584a531a35441ac4ad78eb57449b7cbad5c3024785d313e400c5b980e33811aaaa40caa4106b61a7b59fd8e538b3c6b56f4494f741abff57b89a171643b1aa86326493cd9999daaef6c491d89c0a5a5478c6ec71bd1a2e1135d3767cd24ef3a600b3323c10248ed4bab74b3b24bc530ffb70e3524c32253f89db6b3565525f43cc5d07d76babafa587fe292cafa88b859dc874860c151e055e9fb0354984b7b2686ff6375f14c96f63e83ea134611741f3eca1e099cf73e7d2c23c320d363eb9cce6d3203f103821907f90d497b68f4229569c3aff42bccf8a40403f7f2748d6a014d222416fb91e476382c7d2b69fe8cf4e85ccafc62dc044ec35a3ee9a354d899cb8ea10d2fa2b56fd04ca3e04ad05a2427267cb15b97dae11380ecdc65b4d47d0984475b572be3bb2fee81923e49a0b765b2a103979fd94dd8a3d086a0e160868a8cc82864995e10b7601bf92ab45bf93f5eccbe5bb71ed354955beb0c8b9f762e295e225caada13795062bec1261242be4cb666226f13171cd15d46448d1fe0ec1da0fce63ee4e6c8d30749435e619f5028d815245db3b3f2653a51ae09480271dfc081275805443c486144289a0ba2caa367fab36fd63e37f0bc0fef42e14d42cbcba1b6baeeddb0e6253ce5baf941042c8c83ca44fb7abfe135b0c136ec836c478c4b8b928f9c9ad9e08e79a66c22cbb665f7d894f00be5596c98999ef71f84f787c5c9203ca9558f166fafcc64277ca50d7e6eef21ec515d6251c72f4130afba8283c4fc4ac24443acb77002aa773bf27318fc09bd102b0363562a44729cd60714aa15a416973192a78b806917ba901d1461f7fd59867b2cb354b2237c2806d16269125ea7611843e10a2e2231a5c465f895798662eedf9385c14a04f2a11b8f13e08aa0b50a02dc8970d7098975727c620a93cb7a9b8c6cdb6fec9b974f3c4e1208ee4762e0dae9218fc7b027423bfa883e55a5bb919834bb7d3430ea5153aba8d5d17f73845ce04740c91950bbb29a0e2acd11e728d1e9f337f2955fc264919bb2e455bceecdcdae5a886ce3ecd69cd621c28105a489888323b152974799d8e9b84f99abde072b5d8817335c5bfa4f85096235c6b9ea8cb721e3f3d7270126e55ef172807e3a579cc1af3423bcc077c331c301776dd73bce39eddf93a209cbd5086d6713194f0e865833f054edb61f02d1b2f721b2a7f6f735eda48901bb347793f6b6775f30e54dc9c43f0746a9997b4f73d6597722142897d333d1120a0fbbbea34ddd984b87a28d8da3c1e99ed006a3f29f71ed24a6e26750896e5ac201960796b37d6918a0976ea7be6d4ec95c4b6a2c83d42ce74454653dc2e0c33ec17519c65fed5562edd6fa67b9142bbe7e50583594b450403682758d60bd3c925ab61bcdf886efa47f1512e06643fabbce8b604047e7a0f49e6ff49c6b2fa53232b213deb865656d15368bde7d63464e4ce5cac7b5e4e7e46e3c24d325b0beb31af5b0c7065ae95832ab37ddaee2583b09f0852b6eb7db997e2b79c25891c1973977b5153e6d13cad9720af623fee74e3d934712ad1c3b58585e7c88566c90fdb240c84e6ea4528388d8687063967390ef86df26b224a416616e1679748ad3307c97aae362d590b1b79cd908d7d4575dedae81202112f5e35474b0c770d9479f3ba579f7862a1e741428a89b04eea6ab2b1811a57c6b6fc86574188a2c18c78572a3418387b5dfb6f53136f0d3ddf78e15bebf46f383aafa5a565ab6cedff03fd8b6feaf40bcf0d546b16d712d405cabbfecbbf10c13e8a564607c539dde1c6fdf34db8e2bfb5476dea07bf91f0dd88b95aa65e4549c2f61743be1ff3c74e0bcc93f7fcf99299d945f9dfb309980f9ec8497c41bc2e23d915fe51d4c2582a403c198b4154a1528fd13e5a50818d2607670b01ed96a5fe555e1fc3d6a9e01219e8ca3c4bfc7cf035849bdb10a1ed892f75e60c262dc6232ca10bf727c34611c54b7fc51bf2d088c82644fa250b318e0cd2ba7e0c6c72f346160450513ac9b83a3c6d2a8a155287b3ec28550fdb9342f3aed7377968acad1908fe51c617b93c6a0ce494544a8b6de6a3213fedb6f50b33f834b23432001687ff78c535dbcda0d7ce0c69577910a125179fcb3d4b3ad7e3ad7ef0edc1b695a2efc473d284eb9330b7b6ecb9fb83e124168ab13548f3b04fecf034ad5ad7a59fb5e89d44adf7e0350fbe49734728ed33346f0afdf85375e61ddc2a63e4b5f90028d559e9579dac7fda31793c86c7fcdc1837dadbe8ad0c07dcb44935fd76fee837eaff908dc08c6a590e259cdd612f35d3f630bf6af46836dfa8fbf1e171ece166f62af36b326d3305eab5b1487d5193bb0b7dab8139766c29b26c9b59b6d07f5e68cea9c49439b58348a9a570ea9cea9f53591bf0a7d05e649b5ef41e3e4834eb827934a00b3e982f75ae0c4c0817ca2dade813e1aa7ea726af824569876922f4998b7d25d8239e36fc287f2fa0454e3364a88d26ff38900d6172b4a9392344dc1548913425eb7e5c7a7871a2f2b952202ebf6b337c17d4d33371d62b5d59b85d8b7fc2aeed777f5a8d24ea5082f38dc177c2c7bd781815bb13e150a8bca0178319b7163f615e05f6580a49fe9f096f6f3b8458550dc36bba4cfd47f3c51c315492952da20f36105a0324b2547669deda1dde282056dba30048495d4f2e9d96215c13a6d4d7d0a717a520660073d30755554a4e21181bb9d817559cf1ce0effe2e509f339517cc3f4e72cc27d747fbe7a84c449cc87f73091974c254a17d4696f87a0274137309e8c1899397086bd89168cd0b855413c99ca6e751662fee83a13d0129f7e2334f621bae166eac1de628de73febd1d24281626bb0e3f67b7dac9d04c816fdcda145e2d11d78e68a4aebdce0156b15db173e47d97e50412f79ab99b265196d308be5c5d155d1a43db4b54f261ba3424b6e92bef92bf7f1923d2ea570e4de6a7d09f5c9c174d72943cfb22cc47da76e598bd1536425b18be81ecb770279da84522cccb8a848e97ea83ea9693a3f1f28adb08d202a6125eb78af3bbb3cc5a33556395653e975680cf0f598e952b40cc43ef9d9575ba34a4e424b2327caa760d145727875bdb33ba8b382c5552d78e9e09ab5d7828db3553aed105e92e7b515ad2831189ec198575d053eceae8fbbf7a8a40d4d78ae801aeaa8032fbe63987c47b9ab397da1019f7802588694e07494a42c2713d6d7f3e99829efbd084063b613b33f2affc6d3bb351a460049cd2e73bb42c1b9ad0fbf56fff3171fc457a53787ca99640c7bead5876add30ddfbd36575db6bb3deba60dcbe3aa9ce6864be11443c462094ed269bd8eda8c2a78bb966aeb5cbe797de138256c525964783890b4f440ce15c999db1cc10f626e72d6dcbcf241d9ff06d545bc27f323776b2a3075a5f9b0d0ecfcf2cab8dcf1ebc9e101bcf42beedf6e8f8cc4621592fe52db1ff697ed07dc686820ba61ab3c613807c86bacfebbc82598da82e0353ac5014ea2e84c1a8a7d37e03da888b3ceb2fe782002ea780c4348be89ad04cac8b30d9a6bf9def9c7e5a599740e6cc0d37c1c1695cef7e3c21e9c2ec21140ac02acd0f6b25d3b69dbea177bd83bb2780cece545fdd1891b048dd2463c061d87fe98a43f4092287125d01b59f375036a446fd7d56a4cf3abbaf49ec6c731d676cb99423ad9f80456534150439c425d83faa6940adbfa1d96f841426abaa7b43d11d079fccc6c9f56462625ec9d663ef9046874dad0e23cf0eb5f48b601d4b46fe3a7d0185bed5c27d44eb9922e1587bd3a9a874a7add57700fba2c471e626d785296710a303c535e0c8a59295895cdc2b9dc6668161acff13364d8d71c1468eee047e38510b12049a842604cb7e44e289515e8d558827077d8a0749238ce2be3a0d45e5a76b0fe2daf8dcfe99cff9fc925489b0e4f8fb57e5fc9b9b80430981c4409533c0683ceacf28618d85a2326c1cb6d274d5c03e236db37c9651dea1af1e4d589f0ffcb2d919685044fc521f96612b7273a881d63b58ac7a4eed3dd93231b2494dabc8709ba7c396b20b2a624b3cc0925fed4594ef45f8e7970c05ea37575a54a349a3a0dd2b952db9f1b9badbec84e526c457f4ef118d28d8581273f3d3bd0a873a76f779ce49a65387141603bc27b2cd8008dfdfd3cc2c09ee32dddf90047a80c6e8a330f8a04a4dcf4a86f6fbca5632f9bfe0d0165b161f398a018c4902da53e3196151f327e4b16cc9708a55f1387c1c533db7eef58ed2ad869d1a986c55159059d5c74161c6237fec3c8e2387a5b5ba0cf9337b9306273d8c21c67260e00b245244a46e9b70bd074dd5998c85ff882f4de77f9fad81f24b7b99576a175707ca807d2162dc230a395ea26844687585a43964b77c53101f906ec26fd711935fe6927e90c140e75efa7a8dc4c2701e37f2ffa4819cd4e7b733e45cb73680c1ff9c5dfe22c4053ec27213deef29f4699e42f62338b191f0a4de88bdc785c5115464a10095c889a00f09d487958933afc5aaa5a2833548d8501d6c5d51c7603159d827be1d8db9f3d4965e900eb89ad6a006b9527be3b58f8cb18c74cbfe77d61057e0a2b606861278bac2dca218634a22fbdf3424cc1e8671e64812a6e55bd9814fbec46a14a6770ef6748d4f60d3bf114723c362b83225e89f7fc1de1f4de53ad0dd55b12eb90902e7a9677af6a85e70ae8c85cdbcc6f2b4585534af34a3d1f983afde45e4e26ecec3503331f23781fa522b636afdf2b17567747b4afc0ff90e9716e53f337423654adf67e6cba52d9d16e3c270bdedd0d4fac4c6730b1c7822d7d27e5ca5ec0c878fa017c6d5c65b6b09c9e53bfae3e913a41d18f0c70cee76c9c0b7c7322e0541734594d501ff1211bc888789fd0df4b6121ba5da31399fb617a05cc829dde498345872b85b4f2a0ffd037a43533ae3b30a8b592855ffadeb943029519d89777c5dba8d631f327384f9846c56a61303fbe64b67a6e828e26f31c88003873a10d56fd0e34d901d7757561f2bae70611ee0c81e65718aa1de901d2b1170bc6e1274beab41ed51156df56443effea195092afe1978cab973e92a95ab5d6bf839843e8de67a66041a03fe1f539350ba93565d24c74a240b38a4dac708f30906e295f580adbab721bef69d216cd4a0ae18e82adb6788872e4cb0267b793c6cbdc69a62787668ecfc47b0a59642f2227c6b6bf7ca8d148c463676eef4e6dbb75e09a9d8bba01ddd36d0cca54e456b41bbd3ba4bae6fa94982df57c3a1d2152eb9a5503e2ba23066b28eb7665fbc04ecf74e63b471e4c954d386bf7b7e5f7aa992d337b20da94c40da5c35e1ddbe93a2e8475c57b48d4fda180ec761440d41e43206214f78c17446fa1fd3be338733c016fe4a68cbf144aff8ebb7a0642df694367120c4318560a9801e75380c3d42dc1267ef478f231d9581c826941f0b16c294424181837e135771035b06a2226ec4a85f07f3e11d392e05c7cd8235b159432211241bc930d75b50a1d386147940bced6affb999b7e1f05b6bd4a0df2e8796401b33d5976799cbf6c2d21db9e352872c07379661782863226af428c12a13c47b0ae138486de91e13da95994c96798f03b7d5ae85ca629b33a3e26430233a9e2736402c679d1773b9155bd7779ade9e8994cfb850ebb5ca4470ddea69152efc0af4abb6cdd8ef67ef4cfdfbb5c6ec7c372cebf080c52987f0016ce3e3c5b58364fc51d7e9b798ddd5353dd2cf45f177de2dae822524fb6a8de13ff25bce9bec6d2a3cbbd96375e7e0447a3ba39d9ef39ef7b0228cee408137ebec50ce73e34dbb0f9a480a1d6ed9bdc96edfcbf385baf1b7b00a9e3596abff9dda03328a66105d32b32e94e3b35305fe002150d86530c2d0859f677063866bacf050d43cf99f75d8cf849191e49e286bc26b016a042b301e86e63a1590e91d78d20737f627115c4f4c57a78406f6d9bd9a79be50bcba300d2174ea14a3eb81030a3a7858d39643d5b927e20bcf94e1a43b402331075724f26257d669b73b984057def0ca64a3d32a4aca8a83e6fbc8624e5fd374b199f806d7ed48e31b612f8903f3eff67aef47bfaccc5bdf46f42dba7067f5866ab3db5e37b7ba29ad07d42b49447062b8b18dfae62253e936b654916ef3ca19204be237971905230e199af1a999a797033dcc19bbd6e47b93639b12c2aea98754cf7735cd125aa2f02aebe4e383a040797ffd7149aad055b8b22fe9c77d5daaf62a3fd4beb015a0f38e335b8a075eab6768c9896ac3972870c09b0f15c8d939ba2959294aea36be8edb77f50f603c9e9d75e862a0e24d3244c0b3de7c424955ed5bf7bf57cfad574826cd313ececd8a3e16a5db16a4cac4d37bbce243ae521a738c5287f2403f7d0e5923ed91025d93f43cd2e6a60489905bf808609f24587e1a16ea3527aedc0a8301b98cfcaba1e83bf4dc8760afcc4a0a7d12282330991cee6d5ca9e6a78f80e86a4a1fcaf1baac9fcf7f67cb477c5334b741a4882889d8718ac515928757dc5c156ab32bea94a6cec6e9f6faed3afba58828816adf906d2245c657ca0c2705667160202eb4167c6e45801654c6f316c7fe0552947fe20eacdea4597189492da909ed5f117240f4ff26d4da139625ae131c8c8919adb1d1154c3df6c163dc356d5c8e148671b0e9a5326cdfe7b007462b3ae4486f77578d109ee7da7f02e8c6b21a5df3702a09410f2b5813d63ddc0e14cd13251f679463e94842eb6d602f169ca68c1e68a960f2fd27a0ad808790b382f6fcb2197f1b9c61f32df3d93adf1f1e0eed897800af51f3529d647b8e460e3b6661d1b613deb6eb6002ff484507648da5a431911b7463e0b893c62883eb3f100791956fce8a4eb5bb577b38cd45db371b910ca239752a72f1a93d9cffe2c46563fb0c27a98c5aff4a7c610021fefdec8e4b2538c825094e64b32ed884b39881a1f22032b52fb3f697c730561f7b107144f1f3b2fc9a2d14e1b2f5befa7e45b881a4b6de5be3201bc42f486ec9a29bbd40c7d550323092ada5e7ad1d085430d9ed4135a40870079ecb7c223f481de4d2c8c8fa3602296672a88aadcb664159682c5d0a5c0e27179260a355dbb6fed409efa5fb46332359eaf15d1063e978cbc59b9997100b6eb095f811c517652541ce7721403b033fc8a823ba259c8c6ea90d6886e57fbeb834a5197aa652bbf626a660f52c3c5e21e8ef5576a09b9a656ffc9dfb15d39e5cde3711c19d95d9a3fffd2bf1a4caceffe870c9eedcfa5547f83404fdef0cdd5afceab3ce0928392e8ebd9abcecad4202d583509e16c909760b67614064274ad259a09f2a990b06732470ad629a8bea8bdafaceaad7e8a5a7ca75eb3423d0ced51b9610bdcc46eb7a0da273f3845f5920329a195d7aa7d40951605a684e5433db1aef5910d79861c5e2532536c8bebd7374c0b1f32e3b014509014ccdf6ff7d6a28426e13c5ac543f4abc494b76acf23f06a40a866c399c3f70716c2172db9c37b8060a74e75983148627a688c128a7d76472a008246fe653f336fdfa7bee97132b5a61f23eac0493469daef49586421f0b87a227586ab5265338b4d9ee7c60307cc2db1b22d04c1e7cf7065ab515bb1ffc6cc3d30a676fb1d38e8d17421824d6ce696c638e0df65776cae6df7b7f96140e837a86f7adadbfda5c95499d73841d96c5d448b3278c609fb167669d879485002b4a0b6c9efe9ab19b2039488931382bdb57f5113b747416647043bff81f9d0661ec2b19f7d31b4d8f1fb5d86050d2f5c73931654d8b177bffa6c8d62df7bd156673e8e2bfab2fc76f5eea37542255dab78f37b2562494c35843e3285fa06476e469edcb68cec1d4573e560ccaafd761b28f96a7ebf3ba357fd9b0c19bb7accfaf56221bac7706f575465f91d25de8603192cd918b04bb3f0d4a40f21719d4020fe192f62ce9106465f451528eaf7bcce1ea54aeff5153696d9aa4ccf6760a51d91dab755095335d66ec897ea43304c248fbb1aeb6cd5c7012530a362b2ea5344afa90b8cd7d51a27605d9c8b079989c8a4e7da9f6ed71a197d2e275d753236df74b3a2a8046867444cef190a592a50912d2a8074fa8b774d53f292f5d6ed43eb887e4b03bae26a261f4e1a2bb0cebd55a7fa59fd1aa297d4ed52cdb0a46a814c8ea16079918cc07ede7e2d0eca548da61c3bba07b031bb2f0e8c70f8deca44c29f8c1306ae28a1d71843e8b8e301dd8c7cecba8fbd40a0ec959ad61923a77864e0e9e8cea7279ac8703bc1caec0ef0832857eef31f43c0f30c09bb941d352ce49cb4891559300964b206d7b5fa50f1e7d29da65c6eadf5c0be76f80c60d3f04ca5dd8d1ccf86e4ef37980cce0d46b119c99ea3fe96175d3551197eddd14a3af2bde2c9b720f4b945bb5ac4759df6ac209b0137fa6dc2c6bb1f911e234dec5c1f5002310af0425a9911772382c60351d9d9f359b1d58e8a362ddb84e1a7ab7cd4b24e759ea96c252e231c454dce47297de3d044beb0411dc9e13cfc7c4903b3f46110fd38b9400c97a1e08f216007693966011e39b8f1c897db06f69089cfe045a36857d9fcd50c6e866ebc0b855a7edc3278d2d6a72cd6ad51462e88563c8e4697b6052426dda4581e222d694087d3b93a5e0356e708c44679d5c3a3466744a93f464e62ae83d4dcc83ac982fcc7d1f2fbec20fc789bdb51b9cedf7b3b87eaaa52e9a77cd2650dc49fe3e97ab3317b569612e4cb21d33fe604663f6c8891530760c3dd04f9f71046c984342708ac3f4ea634058462f74a939db61b7e097e68991f2f78356aa4588546f17193708e68ae803f981345fd0e03781c6ee5f2574fdbedc55b02722842d6f440c26a01db4f636ce77b8bf973d74f6f9219f39c814e44e3fa01d4b9567d1fdc7ee77bad0f4d90b43b77dac0de127addb212e78985142f90e51586d26a27741f9c807b9a846b182828eaad075b66818616104e56f68d8f0d8a3cf03d9b762a7f7d328b08cf7df55b819193eb2c672408051aed0611408bd6a0cf22cbc7681c482e3afabde494d508e5679bf8c9f915153ce013f9eb1de793925d62910dc0542214e1888e9881016ea3b788028e5fd809641924ff49ffd0a3af003f690081a2327b78c55e21943cd63f39ed4768f439b17a50909bdde2aee40f631c3ec504ff017fcdd8bf4979480cb36358aa7a2a3aa8ecc6821fb02e1eb73e93e82a0e45adee90f3dbd0c40f45845d58440460ff778aac3c7aa923aeff92b1936d64f52cc7feec41b5103f588ceac20c0fdf3e929e4303ef4318fa93b9c7125bd2d91dd40c6d5f193ac06f5e4a8c4c5bd768ea98bd8bbf341e22c85c48348a5cb914f1addc96cc6274ca7373c0a3f24c63cc4d702afb73f2ab4bca63bc7770da502844f23a17ef1e84c9468c1058269c60f6cfcb8b57f53a1f6596da175aef8d339865397d1fd502e66a7f775b3836a12591ad1f6a237a32adc1129161937df1d6bbe676cd38b191c1bd97bb4fe22887c819aff408903145de8c9624666e2d29550e596596e2806dda90e01b72d987d2a041acc8939c4e35889bab8c1e1e22288169cacfb1b1dba66ea25b3475475acb0d571f926e0acb04f7d74c5c19865dec37256f1e2ad0252a8fa270df581d2c2f15b7d161f87d4213c878facaa717900cc048db9ec5915b0f04929e4f69bc6f49c1059518993ab9559c1b9d8e3473b4a0f7be1a1db464400c9c77a4ddc0c2d4953eaaa16baf2dd5e256ec3afcc43172219221a1ac54f3e628fc3b0cd744a3176650b85fab742d644dd041477b0a562d57d272f7491fc7404664796548539174a1f282ee1965cb40383d4485014ccb70d838f2549a231ede38f587b418fafd5ff81e3034ff5e100b72060bdcc0a933a60dd8d4f06af86e16dc7ff098933032046ea38cc3fb49ae47efe67ec47f97e008562050587a907a82df51fc229eda47b651d0d07fde38a53fb1f45c2137887aadc9564f1bc3a1a96aa265873dfd10034fb607fdd17aee11932515ef7212728d60aa87a02bc967a6137bc303809cbe9cd3cc06f28ecd8140a2bfe236f7022d15b16579e1eb6fa9a7631857613033e5638d726c44654390423948b93c9f1eec98c1cbd41d3d740fa1536a981507facf90bc9f81940b9b7b771febb424b7c32becbefa81fa638b0fe309ac616e2d80c7a2e259004bf602d2aabc600db3aa4831ff606d17cff4a395ef441a24caa3f27c3cb53635198c4eae967962da0ce2f620f2226395640c72b4e6c7295869636e68aea8571a26d30d075acb2f32e8611f9c861260eb1da6c9061ec71178e98f7191b58778f73365750fb13711c677ecc2158fa9bb92819d603fefc12fe2b83469c1c3420a5e52e7aea5b3cc7cc9606d6e158e9653fbc2c6c644f34c53b8e9337e0909f923ef82df39521c9bd52d078168708b41a1d0ce21d0099f6a5b821418bfd1a42805615a9d9154f2c1f77482f5d5045b330284e96aa03ac40ae36b1d87e0f98aec7fb31ffa1dfd47d3b0855f11adbddb0d0bbf890cd08535750e2821ebf50192626a07b8ea77a1d6a0c3f7ebb8335eaa049694f4dcc14c977c8917b1e69cb8b5c7c9f099a1b8dff20f187a3e8d7cb02c4a637c757e017bb95b4492bf13908d7d9bc38f714e7b0d4d898351c2804a66910cc6e988de2a8c6b2b1aa886eb5fdd01ec8c4d584d070ed2afc93b80546dc2156fdd60d08acb00eaf7b3da11e4e5a70ccb3a08bac931e879ab15dc04caa07a6bdc4fbd2f11cdc3ee0f9a063b276fadf16700c6bee3cd16efc01641232102ca7afccee02928b13c919684ee06174f684a4dacfd46d08936dbaa066fed13966fc565c0d0056a3edb6ea0c2b1ccf155fdecaae6805bb400f654a4ed78a369812fb8c55b93de657970474eb1e888797793936174cc8adadd9f73a64864b671d1ae9016c413724608bac3dabcbdb321f0dd7a97f75923fe162228c476a69ca8930f09709997ff89a6bec0097c1ed8b2afdb6e75ed93a531a72e50453ebb7f2ca7f2278c26643a7eb818fbcb08aa03e372974683b69d520a86fc2f58a14cee4c3669a52ff57a27aa2e04ec7dd7cd8efd753ec11d0961b93496b2a588fcc32a9be91dfd330b2638198bc5907135243596b67bf642862aa8e5e4dfe697bde234aa4b8d759fbca596b2248523045d4845fa2fbfa7b845a00a2068fbb402f901fd65e820994e36e3616c84731b9a62c417f890e70be8f264541f0f773badba47c394539a21f83ac2c0579148607dd81ec712b27050c25eeb6532623951277824687f6b46a35852045f49ec81c52c4267a9a9db7948a268ef92196432a08c43648531247e2f3bcdbd43effbeeec894c5dc0b053ec42e9007c5031f24cdf6d0822a1e452efef0cb26b32aee23bf42457708933a63e4a545732647733a5c4fa1bd71d994f2686e11229c4b72a5043eee957b39684f435c6a2a4811c4540ad8fc804d717f8bcd4043e1238fbc478c2e5c15be5ef77bb6b63cae08e8e88b0d8fc7479c0a4ba323b97f098d153d3f445d1e78bb444aeb6b5a469356fcb519f670fb11d0a816084e2eb8999e8185fc860c5009027c955a158361132453a0af8fdec9dfb2931a9dab1cbb5cdf84ca1b95b8a0b810e8b75abd9345dfa1ea90cf6bea5f49a2e3c322abe41e91ac9f6b1a49fae5f0cd3e25e81d79670f9368b55ea525943f0263b1890e6cfe21552a3afcaf8e117bf4f1b81877389663b9d9ab59ce11bf96380904dd7f360cc346733aed5b2e5eab409e787e178edc683f66dfb901700b3607b1349779ee1fac377eb76afcc2dbae67220f7f38e0515f84cc044b840ac778ddb15bc788732a3b1b0746b580e74354e0ccb25a90643d85ca84cb4eba2e55c9bff5e29d381ac8fdd663f0618d2bc63fdeeaf9588be045cf8852d815590f5d80750ef0e43f9c87c932aa2570bc43910ac94118b3542b816f1ad4c2d669f19c488ec4202beef7938cb38ac1eb08b5c251169d4b0c43a2b5f0123af3d2738f2ca4c8cbe8cd90cb585918ef726ffca7be2a1014b14290de56424aa776c7f05899fd350cb825aa6ec029adf037d093cd515f65aabaf992b86304f4a932b00f743890bd9fae8f723374062d61c6162bcd252a5d94d21fbd4010d8826948ab501052c9f5f2dbc8055030e5bd4cde90994f7c8265704a40552827a8671b89235ac93d8a254c42681974f68395b7faeddcadd30830d09c7237eb14270867a6b4506cd8c5992f711ae79497305e9657b82398760f1ced44e26c3af9995435d5260ce8d249731bd61ee4a51ddcd835fa25dbe21a55951d16e76d872bbaf9565f2450dd85fee2bd5873b671f3f3205c6ab315f067fcba16cb50e3e5fa70d6fca12fbe8472205d7a6a93c52b7bcbe89ae8516ca023f266b2594fec4ed714ccf94da6c2e2495eba8bad0fc34ed3226969c53487f3a1419430c8c42fe0be048c5a1ee979ae02877bb7bc89a0ae79a9e24e902b5df7d1ade4f05c52eb2158939b03903c0f2025b96c9a20a6fbc475ceadc250add689d9509703dadef53fee6f9b5c3143789323be792a84bd9744e3134e499b9aea73168e3093c2c6c2a90b2ee97ae586ad13ddbe68230698e19c7de22f7cce38f3d6a0b46857a56294303364a266dc50f2207248f810526f74e58cc9bbb7f0584611181d2e0c68ece6d516cca906d346686487344ce54ceb3a360ee3b4b2f9a8c80aa6aa3e00ea76ac179e0d086a9420ff692b827ee740bc2d450096ec15100ef1a5ccf6aa8067d30e5a971ae137b6bfc0625578c5c69a1d78a46ad3f7013c5ae7b83b1e4477e667f60c51e36e5a47919dd532de5c4e3472950a2a185592c88c02b74ff13de94636a13f29e15a62aaea1648bb96e60f90922c5c20e4b63de63f9921a11aadf0df50a68d79d550675cc1539b667a431d1afaa350cdb7bf799b08d325633e51c3c758e07fe572905b6eef120d56eb4495fef3b52009adb4a82be23002fea4a0fdb7fec852fd12e6d80c5917361e0837caaacba1dc245695f0c6394c8f076e376a8bc46b5e487ae75d3ba0706faf123b72fec7186e78a00d7a7598ab9ab257de9b760b749cdd529e2bac15128a93e84d3457782523323da1eac8e4584ace9eb87502bcf4d6f5a5b529e40e8814dbab213f3df2bcd361a883ab6c5e2e280740d9612721bf09be751aa9ee46823a0deac7b98881d71af5eec35b252b5bafc5ada9ed312048fd16347e9d26a57b8dde1ac371298ca570085d47cbe310f85711ed4e95e2c5097341897dc3834d8cf21d16061c834954ce3eb64af5cb90872fadf44f22078a573f2e1dada307b929bb98e14cfc3965f1c52ed7a8c232018b4dbf4a2e48b780b5b5c8a405c56b17cba6c4f01f209e93a80dccdcadf238a19a5bb94eca292621931e0cf4c2d2c54e0b07e4abdfff509fdee64ce25556bdaa56ec036efac6abe805074e0a5e4a1cfd6c804888e81fdcf87f0b2d7b4e0ea028986944a45c4e1822448e8305d66d625402ebebab0a83fc1c480ab915d3f27314e3aa4d2cbe94fe09a6b51084b5c6b9ea01fad48c1db720c2b4f86a3e20874ba82cdf8e29c6a2c80e16c0f6201a499aff43c1b5196c2ef2f2e98dbaad2c074726276601365b35895b71f1891a73bf7883092181429fc3750e91c9cb1634106ee5ad77f3fb2e157d0d8da8645ac2b6ba033b87374280dde977ec5bf7f09301fa39b58b8fd2019ce11a3f4485c36949fcc770ada7dcaa4470dfc891fa8295f7270b0c1ec8fc4794a2af0841e05f737f7134a86eaaac2eb056e2e02f99bf9b115eb989b0ff08b8189703905a33d01efae1e2396c9de07bdab54ab4d1d42999cd9241b6631507b1dcebf1c8068011ea42f7c3e1dc5ec45e138e70d7b329f880ee6f76fefe947252a8a195e867a6e1946b8ca24d1abbb5ac4b1202144ed46cc326e91700585d599b51e9aa7a5e6aae018b33c8a46660103eeceffaad77790c4e49ce675f5ee8a36b4f07fc67c3b1a2b96afd57b22dc7f042e6419a4870fbb23d867938833cd41530cbc6b823bec203d609fbc9cc1ba92f845428835d73a3d36468936d78eed56901f87e16d6e1bad4450d6cb54ff8c5196af3a4f58f923eb24db04b74bb1096b7dbc210eade571dbf0ed2ba1303c25366faa64addfb41e8c1bf18e765787e9097bc827bd6bb0154cfd3d735852eabe2c70c920d854072a99e9085a43689024f7c79dcba64d4461a93b57037aaaa4aec3604b5f932204e33dcc152ba288e9ea9530e53112248d4fe0de36725fbfa09d7dafdb9db07a52d3d74ae52a05e7568689fa8c26e6d931d35cfdda4877510e4460417dd1e53b17e58f77148943832122aea0216ac83b5b18916373e3ac4872603ba53b21a581dc7c4e389cdc2fb8864d37e50e2a673e5d448e33caa0703aa686a29c66343891bfd5811605dee2d42edaf2140f22196f2296d63c6fddbf9c442dbb076d72d2c9ebd2c980acc7008636def4ed3fb0270325fdbe2592a8f2941c137b52f5f0e0ec3f29a260a3c94db43811f1be2b35df28f277fdcfb0defe12da83970d27ce4146e2f8fc029622cedefe3719a910c44736af785a96a8ff8eda7fb3b1c85b5759613faa4cbdd479dac37feef3e9fb0705f90c1e563ac610f915cdf213356fd2509d45713ab6bca40ae8a7a27c49929738a305cb7268b11231146f651fc90758cef4aa5277850172b622361e980257ce47c29e90e06a7b70a5c49059c41a69cf4d022909b1aa0ae2f7f9849ddf7f8b21dc31d74d52dff0477df9d4b9e5207c617bc303b0149a72f112dfc6dc413b232ba1c2a1b71f5de5f9d44a9f39579ef1214bc9cbdf924ab4149bbeeba06c41ebd47598abbb793bff894b775f956f9ca27e4e30c2494bde230182f46cf16ef0d738975769696ecabb781d8956084794b3e4a40f0a856e76be651affefdc5a188c75e3c9d26c645cfc2a77992928b2433c5bb72a29f2581e975a8087421ebfe0348fcbd95b03446bf0b7f01fd23d0d8af523d8e3a1ff7a22c47a5ded82694403c7eb2a122f4eb9fab7308a9f4b7b3ee926f9a2af0439466bc4e34f2289b9754f5448a6afc89e1e7fff10d023f5fd7fc5e3f4b0104662a6c68831e9de25d5426f7e868a88c9845d9c9aaa0dd9b968d6e5045050f8a667304198faaaaab13169aa506a27f3f7314972b97f0d6027d22df60a877f4bb41c965dc8dff9542209bbf561062682ef3a4f53717501975747d17edf965b2d9eba3de87fdce44806573d86bbe7c7c4b1b9178c094565fb8ab1d4e619261e099b13c54e9402a668c4a8dda3e07890863b6eacd855f5797a3360530452a185060dd056a9a06379237a75e5694cc00670352f71a3cf83329baf9d305d5a79b7215c0fad90ff7247d8baed9963b42beed33c68aa2b8f1c2d8c64b6ebf8e70d4e07f8ec1c01af601a2efe7bf46d6622a82a94beeed29e134833c1a0d8597c41daba87b31723ef0c46f63b03b743b03b7f61eecbb067ce93fd1b99481b9bed95b28f8a42f233be9bf0ba74e4f479701b6676d252cdf013b085a2c92dffd8028190b9c0b5b63d8ff1be31aa4e86c234c901208b77af7744cb13146b34c01286f2659b69f25e13f84b8478076881148cf7d9f31cfe2f858233d93a2d13a23b0c2a4d486569071c4f895b010ff7fd7131e76a3e5527ffc1dfbe9d38cf240dece90a384bc5ded81079621ab5605917a0dbb6e3c44f95f5f525d394d9d904d2a290def6cc563e136af33f4966b2d7618ce47b0cc67dbdd928c15679ff3fd9f0901cf3d60c3cd17a0608dbc6bc572621249d74fed3dcb85ce783a41ea6dcbfc025259d88e79804e914847c1361d28dcdbaef82e5852d37c82e3d39df82b17e58cc0a3b4e3cd4dc3f1cacb278d06f93344d28f7ca5ae6e6c79bd5af710eaecbe31ecb8e1bd06b77356f2be643d72513cd1dce60268c4861b2c03a21903f7b174de4e7866527ac56db3154bcc052eb57266b4df7396ef25e872fc8c97d2a3abbbdce19f0af514b2a715733c935207f7fb8bcc0d67bbe3f6b6260d0f56a1735666d65443fd54089fef9957d653476bd3c7de2e88d75f9dee7a3e2a15a4fd28e5a2dc4aa689c975ab59f924fd75fb860b0cf1e1619c35ba65c3ca42820d4d55800bb3d5e4752dcdb80d62a8f05fa537f962e0e826b8ad9d6f3f28943af0a735c9d6d6809924fe680c08cc8209d9658b3763184bf95d13d47d4298a6fd4609036ab8ba4d11e83cba3408f45c758a26c1df9cc6507f19f52be75e959698f6cf883f91acbec894246d2c0f3b10f8926b4380a5c165c49d23214c91045b3a485be9ea4d80f146f5b9bf8fa4e06c85a5209c1147ed2cac5306d98ed527d280280550a6fa6f2a8178a0305c694211747f18cf59101e3dd2e570c8d76eb14c2d1146b4c0bc00098705e45b55064f5a9f28019923083d61f232a9c03be853908e295518a1c769f0ef419497ae5fe95f6101de93b10689d842062c96ce99d734526002c7f9af5839d38f7af9da254a43284973530fa0a2509dee7388f8d1ba8532e1b34fc359f866262b8665c7fe2c715605a3afda79c10f95c03269dbd5b18408c76e3780a789e0ba2efaa325731a27e8821b0d0b6a34f6026ec52488bf4c8109e05c004af7d01dc4d47eb0fe11f75ec82db347c1b4855a30d32c8a87ec64b6adb565405943bac7352d095e75bb0715d63191d916115183ba516d612826f34c284c28307bfdd99941a5b1b8b322c1448a599a7bdd0e209c9354ca226ed01d48dfd721fa49052aa8570f5c2b442d4bdbd2d15bb1030bb2dbfe80222e17bfa51d6702857117836c71cb030fea6e1f9c803df1d4dced2a05fc08ac222d68627a6aa59439cd3ca119b6d1315170d59554b2a7bbb34217b350b380b2c5648629f3dad18df515d2c8249512b02320824451c67952433486a5ab72835b8233991d3e519af7d165e1b597224707b9380c4c910864a8f1ea828d03447ee779640f84b92f35b0915c9e66c1abe97d72a23ffdcbd0765fcf2866b49bb25386cd993e334b169e1d457adca8c334c29d71fbbff5746178def08746ecdb01b773291f64c75064668baaedaf6e50962dd06653e1eff51b93e87f06afc74b20caeccc06aaa142889f46677a55389c6045d0b716673271a68a1c145ef41715ffe076141e888eba61f2b3893388d4e7c0af426f27282a87a4c5d07adf12a0f0893df84da433a3d1336708d5b626fa69ad8f9aedf9c17aa85a12a64ba876b17dd955075c45b4c0aafa944a0513792bdae54079f779bc949d1d34d01588194694450012d72b7696292f1f4f5bbaf8aafafdc5abb9767311d135619f008fe922b9c95d962cf1b608d851dd691f5d02682e6f96157bfe457e39b4fd598fa1c893592fe10ca0807815254f0c55a19e0aaf51e6e2543bba7b8c42f7e91ac7c37365fcf2128eb330cbaeb8b1c06fd2450ebc8d3883240c4411d61937171d3fb910dec60c69ff418cb9ab7b83d4e6eacafb850db54d8d5e69181c195ee8d9b00fb3b3f1622ac24e985c9fea255b081aae35d5d89b50f8424e69699bbd333cdb64c7c32c10b0a9652187263018727b8c8205803715cafa9c67774aa630fdde68d583c72813c857e9a1c8dbdf628612546ef6bf83be78129b4a5d45bfd81e1ce2349ec89f2f399a6a4da9e01084256ead2b4318974a8263d7ecd819a40278b439c46e25d16ebbe6004f455ba7ec396f65f3b87d48d74a2f6bd059edee320afcfcca2447bf81a91a7128d5082fdae697e22dcc22ea5b11a1ee66e067de62f359dbb0f7f7aea0f441b06ed7d09831da0aceafe722568067b478bc84b44bcd88a542095fdf8ad87e0bb3b167bcd5e09d3cf43ca9927a37ac22367241df5c2b90ee1d48770cb65dbc54f47e20774eef8cfa85d1a645f5898fb43444e6138daae7cd75c9bf067f1649d54143838e06b2037b8951a0a58c30a7c04f712883dda489136721e08c84a596c9091c0f51b6656255d0e530820cb18cef82946f5b6c669f2b443ab24bfdee5fd5823ae7c65b97b52a86599d3d615b3d96e2761695b77c5a3ba73a9eea2a4c8a71950b8615129622874450e315c6d15fc027497e4c59820281217b412bbc624a6493f7cf75f63501c08f89b2068baf05da89af71e9d95648cc75468e02b3ebb616debfdcf80e43ebf5c9a67da49a7724fc26d5b90e55ac5b878e5b7d313fa9abbeeb0e2b188f7ada2cd76bbd07c04e859750a40fc60730b363d3576c33abac6b4ef3bec72eceef1b2be3293b89431f739d067484037c56b4bccd1a4f94828d830f58465adc804a9c69cb3768add2b5bffed36cd74506ac89b26423f15984e0b0a87b9140ca14799591ddb95fc251a05446ccfba7f1fabf14496a2c9aa3b5809fdfe56f2edc151e80d27ac417494aa18ca6a65efecbd87e1132ff286d305fb21769cb4b1acde6640bcdafc205445bd698960c722a486c836501db92b76a15c6b7bcacaa179e015d87c6e2fff2a2be3a66825d9de9cca2368dbfa932d5e244e64fe1555d6820aea2901e2a02b4af1406ffdac63f22e285ab001a00e768fbbe6fc3d295f93791221dfc028da9778d9d7a53b568a6c50822f55d208858e4bd567ed1a6d5d88caab32e1eadb01e8dbb80cfe6668a14a47a0312ae3e43f38ad58ac8256f758ebdc9f179be9e14fbdaad04a833b065fc42dc24bb81f8bf505493d0cb67a290132c753277ef6f9d17d200806f44779392456510cf32088a4a506b1bdc2a9ab2ed3fbe8b55533a5471a046f45692fea18cffe7e7356be5eee72ce810ae7d0245ccd809830e43ab656855ce81407cc67dc3f90a53aa725ad23d99fa39215e8e7e6cc7bb0fbed0f19cf9b1a28c8f79c719c717686442eec8374beff44e81021e6a82da4057bb2331ca8d859bbe23f5fe48e6594de033affe939de6775307ad62402bccc24cf8b9588b529a66c29c7849c01ec7021a05bf9e8f2d750bfa682eb952913f18a76a129dec69afdcd079613a3aa08676d87b8bdd235e27f20f9bb4e1a3dc71e4f5efc737fdeba028f29582677f6dac4ef02ed6a2793494ee66d52d6d7d17735d62cc3b4209a3e0bb46ac03ede14f879e2c79dd3f05116ffe9662773d86b049e507e07d1da4ee340a1f610a1db49c776b71dbd0dadd91418e11207839b461192274724c6afefed565762cc3e77a5a0b4b7051a7570c3ddc22c4a2a0f79c10d062ff842ba62b060cd8c5d1d25981f5281f7b7328203e3ce442b426fcb573e7edc53a9a371bcd754647ca7cd2f25a4f8741e928fa4e8d95e1dc8e9f2f31c44b0909b5c969e1e37b6c81d08b85c413c4e5cc333ec5006ea7e3a3d5a0f05057a94b831808bd324d7e28a91c84e28c3df18dae9d8f41349d4382a02ac84ed5d1be6839151fca1d7f9523d04f0c425d05a2968b5f9eebd74abee022ad8dff976088e3e407f9eda05069b997fbe8ac194526a3afd94998346e3d173ebbcba6074195c10e2dd90fc28f66b03903c52cc9488ce34d4c1aced810b4469483a03642fdd5fa2316529ec891e83820d057098489fdaf37b44e53ffccc2386049487dbc65bba5692066a020790a4faea70443a9abf1234e8ed5cb9e827130a9e07141e599e9a0c23ac1bcf165e1bc5f1a9b62f57b70a918a18a4ef601f54bbfc19244c903bd04232b86e20acf4710ff8b78ebf9740aa186900f8384ea47033cfed88a16f29c80fcf8090863fa2e462b24a3bd3c7f9bf7cbd73b928c8cc1016124d7c84425488bfbbaa76cf926654350d1a3dddce80a8de03640f02c278ca03b2bca9b4ca9d848f32596d77e68e7352cd99ebc9e4376e008485f2dbde9acfb07d0dd5e727e5a763ed807a358fdc093ab8afe7aee8ebc8ee467f5b409abeb4f868297bf15d637f0fb4c3b5e3caa1e9ba9eea1811c7cbd5c450cbea87df20f1355c21d37f7cf85625ad672d0aad56783acbd2ef63658978456cdb9bca5cf9d82e7f4fe8ef9ad2873859ba6cbe93f2e2d3d8f6b5c02aaf80b6f4a09034378e9486bbb202d98edfe431957ddc8ddd682b456763f5b72035aea53e276894beb9e265fa408f27202de6dc7f81e8b31e27324ca7a186069e9b8d34fd2a0aaeb0421163bab098558c7370db8d5db78c0a81ee144c709b4dee273fed3bde33dd1c6396565d5ac943cb57756a99e5a96ee1e840815366cd6e9524d75aa75fb2e453679fa8a01313678dbed8b9f15833568c2e3045b4d962a349d35795f9fb4206f5e88e7248d1b02ded4e508dba5ac453d75e2bfe2b5fad7df912b780d19f3d2cac971ffa1f9ec857910d99eb749d65e5d00d169efa18937270e3923f58e4de66097393e1373e48a17a83c51e77b169d1aaf1c19fb84b47b51923faec11fde1dd47dc869a9d53a0b77fc28a548e5b61f12f04ec4195687eb1a53b03500013bb648112e69c32b9189a228f3940b19a869ccb4d9800259724b98af75e3f598b448d41964832b320db559677606dbb949c9bd71b4bcc867fb2d4055d475efede5b009e7011c56e9afd965e60281f439c3199ce81205f9d64e2743c400242091baa55361d8accf48e35184a13beb157f9c9603d5b1ea853533b84b81f00cc6c3a0224037bb7994cef6f24d18f1b230ed6ce606f8b8b393e28ba21557609de260a83739bc47437d6e058474f6ae0e162662e5082cae6bc049b999ab64c55289a721ac6496f170ecc062cf592dfb574a4c949ab29231087d66e6d55acf85a22cfe5a2fa679efb689734af811d7a1b55f4ee18c31f96094f43880d4ffe8901fca73ba0740de976b7f8f1cde90ae6894268367b4b30ef578a8eb8fa6b264d6e33ad8ef0462afcecdc2b16d80425eca30bd30bc86d54456853b3ef7d0302b77258f4916869bf48f75bb355955d504746ca126fabf9bd178044f718761d6c1a7ad71a97901ae2a3ed098395d98a14886d3d69377f21f3f8736911a2a46f64f0e5fd761ab4de0a0a2c7a3496a1acda92a81946cfddfcbecb43b9326567eaeca7dc4a521f7faac37a31d49c276f6d19644ba8ca62fb698bd088d1aeaeabc32aaeeff37f4123a289802f7a2938e7c02ece1e3f1e80c7022ef0849d6513ccd2d845e8c40849f95b621ef4be2eb39e0ad8f9f3534418e0f04485b0fd7e7e15587b8dd8baa60c6bf23a3d71b25e3ec554f437b324e17136918bfa21cf571c01db050ef6be3e960322c78b030b4e0b1904ae55f51a83bbc4930a929d9520ae84ec30e7a71d08a99eb8b87722946f2f62ece54a66ae7f2dd81406c3641447146e1bddc57c238f5918eae2b82650a92506571d2b702e02dd1c5169459a5c59b543a8c955992ff43fe02a971bc3994eb3ff98fc66ada3464729a7deeb4672dc3f3a35b878fa48f596586d2ee3774f7c5a42d768b138f0ed8fe01d2cfb5cfced5f641e7fe3a800f1184b950d7c15e343ddac596b69854ca97062461d4dd8c3fc1bb0c8a65fb68cd7148b92c3e25340c0fe61f3e0f5bc4247b032e808b288ec5fd5901c1c09143d2426b0697754fdc46c76ccc679568bce34c4afafa3a8643f1ccaf8c3c5614ee5c0f79b321922131753e60c35eadf16fa54b8042280e97ed240358c5fbf95e251abdd2be281752c517ba2c808b179a6283806f2852a3feb20ff8e29c0058edd7c76d2d2b2cbb3468a3fc23e4bcd09cc7298af8a4c3c03ff57431b0535cb2fe1791b432df75f873afa897c83c220397ebe6beb8b3ae8d2190c182227b85dc07bce8d4de6fca9273a41c9d071cc24e3cc7b2d0ea61e59941f96baabcf22ef7386c5c538c0572c4be1616b95391158e12c20931f461c3283f8435386a37073a0c530c1f65b5182378df6d367c3aa5002f81732f67746448b57aa5de3a873fa3c2af1279b7e6971f0d601eede6f51ef530ee129483c0fc35434230d45afb20dcea51ae11c1b92c91f5e9bcb231b52c6e0fe00bec3f2e4e4daf9ece0b4a1c305fde629543b5d11b4e66b5b9c5ea5829cca245061a1461c9838f8c5c76e7fd36189a847dd95738fdfa43ac261697d3014e718a628c025b3558ba97fc6001de974c2bfd1ff2b3ff775d02374848abd31da2c40d04bc953e5b9e33665a6b5004b723ac21646a72f07e40d6ef0259ad16f3442dbd0150c9b135cc68cb395d3eb0abb234842fb24975ff037e06647c00da52518b4af0ad67dc1f8d282ce3a76d6f0754bd1cb3bf17d43b03623406e0edaaa517db926f08bd7423d3b8bfd8ceea0f0ad61495fdb8585fd7afcd8179bf3794dd9bf4944d812c2834316aa6e866c210186383860d89dbba7200c3e6b7605f8d800641c1aec94712dbad3163fa42e7298b34ddee2cbede7af4a54b775fde4e6a955501daa06f514dca1e6b7057f7347aa78278cb1613a0b623a04f5394507f68bbfe4e4576e0274105e3b0d09e9d2993cc77ff6704e0e1702baa0dc7cdafec45deb44820c085f79cad2678cb35b06cc12b412ddcc036bc3de4b8af81a54c252c7ca39c60279b12d79056e5249adfabf0aa9a621db61a157e55af11e579f28740c40973182a5af64b1f1507542564bc62554fbcf5bb25b84fdeedf59d0c6620d6eef6b117eecfc8b41ced7ef6965e20375eedbe403bed6c8f58424b29ab9649c79d72e73306d454593d2d83547aab980a20b36d36d77c853f18fa0845b500ecea0550ed3b9444e1ef0bfcd1377b13a9154da63199c25ac2f11cb974ea3beb9f621aab01d225af499cf0cda99e59ebdfc707065ab799ad522b72206a1bcd62ba95042195b6d1ff58f95d5c550e2811958ad0440de407ee3634998e3bb64bbe852e7cfecb49e10a0cfca51c71b74f70666e5f865392b6f429ff5833b5083526d3774127e031dfd6b3b68ce4f0e6253408de4b3f90ad799c68670b8f139e2643bb5f561571cebcf7ccdbfb01e56070fe6c421b6849ea38a6c4731328b43ea20ca7b3dad50091772efd1df8a82ca22bed3417c01f54f64c17cd31c43a00271d0195f7a4687bcde0c507590dc65f1ba8115319da6bea3ea59d7463f0d264b7bb11532626ac3e43b89ed53b94276b4ac37f320e38a2db0b20b18bdb567d4204484835ae7f476a77c5614665c7402ddf6e399eea4506782dfaae2f3d97fe6cdf9b1816e33dd78462dcb9be228dfd15e61bed564f2d4a625248d801378e0ff48f4a9e082a91c3c6b4875554d480d8f2a9cc28ffac1d515a3842abd0c87d03710914425be26a3b57843798bcdce6b65dbfe9cde6ee02f272ae2d507a0dc9a29274f371a710f50565cead13560e6c789abe4d00139d1c736c19decc2af4af92e54dd8c577adfa98673f8944677c95cbf3860ba8060b12545e727e044e7254f1efc69ce7a483f90a6f0be21493db2b9b069f79ea7e64b5ae86dfbc6118a5c3060a7d155992e89427e71bda244730970c6ddb85199641c74306a873e47708ab0215abcea276eec5207ed4f5914e67e0d90a9319fe214d0cee80c720a5dc0500590b4b6388da6800b7a986f7d54811967ddee9d5f8de716ee583d02a367d9b91401083c9f23600aeed20726a6088f697bc7f540e2c81c205557c18dafda33445310bd3dfa606b3427c46d026b478fddc84462154bc587844aaead33483bd1606db5c8cbaba55c4b0680b5c08452ef0e7cd7a041f78ac3d437fae6b1108c27978f5f8f3dd03aa0cf250aed591f158c1f546e553eded71efa7d24bd5f3859e81ff66ff42e21a0dc067b76e748b564f32ae02ec73e0fb691f5a13f6a8c3946ef2e8da6f5c07e7e4c287b8ee16b739a753a27e09bdaf9932656b76a57b0e1bbc88ba247a336eea326217602020dc88d28368bfde03cc77c85d86bbadd7eb46e6ba05f60cd1df83bee7bb83c0a1afc7e9f136f79149d191118da7ff650bebc853e7ff9850c58dc8670280f84b8498a3b78b9d0bfa88996d1bfdf98c7040160257b50bb914bb2c845d14f7496ac6ad5bd76dade1d60cfb3a6ba90d7f89421ba6ff77f5b88b1326f9bf6c4d10918333f0437ec5b835dac391cd17c4a082089736cadf2ee168e834a657ee4aee7c08cf8ae95a775a061448205b574211fa52012718128e126c55af38d9e25d77487c3a9554bfacc46bc4e1bfcd1b9a5efad4af0ed290ff073a0718dac89f9e020d8881e46d1d64ecf34897f222f2c0cdfc53443f513e24016763d25cf7b27c5b5682bfc0b9328f61ff2194a4359c53edcfeb2db802f82c9ebbe7019871f2686e8b03c9b56eaade6023a86ee97d0c38011cd63ea67bf9b15f8b5328e020fd4ea542248979dab516643d021e38ebf4c353d5460f4ee02b0da3e75ca0753522646178d3ce0fdb498fac05f4f957dbe31b9876fdc3a6b3e4de6ec709c07b86ab5900642b3705f1ec50eb9083f74ebf9ffa6090a9ae17081d9e9021d0cae54ecf487f72f162add99aac0e3927fb8fd57f467d1f99021ead36d41fa4e8f958595fb30fdc05c18c3ebefaadf3db2e70c088b67bc44ad31d4f268e43df33d4ed4ec6f84883cebaf1776bb9ad1543e7edf2b49731bbab8811a030b59171b68edcdfc7004d384eab9c942d8d926511efecba6e17c2ef3302faddc7adf40b3b4ea38b2fba198c720098cf0c5e3a93ed3ee5414aaa90d5d1503949ca0595f51196f1e15e42ecd7a8e0f67d67a0aeeef5695bae65b3909eba95b04362e3f91fba734de9ef4595037d1141b562255bcb8eefe759dd7373c47e1fc49227c9d4409bc4ac85eada3dd24af13ddfbbfc87b14f5187a6ab3cbee8ee2ffc12f07d4f789122ea2b2e81ed2a34c636cbc0fc0e215ee775f159e0ae07bf314f17d2c64626de10f6e56c927c320046b7495570110b94584cd2ddd38e1e5cd1a5e3bb8c7f8391626008535d1dae96c0d0cdc712c59bf78c0cd89bbafb8b5dfa99bc8235435d3aad440f05edb33ae6911a1cd090bdf9429b5b05e320a87fa82b2f5705064e117c36d9b3cf9f4e91d23bc52cf65afa527ad4d9d3447d2e142aa5f703bf1bb53b3057c8dc0eff913cc206abca9fdea1135125fa6bb92ce395f4e2cbe6011cd4435be095a02132c2bab504640a04721c384aa6d3790ac39b84dd09bfaea1669197df7a251f47c23775674eb5b5e0e3dea4e075597cec0460ca67ded5b0d3e7e3ca494f58cbe28c55eecf3166e12584c6b6e940db17caf5ac47f39dfe421e1f9fa9d02339b486d5e38cf888a86ef3d3ba70b46ad41ff5149a73cbe2929b3effa1c9e654fdbd081f5077b0aa217a6cc5a8039bdb31e41fb99d18b6cda77983556d6f97d38613c0701b4c60671d4abf11d50a32f76d743d7c50b42b496fbd675c93d8179b6d8bd539e08f58fb22bf7635ca12b0a38f512737741dbab5d8e4324b36cea83019bb75d95524c590125c82a0f911cbf866bfc857d89df093aee8e5311990b3ff71345049d03e37c24869db6199498f91b5d065e73bc8f01a62d620baac77a6acf07ac9630cd5fdbeca6a4365ac229db96b77f6295e076ffca6bc4069a9d6018e05246573f99ffa063e8067eda1eac22c8a95ede4f5f35b682fb7ee5b4e1eb581211cafb400d94bc22e66677ff64da06137c36841d303571ce54c29744d347aaf73fb78334f117b29950376edf177555118d757f1fd64f7ea64475f87fef10dc1af9e7fba0becb3251afb2970fddc1150b196635ede71a680e13b4081de98c0c86e170fe1d0634cc6e9b378af2ac25b686332a0309ea6c69bb857e67e6cba0db4b77d9b7279026ee745b9d3133587b25337e0390e91157cd4f80e802d66e8cf7b09f29adbc290be74b1a8deef8a8142f2c141dfb234bb14b409a4d174af1e1c0bd43e6559c73361cb806bbeae112d44c8df22feb64c75b49ac00b24617049aba43babffc28cb07ac47c1db763e4d215cd6d73c346a0e75abc91c3c2e94fceb278031ef64f968f79e500b031f95c4179d4a38146ee3a36996160481053fc17e761c952ddd596e7561a9c12706121757f2aac7b31c3cdb40274709462c68ac27e10b018b3364dee34e8ced7d230b2ba01264408c85f661f2db701ce8ba361f1b95d8136abcffcc3e52aaaa12c17598cae8db3918a30c07d34d00f997a754826a4da4f3ef8b248bd6288cf50af6223f9cb79822727f10ea4e4b1338607c6de578a1ccbf9450b8998fa51bc1ba4fd184bd96221d7970f41f239284587de06ce41be1bca5bde3c8b3d45df1c9b2ded4cd3065e1cd942fdc2c841c00ad3620b004dc4248489f6ddd37bda9047d0098f79ed733aa6054e461603c247983cee7cacd0e10458b02fd92059633373f20b888f7e390e5453f22d5d54c6535941270049506a6d58ac18da057fe16470d1b39e44b5b52cf451a2475e9bb3fa3ad7887b8ae73ef526413af1c62ab7081c5bca566a288d315ed047148dd72a0ea485b1e2a14b2c4e141389fd83ad028fd4724dedf73fef9bf6ea15c9b43f0bc503acc06136adee4ff7a9f03f6c9a98964aa85f2970a7a6fcb93c980dc09c9fd5392b2346b608b872a8eee6d2c932b0b5be27d898305d7362b3eb86493e1de8f11b053d5ec281a35b842987ebb2a8fa585021e7e3e8db3df676a33d16c21ea2d4a1d56284c6dae34696204303c9699612d6f38fdcda9eb8afc9042682d92f67b0a8ef1809bd6960f1bb084c2e0ce2547c3b722636f7813c5525fcf51aa1b3e685a8a3a68d69da9b723d8fa1317c2bcf95bdd301479c1feb60348e3813be2346ce773284216d37031f4c12589c79a1145afd0a0e5ea9c5ded656b2f94500a2395f63dd636b0d76a150899f2fabb69485962342d52591f74c06059a0542b4fb152dc8752a38105db99563393d30be6b8c2316868c5060a0a86cc392b84814561f6a4f554ca56019aafc736663ae560db3de697980acf17b143b45a2534ceeeccfb62b81e52a931ca4b437fc08626299d630d426252e16f938f87ed9bedee8e4482c8148262c09b4e5212f4e89a9851fe2e80457e0973bf58a545fea74b2e5b64aa83b04b2ac979e98f9cb24a22a17946277dd18edc33f01d3e7318e4bff57a386f78884524bfdcfb8fa24d314cbbe04bf14664cf2785ced91bdb58aee7feda6db8b234259cf387cd7e5c4b05d694dcbb3fa2e67a343704688dcf8298ed0b3ed6a0e9f16a17917b24e3519779c294d0fa3a604060cd19edaf4761950cf0e550d23794830079bf33c01ce8159b1942b8840e36414bd4143be08759355ee2e7fcf7d88283b0be5cd168d41c254fc7f5a5620d7bb9e8e36203180f83aa9d4c72e90e1f329ba3f03011f989742797074c60c594de1e01760413f086a7897a999d79b8a22286687ec7bf332fea9df12021ed629c0812218836a186b1005769561e75a722d0133266981f5c54ed6d77612679b0f07782bcd0dd83e65ae31a06880726ff59dd4819a14a4c795ee1247ad1925375a92105657c20c7d6262f4b1b990707c08b5e3517d8f9b5bba08b8ddaa481dc045fdc20892d50f1fb6efeb330109e11fd5914e813580b36a160719106ddfb71150effbed6ccd30b36ffc9a5539fa438e108de29dad5ac8b31b1d14ef025a7ba495979aee75fc4a4865078ccaa6465df268fb2b15737adb3243be6ea418e7116f4be83b9b70cbeba6524a5b31bf1da5d6959f69b6c6f3680ced54d630853c6ac7d8f153f13d342e05f32524d5309766a228cd790ce0e7f0e23b8972a54bb814549a5c0a49e8268f68f9aed049b9be8e91e1833859233ca7c76bd94f22bc7997fd6df9bc801f11fed298651a0d12f927023ee95223fe6ea44f31394a7640df283c2c0506dd1b7ab0a70e5860274c3bec8db31aaa4f18f8594e7494b32700d6c0f1c0367a41d5bb554b16118acf690a54935800ac6d268278f748531646d147914d52f243bf33de7ab91cdb2d7aecdcb621f1b36c7b5e1f784762e0907b30973d8180dd6de0c8e1141bdcb7181f418c118ce7765374350a59a6ed63e65b16d7626484cb1c2c3f0d07819c7a00e5a27aa9b5b66ad07572b49b2d27bf7c87d482e9ebe8591e07d9bd77328787edfeb0b36727910754bbc2c4de75f785a4c3be90ba2f8e19e8948a5bb5ac313a9b27c7c23fa0692480045e43a790cb2299b1fc6842b07625025635f73aef75668a7873a753926894156f1ef760ce6b46e709a530658b0c29be4a729c7f1afac2f90c92cf7ec347a2712e60d3284bd396d6a59d8ec98328811da3bc82c609f07cf6bdc7d917e4b1cdb3adccb5fb507c3ee064c1712fc3b5842f89676b124dc06a30605694aba3b9f071753d1cf60f10eeb58e670ad8f24bc95f76f3ee8590651c960d02f5efb013413780dccbd116564445c1fff46dee087f96030eb87727ac2bd54281aeca40acf08b322abc186ffee33c9a5404a42d5660a1b28393b4ea425e577c56f7a2880796939a16352d13e9aab43df8fc6fac70e6b8a1934781c1043937b88e3c52a295d5ac098ecd66d21d4e68a1f5062391f77d0b80f892a3eb6233ad3739040eceb86a10534793c985aea565c0b0c4fa37bb17dafd22c373e657d4f6327d5784bbd361e8c05265ac46324aff003daf14851c5ab8c4931583e81e61857b81ab8c4a0f0c46b87bdf6bc3124437c8984abddfa4f819758ea142f7585addd09c08639b9009f9d946206bc983bb43a041f745a32b3886c7bf4ae62d8ff6b29af829220e1cd89ddaafb53a75d9c98d176c8050f860a509e57010bc2b6c6b78ff20e8cfc3d3e082070b6b63d97d56cf3f5248f975f689b5ce010048bbbfd5a449a4950fd23f78bf1323f3f62bacee7955e296f64215363073267340071790f799c669cbec2922b29bcf415057581f54bacf02c7672fc5ddcc1123dc89fe165f0702a803f9ed8eb802207dd7a8e53f85d1a095cf72176ee2102742d7f7319d9f81e775685d58f24944e3d267e7c0059346246e3ecb23ad1724fd3a958d9af7e2e22ea559ae2344b4962fc5801f5d9aea334276ac8c4f1dd0ccc2ce8f666b2ccb939957c142d44b3e3f694ed74efe2c3d14ac28572a438d50b5e5cbfae78c0f4769c7ad138b2df155a70ece7f3f307e4962e98074a81000ecc17d389ac0a71f50af141e3ba4a580268caba5db94ba5898f3eeac3fe3c13d08d3d05056bd1498f91e55cc29318b146828bccd73d46aa00177e04e6a0cdcbeb1d10d9dde8029fa3ac0802a59a2cfdeb237dd1dc38f68986363b3f01d59ee7bab1d0600519e81d7d4c50f9d1aeecc51df1780e58158629a9dd1319c6dbf4365caf90eb036b4e18e66ff603b153151be6eede69ca261f3a8709ce3265d991381f12e96ae1e4166c91b00e9657601aeaaa4cedc73fbbdd49028cae894d61c4efb48ed5737ca790830c87c3dd47367958997aaa1dafba5322394aa6d1550e4a7db3ee83f4345ee01979f27e75b7a849cd2dfd5415610f1e28a9994d8fd267f9c28777985106bdb60d61d4a18ea4553cb8fa8d6d3077a48e08b8fdb4adc67952f2766c0a1346881b5437833a0df996e7853ef90f3b1d9f9e7eafe9689ad281e82a40c61dc366c984ee8af3f48a844a01a46a01d8f2ea71520bdfb38e1a087a3c3629f953e798c4582dfc9a9b3dbf356987b2c2868624cb0cf5dd0cbb7611c8ae8267014d8c9842441b0212cc5a384520c431a84c0959551e73e3dfe84245cbbd0752acbdb9f4271557b6b80a5a7c5766b2887c72d4ace0183b64dcd55c9f63bb763b9bed9e38a05b7b2fb00cf63a43db2218ee1c63b1ecae56cc6319422c6c52a9a81b85c1f80f9014b68a7cc15ecc9b4311cd05e823f8c43d99d3e0e514c76247d0def33abf5798a095d8ed093334c50a228c07eee0f6617e8c6f71d78b1227a566d541ab82a6e00de4b3ab758b399b5db7e866e231849f1ea068cebed86a5d88fb58527402d789a8efed5f9edde774326239fcd8f2ad963a956f7f301d1379da0d62ae12699ccb94caf734c61881a1cef8717a63cacc2fb8e93b01c7a39d748de9644d887d8bffb9c401714872633b751111043d3c3911e14631184b592299056d0c30de1fe5d0088a6bab523cadc005a13e10a29919dd41bd66252e6b0665ed711b439f7397a8d0a2d1f73c910333915a4c63ef88cde20235eb203477b3226068f74c06ddff0f2694c0efe572142c1dbefb245ff31b0e08376bf4a285d961c3bb483a361d00e36dd45273be2b5ec0633f50be3336f531106aeecd2ff712d199639914201732d109c0b7574b4a4f1590b496c4717868cf9ebc749c842e3ed239fac025e7b6e11270b6971fd150a8e7b34c3932d6fbe12c30dfb90bb728a090af4bea07633d6fccbe54669a5678e6d7f97f49d0ef343a11019d97a97ce8c5d2dad6a84ad983690b8b8e497ae9809da93d905220e65046e0cab811e40f7a6af482af9b336f55e02b20de7f8ba40c041ed3d61882dd0366189b3c5472e67156d0e47a0667685e766c715805d61734d285fd41fcb4655618b95efca08c64925181fbff28b88ce730605ba7d16775de4658f08dd346cfe5101b1f829d39a258952a8fc9129f76b11455b00c8afe4e5147e6f78bdf945eb38e988439f70cb02e371574b81498e3bfe97263c862e21eb71c1fc6dafe9021d184c22c862fe6355aa66f97ce5017395bace7e15fc416c243f18a46e23b8033af93ff08d8f18bca84b2658fc4c4a7a2539a1f03b9a1e24bb9e70fd2333451973f793804bceca14e087590ed122a7a7142b01b5f5ea31a99de55955e5d11eb3d996b347204bef2c884e38bfa37edfd514deddb83858da6e4c23cb98afcbd5f1894f86b52d0849be31879b43ce8c34c05a42ce2539d4859a73c12715b1e25070b5c50728573af87169126a57eb6b8e38b4f890fbb043032fb09030fe305b576cc1f44d9e1b24145469d04b3c92a829c618db41cc424af293205b5064eb311981e5e2161016898b96aeb78ccd8b11249afd4d36d8843f675f91e19f9f5f68a3c43d6bee2242bc70b611cd61fff180350c92177b4eafd9fc50ec852ce90a51a640c3306a9ee376d670b8f5ebff623786d8fcff967e25661f8ab9bcdb9f65fd524ca587d23851ac7f7831570abfba33a39f06ab80deedfdb72864620b3287b553cee5cac73e6c113875bc6daf49c6c15949397acfb66b282010e2eaecb2af4d118a8b60ecc864d7173efc7ada38d8d067eb56bf5df8c34876358b73861f4c8dcab90bfbd7873360b4502dd4f0545be5e19fd891576972b2ef63a6a5bba75667b2febd799745766c2bff5eb7f29663831b983d80c7a432330e3619224b2a8d8f4396c35ec7ef8d4759edabf91ce9dec423ffa22083f1c0c4d5946986a52c3c424f5c75ceae8c82838064cc6a576a701512f4162e737bade7b2427b36fa236a49ad728786df11d23c2ea071f678c21503d1bddf47fb48f83d4feb2a98570b9e8ac5e0f00654a69e55f299d5e28a3724d4fbed208d210963bcab13b95d638b613250493cfdfd3218ea8cec01571abf389a737507cc57f0fdf1d1f299100c87b9af147ea7893ff92639e5b7294f0cccd30a464aa572b44e24bf71b59e393675edd69688520ba4351a2a12a586ad18dd36c1e251d4e00c7a081343179d9a071e742bcd54b2e1325469c933cda40da6885d88e86e57efb66db004e97d0966f7896bd23e2d6b90785a262429248b9d4b9b465744cd90b7cf48e8fd55c609f2d2fd574f141baf98bd09ae7f6f919c6d803f6a1ddb0f121271c39a9b753ab0567eec2931b224a0d20281384d724bb06684e2d9d92daf294bec5ca8c0d20a70253c2c87b4b6fbf4f014a01ecc17c9b271f80e3c50065fb9ccb1a4b3aaf905c5039c9d72b92e24acbd8dd9a1561b9d3d820d116558c85e50f2a4d4c84085deec679932a4aa44443f85f9cfb52699051b2592034ef927c21a93a7f5e57106a5c23dab6a95dd15c5dba9dfbc5135617afc62e2c364befafe3c4b51413c65e565febd0f8cc5aad0c9a3ac62269739eb1832a5f647ff93b9de2a67db6e0d20be5bcf8dfd4b0620ed84e0e7067af11b59584bf5c6795d37611c840ad8a0747a62cb414197cf16898e3d680f570ee48f5193a7ae5b9109599e317b804f0223354a9be5a735309d67807e1dfa868b1e18b86b880a4cfab155851f0fcc2bee539d1065a2ca509eb7e5e3a57e31210c040471c6e890373e1d9b1f53a98525448e23d8e0bbc541d8cf770f1721b2ff71b4930ecd2912e91a89e09782526a12554e791c1801bdde3cb9bf456ff8b0581b3f2694e89a0dffa19448f4a356f1f2b5d935292e9967a1032e367d6877bfc5439ac10a88ce0f6f06d3530149ea4ecd874a1dd9d43dbf303216c00f3204a6f1ee77052ebe1725a0adf96c057db92fcd9589578fc4e617285766fb633e40c38ceec372f1f9696099090e50c0a16a160d840a5913abe316eb50f9f39d7e338d9d4c9b9d540bb12005c5ab954c3293767fab58b4d74848471a67caa88e51eba8bec265026dbbef74b9a0f9c90fa8cd405f8a4d5a4ad6abd72a3fc0a5938b6dd77f350000f5f6a49e67658079a89218c736ef82844c73592b35b8654961c6af41d40a98d9941aa34e0d4067e6be208b106445583b738543befa57f54a5724d280da2f0a19da0653829c5e35eefe14f22e39ffa08c1a1e1434b658373a75ff2e10e8071b66d332b69b25e4152f5e5c0f2fc3e2df9997b764c8c586592f5ef062558425e8eee35e660bd10a08cee404f8570078aa1bd69a42060399dcded68572daa1b22bb1be050935b78c0c4e30ab0b3e70dfee2bbd9078c31b3b47a5bb7d3e33d1a81237e16cf7573cd90f93475bbe55460b461921e8af07bcc7be768713155f1d73e2db6d6415a607bedf61611cdeea1bf8271b08d71bac4da95b70d132ab5c3b51863c912c8d59dbec4fd3829c516aea69ed004585b8b08661aa39fa2516c6db9182052572cc4ee8cde1103f2b167551de221c19eb773eb546a55a4cf8f5eb4572f1932636f7f59b7312dac7de47ccb55f1582117e5bbf3217b21c9e7b697fd810c1ffd7879274fff953f6fc54b010b55db84cdb404a988e942727d4206c4a96fad2cca3f42a504330b3f5543cbb010fb00a87cf480b104f8a20fc9e644745911a1c27758e3cf475cbd6380b79581d64adf092f0ed30f308f502fcd79a5b0cc0d4081305b8ea045be38dbb6344c7466d207e8ca5fb4324f17b111870dbf8e3f28d22371f590a320d13dc4907a8fb6ea717ad986828ad1ef493109a17fc40f5e78ea8e2b44aca59d39f86bfa6b7b1568ecb8c94d45595f47b9b22b4c1c9c43d76bca8b8621f088bde4316bd0bccfefe66990cc947aabc21dcf6ef644425ffb03411cfdcca7178b85f26545e4106604dfbed6b9fe533e22073e6fa8df0ebe6461695cf691ed745acdd5e41d6f87f4aa46539c42df662ccc407f93b0049377fa929b869286a5f5964dbf977f318ea354020f0977bad4833eeb53fb6522456a96ee2195fc413d0ad09d9b551e643008aa593c6619be09104ac84dfb823e09e48260374a6aeb6fb53f4d0fbeb9f841663f8d9102f9b9f4dee7bcce537edd47941205000a9657e4e97ef8adb7cc2ac26bee4db3815bf53e4b2af4597be668e402937bd6454fefc66d1b12b065253cce094954dd124779f66fa19dbcb82b95938d570c336cf3028b6ac91a568f5c62f8563f8c113cfa981c0d4fc79271dc404c2c318159e724580bf6d9b2d2e6b6f49559f51d68de790a68e9d38e369f0e9d591ac81d05691f8e49ae928513bef7f78c3f6680f10db1c3e806c4119921c1acd5a3c55d99e07c2118dce70ddc15d08df187705f020b78a9da3e2862877eb229c271011d34208518f0aae4d6f5b46ca42e6a8e72bf2c657e8541e4b3e0b2ded1f74d218a5ba06c1f59b5a2d424f1979933e6c6a7368d80c367cfe0d3bb478468ca4e4a7da4444f8ff2e8a70decd59dea217fdd404ad23b2359d85fa69f1a5fb8c233fea7fd5decf6b62c14497207996b76a70647e501b5c28c29c3f296bdc4d97cdf1465485058fa956d8e90c3ac990ed386ccb0ce686b77f04d03a1068ea6f66ecec81b86b5b3209cabc4a8d0874da842cf2d1138da39c14ea4ce6ad22adbf85f682dad6749b2fa917afa5a8082dccd45a0667a4f37623ebcb2c72a22ec0e8c514d3addeb067696b292e768ef37642bb02ea15b799d638d80607ee39fcd3afb6efe02415f963daeba1c19ef0513ce31b403644665c7915195cad3aea1bb38fe2e6cc7ec39c25fd92c0d8c2329aa068de73115cf8fd3343e1619bc2b62f24776e24d287baff8629bc7318247622ad1edf04d16544306408c03273934efc364bb314393bfe305edf329ede07f8bf3f2ef80b1142ab2c48a89196b842ff5ab1ba9145a24c75d5736162c724614547ad11ee781aa3cef0014c868a77d15c1f6164028d26f5ff92ea93d79afd376b6b97847566575a61c3c09bbb92726eb9a96181f01dd8e3df7dfc5eaa7888de9a41753c188b890c550a41e685900594cc5950c05df753761cd40e2f6085eed78d08666fef775496a34399addb56b4b10314c4715a198f050217e657e40bbcd5923fb1d92ef1ad90551bef680af74b208f4d48016ed4a06d5bc03623b7d1e6777501e5437e5e3d8de8b877a94fab00f5e670d792a1854c0c201929eb501015c00f2b84a92483ef4dbeca287de0aab3784b7c84d0750e74ffe0e63b78d6ee5ebbd1bb8f264e7227b80c89dd6b74e5133e2cf776c6a98b5f7c268389eea85973db6c0341c4742cd34d6933e51c2faa81fda6df547081d9eb5d3dc3b310a1103d083adec76946ff501dac93c01d3ff0f353077ca7dab52001aa9e6cc1c3e22d11bfb8480ec484ef157d8ae4edfbf256cc36ffa1e4bc8b91c5727dfb0242f79ed4e2cc96ed5fcf65324218114d9800239d2e910ca5cc207d39bcf5db6fbd1e66c5036524b69c44b074437e8862698ec21ecd79d2dcb3f1f1a9610a2d7c0bc829b5b9e061bc703fb4d133bc2a3e1a63d04c858bd06358f2e530427a8d05524ac3d357c1b3442fe0ab7f0c3b94189b9f6aa4bc4d8397e1c172c1fc85ff5e4ceafe4150665c627723c35b44231e22d0209abcaa59cb7b9d9055ea5d3a088ed58f952397ef5934381b369c48e58073b919b5a25eb9ec74d5e74e04e013266dc25d209106f07e381bafe9a382a5d5ae55d0969f3bd93687b0fcb6f6db6f1909939c5271f6abe10cd3899981e9746e9e82af09ffa69c4a297d9b16cbb984c70c70f56f14a7b5ac8d5f867e3b9f4a954245deaa21fb5a13d2b41ef957fc841e5a873952e1d4cf31439392c307230809b9b12a180a19c79b393d1fb6ab3d597a32d679df45fc5a9c2684a0f46b8606e5434b8892e890fa645d890555f5a138e6cbcf869adf5872b13f2fd5232a589da72275f47f31a796ce10388f4f56ad8368cd2659ad263493c039145441732e7d2fbb6c5da6115dbd67f6ba7e9866700da429b6d43ddb23d9679dcc117451a2c2e8c3e9fa9a984fd6cf8e86c6c6a1d5779c1a7ea8a13037237500cbb215b781a04b111e35456a6def5559bda04551a8bb70fa805251eff7ae46d334ed0159c9d6170c33546d9e6fd1a5bae2dafcad8a4ea8d0446dbc543a7cb4472187132078274b91f06b57aaf8720a54e0d4bc051f07260f30d30440dcce375d88777583dc05a29faf369c7bdc2df7ffba3ca791dea004db0033c73473431aff397041d20ec4706851d1cf8a59ad1e336b4f8d1e8ab31916d6386f5f229ec92e4a9980fd1c7a9e4eb9074d451b37114a550536f7d7cdaf4afe678f49b71aaed81b1aba53d5ef7b073ad6d804c8d5fae78e2558e7aee1203882502230e910015a2a7f468a6a06aa871aa63013a673cedb807fb7bc7ca7b47e621e970a2de5314010890b1f9d5d91e48a03dea2552d576e6b5bde80124f2c3cba84ed519531963bccb120497d80e92fbcb0664ca8f86884ae48bd63fb6aae6ef7425f4e48d19b32f57fd63172514b68c5a517e3e4d81210c8e2a1b19c918b5ccfaea0f7c4b3f9e7943bab981db7403a60b8392bdbd89bf761b65825a46783965a33e92fe6aecc0825e27ffb85ba52e153c9ae25fda4b2e706bc75f4b9eb7d5c20e7e2e62aa55fe66cfc1abbcc4080b0389a3eb4f5250397873fffbf84d3547690b69d78b58921546d750c77e5f1c7a97b61649a31144b496f7f3ed6674c65611ae4642477192d84bf4693f8848d10fe0fb703af53b4e966d1a443b155bd28bdfb41f843a38a39b65f05f76005979a074d0ce0178eacbed700a528b2999e278b2e0d18aae754b01fc78bbd53738719a51535dbb9d05e645307c89cb1db34c217c5aff3ed7a77587a37623c5935b326bd980ce7a956d386beae2fa93ef968251868c2590ee8a44925a6625ea2fea7782d26d085a1410f538f76203f8ac9a1c1d16ae812e539b7fbedf509b92d09eb31569e9b42d3adeb992d44b004b68b2f7a63437fc5d501eb8be871692afd77fbf57d22f08ba6ac84b62110646612a772c762a8c8ec0acd03c18a5d78f49d04f4e664908497f8dcee8960ad009c6be817e42bfeee76971a668454690c7223860ee7e2454786157b75b7f95cf8044f406f3bbfd6eab70c426214edb6fa2020897301a2a450b80c2b1263504fdf402ec9da02643a520898bb18dca39ccf90483561ef6549af2d31bae894757cd26a9fd2359341bdd53a29351ada9181c1ba9caad6b1800d44e45b311c5963ad7ca69cd6a9703c4380a64106f9c76b043261a43a09686cf34ed8e37e02c58768cc82047593abaed24421c434a0ab9e3f0a10e083b78e42dfe3f633f0aeed8c5fc129c92254c51a587c519249396e91df0bb1036f3da769a754c010e819ab900e9b6b5f28492c88ab645bab645409bc4d1bb9c09833424b76966b0e9f6e5f0902b45328369f96ff49b638c5f74878df6cb9bd5fa1730223d790d1c9248835c225f753825cc70ab8b5ae8357d7b4ede4b274d1b27e594389b79b21beee271fa02f200c23ba6f4f8d84ad83251df954a5d661cdc26ef0f55fcef74d4605101edb9e2eac8bb144fa4e484dbb8499576451376dcf983c766cda88cd5bc75ad95c73d7652d8635ffb187bda8e1918a263ffb2d62725976d92510b995069f89a9cccceba0521a1eed3a7bdd94d83e02e8eee84f068fc969c1c1847a958fb67cf1531380f358cef53b579a5c4b82fa449343963f5e3ce60e7772d8261a692b16e5471c5d8c46b7c8ae16aabdf1f9a03b11d925b8e447f5861763d3ec6a11c631622b5479fe73c764e47001d2f471bebd41e11eea4328654b83ffce02a237f0b7274d3e36afffbb3fc04d5344826481e3a2152308b02d1ecb98d388e2035ebe5268f8a8cd1ac6346189907698c2944ea6d27a004084c9de6256da6d347b07bfd0ce9033a1cf01cc6d4814e5e6f232de3d5ee71e8dc3adb81299b45e6ec4d0f341f0c3438dc6ec81cd5692a3619efec0fd9f042e76ebad76e0b3ef3d61cf49a133eef07f88752b93e485948c78ca117dddf91db7ef31483703ddb48af633ec40cd1135bda36dbbd34d3c33838ee20be9f6c1b51fe2b74ea1904be2ffaecdfc9791476897e98de4840f5bac814891e33f1c2b75861d477f89194310c0e5bb2f38ac95666c84bd65d5858fd39fea48544b8c61758a2065f67796e4d7406259ac1fb371a42f349660d3164eee21f2c24a28eac3ee1e96fda619d64c29ab8c96cb0810c771450fdeab6c33e3405986bf0c4b4991cbac6a8df42433a23f03872377ecd55d1331d01f1d1756d4ea20cf9f90ff9b64d1bc51323d5488d78b8861b904cf8ba726ee9451375e53a3ff56c510eefa4f5927c4790e7f3557b7030e52359840ce8b31a6cdd0761ed94154d427f9955d97a0e21720c798d34311b0e1b6c958cd4a3ae744cd7f3e2f8767d3485da7c364998d1ebe12ab1cc923b58d697c1eb6d3b6a417c49d63ccddad32763855f0938075f9cee7c2a57eff7254598f80bf4248f271620872a31364f8c489bb8cf5137b0638622c12c3e67195c1fd91b044bfcb27c776e8840012801a643be8ad4e850a367f5a28840fb1f059ac515be5ae34b323491e1cd55aa0764f5323d436137e5000232ee0fce00b91d34ad7452f9f09c6c1e650509e9700472ab05832a501f2a62d93220e75b28257d461fadbc39b51618d48a9c6cd3381bbe55d7559e390d18d0de24c0721c55d01cc6ca247ac58430d27515649ea6d199ace839456002ba035208c7a2a6a081517ab9951eef1414127f679b21c2477483e40f819d028b14541043423a7186442795c904163f3cc816c6859ace4efb523c87c458d0979494285907ca4753ba63e52aa0fe14afd21cca72d7f2d41212feb321e3409651789e276f608fb1281b7ad9d3581f8ca953485571a8c13a84f1583b454e585f7e61325301004107429cb63f0979ca9631fb9d9d83bf3b7d38163abbef36874c19e6782456b2029f90bd85cf25f0444143cba851b019560062e6c582fe9d9045bb2e0f234b47663b49f00950acd140b9379a4e03595f520e17822a0d288f25821915d9cfa74196c5fe4c6df13f4fbb456dfd4c39794ddeca186210527422993a3b1824d761b8d9a17ff835ab8b9dd0476c60986f9f5dc742b6a38c117bc90ff3325fbba5b16ce3359d6f41508ad8b2d5337f9c85d470d4bf0b1cb9b1daa4bd5a58d855d69ad01d51876434f9656573e1a33f69e85fcf97f0682ac7632bfe3079a46b6a6cd9bcfa82261345c3e11ec81ca4f98df59bd7c0b55ddcb21b3c3ce33f10056f3b241f8524352f2dd5508a578863bee2cb2fd333eeee2f6213cabcd5cea490cbac5d0930d9652dd78beeb12b394f54e01dfeb4c45162aa956f7ad423b94e26c908ab3f82c044913364b2528a47e231a1253ab4360d53d00b44d098e885997663927f8bfcd0d6fdd109ef074eded2500f329dc15c388c459be886e9e35c0d33cf4f149494e1a56f9220d23a3ca9c8e9e387b69bb670051ef631426a12b26598ba4b6fd791e57896b0b970e24e5cb49d3262fcffb2e6d6d40da21cfd5e095a42b40bea4d9fb95b4ef5934248c61cef3dc1ac74ffa254b9a7d14b94282ed66a232df1ac5e83fe9df61c28c3a0d02763a68a81a1482a1c1b7185db087f8708fa0fe0d278e3d237e5ef9832b1a735518097577f88456dd7105813d062b576e89a3d35383d82dc137f093235b538f9da45e80eeab01d7561a1fbd93c07826398884835321ca6542aad56e66daff4bfcf52137e51708a828b1f9ed194f66482d67a406042061d67a191f4c6b9440a6ab2dfaa9adda04e10f4d32e137532a09760f73d83148cec87d685b2eec315a94e5ca171bb663f9279bb4f6e5ca80fe8c4fa8f677b736e7b8139301732d1433cfb1a5bf8395b2b71de7792e61f0f3160ec0a5be7bbbc4f081b6f4e89c28fc2647ed3994f825cbb1ba3807bea65c00ef96e720edee5b199e2b252a1a3483205061bdf0bca6f390745210a0c4430cc0aea9bc1e23c5610e55097e14789e2380d90353af0a30b37d50a904870f842d3c77abca85af0d259bc80309e4b8d16963e47cae05cee6939859c0c5bc88498bcffbb5b5ec3860d4b00f11df9fa05dfdaf3b860ee727878e567e29c708bf25a8d8479b993c3d7f0db34ce848a4e9507f263ecda26ca7c3ff2298ecb391a7084890c2fa9616d27b5e7b564bd3f62f7b2c442cb6ad88fa68fd77bea60a060bcbc9270ee8126a7b480aa58d34165c9bf65ff0d54ed1dbecbf326c07c8d9b57c47968c62a6b0766f812706e23df36b694caf1d89b98c5a273713228f12d2fcd1e30adaab374c20932cba1c6d9821a3f3ce6f811ad37d18885e6ad818cc3b171768935a5e732f01588d19f06d6a646850d7dce4a8939253dc5ecc625d15104310aa116aee38734b8e6f8568db2d7c3e20e01730739085798430cd41107cefac2d932c022eb480d04bbb21431e285f9151e89245d83d9c4fbd222496d6f2f7651b3ee5d12c31a966c8aac1d35e6b95d010011887ec5ff4e22836590712226500590740300d1bc655d3b426af817f845b8be3b143fc30cdb3543d3d62f11370f74956aed9c7f1b5bc5d5c78d2fd11a099fd940fc6f0916cd2234371b4f4e1e230f1aa3a2d38bc03fabc4f35d912550e0e7c0f94cc7872a44f2b04313edb02c2caa68255d09e16301ba80c7efe1b92129f80638a2b1dc11878be539195ff03f3c0ed0d1d5105ac9717a1490c0108f72fd465db4721c5e26f9f0223f5364b5d46213a28fc312862fbd6358f01f889e30ccf3db6669926124910b3eb4be6c7e74d6bbbfef6eb2bb555fe76e661a021522480b472c34200ddcb101775bef067cb7fdc41aea84aee00a6df6d23128d549acdcbd627d81af532869c9756ad7e332a964154165a0a1140ca8317d02f1d5b9c83ee61d88ebf5723d1dfe9b62b7e4e3a46f115d3c24e9bd3b153766cbe6a9df3ef83c362ad9cb433964106710dd95e853aea71ecff858e271e9c4f2bb1cf3136915e4d69f076f22a48068a855a7bd18b79ce41585a50595d96bc2aae1ee1999d1f29364bc0dc52c9d71eb1b8aa30461882c173cad5c80719f062cbd8ffcc4bb54b352b6e9825944827c10dc94c4de3e4658d3096f8092cd6fadbb395df75b871ef2e0fa332fb35c3ce6b8b6e6fa066e8063163565ddad4d70cce497367ffd7daf8eb67468cb4600e68c743263c2a9bceae3f6bba54fcef07abc73d53035ba5eed81e97a97618c71dcd545fbb01af2a56f6646a75ed7c0fb6128c48ee27525e4ffdd025c8f18851c92389366adc0cb0cf85d543f2a3992c3575378f31a45e468236cd80468beb23fe789aeb6403fcaa47216d5ae1bb991826123c75e3ba0ffa2e6e448912f711cc3343bffec1907112ce76425c5416135739ad581b69dcbb697bc1c18dc683cdb9862f2feeed19c72390a45c293d79840dad630119f6700f159b769760feee4f33809a35f48123b1c4890e1f0a62a569923aed5a28f784e3a66618379f6b1a86e4a0c8a6802e6d631eee91d923691e7fc450878491704e1bf5f8fe86e1f9a266ddf7a19c2f00da4669e1de22931a43a9b8421ab90a5d282cb2088d946468a39b1967b373677e2a7171f4bbb23a6202c80dccca5bc5bbec094785385fa9ecbbeb66cb939f1c1df2ef0dc30377a745c2cb51b6febe3197feecbf7d2d5a210992ba338ea4a7c43ae0594e45c6d2eb7e758b99c1ac4f2b98911d2811ec95aadffc6d4af58bb06b8850874fbe3d5cb2b807c40813cdc6bad31a81fb1e8b9cfdd264a948b3649860f4aeb84f1af26076178b0adabf0b13d7b46e20a31211ef20b593b82f57cd30c4976957ec6cd67791269e1b05ea9558af9f430b4761d84aef3606f6ff7d3eea90a62956563790bd04868f1ed9aafb76f631d9bcdca5e0eda0a2430377b7c8fe86717b5431457b03e2fb08c1e1466a5d2355864780321b46e954a54559a889b7608c794150d71656bc6eb0385bf8527e0f54639d3b37b0211ee7acba3ac38c79593e29ebe443711518cdf7efb61d60c9bd8de6e31c82c0063e2ef2db6c71d6325301573c59fb8bbbb048620c799737e282916d55c50da9197584b7186c79f449baf3a5829e4185412e322bcd5fd88b4379f285d1ba8e1fddd765bc943ad37e35712eda677e4b30ae8724e4dc4ab05d7abc4ddb426236bac36f8ac5e542cf0af3c913882a3dc781d1eb4af12956c9a4d5427555c4c06836f9eba4199870bc48235cdcf936347019588671046e3f67a9409e4dc71169fe800b699f25bd211b848efbf678b6f7e6346204fedf24364d053e325bde8160bed0171cdc8e4073bdc109dcb7e9052e9f1a8128fdb717e431be995b3db23f9f5f848ee592ac0758dbd5ff639dd810f21745455d49dbbca71557d933d8f169b7ac6d781eed83838a4ebb9f40508aba99f004c3a8d0baa707984b01b36deff4082bcf339c6c393425543ed9256cee6fcd4714deeb7f58e0576b97bb6515cf9c0780c86c6eef08eed63083cbe0596839772c7b0d138aaa70339759cf6cf2e9e2be711b98ab1eeff9e560cbd3ef8b495b65d8f3e1aa9e912f6c956c0a615197eb0902f6af758dd8e11c635bdd6a1fecf21434e9a318a067e5fe2146bedfed3dcf2629e0fa5debf83b8dcf5a446f5c75f3e565e1ba6dcebdc04284958328f93681cea3bf839183a405fb3dda1a480d78caabba7ac6fb5e344848ef4415e9b5ae6828ba0c5ab7a0beab36222c6c4d09a504383371ef52ae9980cee769dd640e8342d21417dd9e2337333f82cf7b605a304802fb3b538d80ea24af1a498bf46b258d47c03b37037eaa9118e0adc471459904f447bbe47ff0ae0682191696cc9b60925b36eb45b78f84a05aa196c1df5a685ddd0c047720b3949873c1df1b58fc6bccdc8a7a9df9b205fd11032230b74092541b1b716bf3e14a7ac91df5178099456aa7bb5f2790d36768e3c40d0dc55510a89bc244ba40f1b8f3b3769f27e4a6e23abbcbc9a09f689182ce867cfb84c4761b84d0789f1d844c6985c89b6f4a12e5595ea09c94a50b59cd4e4e7953f53d66d1730bbf5c5460971d64066e8050fc801d69a4b9b956426d5426459875f9bc35574bfbb6fc72f74de364d77fa3e6297c7ecebc6e34527a4e105a86657b4f2201657f262f6278b6182066e1508a26becf389570b1deda6bbf1da6505e3079757f3798b2541d9df5ef7c5e098ad4e465e6f5120d7b04c0d1fd5f876b15ed3505ca2b6e2e458c000ac4556cdab1dafe775998cc865fc41bf4f8b523560039c4937719253c394651935398c7eebf11ca7631d9686b6ca5cafeb3eaffbae211abc485d9f5980cb1b33ea11c7443085bfffb1da9f36c010bd9b0cae9c283de5f5b0a59b023041cbfe8403846891372588168b802f89d0447976744d0aa19b2d7c8ca8caf81a981f9f57a00f3748de3423e5ce52b8c4d33c4cfbd7ac5f2a7e82992754e4afc9ccb1a68ba631cb044f08f2c73e1be299ca4796c40fbe0d564ad00f515a4a4b662a781ec8e9ec94c6d45bbe632b94de0100f6a8c7361b302fde6a3b8c1f2e5d36f8e21d7d9dd0ffeb1b2e5d38a2f22780becb53bccfd0ec8c2db876cf69dab6e4a8df8d5cdc0d57e52d4af569d433ddcb66ee5b7abf631e24aff9cbbfa59d59524246f9acd705b3af6de2372cc4412d4a015554d73074b9f9f4aa4a4e074f2085dfe9bd8c223cddde83a575385799a8adb0490ff18fa853267740010b46e682ba7bafc8531b33cc48bf4507f05df7c41cd9e48f2b0f2c246965742044b2f01305d808d4284eb00d5848ab60633d9ffc6918e4ae05672767ab729c7051237a9b34dc2981bf7e2efac48c9895ebdaef8b9607ccdd44e331bb1422bcfe21defa5921134b5e5955c6d98ffb1d7d87aa16b5e57fac6d28d0437b852d06fa21b741014677a9724dde3eb6643ea37baa7045665b2fd69823af682d228b6adb57755b5eef08a8f9cb0a5afa58b8c5cdcbeedd8e6152a6ccc0ef1072a82ade3b9cdf836149bae179025e8a5a59490d3ccec5a42461545e61481ea381d0f4452331c15887295d2516a5a87f1c80eaf1aeacc0e479884f61ae903bc0c69cdc8c727e2e37b4ac6fdd9eb8fc5f920f3048a6975daf4cd5d8d7321e903327fd651a327085a9d9dcc9139d5d5d6076bbc80933eabd31568124f7a255d8e077336abfb5945f555dda93da937308fe6503c47725a66ed22adc5d3d830f297eff532dfe7075a11076c3bde9c070db02cc34314eea19e6409722cf90ef3181b709f8898569a69130fa6b07b9a8ff94c11443b1f51fb8b509a849def3b1018e336c15477ac2d1bfb497443031274359a36f6430b1542d8861e56c2e1276ec749adc79987208adad7bd098c3d1a648addae61ef2a4370cbfc58160a349a01ed3dc1d36c7587743f3627a7f9635ea03e639f518008e0106b664d251fc718aaba3c5362643d67110d6e9c89ea22b1cedc9b96088bbfd7be23949ddf2592b948cfa701251e3ba585a8584023030e8d2527ef3588b9389dc2cb2c730861d54853c967e913d620aa3ec1e3814f719a24f65967731ef255fc978d5d7164d8d5d3ef43a99a922b90fc697b639ddbcbf235b5ddd3bb15a781e71a12a2752df931e48ae72bfb05f836b87502f091e1cb29c53ffb22c29fb55117724700ac0ebb2b669642d6276a4f08142edc05a24f1c9512aebe51ed853d92ff7f189b96adf003d550d1a017e475c289b9d05cd6714eab9607659a4670146e7d1f55824359e59e7ede25dfd33cc43866e67c6f005f74be4c95f21de735b678ff337e9be4058a8d58ed5a7ee665e5a5ac6cb5cc771592c0849e70b13c4f4967ba04ebf548b110250fa4e6345048820e871f741e4bf4a135e0dd1493bc506e93f58365dfbce1e7c75f91483f37406176ffd28867c7174484c8c8fde063a34ae0669183b6492f3d92be2a1fac24bd2134342ee8e3fb846aafc916261675f944da53223a6bf48043c9dedaaed82ea26dd1484236712dd8767504969a9fa21fe895422a3279478f4d38fc63bfa900bc993fb5319e2abe47bc85ded9f18f6b1e87b4714e19babb6922c8dacdbf47dcc4a29688085a0dfdf8b7eb12af535cce4031f9a41d9b311a1601ec3f38ea4cbeb47ecf4db20bc00e75301e6cd8db720d62a644721a122b9092462e3c01b43097e40b064695958430ec8ac0cbfdaa0a98f62f0086d7e542c84facfa88416c646c584e6373eb8dd38f9bdd8a169a06cc29c75ea8ea43356e7560cc05a3e7f96d631dc4b4d5697fb1192e516a255bf4967bcaed32f82156a7a28d4d58de2a953368ad0305731bed9d92c7271136c6f289dee23050425c05cac5f381ca3e8973f7add9ab65b3b77a6a5cd5be93418ef40594ed98d66b919093bdee13575316b412b90ce84ad05cc561efd2cdc846a8fbc3f628442a94dd931c88f20a038a2ba1080cc6c87a93b6d86b1125e6fd8ae5ad86952a3ccb383ccbe1598cedbde0113ea6169d1c1d1883bd89ff55bd51aa8518c6c366f0c21e5fe3514c056fe7afda9b2d810de88a2f64857203805db3774cd4e4f5b0bbda6de7b2bdb3a9387019c63ba5a61327592604cdbcf16dff0d59dfd46ee8f5c9e20f22618aab55584289ab29597227b7ed1363142e48b33caa3efdb6c36113b4c5356cfb42daba92bc6f2bdb0842d2044071ea7b324a2c5410ccba7ca4a075ded2efb5f609eebce4e917e4404e45c5300daea081b7d2f3d35ae17f51064c3682819b81eccbfc3ce219e82d782e8c764e627f09fe6e3bc42239e36b51b4c1c7bb9e1bae34c16f35ae3df928aae8718323ae58d94b04fd6c464b3c332f7d7bc5be5cb151be6a6f6da39134aaf288dd87e5a71dbb119f76d81fe6d6191395b9df808223ab17ada926bac72fa6fe347dd599c200aff45b2d763855ce3966e228788143a93a8aaf4ce1afb91f1e11b6cf68c359e5d26578671e13b14d996301e002a28fba2ab9450056afed0de6dd022ff1d71dbd879cf0e63ffa89eafa4e3cd37197712ff2244ab7bc77392016ab88bf25b5e936462a70de2a1c009fc99e398505e6f025a7dfb66a8f4db15acca0143d64bf0428aeb54f1c24932f48d5b2e4c968dcab4396fe4fc131c6f5d8a7b2ab8261d8d0fa83c61e94a696b3637c92822627914084679a1e733093ff365f5b6cc6d00a218a485b78444480b9eb499f06af1250a3e41cacb526a43dfd2c0b63dd1b3c19d367b34d4bcd0aeaae3287dbbf5ef762dd0fb2e60df03789ac45cf3ffed219e315d529d06b9d1daaa699d2fcdd12aae438c2f90adae31df4d6a4f4b8b5d088467b6d2c7ede29a5a393afbfe0fcc76f56d67cb47670d1deee0b791b7f019dabd14778b0cdc4fd3207c7327e72f7a87683ea436b9d98fc350343e5ddc740aebcca44e6c2094ae56cabd80a2a87cf3521377784599625b26827fc03ddc688f41ef72b333ea755f615b5543d4245736de6864ef3d9f7c861785e1ea3e7d72255d7361f19ba30ad8fc42cb7b08bf80b6192e4eec35c53cb056067f18998a5618c109d734602f149142432c711089905ac96acae49e0d7f4866a53fbabcb9e1aa057f57b88e5f6d80fd6d7d0660f83e172eaae99c719a969b8becfa2dd8db6c0b3f4df8931e72070d60bbaf1a39448e864f2e2912a31c93971c57e12aeab241e5443f1361bef8fdacde1d81c5fb227be3b5d4daa9fe69a95884a122563a3898a92e25061f6eff22f38a30d48b1e24a19e186200047b9114928cffd2952d089f8ac986075cd9ad2ea4601d4bb44ecf7ed703d6f7d1150599176ad5c45c4bc80c0d8a647a8199f87646015fbb232ce2c4aa59c5f937399082b314efeb3adbb857a6c6f56942b9eccedeaebaef4268e7053fc6cb4a4dae803565a55b923d4cbc584174de43884d0209638156d582c4ec51693096c620aabef13414ea5737439475cabfafc4e91fb33dd80d48e6d52110c771af84fc69284fa4c3ebcf445bf0131a183876dcea137b869bc4d78ce3152046d7800efaf9e5a366d1d61974b4ddf91cd83b516b0272f51d492318126688fca3b866d78f4885b65af393cb1300e31ed9d38e22347a895fbdfa6aab05a5db991c58f79bcf1e6403fc3b5f5ef01e965b010adbfd1f9cbd0e8ec1e80892a30f2ffa409c9bd54340dc400bee35268c8973dfeca2d595b06ec31dc89e0511cd1e3d56698f3b84bc7be1d76899d22d44382bb8229b2520f0d43eb0ad264551085537f21224f2fbac9d9ed9fa569d18730f07a382a28a4c7040456124211d6bc630f87a4f30b3f4d7fa1b9372fadd03a73c354c37a7e0f3d024b726edb7167533254213a671a52c025496cfd6781a2fb593116583dda9da98ec5cb5993a4a3066e1aed6ffe30efeaf712d96dcd8f59b03cc3901bb85fd8da28c099ba9f5ea7d652f85d4487470f3bdd017bc4e6ef6e02d60320cbb95d6aba58792c9a433874b84dc907ddc5be25a686df421fcfa51d9075ea6bc69d3d1f745b6d983b1a40f7182381a906d196b360c6e0f4b9fa7e8f19ac54881af964f9fa609c55c23b94abb77c4e8fda3b5d633e80156490f166353265d6d198a0b07256d860bc7fbb4a1cdaf42be7031941b0c383a32c5f514c2fce3b62091aff866677b55cf5e9fdef0930550e543bdbad8df1acbdbe20948f8ff8545e85cf08d36081a0574a82dd852f4fdd3747f22099ddff336bea7baeb56874d518678b6babf718bd2c9ca6037ff419510086965b4e86e2c691c80936988bda8af5e42a770fa7c2c3822be611a7fe77ab3f109e806d046dae3c80ad5973fd17c8ef5d18d298707d955f4bbe71bb2b7dc7a944d9452b6bf90cb01ffe798f46a6bd5b6b0855286aa62c2b1d4674239fd63981d68888e351f9f1e2283ce12b9207b501330dcaf62e1607adfb31a3ceec0a5172593c109130e2a7c97083759a1a79afa59bb2f1d352702ed3dd758b30f79bb5b1199d9d1d9120cd0ec1e82a98ab5470bda157641be3d194cb74fcc3e57b1ade79fe66c64edd365148d44506cf100352b7fad70bb9095dd2792b1e4379448eaeeff80f118a863c906be1ff2b4e5c6020649c111ebc4c20865c5328a132dd614d4a00e625a8f8b07b01f7f5ba55d7d92f29780da0c780a93865cf66dc6720c556a6f97fc7d0e7ed088f2c17820b59a48a8cf8eb0df278392b18e97a9ea38f84e2df77dee0142d812da9d3ce477a48c9dc3cb9abf49515d8b07ad0abcf3aa99cf153478dc1d8efd2624f84a95a3af5c63d9bbea5adb60a1d875dcf90c950b96919769715988d006d4aae53d10dcaed9f61239640e0d61cee313a8e43f9fe06266180cf183d6029bf6eb1fbc46355fac02d3907e362282197c6da7dbb2d4f5740797656f6c3aa962e45f02a8b5f05ddb14caab7366faa90aa78ed345df6348ff608092400f705c8fb2ed1fca5bf4016fe173bfc30c00baac598c0c04db92036709d7fe28840d0bab2330f8651a1270ac6f25478da10d1084a4f96c1dfeb85e9f4aa794d3583b6730e8157beabbd9971683071a087f38ea99172cddf2da08f7ac6567b9d51fafcb9781a077a8e3090c33e3d179aa01131ecb323ea887b7ed0805708d22d4a58a6792578c2eea655df531efb4725787c2c6ccd229ac2e2f11edfea2616a70774c16f265ca9a7b37ee3b1bb8c0552fdc42bb1c6d9ce7be3e45b223591536134b3aff97631fa041634acc1b0d0a1c5e17593440694bc48235a489e128b786319edd43ad9f38a6e834f6c72eda90c6a72b18a4b7b488e6f128164ff4817e41a3e5f80af7b8c1ec7194177450493b436e6248f943900d3bcea6b63c206d50655ba822008e4eafac6b2d99cef8fbde755fd5f6ff11012d871516b86601a5d5f9b8b0a545dc70bf9ed0a8ad48a72195b1cc826ff588048ed591acafaeb5aaa13368205e1b88fdd7c90b2307dc67b2106f46279982cf6a2a117405fd6ef074aebaa371fb5081e614af4e5641b55917dc45897be059fac84efa2b6c3e526103d71ea3a35ff82981dc115adc678c15be329a7254a3a892895b408d9add46dca2b7564aa5da5243137d0794cb96854672f65588a37c8fefc145163d29ac81db4a1272a687da556b41a502f087812e9ac2000df010477806a53b5587d03129be27862238d0abbe73452ba7b50e616730e261f66ef543630f93dec76aa2c2a5d85a30dc41797ec8d86afc0cb6d60a28a08a69cb33b3595cf0884c746f083cf89993609d5c975b1a1df03d7a720587dc3e7226de19e04eb7132212f3dbea820d0f5dc5cd2c9bcdcb1ac3b25a83c953b4c431a9afcfafc77595591c3f216c94d5e86ed67299ee70203797688561f9d0caee9c33524cc97d92b7e85fab6670e1e3a8aa2a8648ba5077bd8e8682b669a9a8d3e2200fb211ce1061a47f0fef5c673f5b687bf51342eac05b9cf7dca8c719496fb6931ef4929cbf2f90b2f309025651b2770f403a3c80b0960dba9f0284437c0f845f90e1edeffb563e87771841ab9378b60232fdbe7e0f0a1709ea9d8e53cfb4a6c87b2a336fea69635cb88a2fbb755ea6fdf731ff108890d4055ba23cace087a4be6a2cbccc818cb2f33ed69b4d5294e8877e6b9cd7e2d198b50dc5640e918e94a82d6beb5e87bc37c788e119c8c6c67d3127b814900f14dd7ccbcb0e5b842ff2015509c08adaa1c6e14a08b77715efb32f6fbb96d5a95b9c9d5ad95d8ff20ffa9fda8a46337ab6a1560650120129af62c0b0b733285cd4f624d211d1ce0040970f30d27397416f956e614c57bea6608a57fd35a31ddf33a2eca5a10406496c0c522b42731d8146a7b065099e15b51b390c47724f2a76e0d64c5eb9f7b5e0717ecfd6d9b45b4259ab2681384926f1ce2f46884d4ddc554c3908dec7aa9a7571807d6e3a8cd59b426ee3d1bca1360cf574a9eb31d87315868d9cb3c660dba768ee05e8a8e2710b70c831b8050cb09421426ef29cf292133796f49019ba6f929ce14f700d4adf79d6768622e3788c76ba6983a1476c9589afbb0ac05c3caf3c3f10813f1dc39b8082c721878673d46dc2e0d9e915ace50562aa1c14bb11e4fd88c9718e7c9d90c9c0df7b2632d23e1a5bf329e92115fb80226fc21f8576d839238d21311e8af5aa171419d662a563a9a745547fe6872fa20f6aa9fc25d5b03d643bd7e7be6818523e0b5db5ceed033664f61fda3bbdc7cd93af32bb5b11093a00da3c3cc47ea7f843af99164c54396091ee6b907053c78bb61f0f6a577ec62d800b9dd740446124c02a8525c9c2de9c35a272c3745d6fe21393cc0fc5eca80a003018756363612e4f10842cae9d67abaff0dee8b7317f8b0b35f0e7f7a67d8171f1102d035ff2e2db76b4d3d29b9ccad30b0ebc7246be11f5bb1b020f1d618a3c78b2d231127addd87996bc64175b80d5b973fb0c5d8c3be42872535ede1ae9586f66ea4ef9d465c0f50bda567c2f6890259dd8cb361418d72aa6d4b9f7ec0d66764c2015591ea873f3cb2b25baeebd76cc07093a71c1fadf1e7acdea1d45d8be50d2dce6b5a759702e74e0d6c134561e5aa39095598a3a6805017dae40bc908360af28953db9da3bbda0d4240dab111fdbb1668c773c9134f45346bf6e82ddf91316bf31dd1b5d586c072cca89b3ff9c927955bed5a5c3be9ff434190ec78e9657dcd6871a97d7f7a549212975cce2c5242c879fc286c2de5a0f8c75d79c95ae8252a3da49b6ae89ff0f6bd457977be724aa085fe55c613eb633ab2c8bc82a739dafb36eed8eb6a8b4426f87fa34c6267bc18bdda7c7399c06b58ad9bf4c9c78218b0d3ead63e7eba1962b0adc3ace54b66f4e597a7ad38602cadc456835c75a8fe9ae0cf16f1c32afe9b1980f9eb0578a89f6b5af9f9084f633d4759f6563b81a41f663d9b16c2fa317db78a385b0dd1b5b066b24aef4f67f9c1d30225c0596afe90d026ba76571cbbc9c65db24c60780103aaca5b36e6cb0669b95c626c8d470cc78a30359b2bb657acd17299e9589ffaa2cd4dae9918dd78a9a6dde420c76c7cda67600f0c7b5af1ef8c21aa4845d304656bcd1fcea2dffac26e75ec75e0077b67dd3b5bdcc60191f629c681cc76ed86be609017326438289ebfb95e09d8418a95f8393f5309a5f6bb6a86f85d5205d259513f14632d28f5f318afd462bf173450d79c9c5bc9d97d8a84e42ab1540dca9743ac7596e65af950dce1e514dda4130aa82899c433f81e3a44e5e8055a49112cc7e290844a5ea7a1bf1f7b791a94c08f3259361e5c54be1d94e78e04c5e7359bbdc01bb0b49e41b2225d580d755b33e36a0c8c3dc7e0271a7fce7777992a32efd26e90e1cfdb32f2b1b06d5e214bf8eeea5a1a433593db9604deed50dfe00a0888dac53365570752142a827636d27dd406578ea80e6a1568c05603871d4456694f804ec1658185342f502f9a60d61d5a7f1c16b7f54fc45f6e84fcfe59fc257239ef2277451bfe16a94da839a1291b9802f8d062085eff267dabb744a2de3ff0815dbd2cd46130d42d582b9fd27b5ec8fff5c515bf7c6c91a39d49da48eeddcd3db9cf58ccf29a8dd1ab71e9f97bf14826a6b207bca81a15f3c9b88d9154a50ea60904375942363742e841c13daa144f7ddf86910f14d763afdd06c3178792be3c53d2754eb99b22b8af1ef15ee460a43a8d4d2d38c28553a4a37a570fee6a7f291fbcd14cc7cfacfc64f48c5e12871859fdc56c5209756544987932a6a1a403cecd092dd1a642f86cd99ef82e904be624c03e86d7db2164539cc45e1195b90c35e4e69758a3552088354571954fc05315b1d801bc284885d6bfd4f9ff790e744345c0e731e2cbc4cbc7b8f529bb896c186d1f7012c98b79556073ac6ded1739d35ff3b4deaf16df98dde95066ca81630e35b55305b5a8c0ba707e435b6fe48003f8e6685864668fe55027fabfeb3a32ba642628a3bad5be2624bd9494779006e28960a44397296a38c762dc7136950b14d081dca1ae08abea319c3ea08c018f4378c5c03f73d0d582ce06720dd39b9bf2f445c06bf556fc104a7b529b30af5d886c35b24e54a9343f4345b297ac780364ccfcb908148d1eda289f2e8e8b6d77a40e13bfc230f2458020f26856849a01f819e18c796df7fbcad05c9fd636277c36875e96f4ba0397a3c3b5b5af200fb590ef9ea0de8e1f3744b41bf433c5fb275f51e14b717463015a8f4af8f1f6fe1b7cc0eb130539771c7592f5ea3d7aff3eaf9ddeeb442f91fbc763f077e42ae52fda9759cf0affa3be7fb839db01e9093aebbb9dc76ec59c699dbb42d327cd778ac15a31c11cb39355c4a14512932c85cdee3a9261bb32ee1b5e7f164247dd224ebb22ca6618bd83263379af7669bdc3d7326d798373140e82e4c31d3995c74ac1b220a9a80ffd12ed4c7f7a1235f2c5d21bbafbca1bede66e72dbf662c9df97df1e1076e3a91b2c36604453e6913f1eab5d4fe3800cbf8e291d4930963d2172e7fecd6c9080d026e9d524c67a65f2e0a97920bd434bb6d9fcfcfa7136ca6d58183517878d31b25d6e991f19ea336f32986b529062785c90c8c72e1c4648adf9afbe527aed74a74c0e6491bc5104414bb5b83eb24c2018f1d0a1a2f5444305ce128a60836b066098496199e988bd5afbef62e36a23a5cabd533ea2a81de8611c879934ecb9bf4748fe8fdead564c296547d508e8f8f40eff17881235ccff17e07500be35b1d94e2195b5dfb2b65c17ca1f2a754579f381dba83009e7b8c0dd1857ee9d561bf92a646196a00ee7c59b182dbcb29fe095e0835b56c809d4221d9f3d7127f47fab5595da105ef7110be2db86208fa3385014dba56c986a76a884f2e779a07e0594f023fc036d23d4d3f6b72171db3af4745c1ad124cebc920aa3e1d5eaaf2b35c3b49edac4f32df96848c0075507bf57f8aa9b0a433a0ae2478bbd430333b199d11a8a99f107667814aab813aae349d2dd7acdf637b7a10059613ee0656e791da96ccfb41a488cfca214a4f66425e16dbe7f1be948ee537921723904d277e8846dd91e59bcdd48b6e038b31775b4e823dd4d962785b436a4d63831fa1627737d498ceb43d41ffb878380df39a22babf05a70c6daa081a6c2d2ae70eec56d89f795b46ea5e8a868073c877bb5e32999b27ad54d4313fee44a46776c8a2a5be888e6721430756bbe4973b81d823a16c5b3ecd3cb39a7d69abfb917ed0dc2ca7f02dd62a6cf048431afa1d8a3e7bf77cdf9b8c24f1f659783e10ed305ced4023a1f5bdfe37d8ec7c4ded0ccb17eaa42539838342a96ae9a2dba0554162db191a38db23639b2be2ffed28611796917ae7fed791b2fdbad42b4725c3caffe35768860dd5f932bbf5975968feeb35a4df44df75ea7dc1867cb6538115d269260bdaf511e9170f71caba2b8fd55461a337d21f7640217a7653fb266666eeb5f99fb1a6c6863699484adc157563e8a85df1304e29d40e2594b181299b08e91dc061c44dbc241cc6a8610a37e741959bf0cdc6fd18a9446745ecb85168556a00bcc743ed38e72b1a55e3430fe653a3a4d86026cdd98dcf6d9a19361c81472a41717c97db58f0dd732711de373dbc4a8f4c661c63bcf08a154289c194f9fdd7092613637ff69fcf1cd5a38f76d20f9adf523d5d036eb78f24f94368947ce4599fdd633999b69c2cfea73ea5b1e1de1e2c20065224f6bfa8c1d7a36c2e3b0abd40c99a548b472f74838ba4c9dcbc3552eedc1cb1b067ea21db1c9ec6d27b686dff75c5891aeb6e03a6a23ffaa7ef10d7b8f4de7acf6e61da3a15bbee47c69bfe8a5aaedc51c9f3e5084b1ff3d75a215156558c9d6f18d4cb39551a961d3b5c8236fae363131939d8e0bf4c4fc0f3da3d9f1e6a7f03a2824b326bd25c066bc0f868927ad52b6507cfb76b519de631faf5e6f1c4ed97d3e333f67d2054b56e179188e36b0bab66f4423688f07ddea852bda3eaad2503b413dc39e58baf2f3c7b26d6f917c05b39429c177b49ea010a7c034ccdc765c78d935f4da41295c4d062c46d74a77a2596c47baebddc55c9f7a6a479c6ed42423f24b099bec9b7d51dcb9f64a3399f9ad385f18adcb0bf1da1c4b688a027a70bcca89dfa06cc43d069ace97e51c799b0339051abe7cc1ded1fcaa58dede9cc5625d8ddd041ac8a2c628383d909bea7c2940da0902c0008e282ab0da4eab269f76759f93c535ea3e543f2c3664809adff77090c8b7eb4ebe2c458235755e7c472aac051da744f69da3436569dbe92c9c16c85c407bc2813354fd16ada67335ae6367a3e22dc4902fd40f99a01977995ebc076f088f97cebcc5516f5779d0f134b8efe3e4b0e7b3f50e3829e7e7606206bb0b784aed97db8dc5dca16832f0e8148d535824f40000550c8a0298970696103258f022e24bf4b36fbaa939a8a04bb0c986375df78672bc72014d33eae8f48666f91b3f53b9e3820367f03c28890189000941dbcce55fe3d12bacc60207bcfca7ac962335cac9d6322a6c5bef352e30d467dbfca28127d4a500c8e312f57771440e968d24fe49f3c692d751118a709d27c57317beb268515a224aec9a264b23cd31d766f714d43218e4c495a239d1684e29feaf4ce63f9f0adb1fb75bc9668c40ef1fc415d1f623327b7f66f0a248b59251e6211fc2e00ef97e4a40dc3d21a3f1aac172491bf0f3783d23debb03dbd3fdd0d6ba3112b4a762e40ef11587ef0b591491c07da254c8e1a0179b829fa5abfb70a0ee8099769adad49dd89485daa1e2ab7a96471d0d3b49f6d75fd49c5c0c9f6994602431b0532276bc00697aa7ef4579a6326043d21fb4d914efb75e7db8c9d5ec89a2fd4275397164d62973c8129ccefdca00fbcfb6313f03888b527c3b19fb44393c32a202ce80f4ecaa816c4f46456423062f7dc5d72e503fa0302e936e4a95d710f45fc6fcbd7b35acfcdc89f6cb95e37e68fef23c03e21fd57e6671dd34691a58dee20cdfc982c92bfd149d16a93e163dad3fd6f802913300944fc0a7bbd6717db510ba5c59be21cdf716665239f51ead511b920ed84fe282ca19aeb0dac46e0c222b54e4864f35fd4dfd39141edce1453d507474853a9b2350e96787353551db0655129f28d0a2c6d7d12002ffe35e71e08b2242703a0cf848ee085841bffaeabadf543549849775011d5c3ccf883534aa0790d1f2d71baf08db088d0cc59e4563ac25630b43ff9fc1f45d92e251de6420a2d8f5a187d60dcd1c879bc1630e7f0001976a80c520b44a993197b1ac862cae57ca7ea7387fd22398d536fb64c917b62b8d5f048e07f677c263f55a0e167ecf568e67ffe4f2c4f9d42b316db28db7845304d1f0bb90088c1ab412a6267d5c9a5a05ba08f9beb624c920a73010309a2792eb670147c6bdae2bd6c53bfa9522680ca1cc8e4d463666056b89f3a200552800c1c4cb997355862e5b48de6ad4197bdd1d151f4c3a00eb7408421c6d69bcb51a83f0edbbdd30c49d16e602e2521d911f5c0a2cc9677ce5aef969b30a12978796c167300be83fe5699948d813df936878cd46d84d459cf70e3d3224f251f4128d1d0d49bdc08709dfa2011637b091a5b140bbe6e450c58e4344e9f982e6b19aade5f8754727f657c609b8644cdf40427c78b64c30477c9a508a3022df0c86181f135f765898884ab3fc8194d929493c46864bf9f1db61ebdc6787740df9e8a24da19364d8fcdb2d61a72c2744ebd926bf027ccfd81d9c70fa233726af045b2d2e8ad277042cc1bf63d852989438e3f6c7cceb8e07c1acd0b235194fb84abfdc8a462fb7339d5f028f9de09b4a9cc700c3b7286f3e18756485568f25e439cc7ccd417c9f0311309343bf1b1ce58fd2062e9c97b2a66c453c21fb894ec20af443b0ac0597320ca0dfb1145418f7aadc4dca70b46efdf0ba7ef6ded3e43f70ea15aab1e81114107fcba3390c3e5a2e68f5ff9617884ad3c2290a4d70fdf3aa89684261dc8573a397de49ce55ceae982093300966221317d2fad97dce9cfb9abc7ed6b4a5b654020cf73bcd4721c6ad5bb6e836d2a9127e4b179114a1b1a0fc3f01804876c33b65c64f0a14056fc7051d416b33ea206d5a72007025a4c8e147f171ee1a972844ec3fbbbe818aa48f5fcb5f40f27039ea1124d01efb6bdadd53ab273f448c5419e0da071535fc87f3707cae275371274b38f268bfe180297d888a4ffc73c8f1280670771af832d752704644ef7885c132835a54b759e7bf8dd87aa41f3092f8c4b9b4d549d5af7b06ba37543ffa989c3dcb924f2435cef9754b8ca3fc81a99ba1f98ec8c5930dd99613850edf6c7acdafaaa3a709fa6b91638fb13776fdd45ede103b069d476f22ee751dd54ec8456c44ffafa0c889b5ad5ef64090800ee44a4363bb7dcbeade3c336ea22830860444f797be6b30f03eba21aadc0e71f1699f7d3c9a13cb37196a45d93ecae24d1d80d5ddeead5d314a7157fd77901bf550cecb295ac3a6d7fa928ad7f57a2d449c675041c98adcbde3a6b7f1b0d506bc1069dab305cc61e9baed36a430a5aeb602b4603c50397a200e5a75f2fa91683c53ba8490858702a04baf85d141568b720e465239a74238785608d7f6181bd204442867eae9f007ce10e9563ec7cb3c0586bd3f0ef302d1c4c960e8b598b9b0d10aa34b544b6c0355cd47b9285502455a571038f6432bf61069409d20c83a5db31f67a2eed818d34a536f8a148fd149e84c705ff4092ce514131e6a050b47d93ff88ede45f968965acf90e23a4de3220191a1bfad6b43938b1b12f9dd677a26cd6d510c5556672ca2b433f9c9cf6416baf39e41829bf823216625d9413615a073ba6bd75f8127ddf4b61aaef521eef3b778db877b3d03879baf6a09ae45ec087cea6acc33eda1198660fd28005966f7a0dd23fc9fbf027bad94ecbd26de06e34df72fd177ab2c3348afb9cb0ca8994988363be1eb12e3bef9543ad8f76471c8752a2d20b307b8c069b866b7fb28870b71397d55bac1ffdd4ac7cf2eedbb063d1efc5b14149b705b131a3c63af5c2d70049a2a8280f80c9e1bb2e936489b6adfa57f68564cea516c0a8228d7784af0a7cc5af97f301d830dde75f9d95691ec8b1dfde76b8df6adbe096a6ac747fc61ae730326d796c2e51da5ddc1e561f0915e02dc99e806a6a544aebc00c6f527ad444c3b34b8a5f2da105cb9ed49dc23f3b01b057d908430ec5638261b53d0cd8f175b25c599b09295519359d99dd2b358dea398f09306571e089bd72293f8b105d1262c56c0834e7140fbea11df638d3ef9d8cff78948351c63c6d5905427d4711a0a255b2f6147f126f9dc07dfc8f225ef89ee9f8ab24573d8dd209d5952187c00b6b32f4e68b36552622e4416462f751466a53c7d8d852c4678eb5291894ddc1599303ad3ddb7</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇未公开文章。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>jenkins运维篇</title>
    <link href="https://www.xxlaila.cn/2019/10/22/jenkins%E8%BF%90%E7%BB%B4%E7%AF%87/"/>
    <id>https://www.xxlaila.cn/2019/10/22/jenkins运维篇/</id>
    <published>2019-10-22T01:22:52.000Z</published>
    <updated>2019-10-28T13:57:20.321Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="jenkins-可视化构建"><a href="#jenkins-可视化构建" class="headerlink" title="jenkins 可视化构建"></a>jenkins 可视化构建</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在之前遇到过开发提交代码后，完全不管提交的代码是否发布成功，及时后来加入了企业微信的告警机制，但是依然有人不会去关注这个。<a id="more"></a> 只有在测试人员在反馈xxx你的代码提交了没有，这时候研发人员才回去看，有时候一个触发构建失败了，摆在那里很久，如有下一个开发人员要对这个工程修改提交的时候发现过不了，这时候再来解决，成本就有点大。这里可以借助看板的形式让研发人员可以随时关注到自己的提交的工程，结合告警来做，效果还是不错的。</p><h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装Build Monitor View 插件，然后在主页面添加<code>+</code>一个视图<br><img src="https://img.xxlaila.cn/1571707794737.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以根据job的类型或者根据自己的条件进行<a href="https://xxlaila.github.io/2019/08/09/jenkins-job%E7%AE%A1%E7%90%86/" target="_blank" rel="noopener">过滤job</a>来生成看板。</p><ul><li>Build Monitor - View Settings: 根据job的一些状态来进行排序<br><img src="https://img.xxlaila.cn/1571708048469.jpg" alt="img"></li></ul><h3 id="jenkins-监控"><a href="#jenkins-监控" class="headerlink" title="jenkins 监控"></a>jenkins 监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有时候我们没有监控，但是有时候需要看看jenkins的一些监控信息，如：内存、cpu、系统负债、http响应时间、系统进程数、线程数等，有懒得安装监控，这时候我们可以借助jenkins自带的一个插件<code>Monitoring</code>。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件安装完成后，我们可以在系统管理菜单下面看到<code>Monitoring of Jenkins master</code><br><img src="https://img.xxlaila.cn/1571708499625.jpg" alt="img"></p><p>点击进入以后我们可以看到<br><img src="https://img.xxlaila.cn/1571708561404.jpg" alt="img"><br>页面显示乱码，这个可以自己google解决</p><h3 id="Build-Trigger-Badge"><a href="#Build-Trigger-Badge" class="headerlink" title="Build Trigger Badge"></a>Build Trigger Badge</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此插件直接在构建历史记录中显示代表构建原因的图标。它可以让您快速知道是哪个原因触发了构建。如果没有此插件，您有时可能会想知道是什么触发了构建历史中显示的&gt;&gt;特定构建。要知道这一点，您必须单独打开每个链接，这可能很麻烦。<br><img src="https://img.xxlaila.cn/1572059619062.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;jenkins-可视化构建&quot;&gt;&lt;a href=&quot;#jenkins-可视化构建&quot; class=&quot;headerlink&quot; title=&quot;jenkins 可视化构建&quot;&gt;&lt;/a&gt;jenkins 可视化构建&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在之前遇到过开发提交代码后，完全不管提交的代码是否发布成功，及时后来加入了企业微信的告警机制，但是依然有人不会去关注这个。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>pipeline语法</title>
    <link href="https://www.xxlaila.cn/2019/10/21/pipeline%E8%AF%AD%E6%B3%95/"/>
    <id>https://www.xxlaila.cn/2019/10/21/pipeline语法/</id>
    <published>2019-10-21T07:26:19.000Z</published>
    <updated>2019-10-28T03:35:08.785Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="pipeline"><a href="#pipeline" class="headerlink" title="pipeline"></a>pipeline</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近在测试k8s上的ci/cd，之前的ci/cd其实也能满足目前先业务的需求，但是想尝试改进一下，优化以前的job，希望在登录ci的时候更加的简洁，<a id="more"></a> 而且查找job的时候，点击一个job就能查看完整的信息，不需要job之间的来回切换，等等各种理由，😁😁。这里使用jenkins pipeline，起初测试的时候使用pipeline，没问题以后，使用jenkinsfile。</p><h3 id="pipeline-常用介绍"><a href="#pipeline-常用介绍" class="headerlink" title="pipeline 常用介绍"></a>pipeline 常用介绍</h3><h4 id="清理历史build"><a href="#清理历史build" class="headerlink" title="清理历史build"></a>清理历史build</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;普通job的时候清理和保留历史job的build 很简单，勾勾就可以啦，但是pipeline就的使用一下方式，而且还的写在最前面，不然识别不了，会报错的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">options &#123;</span><br><span class="line">        buildDiscarder(logRotar(numToKeepStr: <span class="string">'8'</span>))</span><br><span class="line">        disableConcurrentBuilds()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>buildDiscarder: 保持构建的最大个数</li><li>disableConcurrentBuilds: 禁止并发构建</li></ul><p>详细参数:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buildDiscarder(logRotator(numToKeepStr: <span class="string">'8'</span>, artifactNumToKeepStr: <span class="string">'8'</span>, daysToKeepStr: <span class="string">'8'</span>, artifactDaysToKeepStr: <span class="string">'7'</span>))</span><br></pre></td></tr></table></figure><ul><li>artifactDaysToKeepStr: 发布包保留天数</li><li>artifactNumToKeepStr: 发布包最大保留#个构建</li><li>daysToKeepStr: 保持构建的天数</li><li>numToKeepStr: 保持构建的最大个数</li></ul><h4 id="gitlab事件触发"><a href="#gitlab事件触发" class="headerlink" title="gitlab事件触发"></a>gitlab事件触发</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之前的我们的ci/cd都是开发提交到某一个分支，然后jenkins会自动触发编译、发布，而且配置这个步骤也需要好几步才能实现，但在pipeline中也可以通过代码形式最这种触发器(勾子)进行配置。这样让每个项目都和jenkins进行耦合；运维人员只需要专注的维护Jenkinsfile，创建对应的项目即可。gitlab触发jenkins的构建需要依赖Gitlab插件。这里需要自行安装</p><ul><li><p>接受固定的分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">        gitlab(triggersOnPush: <span class="literal">true</span>,</span><br><span class="line">              triggersOnMergeRequest: <span class="literal">true</span>,</span><br><span class="line">              branchFilterType: <span class="string">"NameBasedFilter"</span>,</span><br><span class="line">              includeBranchesSpec: <span class="string">"dev,test,master"</span>,</span><br><span class="line">              secretToken: <span class="string">"<span class="variable">$&#123;env.git_token&#125;</span>"</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>triggerOnPush: 当Gitlab触发push事件时，是否执行构建</p></li><li><p>triggerOnMergeRequest: 当Gitlab触发mergeRequest事件时，是否执行构建</p></li><li><p>branchFilterType: 只有符合条件的分支才会触发构建，必选，否则无法实现触发。</p><ul><li>All: 所有分支</li><li>NameBasedFilter: 基于分支名进行过滤，多个分支名使用逗号分隔<ul><li>includeBranchesSpec: 基于branchFilterType值，输入期望包括的分支的规则</li><li>excludeBranchesSpec: 基于branchFilterType值，输入期望排除的分支的规则</li></ul></li><li>RegexBasedFilter: 基于正则表达式对分支名进行过滤<ul><li>sourceBranchRegex: 定义期望的通过正则表达式限制的分支规则</li></ul></li></ul></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;所以分支不阐述，其他的两个选项是最实用的，我们在正式使用的时候一定会用到这个，上面的例子是一个接受固定的几个分支</p><ul><li>匹配的方式<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">        gitlab(triggersOnPush: <span class="literal">true</span>,</span><br><span class="line">              triggersOnMergeRequest: <span class="literal">true</span>,</span><br><span class="line">              branchFilterType: <span class="string">"RegexBasedFilter"</span>,</span><br><span class="line">              sourceBranchRegex: <span class="string">"dev.*"</span>,</span><br><span class="line">              secretToken: <span class="string">"<span class="variable">$&#123;env.git_token&#125;</span>"</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里的git_token需要在jenkins的全局变量里面添加一个<code>Environment variables</code>对应的一个键值即可。</p><p><strong>注</strong>: 所有的触发器都需要先手动执行一次，让jenkins家在其中的配置，对应的指令才会生效。</p><ul><li><p>jenkins 验证<br><img src="https://img.xxlaila.cn/1571644117201.jpg" alt="img"></p></li><li><p>gitlab验证<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要将项目回调地址写入到Gitlab钩子当中才可以。经过测试一个pipeline的job可以管理多个分支的触发，避免之前的每一个分支的job进行触发。</p></li></ul><h4 id="parameters-模块"><a href="#parameters-模块" class="headerlink" title="parameters 模块"></a>parameters 模块</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该模块需要安装，parameters指令提供用户在触发Pipeline时应提供的参数列表。这些用户指定的参数的值通过该params对象可用于Pipeline步骤。研发经常会有打出一个特性分支，这个分支用于hotfix，这个时候就要给研发提交一个可以选择的分支，然他们去部署到对应的环境。</p><ul><li><p>字符串参数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;定义一个字符串参数，用户可以在Jenkins UI上输入字符串，常见使用这个参数的场景有，用户名，收件人邮箱，文件网络路径，主机名称的或者url等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    string(name: <span class="string">'DEPLOY_ENV'</span>, defaultValue: <span class="string">'staging'</span>, description: <span class="string">''</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>布尔值参数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;定义一个布尔类型参数，用户可以在Jenkins UI上选择是还是否，选择是表示代码会执行这部分，如果选择否，会跳过这部分。一般需要使用布尔值的场景有，执行一些特定集成的脚本或则工作，或者事后清除环境，例如清楚Jenkins的workspace这样的动作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    booleanParam(name: <span class="string">'DEBUG_BUILD'</span>, defaultValue: <span class="literal">true</span>, description: <span class="string">''</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>选择参数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;选择（choice）的参数就是支持用户从多个选择项中，选择一个值用来表示这个变量的值。工作中常用的场景，有选择服务器类型，选择版本号等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    choice(name: <span class="string">'ENV_TYPE'</span>, choices: [<span class="string">'dev'</span>, <span class="string">'test'</span>, <span class="string">'product'</span>], description: <span class="string">'dev env test'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当然parameters模块我们用的最多的是在手动的时候我们可以手动点击进行构建部署，至于其他的目前我暂时未用到</p><ul><li>选择分支部署<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent &#123;label <span class="string">'agent-node'</span>&#125;</span><br><span class="line">    parameters &#123;</span><br><span class="line">        gitParameter branchFilter: <span class="string">'origin/(.*)'</span>, defaultValue: <span class="string">'dev'</span>, name: <span class="string">'BRANCH'</span>, <span class="built_in">type</span>: <span class="string">'PT_BRANCH'</span></span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">'gitlib code'</span>) &#123;</span><br><span class="line">            steps&#123;</span><br><span class="line">                git branch:<span class="string">"<span class="variable">$&#123;params.BRANCH&#125;</span>"</span>, credentialsId:<span class="string">'gitlabUser'</span>, url: <span class="string">"http://gitlab.xxlaila.cn/xxx/kxl-eureka.git"</span></span><br><span class="line">                script &#123;</span><br><span class="line">                    build_tag = sh(returnStdout: <span class="literal">true</span>, script: <span class="string">'git rev-parse --short HEAD'</span>).trim()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>parameters<a href="https://wiki.jenkins.io/display/JENKINS/Git+Parameter+Plugin" target="_blank" rel="noopener">官方参考</a>，介绍得挺详细的，<a href="https://mohamicorp.atlassian.net/wiki/spaces/DOC/pages/136740885/Triggering+Jenkins+Based+on+New+Tags" target="_blank" rel="noopener">辅助参考</a><br><img src="https://img.xxlaila.cn/1571651950634.jpg" alt="img"></p><ul><li>还可以写成<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    gitParameter(</span><br><span class="line">        branch: <span class="string">''</span>,</span><br><span class="line">        branchFilter: <span class="string">'origin/(.*)'</span>,</span><br><span class="line">        defaultValue: <span class="string">'dev'</span>,</span><br><span class="line">        description: <span class="string">'test code'</span>,</span><br><span class="line">        name: <span class="string">'BRANCH'</span>,</span><br><span class="line">        quickFilterEnabled: <span class="literal">false</span>,</span><br><span class="line">        selectedValue: <span class="string">'NONE'</span>,</span><br><span class="line">        sortMode: <span class="string">'NONE'</span>,</span><br><span class="line">        tagFilter: <span class="string">'*'</span>,</span><br><span class="line">        <span class="built_in">type</span>: <span class="string">'PT_BRANCH'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里有一个问题：当这里设置了可以选择分支的时候，然后在之前的自动触发就会有问题，就是在去分支拉去代码的时候就一只是dev分支，而不是其他的分支，这里仍然在探索的测试中。<br>编辑job可以看到<br><img src="https://img.xxlaila.cn/1571903055002.jpg" alt="img"></p><h3 id="多分支pipeline"><a href="#多分支pipeline" class="headerlink" title="多分支pipeline"></a>多分支pipeline</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;按照上面的又要支持用户可以选择分支，又要适合自动触发功能。用单分支pipeline来管理项目，又要回到我们最初的模式，而在实际过程中，我们可以用到多分支同时进行开发。这样就满足了我们的实际需求。多分支任务这里不做过多的详细介绍，这里阐述两个功能点；分别是分支的扫描策略和孤儿项策略(Orphaned Item)。</p><h4 id="分支的扫描策略"><a href="#分支的扫描策略" class="headerlink" title="分支的扫描策略"></a>分支的扫描策略</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分支扫描是jenkins根据一定的策略去代码仓库扫描分支，如果有新分支就创建一个以新分支命名的任务，如果发现分支被删除，就删除对应的jenkins任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在”扫描多分支流水线触发器(Scan Multibranch Pipeline Triggers)”下有一个: Periodically if not otherwise run（没有手动触发，就定期扫描分支）。选择此项，设置一个扫描间隔时长。可以根据项目分支的频繁程度设置周期的长短，也可以在任务页面手动触发jenkins进行扫描。<br><img src="https://img.xxlaila.cn/1571973819297.jpg" alt="img"></p><h4 id="孤儿项策略-Orphaned-Item"><a href="#孤儿项策略-Orphaned-Item" class="headerlink" title="孤儿项策略(Orphaned Item)"></a>孤儿项策略(Orphaned Item)</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该功能是在代码仓库中删除了release分支，那么在多任务页面上，该分支在jenkins上的任务也应该对应删除。什么时候删除，取决于下次分支扫描时间。如果代码仓库中的分支被删除，而jenkins上响应的任务没有被删除，那么这个任务就是所说的孤儿任务。对于分支任务的历史记录，保存多长时间设置</p><ul><li><p>界面配置<br><img src="https://img.xxlaila.cn/1571974190710.jpg" alt="img"></p></li><li><p>pipeline 写法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">orphanedItemStrategy &#123;</span><br><span class="line">    discardolditems &#123;</span><br><span class="line">        daysTokeep(10)</span><br><span class="line">        numToKeep(5)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>注</strong>: 这里孤儿策略pipeline 需要另外一种方式来支持，<a href="https://gitee.com/jenkins-zh/gitlab-branch-source-plugin" target="_blank" rel="noopener">Setting up GitLab Server Configuration on Jenkins</a>，这里没有用到这个，不做过多的阐述。<a href="https://github.com/jenkinsci/job-dsl-plugin/wiki/Migration" target="_blank" rel="noopener">github参考</a></p><h3 id="多分支的自动触发"><a href="#多分支的自动触发" class="headerlink" title="多分支的自动触发"></a>多分支的自动触发</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分支的触好处是多多的，自然在多分支面前自动触发肯定也少不了。多分支的触发有两种模式，分别是前面提到的Gitlab trigger和Generic Webhook Trigger。下面分别对两种模式进行阐述和实际的测试</p><h4 id="Generic-Webhook-Trigger"><a href="#Generic-Webhook-Trigger" class="headerlink" title="Generic Webhook Trigger"></a>Generic Webhook Trigger</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generic Webhook Trigger 插件需要提前安装，GenericTrigger触发条件是由GWT插件提供，GenericTrigger触发的条件分为5个部分。<a href="https://wiki.jenkins.io/display/JENKINS/Generic+Webhook+Trigger+Plugin" target="_blank" rel="noopener">GenericTrigger官方参考</a></p><ul><li>从HTTP POST请求中提取参数</li><li>token，GWT插件用于标识jenkins项目的唯一性</li><li>根据请求参数值判断是否触发Jenkins项目执行</li><li>日志控制打印</li><li>webhook响应控制</li></ul><h4 id="GerenericTrigger-的写法"><a href="#GerenericTrigger-的写法" class="headerlink" title="GerenericTrigger 的写法"></a>GerenericTrigger 的写法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">    GenericTrigger(</span><br><span class="line">        genericVariables:[</span><br><span class="line">            [key: <span class="string">'ref'</span>, value: <span class="string">'$.ref'</span>]</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        token: env.JOB_NAME,</span><br><span class="line">        regexpFilterText: <span class="string">'$ref'</span>,</span><br><span class="line">        regexpFilterExpression: <span class="string">'refs/heads/'</span> + env.BRANCH_NAME</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.BRANCH_NAME 这里指的是分支名。当然这样修改以后是不行的，是达不到自动触发的，需要自行去gitlab上添加钩子，这里经过测试流程：用户修改dev分支，push到gitlab dev分支可以触发任务的dev分支自动构建；合并到test分支，也可以触发test分支自动构建；在合并到master分支也能自动触发任务的master分支自动构建。<br><img src="https://img.xxlaila.cn/1571984557618.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们要实现这块，要理解知道这个东西，首先要知道gitlab push 数据的格式，知道了gitlab push格式，我们才知道应该怎么操作，<a href="https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#webhooks" target="_blank" rel="noopener">gitlab push数据的格式参考</a>，</p><ul><li>参考<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"object_kind"</span>: <span class="string">"push"</span>,</span><br><span class="line">  <span class="string">"before"</span>: <span class="string">"95790bf891e76fee5e1747ab589903a6a1f80f22"</span>,</span><br><span class="line">  <span class="string">"after"</span>: <span class="string">"da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">  <span class="string">"ref"</span>: <span class="string">"refs/heads/master"</span>,</span><br><span class="line">  <span class="string">"checkout_sha"</span>: <span class="string">"da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">  <span class="string">"user_id"</span>: 4,</span><br><span class="line">  <span class="string">"user_name"</span>: <span class="string">"John Smith"</span>,</span><br><span class="line">  <span class="string">"user_username"</span>: <span class="string">"jsmith"</span>,</span><br><span class="line">  <span class="string">"user_email"</span>: <span class="string">"john@example.com"</span>,</span><br><span class="line">  <span class="string">"user_avatar"</span>: <span class="string">"https://s.gravatar.com/avatar/d4c74594d841139328695756648b6bd6?s=8://s.gravatar.com/avatar/d4c74594d841139328695756648b6bd6?s=80"</span>,</span><br><span class="line">  <span class="string">"project_id"</span>: 15,</span><br><span class="line">  <span class="string">"project"</span>:&#123;</span><br><span class="line">    <span class="string">"id"</span>: 15,</span><br><span class="line">    <span class="string">"name"</span>:<span class="string">"Diaspora"</span>,</span><br><span class="line">    <span class="string">"description"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"web_url"</span>:<span class="string">"http://example.com/mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"avatar_url"</span>:null,</span><br><span class="line">    <span class="string">"git_ssh_url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"git_http_url"</span>:<span class="string">"http://example.com/mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"namespace"</span>:<span class="string">"Mike"</span>,</span><br><span class="line">    <span class="string">"visibility_level"</span>:0,</span><br><span class="line">    <span class="string">"path_with_namespace"</span>:<span class="string">"mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"default_branch"</span>:<span class="string">"master"</span>,</span><br><span class="line">    <span class="string">"homepage"</span>:<span class="string">"http://example.com/mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"ssh_url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"http_url"</span>:<span class="string">"http://example.com/mike/diaspora.git"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"repository"</span>:&#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"Diaspora"</span>,</span><br><span class="line">    <span class="string">"url"</span>: <span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"homepage"</span>: <span class="string">"http://example.com/mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"git_http_url"</span>:<span class="string">"http://example.com/mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"git_ssh_url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"visibility_level"</span>:0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"commits"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"id"</span>: <span class="string">"b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327"</span>,</span><br><span class="line">      <span class="string">"message"</span>: <span class="string">"Update Catalan translation to e38cb41."</span>,</span><br><span class="line">      <span class="string">"timestamp"</span>: <span class="string">"2011-12-12T14:27:31+02:00"</span>,</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"http://example.com/mike/diaspora/commit/b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327"</span>,</span><br><span class="line">      <span class="string">"author"</span>: &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"Jordi Mallach"</span>,</span><br><span class="line">        <span class="string">"email"</span>: <span class="string">"jordi@softcatala.org"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"added"</span>: [<span class="string">"CHANGELOG"</span>],</span><br><span class="line">      <span class="string">"modified"</span>: [<span class="string">"app/controller/application.rb"</span>],</span><br><span class="line">      <span class="string">"removed"</span>: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"id"</span>: <span class="string">"da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">      <span class="string">"message"</span>: <span class="string">"fixed readme"</span>,</span><br><span class="line">      <span class="string">"timestamp"</span>: <span class="string">"2012-01-03T23:36:29+02:00"</span>,</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"http://example.com/mike/diaspora/commit/da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">      <span class="string">"author"</span>: &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"GitLab dev user"</span>,</span><br><span class="line">        <span class="string">"email"</span>: <span class="string">"gitlabdev@dv6700.(none)"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"added"</span>: [<span class="string">"CHANGELOG"</span>],</span><br><span class="line">      <span class="string">"modified"</span>: [<span class="string">"app/controller/application.rb"</span>],</span><br><span class="line">      <span class="string">"removed"</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"total_commits_count"</span>: 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果我们想根据不同的分支提交来触发jenkins的构建，那就应该知道post数据哪一个属性代表了不同的分支，我们可以在第四行看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"ref"</span>: <span class="string">"refs/heads/master"</span>,</span><br></pre></td></tr></table></figure><p><strong>注释</strong>: 也可以通过IDEA工具提交的时候看到提交的选项。可以看到我们用ref可以很好的区分不同分支，这里就是为什么要填写ref的原因。我们可以通过pipeline代码的生成器来生成</p><ul><li>pipeline 代码生成器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">  GenericTrigger causeString: <span class="string">'Generic Cause'</span>, genericVariables: [[defaultValue: <span class="string">''</span>, key: <span class="string">'ref'</span>, regexpFilter: <span class="string">''</span>, value: <span class="string">'$.ref'</span>]], printContributedVariables: <span class="literal">true</span>, printPostContent: <span class="literal">true</span>, regexpFilterExpression: <span class="string">'\'</span>refs/heads/\<span class="string">' + evn.BRANCH_NAME'</span>, regexpFilterText: <span class="string">'$ref'</span>, token: <span class="string">'env.JOB_NAME'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img.xxlaila.cn/1571982583457.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571982622070.jpg" alt="img"></p><p><strong>注</strong>: token参数的作用是标识一个pipeline在jenkins中的唯一性，这个参数的重要性就得提起GWT插件的原理。当jenkins收到generic-webhook-trgger/invoke接口的请求时，会将请求代理给GWT插件处理，GWT插件内容会从jenkins实例对象中取出所有的参数化jenkins项目，包括pipeline，然后进行遍历。如果我们在参数化项目中Generic Trigger配置token的值与webhook请求时的token一致，就会触发改项目。如果多个参数化项目的token一样，则都会进行触发，所以这里的token最好时JOB_NAME项目名，因为这个是在项目或者是在为服务领域他都是唯一的。</p><ul><li>参数介绍:<ul><li>regexpFilterText: 需要进行匹配的key，例子中，使用从post body中提取的ref变量值。</li><li>regexpFilterExpression: <a href="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html" target="_blank" rel="noopener">正则表达式</a>；如果regexpFilterText参数符合regexpFilterExpression参数的正则表达式，则触发执行。</li><li>printPostContent: 布尔值，将webhook请求信息打印到日志上</li><li>printContributedVariables: 布尔值，将提取后的变量名及变量值打印出来</li><li>causeString: 字符串型，触发原因，可以直接应用提取后的变量，如 causeString: ‘Triggered on $msg’</li><li>Silent response: 布尔型，在正常情况下，当webhook请求成功后，GWT插件会返回HTTP 200状态码和触发结果给对方调用，但是当Silentresponse设置为true时，就只返回HTTP 200状态码，不反悔触发结果</li></ul></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的看的出来，我们只要是提交了分支都可以进行触发构建，但是呢，在实际生产中，我们定义了dev——&gt;test——master 分支，就是只想要这几个进行触发构建，其他的不进行触发，让开发自己去点击。</p><ul><li><p>指定分支构建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">  GenericTrigger causeString: <span class="string">'Triggered on $msg'</span>, genericVariables: [[defaultValue: <span class="string">''</span>, key: <span class="string">'ref'</span>, regexpFilter: <span class="string">''</span>, value: <span class="string">'$.ref'</span>]], printContributedVariables: <span class="literal">true</span>, printPostContent: <span class="literal">true</span>, regexpFilterExpression: <span class="string">'\'</span>refs/heads/(dev|<span class="built_in">test</span>|master)\<span class="string">''</span>, regexpFilterText: <span class="string">'$ref'</span>, token: <span class="string">'env.JOB_NAME'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>多分支Gitlab trigger<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;多分支的Gitlab trigger和我们前面介绍的gitlab事件触发一样的，没有任何区别，这里我测试了一个job，没有任何问题。同时新建了一个分支，jenkins会自动的扫描新建一个以分支为名的任务，进行自动触发。当我删除了某一个分支，就会触发自动扫描，然后查看分支为删除。</p></li><li><p>删除分支<br><img src="https://img.xxlaila.cn/1571996378764.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571996257688.jpg" alt="img"></p></li><li><p>整体效果图<br><img src="https://img.xxlaila.cn/1571990331005.jpg" alt="img"></p></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里介绍一下部署这块，根据branch来进行判断，不同的branch部署到不同的环境，当设定的值不在branch范围内，就需要人为的制定部署环境。当人员三分钟内没有来进行环境部署的选择，系统就会断开，对该分支标记为结束。</p><p><a href="http://xxlaila.github.io/2019/10/25/pipeline%E5%A4%9A%E5%88%86%E6%94%AFgitlab%E8%A7%A6%E5%8F%91/" target="_blank" rel="noopener">完整文件</a><br><a href="https://jenkinsci.github.io/job-dsl-plugin/#path/buildPipelineView" target="_blank" rel="noopener">推荐学习参考地址</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;pipeline&quot;&gt;&lt;a href=&quot;#pipeline&quot; class=&quot;headerlink&quot; title=&quot;pipeline&quot;&gt;&lt;/a&gt;pipeline&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最近在测试k8s上的ci/cd，之前的ci/cd其实也能满足目前先业务的需求，但是想尝试改进一下，优化以前的job，希望在登录ci的时候更加的简洁，
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>elasticserch</title>
    <link href="https://www.xxlaila.cn/2019/10/17/elasticserch%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4/"/>
    <id>https://www.xxlaila.cn/2019/10/17/elasticserch日常维护/</id>
    <published>2019-10-17T03:23:17.000Z</published>
    <updated>2019-10-26T01:31:46.569Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="days-1"><a href="#days-1" class="headerlink" title="days 1"></a>days 1</h3><a id="more"></a><h4 id="elasticserch-索引和数据操作"><a href="#elasticserch-索引和数据操作" class="headerlink" title="elasticserch 索引和数据操作"></a>elasticserch 索引和数据操作</h4><ul><li><p>查看索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET 'http://127.0.0.1:9200/_cat/indices?v'</span></span><br></pre></td></tr></table></figure></li><li><p>删除索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET 'http://127.0.0.1:9200/_cat/indices?v' |grep "red"|awk '&#123;print $3&#125;'|uniq &gt;l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in `cat a`;do  curl -XDELETE http://127.0.0.1:9200/$&#123;i&#125;;done</span></span><br></pre></td></tr></table></figure></li><li><p>查看shards</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET http://127.0.0.1:9200/_cat/shards</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shards 有几种类型，这里说一下<code>UNASSIGNED</code>，es 集群里面的分片是分配在多台node上的，为的就是高可用，比如你的某台机器crash了，那么集群就会让其他副本顶上来，避免出现某个分片不能提供服务的情况，但是难免还是会出现 UNASSIGNED shards 的错误。</p><ul><li>删除shards UNASSIGNED<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET 'http://127.0.0.1:9200/_cat/shards'|grep "UNASSIGNED"|awk '&#123;print $1&#125;'|uniq &gt;l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in `cat l`;do curl -XDELETE http://127.0.0.1:9200/$i;done</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="elasticserch验证集群"><a href="#elasticserch验证集群" class="headerlink" title="elasticserch验证集群"></a>elasticserch验证集群</h4><ul><li><p>集群相关API</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat</span><br><span class="line">=^.^=</span><br><span class="line">/_cat/allocation</span><br><span class="line">/_cat/shards</span><br><span class="line">/_cat/shards/&#123;index&#125;</span><br><span class="line">/_cat/master</span><br><span class="line">/_cat/nodes</span><br><span class="line">/_cat/tasks</span><br><span class="line">/_cat/indices</span><br><span class="line">/_cat/indices/&#123;index&#125;</span><br><span class="line">/_cat/segments</span><br><span class="line">/_cat/segments/&#123;index&#125;</span><br><span class="line">/_cat/count</span><br><span class="line">/_cat/count/&#123;index&#125;</span><br><span class="line">/_cat/recovery</span><br><span class="line">/_cat/recovery/&#123;index&#125;</span><br><span class="line">/_cat/health</span><br><span class="line">/_cat/pending_tasks</span><br><span class="line">/_cat/aliases</span><br><span class="line">/_cat/aliases/&#123;<span class="built_in">alias</span>&#125;</span><br><span class="line">/_cat/thread_pool</span><br><span class="line">/_cat/thread_pool/&#123;thread_pools&#125;</span><br><span class="line">/_cat/plugins</span><br><span class="line">/_cat/fielddata</span><br><span class="line">/_cat/fielddata/&#123;fields&#125;</span><br><span class="line">/_cat/nodeattrs</span><br><span class="line">/_cat/repositories</span><br><span class="line">/_cat/snapshots/&#123;repository&#125;</span><br><span class="line">/_cat/templates</span><br></pre></td></tr></table></figure></li><li><p>查看集群名称等信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"elk_elasticsearch_data_2"</span>,</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elk_elasticsearch"</span>,</span><br><span class="line">  <span class="string">"cluster_uuid"</span> : <span class="string">"T47wQwa6TT-6MHJVFM40Tw"</span>,</span><br><span class="line">  <span class="string">"version"</span> : &#123;</span><br><span class="line">    <span class="string">"number"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">    <span class="string">"build_flavor"</span> : <span class="string">"default"</span>,</span><br><span class="line">    <span class="string">"build_type"</span> : <span class="string">"rpm"</span>,</span><br><span class="line">    <span class="string">"build_hash"</span> : <span class="string">"595516e"</span>,</span><br><span class="line">    <span class="string">"build_date"</span> : <span class="string">"2018-08-17T23:18:47.308994Z"</span>,</span><br><span class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"lucene_version"</span> : <span class="string">"7.4.0"</span>,</span><br><span class="line">    <span class="string">"minimum_wire_compatibility_version"</span> : <span class="string">"5.6.0"</span>,</span><br><span class="line">    <span class="string">"minimum_index_compatibility_version"</span> : <span class="string">"5.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查看集群节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/nodes?v</span><br><span class="line">ip            heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name</span><br><span class="line">172.21.16.198           29          85   0    0.10    0.04     0.05 mdi       -      elk_elasticsearch_data_2</span><br><span class="line">172.21.16.187           48          85   0    0.00    0.01     0.05 mdi       *      elk_elasticsearch_master</span><br><span class="line">172.21.16.206           25          86   0    0.08    0.03     0.05 mdi       -      elk_elasticsearch_data_3</span><br></pre></td></tr></table></figure></li><li><p>验证集群磁盘分配情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/allocation?v</span><br><span class="line">shards disk.indices disk.used disk.avail disk.total disk.percent host          ip            node</span><br><span class="line">    98          1gb     3.6gb     96.3gb     99.9gb            3 172.21.16.198 172.21.16.198 elk_elasticsearch_data_2</span><br><span class="line">    99      887.1mb     4.5gb     95.4gb     99.9gb            4 172.21.16.187 172.21.16.187 elk_elasticsearch_master</span><br><span class="line">    99        957mb     3.5gb     96.4gb     99.9gb            3 172.21.16.206 172.21.16.206 elk_elasticsearch_data_3</span><br></pre></td></tr></table></figure></li><li><p>验证集群健康状况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/health?v </span><br><span class="line">epoch      timestamp cluster           status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line">1571648406 17:00:06  elk_elasticsearch green           3         3    296 148    0    0        0             0                  -                100.0%</span><br><span class="line"></span><br><span class="line">$</span><br></pre></td></tr></table></figure></li><li><p>查看每个数据节点上被fielddata所使用的堆内存大小。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/fielddata?v</span><br><span class="line">id                     host          ip            node                     field                    size</span><br><span class="line">VNcRqM30T3axzVjiPkDTmA 172.21.16.187 172.21.16.187 elk_elasticsearch_master event.resultCode.keyword 352b</span><br><span class="line">VNcRqM30T3axzVjiPkDTmA 172.21.16.187 172.21.16.187 elk_elasticsearch_master <span class="built_in">type</span>                     720b</span><br><span class="line">HNc5BrMWQcummBeAskQc4A 172.21.16.206 172.21.16.206 elk_elasticsearch_data_3 event.resultCode.keyword 704b</span><br><span class="line">z3zUA8KxTH6B7C8CmVRUIQ 172.21.16.198 172.21.16.198 elk_elasticsearch_data_2 <span class="built_in">type</span>                     720b</span><br><span class="line">z3zUA8KxTH6B7C8CmVRUIQ 172.21.16.198 172.21.16.198 elk_elasticsearch_data_2 event.resultCode.keyword 704b</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;days-1&quot;&gt;&lt;a href=&quot;#days-1&quot; class=&quot;headerlink&quot; title=&quot;days 1&quot;&gt;&lt;/a&gt;days 1&lt;/h3&gt;
    
    </summary>
    
      <category term="elasticserch" scheme="https://www.xxlaila.cn/categories/elasticserch/"/>
    
    
      <category term="elasticserch" scheme="https://www.xxlaila.cn/tags/elasticserch/"/>
    
  </entry>
  
  <entry>
    <title>nexus配置ldap</title>
    <link href="https://www.xxlaila.cn/2019/10/15/nexus%E9%85%8D%E7%BD%AEldap/"/>
    <id>https://www.xxlaila.cn/2019/10/15/nexus配置ldap/</id>
    <published>2019-10-15T09:28:34.000Z</published>
    <updated>2019-10-29T01:44:21.623Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="配置nexus"><a href="#配置nexus" class="headerlink" title="配置nexus"></a>配置nexus</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录nexus在设置页，点击ldap，</p><a id="more"></a><p><img src="https://img.xxlaila.cn/1571131890608.jpg" alt="img"><br>参数介绍:</p><ul><li>Name: 随便写</li><li>LDAP server address: 支持ldaps和ldap,而端口则取决于配置。 如果没有特殊配置，ldap默认端口是389</li><li>Search base: 只需要填DC即可，比如DC=example,DC=com。 其它内容，比如CN、OU等，不需要填写</li><li>Authentication method有以下选项:<ul><li>Simple Authentication</li><li>Anonymous Authentication</li><li>DIGEST-MD5</li><li>CRAM-MD5<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常选择Simple Authentication即可。Username or DN、Password里填写账户、密码，而 Connection rules无需修改。填写完毕后，点击【Verify connection】按钮，可以验证信息。 如果成功，即可保存。</li></ul></li></ul><h4 id="Choose-Users-and-Groups"><a href="#Choose-Users-and-Groups" class="headerlink" title="Choose Users and Groups"></a>Choose Users and Groups</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这项故名思义就是配置用户和组的，在最开头的Configuration template中，有四种模板可选：</p><ul><li>Active Directory</li><li>Generic Ldap Server</li><li>Posix with Dynamic Groups</li><li>Posix with Static Groups</li></ul><p>这里选择<code>Generic Ldap Server</code></p><ul><li>Base DN 在LDAP中找到用户的基本位置。这是相对于搜索基础的（例如ou = people）。</li><li>User subtree通常需要勾选。 如果把LDAP的Tree比作目录的话，勾选以后相当于递归查找子目录。</li><li>User filter通过过滤规则，减少搜索信息，用于提升性能。 仅仅只是提升性能，所以，如果不懂它特殊的匹配规则，也可以不填。</li><li>之前选择了<code>Generic Ldap Server</code>模版后，User ID attribute默认为uid，Real name attribute默认为cn、Email attribute默认为mail、Password attribute为空。</li><li>Map LDAP groups as roles如果不勾选，就不会同步用户组信息。 如果勾选，则可以选择Group type和Group member of attribute。 若无必要，保持默认即可，默认是勾选的。<br><img src="https://img.xxlaila.cn/1571133103461.jpg" alt="img"></li><li>填写完成后，通过【Verify user mapping】可以验证查询结果<br><img src="https://img.xxlaila.cn/1571133221971.jpg" alt="img"><br>点击创建<br><img src="https://img.xxlaila.cn/1571133286829.jpg" alt="img"></li></ul><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;新起一个窗口利用ldap里面的账号进行登录，可以登录，没有问题，但是登录之后用户没有任何权限，这对于研发来说又是一个不可接受的事情。接下来配置权限</p><h5 id="禁止匿名访问"><a href="#禁止匿名访问" class="headerlink" title="禁止匿名访问"></a>禁止匿名访问</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在实际应用中，是不允许匿名用户不可以登录就能访问的，这样我们ldap就没有任何意义了<br><img src="https://img.xxlaila.cn/1571133691247.jpg" alt="img"></p><ul><li>禁止匿名用户<br><img src="https://img.xxlaila.cn/1571133811908.jpg" alt="img"></li></ul><h5 id="创建角色"><a href="#创建角色" class="headerlink" title="创建角色"></a>创建角色</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Security——&gt;Roles——&gt;Create role，这里创建角色有两种。一种是nexus relos本地角色，一种是External roles mapping外部映射的形式。为了满足我们ldap账户登录进来有浏览库的权限，研发又可以上传第三方依赖库的权限，但是不能删除和私下增加库Repositories。所以这里我们需要单独建立一个本地的relos，然后在映射外部的ldap到这个本地的roles，这样ldap账户登录进来就能实现日常的基本操作。</p><ul><li><p>创建nexus relos本地角色<br><img src="https://img.xxlaila.cn/1571296771150.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建完成后，我们需要对他赋予权限，对用户进行权限控制，没有权限控制，就没办法达成我们上面的目标。下面是我赋予的权限，可以结合实际需求来进行赋予。</p></li><li><p>权限介绍:</p><ul><li>ng-component-upload: 有上传的权限，比如java依赖的一些第三方库，研发可以自己进行上传</li><li>ng-repository-admin-<em>-</em>-browse: 浏览所有的repository</li><li>ng-repository-admin-<em>-</em>-read: 可以所有读取repository的配置信息</li><li>ng-repository-view-maven2-maven-central-browse: 具有浏览maven-central内容</li><li>ng-repository-view-maven2-maven-central-read: 读取maven-central内容，在maven编译的时候具有下载的权限，(后面不一一介绍)</li><li>ng-repository-view-maven2-maven-public-browse</li><li>ng-repository-view-maven2-maven-public-read</li><li>ng-repository-view-maven2-maven-releases-browse</li><li>ng-repository-view-maven2-maven-releases-read</li><li>ng-repository-view-maven2-maven-snapshots-browse</li><li>ng-repository-view-maven2-maven-snapshots-read</li><li>ng-repository-view-npm-npm-kxl-all-browse: 以下是自己做的npm代理缓存，可以参考之前的<a href="https://xxlaila.github.io/2019/08/23/nexus3搭建npm私服/" target="_blank" rel="noopener">nexus3搭建npm私服</a></li><li>ng-repository-view-npm-npm-kxl-all-read</li><li>ng-repository-view-npm-npm-external-browse</li><li>ng-repository-view-npm-npm-external-read</li><li>ng-repository-view-npm-npm-internal-browse</li><li>ng-repository-view-npm-npm-internal-read</li><li>ng-search-read: 让用户具有所有权限，没有此权限，研发查找一个包，估计会死</li></ul></li><li><p>创建是External roles mapping外部映射<br><img src="https://img.xxlaila.cn/1571134166780.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571297568491.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在进行Roles ID 这栏目，需要填写的是Users，这个Users会在ldap上同步Users的一个用户组。根据自己的ldap账户组设置来进行填写。下图是ldap的组设置<br><img src="https://img.xxlaila.cn/1571298567078.jpg" alt="img"></p></li></ul><p><strong>注</strong>: 其实在这里我们也可以进行Privileges的权限赋予，但是我选择的是先创建一个本地的nexus relos。然后我们在Roles栏关联之前创建的<code>Developer</code>，完成以后通过ldap账户登录进行测试</p><h5 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里主要是从四个方面来测试ldap账户。分别是: 登录默认的权限、浏览所有库的权限、Browse的浏览、Browse库的上传</p><ul><li><p>登录默认的权限<br><img src="https://img.xxlaila.cn/1571297962563.jpg" alt="img"></p></li><li><p>浏览所有库的权限<br><img src="https://img.xxlaila.cn/1571298121188.jpg" alt="img"></p></li><li><p>Browse的浏<br><img src="https://img.xxlaila.cn/1571298018356.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571298167348.jpg" alt="img"></p></li><li><p>Browse库的上传<br><img src="https://img.xxlaila.cn/1571298224331.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571298260091.jpg" alt="img"></p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;配置nexus&quot;&gt;&lt;a href=&quot;#配置nexus&quot; class=&quot;headerlink&quot; title=&quot;配置nexus&quot;&gt;&lt;/a&gt;配置nexus&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;登录nexus在设置页，点击ldap，&lt;/p&gt;
    
    </summary>
    
      <category term="nexus" scheme="https://www.xxlaila.cn/categories/nexus/"/>
    
    
      <category term="ldap" scheme="https://www.xxlaila.cn/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>jenkins配置备份</title>
    <link href="https://www.xxlaila.cn/2019/10/15/jenkins%E9%85%8D%E7%BD%AE%E5%A4%87%E4%BB%BD/"/>
    <id>https://www.xxlaila.cn/2019/10/15/jenkins配置备份/</id>
    <published>2019-10-15T00:55:19.000Z</published>
    <updated>2019-10-28T03:36:02.239Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="jenkins-备份"><a href="#jenkins-备份" class="headerlink" title="jenkins 备份"></a>jenkins 备份</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当jenkins在用起来的时候，我们难保他不会出故障，但是出了故障我们怎么做到快速的恢复呢，这时备份就显得尤为重要了。但jenkins本身不提供备份的功能，<a id="more"></a> 所以这里就需要借助外力。备份可以多样化，一种是我们直接到jenkins的目录下面手动备份jenkins目录。一种是我们就jenkins自带的插件<code>thinBackup</code>和<code>Periodic Backup</code>进行备份恢复，下面进行分别介绍</p><h3 id="thinBackup备份"><a href="#thinBackup备份" class="headerlink" title="thinBackup备份"></a>thinBackup备份</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录jenkins——&gt;系统管理——&gt;插件管理<br><img src="https://img.xxlaila.cn/1571101180571.jpg" alt="img"><br>安装完成之后重启jenkins服务，登录jenkins在系统管理界面可以看到<br><img src="https://img.xxlaila.cn/1571101557754.jpg" alt="img"></p><h4 id="配置ThinBackup"><a href="#配置ThinBackup" class="headerlink" title="配置ThinBackup"></a>配置ThinBackup</h4><ul><li>点击ThinBackup<br><img src="https://img.xxlaila.cn/1571101640273.jpg" alt="img"><br>可以看到有三个选项:</li><li>Backup Now: 手动立即备份</li><li>Restore: 恢复备份</li><li>Settings: 备份参数的设置</li></ul><h5 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下面是我的备份参数，可以根据自己的需要自己设定备份参数，设置好友save即可，<code>Backup schedule for full backups</code>意思是周一到周五每天凌晨两点进行备份<br><img src="https://img.xxlaila.cn/1571102057919.jpg" alt="img"></p><h5 id="Restore"><a href="#Restore" class="headerlink" title="Restore"></a>Restore</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;备份文件是以日期+时间节点组成的文件名，我们恢复什么时间段的，点击进行恢复，<br><img src="https://img.xxlaila.cn/1571102188007.jpg" alt="img"></p><h3 id="Periodic-Backup"><a href="#Periodic-Backup" class="headerlink" title="Periodic Backup"></a>Periodic Backup</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;备份除了上面提到的插件还有一个插件是<code>Periodic Backup</code>，安装<code>Periodic Backup</code>不阐述，安装完成后可以在系统管理菜单下面有一个<code>Periodic Backup Manager</code>菜单<br><img src="https://img.xxlaila.cn/1571709136813.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打开<code>Periodic Backup Manager</code>，第一次打开是没有任何东西的，需要我们自己去建立一个规则，点击<code>Configure</code><br><img src="https://img.xxlaila.cn/1571709270639.jpg" alt="img"></p><p>配置项很简单:</p><ul><li>Temporary Directory: 临时目录</li><li>Backup schedule (cron): 进行备份cron的表达式，填写完成后点击<code>Validate cron syntax</code>进行验证</li><li>Maximum backups in location: 最大位置备份，保留多少个备份文件</li><li>Store no older than (days): 保留的时间</li><li>File Management Strategy: 备份策略<ul><li>ConfigOnly: 只备份配置文件</li><li>FullBackup: 进行全量备份，可以通过Excludes list中填入Ant风格表达式，排除不希望备份的文件，多个表达式使用分号分隔</li></ul></li><li>Storage Strategy: 存储策略，就是是否需要进行压缩存储</li><li>Backup Location: 备份的位置，都是本地目录<br><img src="https://img.xxlaila.cn/1571709879768.jpg" alt="img"></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;jenkins-备份&quot;&gt;&lt;a href=&quot;#jenkins-备份&quot; class=&quot;headerlink&quot; title=&quot;jenkins 备份&quot;&gt;&lt;/a&gt;jenkins 备份&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当jenkins在用起来的时候，我们难保他不会出故障，但是出了故障我们怎么做到快速的恢复呢，这时备份就显得尤为重要了。但jenkins本身不提供备份的功能，
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>jenkins配置ldap</title>
    <link href="https://www.xxlaila.cn/2019/10/14/jenkins%E9%85%8D%E7%BD%AEldap/"/>
    <id>https://www.xxlaila.cn/2019/10/14/jenkins配置ldap/</id>
    <published>2019-10-14T03:49:32.000Z</published>
    <updated>2019-10-29T02:04:04.913Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;公司研发人员和测试人员，还有运维人员有时候登录jenkins去查看一些job的状态或者是其他的东西，虽然有企业微信的通知，但是感觉还是不能满足，<a id="more"></a> 比如job错误了，企业微信虽然吧错误发给了研发人员，但是研发还是要登录jenkins上去看，就感觉要舒服一点，测试上做的一些自动化测试，有时候失败了他们也会去看或者是去建立一些自动化的job。之前建立了公共的账号，开发和测试人员都去登录，但是有时候他们误操作了，导致一些其他的东西失败或者错误，虽然做了权限控制，但是他们还是死不承认，所以这里介入ldap。谁动的就知道了，这样就不怕了。</p><h3 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录jenkins——&gt;系统管理——&gt;全局安全配置<br><img src="https://img.xxlaila.cn/1571025388007.jpg" alt="img"><br>访问控制——&gt;LDAP<br><img src="https://img.xxlaila.cn/1571027524602.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;配置完成以后我们需要测试一下连接是否正常，点击<code>Test LDAP setttings</code>，输入在ldap的其中一个账户来进行验证，没问题的结果如下:<br><img src="https://img.xxlaila.cn/1571027696951.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;配置完成并测试通过后就可以用LDAP直接登录了<br><strong>注</strong>: 启用了LDAP登录后将无法再用之前的登录方式（本地认证将无法在使用）登录，登录进来的任何一个账号都是管理员，都是管理着肯定来说不安全，权限配置请下看</p><p><a href="https://wiki.jenkins.io/display/JENKINS/LDAP+Plugin" target="_blank" rel="noopener">官方参考</a></p><h3 id="配置ldap的账户权限"><a href="#配置ldap的账户权限" class="headerlink" title="配置ldap的账户权限"></a>配置ldap的账户权限</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面我们虽然吧ldap配置完成，但是我们需要对用户进行权限的配置，不可能每个人登录都能对我们jenkins进行无限制的操作，这不符合我们之前的意图。安装<code>Role-based Authorization Strategy</code>插件</p><ul><li>在系统管理——&gt;全局安全配置,可以看到下面选项，每项介<a href="https://xxlaila.github.io/2019/08/09/jenkins%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">参考</a><br><img src="https://img.xxlaila.cn/1571034253089.jpg" alt="img"></li></ul><p>保存以后，返回系统管理界面就可以看到多处一个<code>Manage and Assign Roles</code><br><img src="https://img.xxlaila.cn/1571034433352.jpg" alt="img"><br>点击进去</p><p><img src="https://img.xxlaila.cn/1571034507945.jpg" alt="img"></p><ul><li><strong>Manage Roles</strong>: 角色分为Global和Project，可创建角色分组和添加项目。</li><li><strong>Assign Roles</strong>: 增加具体的用户，分配到角色组，指定项目权限。</li></ul><p><a href="https://xxlaila.github.io/2019/08/09/jenkins%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">权限设置</a></p><ul><li>下面我的配置，和之前的大同小异<br><img src="https://img.xxlaila.cn/1571038684383.jpg" alt="img"></li></ul><p><strong>注</strong>: 这里有一个小问题，这样配置以后，新用户登录进来以后就会提示没有权限，<code>Access Denied,xxxx没有全部/Read权限</code>，这是因为在打开jenkins后，没有创建用户前，先不要勾选系统设置中启用安全选项，如果勾选了，就会出现无法进入jenkins的现象<br><img src="https://img.xxlaila.cn/1571037187865.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在网上看到有这种的解决办法，有几种方案，一个是修改confing.xml的文件，修改config.xml文件的三种方式感觉都不太切合实际的业务；下面是我做的两种办法，推荐使用第二种</p><ul><li><p>Role-Based Strategy<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在<code>Assign Roles</code>吧用户添加进来，然后勾选权限，<br>系统管理——&gt;Manage and Assign Roles——&gt;Assign Roles<br><img src="https://img.xxlaila.cn/1571037604678.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是这有一个弊端，就是每次新来一个用户就得去添加一次用户权限，虽然满足了业务需求，但是不科学</p></li><li><p>项目矩阵授权策略<br><img src="https://img.xxlaila.cn/1571041499340.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一个全局的配置，特定组只能按照最小的权限授权，额外的权限可以在具体的项目权限矩阵里面在添加。 默认只有<code>Anonymous Users</code>和<code>Authenticated Users</code>，管理员组是需要添加的<code>admin</code></p></li><li><p>Anonymous Users: 匿名用户，显然不能</p></li><li><p>Authenticated Users: 认证用户，就是只要是认证的账号都可以拥有的权限</p></li><li><p>admin: 就是拥有所有的权限了，这个组一般只能运维人员和部门老大加入。</p></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;加入admin组以后，他会自动去同步ldap的组用户，如果用户在ldap是admin组，那么在这里就会是管理员权限，如果用户是普通组，那么就是<code>Authenticated Users</code>组赋予的权限，使用这种方式只要用户是ldap里面的，就可以登录查看。这样就满足了业务场景需求</p><h3 id="日志记录"><a href="#日志记录" class="headerlink" title="日志记录"></a>日志记录</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;记录用户日志需要单独的安装<code>Audit Trail</code>插件，该插件在Jenkins主配置页面中添加了一个配置部分，可以在此处配置日志位置和设置（文件大小和循环日志文件的数量），以及用于记录请求的URI模式。默认选项选择效果显着的大多数操作，例如创建/配置/删除作业和视图或永久删除/保存/开始构建。日志将按照配置写入磁盘，最近的条目也可以在“管理/系统日志”部分中查看。<br><img src="https://img.xxlaila.cn/1572057054289.jpg" alt="img"><br><a href="https://plugins.jenkins.io/audit-trail" target="_blank" rel="noopener">Audit Trail官方参考</a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里配置以后还不能记录job的日志，需要对job进行记录需要另外的安装<a href="https://wiki.jenkins.io/display/JENKINS/JobConfigHistory+Plugin" target="_blank" rel="noopener">Job Configuration History插件</a>，根据官方的介绍，可用于查看所有作业配置历史记录或仅查看已删除的作业或所有类型的配置历史记录条目。同时，如果配置了安全策略，还可以查看哪个用户进行了哪些更改。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装完成后，我们在job里面可以看到一个<code>Job Config History</code>的菜单。最开始没有没有任何记录，只有当构建job或者修改过job以后才会有记录<br><img src="https://img.xxlaila.cn/1572057782047.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1572057958019.jpg" alt="img"></p><ul><li>点击Show Diffs 可以看到我们具体修改了什么东西<br><img src="https://img.xxlaila.cn/1572058118436.jpg" alt="img"></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当我们安装好这个插件以后，也测试可以使用，但是我们不能让所有的job日志记录保存历史过久，如果job过多，记录过多，这会对我们的磁盘空间来说，肯定是一个压力，所以这里我们就需要进行配置，保存多少次的记录，而且还可以设置排除的文件。<br><img src="https://img.xxlaila.cn/1572058857084.jpg" alt="img"></p><p><a href="https://wiki.jenkins.io/display/JENKINS/JobConfigHistory+Plugin" target="_blank" rel="noopener">Job Configuration History官方</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:45:36 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;公司研发人员和测试人员，还有运维人员有时候登录jenkins去查看一些job的状态或者是其他的东西，虽然有企业微信的通知，但是感觉还是不能满足，
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="ldap" scheme="https://www.xxlaila.cn/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>java应用部署</title>
    <link href="https://www.xxlaila.cn/2019/10/12/java%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/10/12/java应用部署/</id>
    <published>2019-10-12T03:38:32.000Z</published>
    <updated>2019-10-15T02:18:36.026Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="Welcome to my blog, enter password to read." />    <label for="hbePass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="28e429d79cfb20de88086197f20183a926c614500058aea79ea1a9ab131e431f"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="java" scheme="https://www.xxlaila.cn/tags/java/"/>
    
  </entry>
  
</feed>
