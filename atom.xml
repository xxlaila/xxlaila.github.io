<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>懒羊羊</title>
  
  <subtitle>我是不会和普通的羊一般见识的。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.xxlaila.cn/"/>
  <updated>2019-12-05T06:50:05.550Z</updated>
  <id>https://www.xxlaila.cn/</id>
  
  <author>
    <name>xxlaila</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>k8s v1.14 prometheus与grafana部署</title>
    <link href="https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus与grafana部署/</id>
    <published>2019-12-04T09:55:44.000Z</published>
    <updated>2019-12-05T06:50:05.550Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-prometheus是读取Metrcs、etcd、api的其中数据。<a id="more"></a></p><h4 id="查看etcd的metrics输出信息"><a href="#查看etcd的metrics输出信息" class="headerlink" title="查看etcd的metrics输出信息"></a>查看etcd的metrics输出信息</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># curl --cacert <span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca.pem --cert <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span>etcd.pem --key <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span>etcd-key.pem https:<span class="comment">//172.21.17.30:2379/metrics</span></span><br></pre></td></tr></table></figure><h4 id="查看kube-apiserver的metrics信息"><a href="#查看kube-apiserver的metrics信息" class="headerlink" title="查看kube-apiserver的metrics信息"></a>查看kube-apiserver的metrics信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get --raw /metrics</span></span><br></pre></td></tr></table></figure><h4 id="下载官方的yaml文件"><a href="#下载官方的yaml文件" class="headerlink" title="下载官方的yaml文件"></a>下载官方的yaml文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git clone https://github.com/coreos/kube-prometheus</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd kube-prometheus/manifests</span></span><br><span class="line"><span class="comment"># mkdir -p operator node-exporter alertmanager grafana kube-state-metrics prometheus serviceMonitor adapter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mv *-serviceMonitor* serviceMonitor/</span></span><br><span class="line"><span class="comment"># mv grafana-* grafana/</span></span><br><span class="line"><span class="comment"># mv kube-state-metrics-* kube-state-metrics/</span></span><br><span class="line"><span class="comment"># mv alertmanager-* alertmanager/</span></span><br><span class="line"><span class="comment"># mv node-exporter-* node-exporter/</span></span><br><span class="line"><span class="comment"># mv prometheus-adapter* adapter/</span></span><br><span class="line"><span class="comment"># mv prometheus-* prometheus/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd setup/</span></span><br><span class="line"><span class="comment"># mv prometheus-operator* ../operator/</span></span><br><span class="line"><span class="comment"># mv 0namespace-namespace.yaml ../</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd ..</span></span><br><span class="line"><span class="comment"># ls -ltrh</span></span><br><span class="line">-rw-r--r-- 1 root root   60 Dec  3 17:45 0namespace-namespace.yaml</span><br><span class="line">drwxr-xr-x 2 root root  219 Dec  3 17:46 grafana</span><br><span class="line">drwxr-xr-x 2 root root  305 Dec  3 17:46 kube-state-metrics</span><br><span class="line">drwxr-xr-x 2 root root  200 Dec  3 17:46 node-exporter</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  3 17:47 operator</span><br><span class="line">drwxr-xr-x 2 root root  149 Dec  4 13:40 alertmanager</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 09:56 prometheus</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 10:01 adapter</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 11:55 serviceMonitor</span><br></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署前需要修改文件；</p><h4 id="创建监控etcd-secret"><a href="#创建监控etcd-secret" class="headerlink" title="创建监控etcd secret"></a>创建监控etcd secret</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etcd 监控要用到证书同时需要修改prometheus-prometheus.yaml。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n monitoring create secret generic etcd-certs --from-file=/etc/kubernetes/ssl/ca.pem --from-file=etcd-key.pem --from-file=etcd.pem</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get secret -n monitoring</span></span><br><span class="line">etcd-certs                        Opaque                                3      5d15h</span><br></pre></td></tr></table></figure><h4 id="修改prometheus-prometheus-yaml"><a href="#修改prometheus-prometheus-yaml" class="headerlink" title="修改prometheus-prometheus.yaml"></a>修改prometheus-prometheus.yaml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd prometheus/</span></span><br><span class="line"><span class="comment"># vim prometheus-prometheus.yaml</span></span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: Prometheus</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    prometheus: k8s</span><br><span class="line">  name: k8s</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  alerting:</span><br><span class="line">    alertmanagers:</span><br><span class="line">    - name: alertmanager-main</span><br><span class="line">      namespace: monitoring</span><br><span class="line">      port: web</span><br><span class="line">  baseImage: quay.io/prometheus/prometheus</span><br><span class="line">  nodeSelector:</span><br><span class="line">    kubernetes.io/os: linux</span><br><span class="line">  podMonitorSelector: &#123;&#125;</span><br><span class="line">  replicas: 2</span><br><span class="line">  <span class="comment"># 添加etcd 证书</span></span><br><span class="line">  secrets:</span><br><span class="line">  - etcd-certs</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      memory: 400Mi</span><br><span class="line">  <span class="comment"># 设置数据保留天数</span></span><br><span class="line">  retention: 7d</span><br><span class="line">  <span class="comment"># 创建外部存储pvc</span></span><br><span class="line">  storage:</span><br><span class="line">    volumeClaimTemplate:</span><br><span class="line">      spec:</span><br><span class="line">        accessModes:</span><br><span class="line">        - ReadWriteOnce</span><br><span class="line">        metadata:</span><br><span class="line">          annotations:</span><br><span class="line">            storageclass.kubernetes.io/is-default-class: <span class="literal">true</span></span><br><span class="line">          labels:</span><br><span class="line">            prometheus: prometheus-data-pvc</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 25Gi</span><br><span class="line">  ruleSelector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      prometheus: k8s</span><br><span class="line">      role: alert-rules</span><br><span class="line">  securityContext:</span><br><span class="line">    fsGroup: 2000</span><br><span class="line">    runAsNonRoot: <span class="literal">true</span></span><br><span class="line">    runAsUser: 1000</span><br><span class="line">  serviceAccountName: prometheus-k8s</span><br><span class="line">  serviceMonitorNamespaceSelector: &#123;&#125;</span><br><span class="line">  serviceMonitorSelector: &#123;&#125;</span><br><span class="line">  version: v2.11.0</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>storageclass.kubernetes.io/is-default-class: true</code> 是设置的默认动态存储，可以参考<a href="https://www.xxlaila.cn/2019/08/12/kube-nfs-%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/">kube-nfs-动态存储</a></p><h4 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署前吧adapter 目录下面的 <code>prometheus-adapter-apiService.yaml</code> 重命名，因为前面安装了metrics。如果这里在覆盖安装，就会导致<code>metrics.k8s.io</code>报错。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># kubectl apply -f 0namespace-namespace.yaml</span></span><br><span class="line"><span class="keyword">namespace</span>/monitoring created</span><br><span class="line"></span><br><span class="line"><span class="meta"># kubectl apply -f operator/</span></span><br><span class="line"><span class="meta"># kubectl -n monitoring get pod|grep operator</span></span><br><span class="line">prometheus-<span class="keyword">operator</span><span class="number">-548</span>c6dc45c-vz6l6   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">40</span>h</span><br><span class="line"></span><br><span class="line"><span class="meta"># kubectl apply -f adapter/</span></span><br><span class="line"><span class="meta"># kubectl apply -f alertmanager/</span></span><br><span class="line"><span class="meta"># kubectl apply -f node-exporter/</span></span><br><span class="line"><span class="meta"># kubectl apply -f kube-state-metrics/</span></span><br><span class="line"><span class="meta"># kubectl apply -f grafana/</span></span><br><span class="line"><span class="meta"># kubectl apply -f prometheus/</span></span><br><span class="line"><span class="meta"># kubectl apply -f serviceMonitor/</span></span><br></pre></td></tr></table></figure><h4 id="查看部署状态"><a href="#查看部署状态" class="headerlink" title="查看部署状态"></a>查看部署状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get all -n monitoring</span></span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/alertmanager-main-0                    2/2     Running   0          40h</span><br><span class="line">pod/alertmanager-main-1                    2/2     Running   0          40h</span><br><span class="line">pod/alertmanager-main-2                    2/2     Running   0          40h</span><br><span class="line">pod/grafana-5db74b88f4-7mt8c               1/1     Running   0          40h</span><br><span class="line">pod/kube-state-metrics-54f98c4687-mz5lq    3/3     Running   0          18h</span><br><span class="line">pod/node-exporter-hb66c                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-l2s8g                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-sjbmg                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-vw87m                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-zr8fk                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-zxcwl                    2/2     Running   0          40h</span><br><span class="line">pod/prometheus-adapter-8667948d79-tcz47    1/1     Running   0          18h</span><br><span class="line">pod/prometheus-k8s-0                       3/3     Running   1          20h</span><br><span class="line">pod/prometheus-k8s-1                       3/3     Running   1          20h</span><br><span class="line">pod/prometheus-operator-548c6dc45c-vz6l6   1/1     Running   0          40h</span><br><span class="line"></span><br><span class="line">NAME                            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">service/alertmanager-main       ClusterIP   10.254.101.249   &lt;none&gt;        9093/TCP                     40h</span><br><span class="line">service/alertmanager-operated   ClusterIP   None             &lt;none&gt;        9093/TCP,9094/TCP,9094/UDP   40h</span><br><span class="line">service/etcd                    ClusterIP   None             &lt;none&gt;        2379/TCP                     17h</span><br><span class="line">service/grafana                 ClusterIP   10.254.214.6     &lt;none&gt;        3000/TCP                     40h</span><br><span class="line">service/kube-state-metrics      ClusterIP   None             &lt;none&gt;        8443/TCP,9443/TCP            18h</span><br><span class="line">service/node-exporter           ClusterIP   None             &lt;none&gt;        9100/TCP                     40h</span><br><span class="line">service/prometheus-adapter      ClusterIP   10.254.60.49     &lt;none&gt;        443/TCP                      18h</span><br><span class="line">service/prometheus-k8s          ClusterIP   10.254.41.152    &lt;none&gt;        9090/TCP                     40h</span><br><span class="line">service/prometheus-operated     ClusterIP   None             &lt;none&gt;        9090/TCP                     20h</span><br><span class="line">service/prometheus-operator     ClusterIP   None             &lt;none&gt;        8080/TCP                     40h</span><br><span class="line"></span><br><span class="line">NAME                           DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE</span><br><span class="line">daemonset.apps/node-exporter   6         6         6       6            6           kubernetes.io/os=linux   40h</span><br><span class="line"></span><br><span class="line">NAME                                  READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/grafana               1/1     1            1           40h</span><br><span class="line">deployment.apps/kube-state-metrics    1/1     1            1           18h</span><br><span class="line">deployment.apps/prometheus-adapter    1/1     1            1           18h</span><br><span class="line">deployment.apps/prometheus-operator   1/1     1            1           40h</span><br><span class="line"></span><br><span class="line">NAME                                             DESIRED   CURRENT   READY   AGE</span><br><span class="line">replicaset.apps/grafana-5db74b88f4               1         1         1       40h</span><br><span class="line">replicaset.apps/kube-state-metrics-54f98c4687    1         1         1       18h</span><br><span class="line">replicaset.apps/prometheus-adapter-8667948d79    1         1         1       18h</span><br><span class="line">replicaset.apps/prometheus-operator-548c6dc45c   1         1         1       40h</span><br><span class="line"></span><br><span class="line">NAME                                 READY   AGE</span><br><span class="line">statefulset.apps/alertmanager-main   3/3     40h</span><br><span class="line">statefulset.apps/prometheus-k8s      2/2     20h</span><br></pre></td></tr></table></figure><h4 id="配置ingress"><a href="#配置ingress" class="headerlink" title="配置ingress"></a>配置ingress</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;ingress-monitor.yaml &lt;&lt;EOF </span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: prometheus.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: prometheus-k8s</span><br><span class="line">          servicePort: 9090</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: grafana.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: grafana</span><br><span class="line">          servicePort: 3000</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: alertmanager.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: alertmanager-main</span><br><span class="line">          servicePort: 9093</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f ingress-monitor.yaml</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在浏览器打开域名即可访问</p><h3 id="常用应用监控"><a href="#常用应用监控" class="headerlink" title="常用应用监控"></a>常用应用监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kubernetes 自身常见的监控有kube-apiserver、kube-scheduler、kube-controller-manager、etcd。node节点常见的有kubelt、kube-proxy。在serviceMonitor目录下面默认的文件只能满足kube-apiserver、kubelt两个，其他的修改单独修改文件才能监控。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 上面阐述的是集群是二进制方式安装，而不是以pod形式进行安装。</p><h4 id="kube-scheduler监控"><a href="#kube-scheduler监控" class="headerlink" title="kube-scheduler监控"></a>kube-scheduler监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-scheduler的service、endpoints不在kubernetes集群内，可以通过<code>kubectl get ep -n kube-system</code> 进行查看，修改 <code>prometheus-serviceMonitorKubeScheduler.yaml</code>，在该文件添加如下内容或者新起一个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;&gt; prometheus-serviceMonitorKubeScheduler.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-scheduler</span><br><span class="line">  name: kube-scheduler</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10251</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10251</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-scheduler</span><br><span class="line">  name: kube-scheduler</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10251</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorKubeScheduler.yaml</span></span><br></pre></td></tr></table></figure><h4 id="kube-controller-manager-监控"><a href="#kube-controller-manager-监控" class="headerlink" title="kube-controller-manager 监控"></a>kube-controller-manager 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-controller-manager修改，因为kubernetes 集群是采用ssl证书安装，默认的kube-controller-manager是没有使用ssl加密的，所以这里需要使用ssl证书，及https，否则不能监控。就会提示什么403、x509、400错误。</p><ul><li><p>prometheus-serviceMonitorKubeControllerManager.yaml 修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat prometheus-serviceMonitorKubeControllerManager.yaml</span></span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">    interval: 30s</span><br><span class="line">    honorLabels: <span class="literal">true</span></span><br><span class="line">    port: https-metrics</span><br><span class="line">    scheme: https</span><br><span class="line">    tlsConfig:</span><br><span class="line">      insecureSkipVerify: <span class="literal">true</span></span><br><span class="line">    metricRelabelings:</span><br><span class="line">    - action: drop</span><br><span class="line">      regex: etcd_(debugging|disk|request|server).*</span><br><span class="line">      sourceLabels:</span><br><span class="line">      - __name__</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-controller-manager</span><br></pre></td></tr></table></figure></li><li><p>新建kube-controller-manager-service.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;kube-controller-manager-service.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    component: kube-controller-manager</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 10252</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10252</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 10252</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorKubeControllerManager.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f kube-controller-manager-service.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="etcd-监控"><a href="#etcd-监控" class="headerlink" title="etcd 监控"></a>etcd 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; etcd 不在k8s集群内部所以要创建Endpoints、Service</p><ul><li>prometheus-serviceMonitoretcd.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitoretcd.yaml&lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    component: kube-controller-manager</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 2379</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 2379</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 2379</span><br><span class="line">    protocol: TCP</span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - interval: 10s</span><br><span class="line">    port: https-metrics</span><br><span class="line">    scheme: https</span><br><span class="line">    tlsConfig:</span><br><span class="line">      caFile: /etc/prometheus/secrets/etcd-certs/ca.pem</span><br><span class="line">      certFile: /etc/prometheus/secrets/etcd-certs/etcd.pem</span><br><span class="line">      keyFile: /etc/prometheus/secrets/etcd-certs/etcd-key.pem</span><br><span class="line">      insecureSkipVerify: <span class="literal">true</span></span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: etcd</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitoretcd.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="kube-proxy-监控"><a href="#kube-proxy-监控" class="headerlink" title="kube-proxy 监控"></a>kube-proxy 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kube-proxy的metrics收集端口为10249，可以查看kub-proxy的安装文档。使用的是http方式，不需要ssl加密</p><ul><li><p>新建 kube-proxy.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;  kube-proxy.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    component: kube-proxy</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10249</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10249</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.16.204</span><br><span class="line">  - ip: 172.21.16.231</span><br><span class="line">  - ip: ……</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10249</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>新建 prometheus-serviceMonitorProxy.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitorProxy.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - interval: 30s</span><br><span class="line">    port: http-metrics</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-proxy</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorProxy.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f kube-proxy.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="查看service、endpoints"><a href="#查看service、endpoints" class="headerlink" title="查看service、endpoints"></a>查看service、endpoints</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc,endpoints -n kube-system</span></span><br><span class="line">NAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">service/etcd                      ClusterIP   None             &lt;none&gt;        2379/TCP                 3m41s</span><br><span class="line">service/kube-controller-manager   ClusterIP   None             &lt;none&gt;        10252/TCP                16h</span><br><span class="line">service/kube-dns                  ClusterIP   10.254.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   7d16h</span><br><span class="line">service/kube-proxy                ClusterIP   None             &lt;none&gt;        10249/TCP                37m</span><br><span class="line">service/kube-scheduler            ClusterIP   None             &lt;none&gt;        10251/TCP                18h</span><br><span class="line">service/kubelet                   ClusterIP   None             &lt;none&gt;        10250/TCP                40h</span><br><span class="line">service/kubernetes-dashboard      NodePort    10.254.139.196   &lt;none&gt;        443:31417/TCP            6d18h</span><br><span class="line">service/metrics-server            ClusterIP   10.254.196.151   &lt;none&gt;        443/TCP                  2d23h</span><br><span class="line"></span><br><span class="line">NAME                                ENDPOINTS                                                                 AGE</span><br><span class="line">endpoints/etcd                      172.21.16.110:2379,172.21.17.30:2379,172.21.17.31:2379                    3m41s</span><br><span class="line">endpoints/kube-controller-manager   172.21.16.110:10252,172.21.17.30:10252,172.21.17.31:10252                 16h</span><br><span class="line">endpoints/kube-dns                  10.244.1.46:53,10.244.4.36:53,10.244.1.46:53 + 3 more...                  7d16h</span><br><span class="line">endpoints/kube-proxy                172.21.16.204:10249,172.21.16.231:10249,172.21.17.34:10249 + 3 more...    37m</span><br><span class="line">endpoints/kube-scheduler            172.21.16.110:10251,172.21.17.30:10251,172.21.17.31:10251                 7d16h</span><br><span class="line">endpoints/kubelet                   172.21.16.204:10255,172.21.16.231:10255,172.21.17.34:10255 + 15 more...   40h</span><br><span class="line">endpoints/kubernetes-dashboard      10.244.6.27:8443                                                          6d18h</span><br><span class="line">endpoints/metrics-server            172.21.17.34:4443                                                         2d23h</span><br></pre></td></tr></table></figure><h4 id="查看接口信息"><a href="#查看接口信息" class="headerlink" title="查看接口信息"></a>查看接口信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions| grep monitoring</span></span><br><span class="line">monitoring.coreos.com/v1</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get --raw "/apis/monitoring.coreos.com/v1"|jq .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get --raw "/apis/monitoring.coreos.com/v1/servicemonitors"|jq .</span></span><br></pre></td></tr></table></figure><h3 id="查看验证"><a href="#查看验证" class="headerlink" title="查看验证"></a>查看验证</h3><h4 id="Prometheus-的Targets监控"><a href="#Prometheus-的Targets监控" class="headerlink" title="Prometheus 的Targets监控"></a>Prometheus 的Targets监控</h4><p><img src="https://img.xxlaila.cn/1575513127483.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513184822.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513219480.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575517225144.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575519980419.jpg" alt="img"></p><h4 id="granfa-查看"><a href="#granfa-查看" class="headerlink" title="granfa 查看"></a>granfa 查看</h4><p><img src="https://img.xxlaila.cn/1575513263070.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513304800.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513339328.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kube-prometheus是读取Metrcs、etcd、api的其中数据。
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="prometheus" scheme="https://www.xxlaila.cn/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>centos 7 升级内核</title>
    <link href="https://www.xxlaila.cn/2019/12/03/centos-7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"/>
    <id>https://www.xxlaila.cn/2019/12/03/centos-7-升级内核/</id>
    <published>2019-12-03T09:01:03.000Z</published>
    <updated>2019-12-03T09:21:24.879Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="centos-7-升级内核版本"><a href="#centos-7-升级内核版本" class="headerlink" title="centos 7 升级内核版本"></a>centos 7 升级内核版本</h3><h4 id="查看当前内核版本"><a href="#查看当前内核版本" class="headerlink" title="查看当前内核版本"></a>查看当前内核版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">3.10.0-693.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">Linux k8s-master-01-3.kxl 3.10.0-693.el7.x86_64 <span class="comment">#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="更新yum源仓库和插件"><a href="#更新yum源仓库和插件" class="headerlink" title="更新yum源仓库和插件"></a>更新yum源仓库和插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y update</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h3 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h3><h4 id="导入ELRepo仓库的公共密钥"><a href="#导入ELRepo仓库的公共密钥" class="headerlink" title="导入ELRepo仓库的公共密钥"></a>导入ELRepo仓库的公共密钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br></pre></td></tr></table></figure><h4 id="安装ELRepo仓库的yum源"><a href="#安装ELRepo仓库的yum源" class="headerlink" title="安装ELRepo仓库的yum源"></a>安装ELRepo仓库的yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm</span></span><br></pre></td></tr></table></figure><h4 id="查看可用的系统内核包"><a href="#查看可用的系统内核包" class="headerlink" title="查看可用的系统内核包"></a>查看可用的系统内核包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum --disablerepo="*" --enablerepo="elrepo-kernel" list available</span></span><br><span class="line">elrepo-kernel                                                                                                                                                                      | 2.9 kB  00:00:00     </span><br><span class="line">elrepo-kernel/primary_db                                                                                                                                                           | 1.8 MB  00:00:00     </span><br><span class="line">Available Packages</span><br><span class="line">kernel-lt.x86_64                                                                                     4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-devel.x86_64                                                                               4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-doc.noarch                                                                                 4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-headers.x86_64                                                                             4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools.x86_64                                                                               4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs.x86_64                                                                          4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs-devel.x86_64                                                                    4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel-ml.x86_64                                                                                     5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-devel.x86_64                                                                               5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-doc.noarch                                                                                 5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-headers.x86_64                                                                             5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools.x86_64                                                                               5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs.x86_64                                                                          5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs-devel.x86_64                                                                    5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">perf.x86_64                                                                                          5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">python-perf.x86_64                                                                                   5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结果为长期维护版本lt为4.4，最新主线稳定版ml为5.4，这里安装的是4.4</p><h4 id="安装kernel"><a href="#安装kernel" class="headerlink" title="安装kernel"></a>安装kernel</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y --enablerepo=elrepo-kernel install kernel-lt.x86_64-4.4.205-1.el7.elrepo kernel-lt-devel.x86_64-4.4.205-1.el7.elrepo</span></span><br></pre></td></tr></table></figure><h3 id="设置-grub2"><a href="#设置-grub2" class="headerlink" title="设置 grub2"></a>设置 grub2</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内核安装好后，需要设置为默认启动选项并重启后才会生效</p><h4 id="查看系统上的所有可用内核"><a href="#查看系统上的所有可用内核" class="headerlink" title="查看系统上的所有可用内核"></a>查看系统上的所有可用内核</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># awk -F\' '$1=="menuentry " &#123;print i++ " : " $2&#125;' /etc/grub2.cfg</span></span><br><span class="line">0 : CentOS Linux (4.4.205-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">1 : CentOS Linux (3.10.0-957.12.1.el7.x86_64) 7 (Core)</span><br><span class="line">2 : CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)</span><br><span class="line">3 : CentOS Linux (0-rescue-d1f142097d497f24c021d7de9b81cab4) 7 (Core)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器上存在4 个内核，我们要使用 4.4 这个版本，可以通过 grub2-set-default 0 命令或编辑 /etc/default/grub 文件来设置</p><h4 id="设置新的内核为grub2的默认版本"><a href="#设置新的内核为grub2的默认版本" class="headerlink" title="设置新的内核为grub2的默认版本"></a>设置新的内核为grub2的默认版本</h4><ul><li><p>方法1<br>通过 grub2-set-default 0 命令设置，其中 0 是上面查询出来的可用内核</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grub2-set-default 0</span></span><br></pre></td></tr></table></figure></li><li><p>方法2<br>编辑 /etc/default/grub 文件，设置 GRUB_DEFAULT=0，通过上面查询显示的编号为 0 的内核作为默认内核。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/default/grub</span></span><br><span class="line">GRUB_TIMEOUT=1</span><br><span class="line">GRUB_DISTRIBUTOR=<span class="string">"<span class="variable">$(sed 's, release .*$,,g' /etc/system-release)</span>"</span></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_DISABLE_SUBMENU=<span class="literal">true</span></span><br><span class="line">GRUB_TERMINAL=<span class="string">"serial console"</span></span><br><span class="line">GRUB_SERIAL_COMMAND=<span class="string">"serial --speed=115200"</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">"console=tty0 crashkernel=auto console=ttyS0,115200"</span></span><br><span class="line">GRUB_DISABLE_RECOVERY=<span class="string">"true"</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="生成-grub-配置文件并重启"><a href="#生成-grub-配置文件并重启" class="headerlink" title="生成 grub 配置文件并重启"></a>生成 grub 配置文件并重启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grub2-mkconfig -o /boot/grub2/grub.cfg</span></span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-4.4.205-1.el7.elrepo.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-957.12.1.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-957.12.1.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-0-rescue-d1f142097d497f24c021d7de9b81cab4</span><br><span class="line">Found initrd image: /boot/initramfs-0-rescue-d1f142097d497f24c021d7de9b81cab4.img</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">4.4.205-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><h3 id="删除旧内核"><a href="#删除旧内核" class="headerlink" title="删除旧内核"></a>删除旧内核</h3><h4 id="查看系统中全部的内核"><a href="#查看系统中全部的内核" class="headerlink" title="查看系统中全部的内核"></a>查看系统中全部的内核</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa | grep kernel</span></span><br><span class="line">kernel<span class="_">-lt</span>-devel-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">kernel-3.10.0-693.el7.x86_64</span><br><span class="line">kernel-3.10.0-957.12.1.el7.x86_64</span><br><span class="line">kernel<span class="_">-lt</span>-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">kernel-tools-libs-3.10.0-1062.4.3.el7.x86_64</span><br><span class="line">kernel-3.10.0-1062.4.3.el7.x86_64</span><br><span class="line">kernel-tools-3.10.0-1062.4.3.el7.x86_64</span><br></pre></td></tr></table></figure><h4 id="yum-remove-删除旧内核的-RPM-包"><a href="#yum-remove-删除旧内核的-RPM-包" class="headerlink" title="yum remove 删除旧内核的 RPM 包"></a>yum remove 删除旧内核的 RPM 包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum remove kernel-3.10.0-693.el7.x86_64 kernel-3.10.0-957.12.1.el7.x86_64 kernel-tools-libs-3.10.0-1062.4.3.el7.x86_64 kernel-3.10.0-1062.4.3.el7.x86_64 kernel-tools-3.10.0-1062.4.3.el7.x86_64</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;centos-7-升级内核版本&quot;&gt;&lt;a href=&quot;#centos-7-升级内核版本&quot; class=&quot;headerlink&quot; title=&quot;centos 7 升级内核版本&quot;&gt;&lt;/a&gt;centos 7 升级内核版本&lt;/h3&gt;&lt;h4 id=&quot;查看当前内核版本&quot;&gt;&lt;a href=&quot;#查看当前内核版本&quot; class=&quot;headerlink&quot; title=&quot;查看当前内核版本&quot;&gt;&lt;/a&gt;查看当前内核版本&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# uname -r&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.10.0-693.el7.x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# uname -a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux k8s-master-01-3.kxl 3.10.0-693.el7.x86_64 &lt;span class=&quot;comment&quot;&gt;#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="centos" scheme="https://www.xxlaila.cn/categories/centos/"/>
    
    
      <category term="kernel" scheme="https://www.xxlaila.cn/tags/kernel/"/>
    
  </entry>
  
  <entry>
    <title>flannel cni容器部署</title>
    <link href="https://www.xxlaila.cn/2019/11/29/flannel-cni%E5%AE%B9%E5%99%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/29/flannel-cni容器部署/</id>
    <published>2019-11-29T03:50:55.000Z</published>
    <updated>2019-11-29T06:38:18.272Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="flannel-cni-配置"><a href="#flannel-cni-配置" class="headerlink" title="flannel cni 配置"></a>flannel cni 配置</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除原有的网络组件，采用容器方式进行部署。</p><h3 id="kube-controller-manager修改"><a href="#kube-controller-manager修改" class="headerlink" title="kube-controller-manager修改"></a>kube-controller-manager修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动参数增加如下两项<a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--allocate-node-cidrs=<span class="literal">true</span></span><br><span class="line">--cluster-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><p><strong>参数</strong>:</p><ul><li>1.是否应在云提供商上分配和设置Pod的CIDR</li><li>2.集群中Pod的CIDR范围。要求–allocate-node-cidrs为true</li></ul><p>kube-controller-manager参数<a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/" target="_blank" rel="noopener">详细说明</a></p><h3 id="kubelet-修改"><a href="#kubelet-修改" class="headerlink" title="kubelet 修改"></a>kubelet 修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kubelet修改两个配置文件，kubelet-config.yaml 文件已更新</p><h4 id="kubelet-service启动文件"><a href="#kubelet-service启动文件" class="headerlink" title="kubelet.service启动文件"></a>kubelet.service启动文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--network-plugin=cni</span><br><span class="line">--cni-conf-dir=/etc/cni/net.d</span><br><span class="line">--cni-bin-dir=/opt/cni/bin</span><br></pre></td></tr></table></figure><p>kubele参数<a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/" target="_blank" rel="noopener">详细说明</a></p><h4 id="kube-proxy-修改子网"><a href="#kube-proxy-修改子网" class="headerlink" title="kube-proxy 修改子网"></a>kube-proxy 修改子网</h4><ul><li>kube-proxy-config.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clusterCIDR: 10.244.0.0/16</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k8s<a href="https://www.xxlaila.cn/2019/09/11/kubernetes-v1-14%E5%AE%89%E8%A3%85/">集群安装文档</a>已经更新，node<a href="https://www.xxlaila.cn/2019/09/16/kubernetes-v1-14-node%E5%AE%89%E8%A3%85/">节点安装文档</a>已经更新。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先停止node 的flananel、 kubelet、kube-proxy。在删除/etc/cni/net.d/、/run/flannel/subnet.env、/var/lib/cni/flannel 的历史文件，重启网卡，除了flannel不启动，其他均启动。全新安装不需要这么操作，flannel证书也不需要复制。<a href="https://github.com/containernetworking/cni" target="_blank" rel="noopener">二进制安装参考</a></p><h3 id="下载cni插件"><a href="#下载cni插件" class="headerlink" title="下载cni插件"></a>下载cni插件</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cni <a href="https://github.com/containernetworking/plugins/releases" target="_blank" rel="noopener">插件下载</a>，解压后，放在各个节点的 /opt/cni/bin 下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ls -l /opt/cni/bin/</span><br><span class="line">total 70144</span><br><span class="line">-rwxr-xr-x 1 root root  4159253 Nov 26 16:32 bandwidth</span><br><span class="line">-rwxr-xr-x 1 root root  4628074 Nov 26 16:32 bridge</span><br><span class="line">-rwxr-xr-x 1 root root 12124236 Nov 26 16:32 dhcp</span><br><span class="line">-rwxr-xr-x 1 root root  5894275 Nov 26 16:32 firewall</span><br><span class="line">-rwxr-xr-x 1 root root  3069556 Nov 26 16:32 flannel</span><br><span class="line">-rwxr-xr-x 1 root root  4113837 Nov 26 16:32 host-device</span><br><span class="line">-rwxr-xr-x 1 root root  3614305 Nov 26 16:32 host-local</span><br><span class="line">-rwxr-xr-x 1 root root  4275320 Nov 26 16:32 ipvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3209373 Nov 26 16:32 loopback</span><br><span class="line">-rwxr-xr-x 1 root root  4346248 Nov 26 16:32 macvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3895553 Nov 26 16:32 portmap</span><br><span class="line">-rwxr-xr-x 1 root root  4546828 Nov 26 16:32 ptp</span><br><span class="line">-rwxr-xr-x 1 root root  3392736 Nov 26 16:32 sbr</span><br><span class="line">-rwxr-xr-x 1 root root  2885430 Nov 26 16:32 static</span><br><span class="line">-rwxr-xr-x 1 root root  3356497 Nov 26 16:32 tuning</span><br><span class="line">-rwxr-xr-x 1 root root  4275168 Nov 26 16:32 vlan</span><br></pre></td></tr></table></figure><h3 id="flannel-部署"><a href="#flannel-部署" class="headerlink" title="flannel 部署"></a>flannel 部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/v0.11.0/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line">kubectl apply -f ./kube-flannel.yml</span><br></pre></td></tr></table></figure><h3 id="查看flannel安装情况"><a href="#查看flannel安装情况" class="headerlink" title="查看flannel安装情况"></a>查看flannel安装情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get po,svc -o wide</span></span><br><span class="line">NAME                 READY   STATUS    RESTARTS   AGE   IP           NODE            NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/nginx-ds-b9wgm   1/1     Running   0          43h   10.244.6.2   172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-dd9mb   1/1     Running   0          43h   10.244.1.3   172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-lcrn5   1/1     Running   0          43h   10.244.4.2   172.21.16.231   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-n52vr   1/1     Running   0          43h   10.244.2.2   172.21.17.40    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-twdxm   1/1     Running   0          43h   10.244.5.2   172.21.16.204   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-z72mx   1/1     Running   0          43h   10.244.3.2   172.21.17.38    &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE   SELECTOR</span><br><span class="line">service/kubernetes   ClusterIP   10.254.0.1      &lt;none&gt;        443/TCP        44h   &lt;none&gt;</span><br><span class="line">service/nginx-ds     NodePort    10.254.230.34   &lt;none&gt;        80:31286/TCP   43h   app=nginx-ds</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get po,svc -o wide -n kube-system</span></span><br><span class="line">NAME                                              READY   STATUS    RESTARTS   AGE     IP              NODE            NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/coredns-5579b8778b-dlk4c                      1/1     Running   4          43h     10.244.1.2      172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-2t8rn                   1/1     Running   0          44h     172.21.17.41    172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-9sb8v                   1/1     Running   0          44h     172.21.16.231   172.21.16.231   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-npl5k                   1/1     Running   0          44h     172.21.17.34    172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-r5n8r                   1/1     Running   0          44h     172.21.16.204   172.21.16.204   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-wpfxw                   1/1     Running   0          44h     172.21.17.40    172.21.17.40    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-x2v8z                   1/1     Running   0          44h     172.21.17.38    172.21.17.38    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kubernetes-dashboard-65dfbf6f4f-sc92h         1/1     Running   0          21h     10.244.6.10     172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/metrics-server-v0.3.4-5cd6d6b55f-psq2z        2/2     Running   0          3h20m   172.21.17.34    172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/traefik-ingress-controller-56b6d5b864-srnmm   1/1     Running   0          155m    172.21.17.41    172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE     SELECTOR</span><br><span class="line">service/kube-dns                  ClusterIP   10.254.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   43h     k8s-app=kube-dns</span><br><span class="line">service/kubernetes-dashboard      NodePort    10.254.139.196   &lt;none&gt;        443:31417/TCP            21h     k8s-app=kubernetes-dashboard</span><br><span class="line">service/metrics-server            ClusterIP   10.254.201.191   &lt;none&gt;        443/TCP                  3h56m   k8s-app=metrics-server</span><br><span class="line">service/traefik-ingress-service   ClusterIP   None             &lt;none&gt;        80/TCP,8080/TCP          154m    k8s-app=traefik-ingress-lb</span><br><span class="line">service/traefik-web-ui            ClusterIP   10.254.78.17     &lt;none&gt;        80/TCP                   23h     k8s-app=traefik-ingress-lb</span><br></pre></td></tr></table></figure><h3 id="查看节点的网络"><a href="#查看节点的网络" class="headerlink" title="查看节点的网络"></a>查看节点的网络</h3><ul><li><p>node-01</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">cni0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.6.1  netmask 255.255.255.0  broadcast 10.244.6.255</span><br><span class="line">        ether 42:56:73:73:c5:69  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 121976  bytes 48185929 (45.9 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 143012  bytes 112170228 (106.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.21.17.41  netmask 255.255.240.0  broadcast 172.21.31.255</span><br><span class="line">        ether fa:16:3e:a0:b1:af  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 1878425  bytes 997129342 (950.9 MiB)</span><br><span class="line">        RX errors 0  dropped 29  overruns 0  frame 0</span><br><span class="line">        TX packets 1014950  bytes 378435170 (360.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.6.0  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        ether 32:83:f7:e6:de:77  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 207502  bytes 36217464 (34.5 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 242424  bytes 246992876 (235.5 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 15889  bytes 7196484 (6.8 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 15889  bytes 7196484 (6.8 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">vethb26f5960: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        ether a6:a8:18:c3:f0:16  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 23  bytes 2075 (2.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 49  bytes 4330 (4.2 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li><li><p>node-02</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">cni0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.4.1  netmask 255.255.255.0  broadcast 10.244.4.255</span><br><span class="line">        ether 82:14:33:5c:b0:b7  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 150228  bytes 747318135 (712.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 214837  bytes 209342880 (199.6 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.21.16.231  netmask 255.255.240.0  broadcast 172.21.31.255</span><br><span class="line">        ether fa:16:3e:d8:23:fe  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 10290258  bytes 3436274673 (3.2 GiB)</span><br><span class="line">        RX errors 0  dropped 19  overruns 0  frame 0</span><br><span class="line">        TX packets 9490095  bytes 3777352983 (3.5 GiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.4.0  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        ether ee:a3:ff:37:3a:61  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 280851  bytes 31096456 (29.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 262931  bytes 968429571 (923.5 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 653134  bytes 200562497 (191.2 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 653134  bytes 200562497 (191.2 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">veth8aa15f82: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        ether fa:23:1e:b0:65:20  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 49191  bytes 4622232 (4.4 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 53647  bytes 19011709 (18.1 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;flannel-cni-配置&quot;&gt;&lt;a href=&quot;#flannel-cni-配置&quot; class=&quot;headerlink&quot; title=&quot;flannel cni 配置&quot;&gt;&lt;/a&gt;flannel cni 配置&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;删除原有的网络组件，采用容器方式进行部署。&lt;/p&gt;&lt;h3 id=&quot;kube-controller-manager修改&quot;&gt;&lt;a href=&quot;#kube-controller-manager修改&quot; class=&quot;headerlink&quot; title=&quot;kube-controller-manager修改&quot;&gt;&lt;/a&gt;kube-controller-manager修改&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;启动参数增加如下两项
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="flannel" scheme="https://www.xxlaila.cn/tags/flannel/"/>
    
  </entry>
  
  <entry>
    <title>k8s-dashboard v2.0.0部署</title>
    <link href="https://www.xxlaila.cn/2019/11/28/k8s-dashboard-v2-0-0%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/28/k8s-dashboard-v2-0-0部署/</id>
    <published>2019-11-28T07:47:19.000Z</published>
    <updated>2019-12-02T07:01:32.306Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Kubernetes Dashboard 从v2.0.0-beta1版本开始，集成了一个metrics-scraper的组件，可以通过 Kubernetes 的 Metrics API 收集一些基础资源的监控信息，并在web页面展示</p><a id="more"></a><h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta6/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure><h3 id="使用-openssl-签发证书"><a href="#使用-openssl-签发证书" class="headerlink" title="使用 openssl 签发证书"></a>使用 openssl 签发证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir certs</span><br><span class="line">openssl req -nodes -newkey rsa:2048 -keyout certs/dashboard.key -out certs/dashboard.csr -subj <span class="string">"/C=/ST=/L=/O=/OU=/CN=kubernetes-dashboard"</span></span><br><span class="line">openssl x509 -req -sha256 -days 10000 -<span class="keyword">in</span> certs/dashboard.csr -signkey certs/dashboard.key -out certs/dashboard.crt</span><br></pre></td></tr></table></figure><h3 id="安装-Dashboard"><a href="#安装-Dashboard" class="headerlink" title="安装 Dashboard"></a>安装 Dashboard</h3><h4 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace kubernetes-dashboard</span><br></pre></td></tr></table></figure><h4 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret generic kubernetes-dashboard-certs --from-file=certs -n kubernetes-dashboard</span><br></pre></td></tr></table></figure><h4 id="修改recommended-yaml"><a href="#修改recommended-yaml" class="headerlink" title="修改recommended.yaml"></a>修改recommended.yaml</h4><ul><li><p>注释namespace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br></pre></td></tr></table></figure></li><li><p>使用自签发的证书<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用自签发的证书,注释掉 kubernetes-dashboard-certs 的 Secret 定义</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-certs</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f recommended.yaml</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用-NodePort-暴露服务"><a href="#使用-NodePort-暴露服务" class="headerlink" title="使用 NodePort 暴露服务"></a>使用 NodePort 暴露服务</h4><ul><li><p>新建 external-https-svc.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;external-https-svc.yaml&lt;&lt;EOF</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-external</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f external-https-svc.yaml</span><br></pre></td></tr></table></figure></li><li><p>查看验证</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># kubectl <span class="keyword">get</span> svc,pods -n kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">NAME                                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">service/dashboard-metrics-scraper       ClusterIP   <span class="number">10.254</span><span class="number">.199</span><span class="number">.169</span>   &lt;none&gt;        <span class="number">8000</span>/TCP        <span class="number">9</span>m50s</span><br><span class="line">service/kubernetes-dashboard            ClusterIP   <span class="number">10.254</span><span class="number">.73</span><span class="number">.119</span>    &lt;none&gt;        <span class="number">443</span>/TCP         <span class="number">9</span>m51s</span><br><span class="line">service/kubernetes-dashboard-<span class="keyword">external</span>   NodePort    <span class="number">10.254</span><span class="number">.169</span><span class="number">.250</span>   &lt;none&gt;        <span class="number">443</span>:<span class="number">32318</span>/TCP   <span class="number">11</span>m</span><br><span class="line"></span><br><span class="line">NAME                                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/dashboard-metrics-scraper<span class="number">-69f</span>cc6d9df<span class="number">-4</span>lctd   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">9</span>m49s</span><br><span class="line">pod/kubernetes-dashboard<span class="number">-77</span>d4694b5f-vkgfz        <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">9</span>m49s</span><br></pre></td></tr></table></figure></li></ul><p>使用之前的密钥认证登录，未出图，查了一下，说的是兼容问题，v1.15.0以上就没问题<br><img src="https://img.xxlaila.cn/1574927727171.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Kubernetes Dashboard 从v2.0.0-beta1版本开始，集成了一个metrics-scraper的组件，可以通过 Kubernetes 的 Metrics API 收集一些基础资源的监控信息，并在web页面展示&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="dashboard v2.0.0" scheme="https://www.xxlaila.cn/tags/dashboard-v2-0-0/"/>
    
  </entry>
  
  <entry>
    <title>logstash详解</title>
    <link href="https://www.xxlaila.cn/2019/11/21/logstash%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.xxlaila.cn/2019/11/21/logstash详解/</id>
    <published>2019-11-21T03:51:23.000Z</published>
    <updated>2019-11-27T01:15:35.606Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前篇文件<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>粗略的完成了部署，但是真正是批量使用的时候发现还是有很多不足，优化的点还是非常的多。<a id="more"></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用ElasticSearch时一般需要自己创建ElasticSearch的索引的Mapping，当索引非常多的时候，可能需要配置一个索引模板Template来对类似的索引做统一配置，让索引模板Template中配置匹配索引的规则，来确定该Template会被应用到哪些索引上。</p><h3 id="Template配置方式"><a href="#Template配置方式" class="headerlink" title="Template配置方式"></a>Template配置方式</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash在整合ElasticSearch的时候，有三种方式可以来进行Template的配置。</p><h4 id="使用ElasticSearch默认自带的索引模板"><a href="#使用ElasticSearch默认自带的索引模板" class="headerlink" title="使用ElasticSearch默认自带的索引模板"></a>使用ElasticSearch默认自带的索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElasticSearch默认自带了一个名字为”logstash”的模板，默认应用于Logstash写入数据到ElasticSearch使用，我们可以在通过es的api接口、或者在kibana dev tools窗口通过GET /_template/来进行查看</p><ul><li><p>api 查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET http://127.0.0.1:9200/_template  -s | python -m json.tool</span><br><span class="line"></span><br><span class="line">$ curl -XGET http://127.0.0.1:9200/_template?pretty</span><br></pre></td></tr></table></figure></li><li><p>kibana 查看<br><img src="https://img.xxlaila.cn/1574314182454.jpg" alt="img"></p></li><li><p>优点: 最简单，无须任何配置</p></li><li><p>缺点: 无法自定义一些配置，例如：分词方式</p></li></ul><h4 id="在Logstash-Indexer端自定义配置索引模板"><a href="#在Logstash-Indexer端自定义配置索引模板" class="headerlink" title="在Logstash Indexer端自定义配置索引模板"></a>在Logstash Indexer端自定义配置索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash的output插件中使用template指定本机器上的一个模板json文件路径，可以在json文件中设置对应的Template模板信息。前面的章节就使用的这种方式。</p><ul><li>优点：配置简单</li><li>缺点：因为分散在Logstash Indexer机器上，维护起来比较麻烦</li></ul><h4 id="在ElasticSearch服务端自定义配置索引模板"><a href="#在ElasticSearch服务端自定义配置索引模板" class="headerlink" title="在ElasticSearch服务端自定义配置索引模板"></a>在ElasticSearch服务端自定义配置索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由ElasticSearch负责加载模板。这种方式需要在ElasticSearch的集群中的config/templates路径下配置模板json。而且ElasticSearch提供了Restful API接口维护索引模板信息。</p><ul><li>优点：维护比较容易，可动态更改，全局生效。</li><li>缺点：需要注意模板的命名规则，比较容易通过看Template名字就能够确定模板应用到哪些索引</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;三种索引方式都有优缺点；但是使用第三种方式是最好的，就像之前<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>就使用的是第二种方式，然后是在用的时候发现，logstash是多台服务器，维护起来非常非常的麻烦。如果logstash 和ElasticSearch只有一台服务器，可以使用第二种方式，在Logstash Indexer端维护Template文件即可。</p><h3 id="模版类型"><a href="#模版类型" class="headerlink" title="模版类型"></a>模版类型</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElasticSearch的模板类型主要由两种：静态模板和动态模板</p><h4 id="静态模板"><a href="#静态模板" class="headerlink" title="静态模板"></a>静态模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;适合索引字段数据固定的场景，一旦配置完成，不能向里面加入多余的字段，否则会报错</p><ul><li>优点：scheam已知，业务场景明确，不容易出现因字段随便映射从而造成元数据撑爆es内存，从而导致es集群全部宕机</li><li>缺点：字段数多的情况下配置稍繁琐，针对于每个索引可能需要的模板都不同，很有可能需要配置很多个模板</li></ul><h4 id="动态模板"><a href="#动态模板" class="headerlink" title="动态模板"></a>动态模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;适合字段数不明确，大量字段的配置类型相同的场景，可以按照类型规则动态添加新字段，新加字段不会报错。主要需要配置 <code>dynamic_templates</code>。</p><ul><li>优点：可动态添加任意字段，无须改动schema</li><li>缺点：无标准schema导致数据不规则，如果添加的字段非常多，有可能造成ES集群宕机</li></ul><p><strong>注</strong>: 模板在设置生效后，仅对ES集群中新建立的索引生效，而对已存在的索引及时索引名满足模板的匹配规则，也不会生效，因此如果需要改变现有索引的Mapping信息，仍需要在正确的Mapping基础上建立新的索引，并将数据从原索引拷贝至新索引，变更新索引别名为原索引这种方式来实现。</p><h3 id="模板结构"><a href="#模板结构" class="headerlink" title="模板结构"></a>模板结构</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模版的结构如<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>里面所提到的。分四部分</p><ul><li>通用设置: 主要是模板匹配索引的过滤规则，影响该模板对哪些索引生效；</li><li>settings: 配置索引的公共参数，比如索引的replicas，以及分片数shards等参数；</li><li>mappings: 最重要的一部分，在这部分中配置每个type下的每个field的相关属性，比如field类型（string,long,date等等），是否分词，是否在内存中缓存等等属性都在这部分配置；</li><li>aliases: 索引别名，索引别名可用在索引数据迁移等用途上。</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当我们在定制索引模版的时候，这时候我们需要参考研发给的日志标准和需要的日志标准格式，以及日志样本等，给出一些运维的见解。否则做出来的东西不一定满足需求，又要重新来做。着重参考如下:</p><ul><li>是否存储</li><li>是否分词</li><li>以什么来建立索引</li><li>字段类型是什么</li><li>如何排序</li><li>字段数是否固定</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结合这些，我们还可以参考词库的维护，ElasticSearch后期结构的变化调整，如果这些不考虑，在后期量起来以后，改动任何一项都需要去重新建立索引。是非常蛋疼的。</p><h3 id="创建模版"><a href="#创建模版" class="headerlink" title="创建模版"></a>创建模版</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里采用第三种三种方式建立模版，登录kibana，在dev tools栏下面，删除默认的logstash-<em>模版，然后创建一个logstash-</em>的模版，这样当新的索引来了以后，就会加载这个模版。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前篇文件&lt;a href=&quot;http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/&quot;&gt;elk部署&lt;/a&gt;粗略的完成了部署，但是真正是批量使用的时候发现还是有很多不足，优化的点还是非常的多。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="logstash" scheme="https://www.xxlaila.cn/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>logstash监控</title>
    <link href="https://www.xxlaila.cn/2019/11/19/logstash%E7%9B%91%E6%8E%A7/"/>
    <id>https://www.xxlaila.cn/2019/11/19/logstash监控/</id>
    <published>2019-11-19T02:35:56.000Z</published>
    <updated>2019-11-19T07:04:24.071Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="logstash-api-监控"><a href="#logstash-api-监控" class="headerlink" title="logstash api 监控"></a>logstash api 监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash 5.0 开始，提供了输出自身进程的指标和状态监控的 API。这大大降低了我们监控 Logstash 的难度。<a id="more"></a>可以使用Logstash提供的监视API来检索这些指标。默认情况下api可用，不需任何额外的配置，或者可以配置X-Pack监视以将数据发送到监视群集。这个直接在kibana页面进行配置。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash收集的指标包括:</p><ul><li>节点信息: 接口目前支持三种类型：pipeline、os、jvm。</li><li>插件信息: 包括已安装插件的列表。</li><li>节点统计指标: JVM统计信息，进程统计信息，与事件相关的统计信息和管道运行时统计信息。</li><li>热线程统计</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;检索常规信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"build_date"</span> : <span class="string">"2018-08-18T00:25:22Z"</span>,</span><br><span class="line">  <span class="string">"build_sha"</span> : <span class="string">"f8014ac54e6c8ff6c071c0960ca1b00e9735f43a"</span>,</span><br><span class="line">  <span class="string">"build_snapshot"</span> : <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="pipeline-指标"><a href="#pipeline-指标" class="headerlink" title="pipeline 指标"></a>pipeline 指标</h3><h4 id="工作程序数量，批处理大小和批处理延迟"><a href="#工作程序数量，批处理大小和批处理延迟" class="headerlink" title="工作程序数量，批处理大小和批处理延迟"></a>工作程序数量，批处理大小和批处理延迟</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/pipelines?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"pipelines"</span> : &#123;</span><br><span class="line">    <span class="string">"main"</span> : &#123;</span><br><span class="line">      <span class="string">"workers"</span> : 4,</span><br><span class="line">      <span class="string">"batch_size"</span> : 125,</span><br><span class="line">      <span class="string">"batch_delay"</span> : 50,</span><br><span class="line">      <span class="string">"config_reload_automatic"</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"config_reload_interval"</span> : 3000000000,</span><br><span class="line">      <span class="string">"dead_letter_queue_enabled"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="特定管道的信息"><a href="#特定管道的信息" class="headerlink" title="特定管道的信息"></a>特定管道的信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/pipelines/main?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"pipelines"</span> : &#123;</span><br><span class="line">    <span class="string">"main"</span> : &#123;</span><br><span class="line">      <span class="string">"workers"</span> : 4,</span><br><span class="line">      <span class="string">"batch_size"</span> : 125,</span><br><span class="line">      <span class="string">"batch_delay"</span> : 50,</span><br><span class="line">      <span class="string">"config_reload_automatic"</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"config_reload_interval"</span> : 3000000000,</span><br><span class="line">      <span class="string">"dead_letter_queue_enabled"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="OS-信息"><a href="#OS-信息" class="headerlink" title="OS 信息"></a>OS 信息</h3><h4 id="显示了操作系统名称，体系结构，版本和可用处理器"><a href="#显示了操作系统名称，体系结构，版本和可用处理器" class="headerlink" title="显示了操作系统名称，体系结构，版本和可用处理器"></a>显示了操作系统名称，体系结构，版本和可用处理器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/os?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"os"</span> : &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"Linux"</span>,</span><br><span class="line">    <span class="string">"arch"</span> : <span class="string">"amd64"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.10.0-693.11.1.el7.x86_64"</span>,</span><br><span class="line">    <span class="string">"available_processors"</span> : 4</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="jvm-信息"><a href="#jvm-信息" class="headerlink" title="jvm 信息"></a>jvm 信息</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示节点级别的JVM统计信息，例如JVM进程ID，版本，VM信息，内存使用情况以及有关垃圾收集器的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/jvm?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"jvm"</span> : &#123;</span><br><span class="line">    <span class="string">"pid"</span> : 20827,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"1.8.0_144"</span>,</span><br><span class="line">    <span class="string">"vm_version"</span> : <span class="string">"1.8.0_144"</span>,</span><br><span class="line">    <span class="string">"vm_vendor"</span> : <span class="string">"Oracle Corporation"</span>,</span><br><span class="line">    <span class="string">"vm_name"</span> : <span class="string">"Java HotSpot(TM) 64-Bit Server VM"</span>,</span><br><span class="line">    <span class="string">"start_time_in_millis"</span> : 1574066157917,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"heap_init_in_bytes"</span> : 3221225472,</span><br><span class="line">      <span class="string">"heap_max_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"non_heap_init_in_bytes"</span> : 2555904,</span><br><span class="line">      <span class="string">"non_heap_max_in_bytes"</span> : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"gc_collectors"</span> : [ <span class="string">"ParNew"</span>, <span class="string">"ConcurrentMarkSweep"</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插件信息"><a href="#插件信息" class="headerlink" title="插件信息"></a>插件信息</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件信息API获取有关当前安装的所有Logstash插件的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/plugins?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"total"</span> : 98,</span><br><span class="line">  <span class="string">"plugins"</span> : [ &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-cef"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"5.0.3"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-collectd"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.8"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-dots"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.6"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-edn"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.6"</span></span><br><span class="line">  &#125;,……………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="节点统计指表"><a href="#节点统计指表" class="headerlink" title="节点统计指表"></a>节点统计指表</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;节点统计信息API检索有关Logstash的运行时统计信息。</p><h4 id="jvm统计"><a href="#jvm统计" class="headerlink" title="jvm统计"></a>jvm统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/jvm?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"jvm"</span> : &#123;</span><br><span class="line">    <span class="string">"threads"</span> : &#123;</span><br><span class="line">      <span class="string">"count"</span> : 55,</span><br><span class="line">      <span class="string">"peak_count"</span> : 56</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"heap_used_percent"</span> : 10,</span><br><span class="line">      <span class="string">"heap_committed_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"heap_max_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"heap_used_in_bytes"</span> : 348033216,</span><br><span class="line">      <span class="string">"non_heap_used_in_bytes"</span> : 170512848,</span><br><span class="line">      <span class="string">"non_heap_committed_in_bytes"</span> : 201850880,</span><br><span class="line">      <span class="string">"pools"</span> : &#123;</span><br><span class="line">        <span class="string">"survivor"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 1629704,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 34865152</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"old"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 230612312,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 230612312,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 2872311808,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 2872311808,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 2872311808</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"young"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 115791200,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 279183360</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"gc"</span> : &#123;</span><br><span class="line">      <span class="string">"collectors"</span> : &#123;</span><br><span class="line">        <span class="string">"old"</span> : &#123;</span><br><span class="line">          <span class="string">"collection_time_in_millis"</span> : 301,</span><br><span class="line">          <span class="string">"collection_count"</span> : 2</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"young"</span> : &#123;</span><br><span class="line">          <span class="string">"collection_time_in_millis"</span> : 2536,</span><br><span class="line">          <span class="string">"collection_count"</span> : 98</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"uptime_in_millis"</span> : 66149287</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="进程统计"><a href="#进程统计" class="headerlink" title="进程统计"></a>进程统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/process?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"process"</span> : &#123;</span><br><span class="line">    <span class="string">"open_file_descriptors"</span> : 169,</span><br><span class="line">    <span class="string">"peak_open_file_descriptors"</span> : 170,</span><br><span class="line">    <span class="string">"max_file_descriptors"</span> : 16384,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"total_virtual_in_bytes"</span> : 7337734144</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"cpu"</span> : &#123;</span><br><span class="line">      <span class="string">"total_in_millis"</span> : 593350,</span><br><span class="line">      <span class="string">"percent"</span> : 0,</span><br><span class="line">      <span class="string">"load_average"</span> : &#123;</span><br><span class="line">        <span class="string">"1m"</span> : 0.01,</span><br><span class="line">        <span class="string">"5m"</span> : 0.07,</span><br><span class="line">        <span class="string">"15m"</span> : 0.1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="events"><a href="#events" class="headerlink" title="events"></a>events</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s localhost:9600/_node/stats/events?pretty=<span class="literal">true</span></span><br><span class="line">&#123; </span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"events"</span> : &#123;</span><br><span class="line">    <span class="string">"in"</span> : 103628,</span><br><span class="line">    <span class="string">"filtered"</span> : 103628,</span><br><span class="line">    <span class="string">"out"</span> : 103628,</span><br><span class="line">    <span class="string">"duration_in_millis"</span> : 96810,</span><br><span class="line">    <span class="string">"queue_push_duration_in_millis"</span> : 5104</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="管道统计"><a href="#管道统计" class="headerlink" title="管道统计"></a>管道统计</h3><ul><li>每个管道输入，过滤或输出的事件数</li><li>每个已配置的滤波器或输出级的统计信息</li><li>有关配置重新加载成功和失败的信息（启用配置重新加载时）</li><li>关于持久性队列信息（当 永久队列被启用）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/pipelines?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过包含管道ID来查看特定管道的统计信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/pipelines/main?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="刷新统计"><a href="#刷新统计" class="headerlink" title="刷新统计"></a>刷新统计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示有关配置重新加载成功和失败的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/reloads?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"reloads"</span> : &#123;</span><br><span class="line">    <span class="string">"successes"</span> : 0,</span><br><span class="line">    <span class="string">"failures"</span> : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="os-统计"><a href="#os-统计" class="headerlink" title="os 统计"></a>os 统计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当Logstash在容器中运行时，请求将返回一个包含cgroup信息的JSON文档，提供CPU负载的更准确视图，包括是否对容器进行了限制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/os?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"os"</span> : &#123;</span><br><span class="line">    <span class="string">"cgroup"</span> : &#123;</span><br><span class="line">      <span class="string">"cpuacct"</span> : &#123;</span><br><span class="line">        <span class="string">"usage_nanos"</span> : 20928023701495776,</span><br><span class="line">        <span class="string">"control_group"</span> : <span class="string">"/"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"cpu"</span> : &#123;</span><br><span class="line">        <span class="string">"cfs_quota_micros"</span> : -1,</span><br><span class="line">        <span class="string">"control_group"</span> : <span class="string">"/"</span>,</span><br><span class="line">        <span class="string">"stat"</span> : &#123;</span><br><span class="line">          <span class="string">"number_of_times_throttled"</span> : 0,</span><br><span class="line">          <span class="string">"time_throttled_nanos"</span> : 0,</span><br><span class="line">          <span class="string">"number_of_elapsed_periods"</span> : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"cfs_period_micros"</span> : 100000</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="热线程api"><a href="#热线程api" class="headerlink" title="热线程api"></a>热线程api</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;热线程API获取Logstash的当前热线程。热线程是Java线程，具有很高的CPU使用率，并且执行时间比正常时间长。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/hot_threads?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"hot_threads"</span> : &#123;</span><br><span class="line">    <span class="string">"time"</span> : <span class="string">"2019-11-19T11:07:05+08:00"</span>,</span><br><span class="line">    <span class="string">"busiest_threads"</span> : 3,</span><br><span class="line">    <span class="string">"threads"</span> : [ &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-23@[main]&gt;worker1"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 42,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.1,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-24@[main]&gt;worker2"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 43,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.06,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-22@[main]&gt;worker0"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 41,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.06,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可执行的参数:</p><ul><li>threads: 返回的热线程数。预设值为10。</li><li>stacktrace_size: 要为每个线程报告的堆栈跟踪的深度。默认值为50。</li><li>human: 如果为true，则返回纯文本而不是JSON格式。默认为false。</li><li>ignore_idle_threads: 如果为true，则不返回空闲线程。默认值为true。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/hot_threads?human=true'</span></span><br><span class="line">Hot threads at 2019-11-19T11:07:43+08:00, busiestThreads=3:</span><br><span class="line">================================================================================</span><br><span class="line">0.1 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-23@[main]&gt;worker1'</span>, thread id: 42</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0.06 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-24@[main]&gt;worker2'</span>, thread id: 43</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0.06 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-22@[main]&gt;worker0'</span>, thread id: 41</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的一些api监控，可以写成脚本的形式，使用zabbix来进行监控。除了使用zabbix来监控logstash外，我们还可以使用自带的x-pack来进行监控，<a href="https://www.elastic.co/guide/en/logstash/6.6/logstash-monitoring-overview.html" target="_blank" rel="noopener">介绍可以参考官方</a>。</p><h3 id="X-Pack监视概述"><a href="#X-Pack监视概述" class="headerlink" title="X-Pack监视概述"></a>X-Pack监视概述</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修改logstash.yml配置文件，在配置文件里面只需要修改两个参数即可 <code>xpack.monitoring.enabled</code> 、<code>xpack.monitoring.elasticsearch.url</code>。监控Elasticsearch的是启用 <code>xpack.monitoring.collection.enabled</code></p><h4 id="修改logstash-yml"><a href="#修改logstash-yml" class="headerlink" title="修改logstash.yml"></a>修改logstash.yml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat logstash.yml</span><br><span class="line">xpack.monitoring.enabled: <span class="literal">true</span></span><br><span class="line">xpack.monitoring.elasticsearch.url: [<span class="string">"http://es1:9200"</span>,<span class="string">"http://es2:9200"</span>,<span class="string">"http://es3:9200"</span>]</span><br></pre></td></tr></table></figure><h4 id="重启logstash"><a href="#重启logstash" class="headerlink" title="重启logstash"></a>重启logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo  systemctl  restart logstash</span><br></pre></td></tr></table></figure><h4 id="kibana-查看"><a href="#kibana-查看" class="headerlink" title="kibana 查看"></a>kibana 查看</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录kibana进行查看<br><img src="https://img.xxlaila.cn/1574146864906.jpg" alt="img"></p><p>点击node查看<br><img src="https://img.xxlaila.cn/1574146937095.jpg" alt="img"></p><p>这里顺道点考kibana<br><img src="https://img.xxlaila.cn/1574147026997.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;logstash-api-监控&quot;&gt;&lt;a href=&quot;#logstash-api-监控&quot; class=&quot;headerlink&quot; title=&quot;logstash api 监控&quot;&gt;&lt;/a&gt;logstash api 监控&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Logstash 5.0 开始，提供了输出自身进程的指标和状态监控的 API。这大大降低了我们监控 Logstash 的难度。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="logstash" scheme="https://www.xxlaila.cn/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>elk部署</title>
    <link href="https://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/15/elk部署/</id>
    <published>2019-11-15T07:46:03.000Z</published>
    <updated>2019-11-21T09:21:53.487Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;公司重新设定了日志的标准格式，日志打印格式均为json格式，之前是用filebeat进行收集的，没任何问题，但是这次的这个标准日志推的时候出现了，在日志显示和多行收集的时候出现了问题。<a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;java应用在报错的时候一般会提示一个很长的错误信息，如果在日志标准里面加入堆内存的错误，那信息就更长，一条日志就更大了，所以这里就得考量这个堆内存错误要打印多少问题。在显示的时候也遇到一个问题就是内容没有被索引，google一下查询是<code>not_analyzed</code>字符串默认设置导致的。查询得知对超过ignore_above的字符串，analyzer 不会进行处理。所以就不会索引，导致的结果就是最终搜索引擎搜索不到。这个选项主要对 not_analyzed 字段有用，这些字段通常用来进行过滤、聚合和排序。而且这些字段都是结构化的，所以一般不会允许在这些字段中索引过长的项。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;针对这些问题，和研发达成如协议，研发限制一条日志的message输出的长度，日志格式采用json，里面的字段不管。与似乎就要重置一下filebeat的参数，以及需要单独的建立自定义es模版，在logstash建立索引的时候需要用我们自定义的模版来建立索引。</p><h3 id="filebeat"><a href="#filebeat" class="headerlink" title="filebeat"></a>filebeat</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filebeat安装不阐述</p><h4 id="filebeat配置文件"><a href="#filebeat配置文件" class="headerlink" title="filebeat配置文件"></a>filebeat配置文件</h4><ul><li>filebeat.yml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat filebeat.yml </span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">  - <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    paths:</span><br><span class="line">      - /opt/logs/*/*.<span class="built_in">log</span></span><br><span class="line">  tags: [<span class="string">"system"</span>]</span><br><span class="line">  exclude_files: [<span class="string">'.gz$'</span>]</span><br><span class="line">  fields:</span><br><span class="line">    env: dev</span><br><span class="line">    logtype: system-java</span><br><span class="line">  queue_size: 3000</span><br><span class="line">  multiline.pattern: <span class="string">'^[[:space:]]'</span></span><br><span class="line">  multiline.negate: <span class="literal">false</span></span><br><span class="line">  multiline.match: after</span><br><span class="line">  multiline.max_lines: 500</span><br><span class="line">  multiline.timeout: 5s</span><br><span class="line">  registry_file: /var/lib/filebeat/registry</span><br><span class="line">  harvester_buffer_sizeedit: 16384</span><br><span class="line">  max_bytes: 10485760</span><br><span class="line">  max_message_bytes: 1000000</span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">false</span></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">"logstash:5555"</span>,<span class="string">"logstash:5556"</span>]</span><br><span class="line">  loadbalance: <span class="literal">true</span></span><br><span class="line">  worker: 1</span><br></pre></td></tr></table></figure></li></ul><h5 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h5><ul><li>input.type: 默认log，从日志文件读取每一行。stdin，从标准输入读取</li><li>paths: 日志文件路径列表，可用通配符，不递归</li><li>tags: 标记tag，可用于分组</li><li>exclude_files: 排除文件，后接一个正则表达式的列表，默认无</li><li>fields: 添加附件字段，可以使values，arrays，dictionaries或者任何嵌套数据<ul><li>env: 设置环境环境</li><li>logtype: 设置类别，在logstash里面判断，可用于建设不通的索引或者到不通的es集群里面</li></ul></li><li>queue_size: 处理管道中单个事件内的队列大小，默认1000</li><li>multiline.pattern: 多行匹配模式，后接正则表达式，默认无</li><li>multiline.negate: 多行匹配模式后配置的模式是否取反，默认false</li><li>multiline.match: 定义多行内容被添加到模式匹配行之后还是之前，默认无，可以被设置为after或者before</li><li>multiline.max_lines: 单一多行匹配聚合的最大行数，超过定义行数后的行会被丢弃，默认500</li><li>multiline.timeout: 多行匹配超时时间，超过超时时间后的当前多行匹配事件将停止并发送，然后开始一个新的多行匹配事件，默认5秒</li><li>registry_file: 指定 注册表文件，用于记录上次读取的位置，默认位于filebeat下的data目录</li><li>harvester_buffer_sizeedit: 每个采集器在获取文件时使用的缓冲区的大小（以字节为单位）。默认是16384</li><li>max_bytes: 单个日志消息可以拥有的最大字节数。之后的所有字节max_bytes被丢弃并且不被发送。此设置对于可能变大的多行日志消息特别有用。默认值是10MB（10485760）</li><li>max_message_bytes: 允许的最大json消息大小，默认为1000000，超出的会被丢弃，应该小于broker的  message.max.bytes（broker能接收消息的最大字节数）</li><li>output.logstash: 输出到logstash，从节点列表中选取不同的节点发送数据，达到 Round-Robin 负载均衡的效果。<ul><li>worker: 配置每个主机发布事件的worker数量。在负载均衡模式下最好启用。</li></ul></li></ul><h3 id="logstash-部署"><a href="#logstash-部署" class="headerlink" title="logstash 部署"></a>logstash 部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装不阐述，这里使用的自定义elasticsearch模版，可参考</p><h4 id="elasticsearch-模版"><a href="#elasticsearch-模版" class="headerlink" title="elasticsearch 模版"></a>elasticsearch 模版</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Json日志文件中的KEY的位置不固定、或字段数不明确时使用动态映射模板。这里创建一个动态模版，模版是拷贝默认的 <code>logstash-*</code>模版来进行稍加修改的，<code>index_patterns</code> 该模版参数指定任意索引名称，并且指定允许添加新字段，匹配所有string类型的新字段会创建一个raw的嵌套字段，raw嵌套字段类型text，使用 <code>ignore_above</code>改变默认的长度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">$ cat dev-java-template.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"order"</span>: 5,</span><br><span class="line">  <span class="string">"index_patterns"</span>: [</span><br><span class="line">    <span class="string">"*"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"settings"</span>: &#123;</span><br><span class="line">    <span class="string">"index"</span>: &#123;</span><br><span class="line">      <span class="string">"number_of_shards"</span>: <span class="string">"5"</span>,</span><br><span class="line">      <span class="string">"number_of_replicas"</span>: <span class="string">"1"</span>,</span><br><span class="line">      <span class="string">"refresh_interval"</span>: <span class="string">"10s"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"mappings"</span>: &#123;</span><br><span class="line">    <span class="string">"_default_"</span>: &#123;</span><br><span class="line">      <span class="string">"dynamic_templates"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"message_field"</span>: &#123;</span><br><span class="line">            <span class="string">"match"</span>: <span class="string">"message"</span>,</span><br><span class="line">            <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"mapping"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">              <span class="string">"norms"</span> : <span class="literal">false</span>,</span><br><span class="line">              <span class="string">"fields"</span>: &#123;</span><br><span class="line">                <span class="string">"raw"</span>: &#123;</span><br><span class="line">                  <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                  <span class="string">"ignore_above"</span>: 10922</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"strings_fields"</span>: &#123;</span><br><span class="line">            <span class="string">"match"</span>: <span class="string">"*"</span>,</span><br><span class="line">            <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"mapping"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">              <span class="string">"norms"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="string">"fields"</span>: &#123;</span><br><span class="line">                <span class="string">"raw"</span>: &#123;</span><br><span class="line">                  <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                  <span class="string">"ignore_above"</span>: 10922</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"properties"</span>:&#123;</span><br><span class="line">        <span class="string">"@timestamp"</span>: &#123;</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"date"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"@version"</span>: &#123;</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"geoip"</span>: &#123;</span><br><span class="line">          <span class="string">"dynamic"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="string">"properties"</span>: &#123;</span><br><span class="line">            <span class="string">"ip"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"ip"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"location"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"geo_point"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"latitude"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"longitude"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aliases"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注</strong>:</p><ul><li>dynamic_templates: 配置具体的动态模板匹配项</li><li>match_mapping_type: “string” 是匹配固定的类型</li><li>match: message 匹配字段名为message的数据</li><li>mapping: 将匹配的数据项映射为定义的数据类型</li></ul><h4 id="logstash-配置文件"><a href="#logstash-配置文件" class="headerlink" title="logstash 配置文件"></a>logstash 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">$ cat java.conf</span><br><span class="line">input  &#123;</span><br><span class="line">        beats &#123;</span><br><span class="line">                port =&gt; 5555</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">        <span class="comment"># application system logs</span></span><br><span class="line">        <span class="keyword">if</span> [fields][logtype] == <span class="string">"system-java"</span> &#123;</span><br><span class="line">                json &#123;</span><br><span class="line">                    <span class="built_in">source</span> =&gt; <span class="string">"message"</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># application business logs</span></span><br><span class="line">        <span class="keyword">if</span> [fileds][logtype] == <span class="string">"business-java"</span> &#123;</span><br><span class="line">json &#123;</span><br><span class="line"><span class="built_in">source</span> =&gt; <span class="string">"message"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">        <span class="comment"># application system logs</span></span><br><span class="line">        <span class="keyword">if</span> [fields][logtype] == <span class="string">"system-java"</span> &#123;</span><br><span class="line">                elasticsearch &#123;</span><br><span class="line">codec =&gt; <span class="string">"json"</span></span><br><span class="line">                        hosts =&gt; [<span class="string">"es1:9200"</span>,<span class="string">"es2:9200"</span>,<span class="string">"es3:9200"</span>]</span><br><span class="line">                        index =&gt; <span class="string">"%&#123;[fields][kxlenv]&#125;-%&#123;[projectName]&#125;-%&#123;[logType]&#125;-%&#123;+YYYY-MM&#125;"</span></span><br><span class="line">                        template_overwrite =&gt; <span class="literal">true</span></span><br><span class="line">                        template_name =&gt; <span class="string">"system-java"</span></span><br><span class="line">                        template =&gt; <span class="string">"/opt/templates/java.template"</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># applicatio business logs</span></span><br><span class="line"><span class="keyword">if</span> [fields][logtype] == <span class="string">"business-java"</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">                        action =&gt; <span class="string">"index"</span></span><br><span class="line">hosts =&gt; [<span class="string">"es1:9200"</span>,<span class="string">"es2:9200"</span>,<span class="string">"es3:9200"</span>]</span><br><span class="line">index =&gt; <span class="string">"%&#123;[fields][kxlenv]&#125;-%&#123;[projectName]&#125;-%&#123;[logType]&#125;-%&#123;+YYYY-MM&#125;"</span></span><br><span class="line">template_overwrite =&gt; <span class="literal">true</span></span><br><span class="line">                        template =&gt; <span class="string">"/opt/templates/dev-java-template.json"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>** 注 **:</p><ul><li>template : 指定template模板文件</li><li>template_overwrite : 是否覆盖ES中的template，默认是false</li><li>index: 是提取变量来进行创建索引，对应动态模版的里面 <code>index_patterns</code></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><h4 id="重启logstash"><a href="#重启logstash" class="headerlink" title="重启logstash"></a>重启logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart logstash</span><br></pre></td></tr></table></figure><h4 id="重启filebeat"><a href="#重启filebeat" class="headerlink" title="重启filebeat"></a>重启filebeat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart filebeat</span><br></pre></td></tr></table></figure><h4 id="打开kibana验证"><a href="#打开kibana验证" class="headerlink" title="打开kibana验证"></a>打开kibana验证</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里我们打开kibana进行验证，看看自动创建的索引是否引用了自定义模版</p><ul><li><p>自定义模版<br><img src="https://img.xxlaila.cn/1574308152194.jpg" alt="img"></p></li><li><p>默认模版<br><img src="https://img.xxlaila.cn/1574308234494.jpg" alt="img"></p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;公司重新设定了日志的标准格式，日志打印格式均为json格式，之前是用filebeat进行收集的，没任何问题，但是这次的这个标准日志推的时候出现了，在日志显示和多行收集的时候出现了问题。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="elk" scheme="https://www.xxlaila.cn/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>mongodb语法实践</title>
    <link href="https://www.xxlaila.cn/2019/11/14/mongodb%E8%AF%AD%E6%B3%95%E5%AE%9E%E8%B7%B5/"/>
    <id>https://www.xxlaila.cn/2019/11/14/mongodb语法实践/</id>
    <published>2019-11-14T01:12:09.000Z</published>
    <updated>2019-11-19T07:19:43.652Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="Days-11-14"><a href="#Days-11-14" class="headerlink" title="Days(11.14)"></a>Days(11.14)</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mongodb之前都是负责搭建、维护、备份、监控等操作。闲时来总结一下语法。<a id="more"></a></p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><h4 id="根据条件查询数据量"><a href="#根据条件查询数据量" class="headerlink" title="根据条件查询数据量"></a>根据条件查询数据量</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录数据库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.getCollection(<span class="string">'Tables'</span>).find(&#123;<span class="string">"字段"</span>:<span class="string">"条件"</span>,<span class="string">"字段"</span>:<span class="string">"条件"</span>&#125;).count();</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看数据库表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; show collections</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看mongodb的连接数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.serverStatus().connections</span><br></pre></td></tr></table></figure><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><h4 id="创建用户、数据库"><a href="#创建用户、数据库" class="headerlink" title="创建用户、数据库"></a>创建用户、数据库</h4><ul><li><p>创建数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; use xxx</span><br></pre></td></tr></table></figure></li><li><p>创建一个用户，拥有基本的读写权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createUser(&#123;user:<span class="string">"xxx"</span>,<span class="built_in">pwd</span>:<span class="string">"xxx"</span>,roles:[&#123;role:<span class="string">"readWrite"</span>,db:<span class="string">"xxx"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure></li><li><p>创建用户需要赋予dbAdmin权限</p></li></ul><p><strong>dbAdmin</strong>: 允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createUser(&#123;user:<span class="string">"demo"</span>,<span class="built_in">pwd</span>:<span class="string">"demo"</span>,roles:[&#123;role:<span class="string">"readWrite"</span>,db:<span class="string">"kxlChannel"</span>&#125;,&#123;role:<span class="string">"dbAdmin"</span>,db:<span class="string">"kxlChannel"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure><p><strong>注</strong>: role 权限要是readWrite,不能赋予dbadmin，否则不能操作数据库</p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><h4 id="删除账户和数据库"><a href="#删除账户和数据库" class="headerlink" title="删除账户和数据库"></a>删除账户和数据库</h4><ul><li><p>删除账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropUser(<span class="string">"xxx"</span>)</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropDatabase(<span class="string">"xxx"</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.ensureIndex(&#123;<span class="string">"字段"</span>:1&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br><span class="line">&gt; db.表.ensureIndex(&#123;<span class="string">"字段"</span>:1&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><h4 id="查看索引"><a href="#查看索引" class="headerlink" title="查看索引"></a>查看索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.getIndexes()</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看表数据是否引用了索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.find(&#123;<span class="string">"字段"</span>:<span class="string">"值"</span>&#125;).explain()</span><br></pre></td></tr></table></figure><h4 id="删除指定索引"><a href="#删除指定索引" class="headerlink" title="删除指定索引"></a>删除指定索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.dropIndex(<span class="string">"索引"</span>)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除表全部索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.dropIndexes()</span><br></pre></td></tr></table></figure><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><h4 id="根据条件导出部分数据"><a href="#根据条件导出部分数据" class="headerlink" title="根据条件导出部分数据"></a>根据条件导出部分数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  mongoexport --db=数据库 --collection=表 --username=账户 --password=密码 --authenticationDatabase=认证的数据库  --query=<span class="string">'&#123;"条件","条件"&#125;'</span> --fields=<span class="string">"导出的字段"</span> --<span class="built_in">type</span>=csv --out=/home/ll</span><br></pre></td></tr></table></figure><ul><li>参数介绍:<br>–db: 数据库<br>–collection: 表<br>–username: 账户<br>–password: 密码<br>–authenticationDatabase: 需要认证的数据库<br>–query: 条件<br>–fields: 导出的字段<br>–type: 导出的格式，默认是json，这里导出为csv，支持两种json和csv格式<br>–out: 导出路径文件</li></ul><p>更多参数参考 –help</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">general options:</span><br><span class="line">      --<span class="built_in">help</span>                                      <span class="built_in">print</span> usage</span><br><span class="line">      --version                                   <span class="built_in">print</span> the tool version and <span class="built_in">exit</span></span><br><span class="line">verbosity options:</span><br><span class="line">  -v, --verbose=&lt;level&gt;                           more detailed <span class="built_in">log</span> output (include multiple <span class="built_in">times</span> <span class="keyword">for</span> more verbosity, e.g. -vvvvv, or specify a numeric value, e.g. --verbose=N)</span><br><span class="line">      --quiet                                     hide all <span class="built_in">log</span> output</span><br><span class="line">connection options:</span><br><span class="line">  -h, --host=&lt;hostname&gt;                           mongodb host to connect to (setname/host1,host2 <span class="keyword">for</span> replica sets)</span><br><span class="line">      --port=&lt;port&gt;                               server port (can also use --host hostname:port)</span><br><span class="line">kerberos options:</span><br><span class="line">      --gssapiServiceName=&lt;service-name&gt;          service name to use when authenticating using GSSAPI/Kerberos (<span class="string">'mongodb'</span> by default)</span><br><span class="line">      --gssapiHostName=&lt;host-name&gt;                hostname to use when authenticating using GSSAPI/Kerberos (remote server<span class="string">'s address by default)</span></span><br><span class="line"><span class="string">ssl options:</span></span><br><span class="line"><span class="string">      --ssl                                       connect to a mongod or mongos that has ssl enabled</span></span><br><span class="line"><span class="string">      --sslCAFile=&lt;filename&gt;                      the .pem file containing the root certificate chain from the certificate authority</span></span><br><span class="line"><span class="string">      --sslPEMKeyFile=&lt;filename&gt;                  the .pem file containing the certificate and key</span></span><br><span class="line"><span class="string">      --sslPEMKeyPassword=&lt;password&gt;              the password to decrypt the sslPEMKeyFile, if necessary</span></span><br><span class="line"><span class="string">      --sslCRLFile=&lt;filename&gt;                     the .pem file containing the certificate revocation list</span></span><br><span class="line"><span class="string">      --sslAllowInvalidCertificates               bypass the validation for server certificates</span></span><br><span class="line"><span class="string">      --sslAllowInvalidHostnames                  bypass the validation for server name</span></span><br><span class="line"><span class="string">      --sslFIPSMode                               use FIPS mode of the installed openssl library</span></span><br><span class="line"><span class="string">authentication options:</span></span><br><span class="line"><span class="string">  -u, --username=&lt;username&gt;                       username for authentication</span></span><br><span class="line"><span class="string">  -p, --password=&lt;password&gt;                       password for authentication</span></span><br><span class="line"><span class="string">      --authenticationDatabase=&lt;database-name&gt;    database that holds the user'</span>s credentials</span><br><span class="line">      --authenticationMechanism=&lt;mechanism&gt;       authentication mechanism to use</span><br><span class="line">namespace options:</span><br><span class="line">  -d, --db=&lt;database-name&gt;                        database to use</span><br><span class="line">  -c, --collection=&lt;collection-name&gt;              collection to use</span><br><span class="line">uri options:</span><br><span class="line">      --uri=mongodb-uri                           mongodb uri connection string</span><br><span class="line">output options:</span><br><span class="line">  -f, --fields=&lt;field&gt;[,&lt;field&gt;]*                 comma separated list of field names (required <span class="keyword">for</span> exporting CSV) e.g. -f <span class="string">"name,age"</span></span><br><span class="line">      --fieldFile=&lt;filename&gt;                      file with field names - 1 per line</span><br><span class="line">      --<span class="built_in">type</span>=&lt;<span class="built_in">type</span>&gt;                               the output format, either json or csv (defaults to <span class="string">'json'</span>) (default: json)</span><br><span class="line">  -o, --out=&lt;filename&gt;                            output file; <span class="keyword">if</span> not specified, stdout is used</span><br><span class="line">      --jsonArray                                 output to a JSON array rather than one object per line</span><br><span class="line">      --pretty                                    output JSON formatted to be human-readable</span><br><span class="line">      --noHeaderLine                              <span class="built_in">export</span> CSV data without a list of field names at the first line</span><br><span class="line">querying options:</span><br><span class="line">  -q, --query=&lt;json&gt;                              query filter, as a JSON string, e.g., <span class="string">'&#123;x:&#123;$gt:1&#125;&#125;'</span></span><br><span class="line">      --queryFile=&lt;filename&gt;                      path to a file containing a query filter (JSON)</span><br><span class="line">  -k, --slaveOk                                   allow secondary reads <span class="keyword">if</span> available (default <span class="literal">true</span>) (default: <span class="literal">false</span>)</span><br><span class="line">      --readPreference=&lt;string&gt;|&lt;json&gt;            specify either a preference name or a preference json object</span><br><span class="line">      --forceTableScan                            force a table scan (<span class="keyword">do</span> not use <span class="variable">$snapshot</span>)</span><br><span class="line">      --skip=&lt;count&gt;                              number of documents to skip</span><br><span class="line">      --<span class="built_in">limit</span>=&lt;count&gt;                             <span class="built_in">limit</span> the number of documents to <span class="built_in">export</span></span><br><span class="line">      --sort=&lt;json&gt;                               sort order, as a JSON string, e.g. <span class="string">'&#123;x:1&#125;'</span></span><br><span class="line">      --assertExists                              <span class="keyword">if</span> specified, <span class="built_in">export</span> fails <span class="keyword">if</span> the collection does not exist (default: <span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>mongodb 备份脚本可以<a href="https://github.com/xxlaila/backup-monitoring/tree/master/backup" target="_blank" rel="noopener">参考</a>本人写的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;Days-11-14&quot;&gt;&lt;a href=&quot;#Days-11-14&quot; class=&quot;headerlink&quot; title=&quot;Days(11.14)&quot;&gt;&lt;/a&gt;Days(11.14)&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mongodb之前都是负责搭建、维护、备份、监控等操作。闲时来总结一下语法。
    
    </summary>
    
      <category term="数据库" scheme="https://www.xxlaila.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mongodb" scheme="https://www.xxlaila.cn/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>istio部署(二)</title>
    <link href="https://www.xxlaila.cn/2019/11/08/istio%E9%83%A8%E7%BD%B2-%E4%BA%8C/"/>
    <id>https://www.xxlaila.cn/2019/11/08/istio部署-二/</id>
    <published>2019-11-08T08:34:20.000Z</published>
    <updated>2019-11-15T06:15:36.320Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面的一篇文章中我做了简单的部署，但是在疏忽bookinfo的时候出现了错误；然后研究了和学习了三天怎么来结局这个错误，这个错误不解决，没办法进行下一步。后学的路由规则完全没办法学习和测试。<a id="more"></a></p><h3 id="istio错误解决"><a href="#istio错误解决" class="headerlink" title="istio错误解决"></a>istio错误解决</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio的错误查看<a href="https://www.xxlaila.cn/2019/08/30/k8s%E9%83%A8%E7%BD%B2istio/">istio的部署</a>，本次根据这个错误来进行解决。</p><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><ul><li>apiserver日志</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个错误访问k8s的apiserver 问题，应该是超时。我们可以查看apiserver的日志，利用 journalctl 命令来筛选apiserver的日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># journalctl  -u  kube-apiserver  -f</span></span><br><span class="line"></span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 09:59:33.659161   31393 trace.go:81] Trace[40457478]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/istio-system/gateways"</span> (started: 2019-11-08 09:59:03.657132211 +0800 CST m=+328870.679516549) (total time: 30.001964129s):</span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[40457478]: [30.001964129s] [30.001043358s] END</span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 09:59:33.659790   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: net/http: request canceled <span class="keyword">while</span> waiting <span class="keyword">for</span> connection (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 09:59:39 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 09:59:39.979543   31393 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.metrics.k8s.io</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 10:00:03.764977   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: context deadline exceeded (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:03.765401   31393 trace.go:81] Trace[1649710078]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules"</span> (started: 2019-11-08 09:59:33.763211641 +0800 CST m=+328900.785596022) (total time: 30.00209862s):</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[1649710078]: [30.00209862s] [30.001534667s] END</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:33.840606   31393 trace.go:81] Trace[970347589]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/weather/virtualservices"</span> (started: 2019-11-08 10:00:03.83792882 +0800 CST m=+328930.860313362) (total time: 30.002612137s):</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[970347589]: [30.002612137s] [30.001075132s] END</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 10:00:33.841663   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: context deadline exceeded (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 10:00:38 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:38.260710   31393 trace.go:81] Trace[460935607]: <span class="string">"GuaranteedUpdate etcd3: *v1.Endpoints"</span> (started: 2019-11-08 10:00:37.644096515 +0800 CST m=+328964.666480867) (total time: 616.515599ms):</span><br><span class="line">Nov 08 10:00:38 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[460935607]: [533.664848ms] [449.34458ms] Transaction prepared</span><br><span class="line">Nov 08 10:00:39 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:39.986622   31393 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.metrics.k8s.io</span><br><span class="line">Nov 08 10:01:38 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:01:38.780611   31393 trace.go:81] Trace[269873276]: <span class="string">"Get /api/v1/namespaces/default"</span> (started: 2019-11-08 10:01:37.631910347 +0800 CST m=+329024.654294682) (total time: 1.148554735s):</span><br><span class="line">Nov 08 10:01:38 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[269873276]: [1.148211464s] [1.148180236s] About to write a response</span><br></pre></td></tr></table></figure><ul><li><p>istio-pilot日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl logs istio-pilot-569499d666-rfjsh  -n istio-system discovery</span></span><br><span class="line">2019-11-08T07:26:14.097765ZinfoHandling event update <span class="keyword">for</span> pod istio-security-post-install-1.2.8-c52np <span class="keyword">in</span> namespace istio-system -&gt; 172.30.112.9</span><br><span class="line">2019-11-08T07:26:27.395268ZinfoHandling event update <span class="keyword">for</span> pod istio-security-post-install-1.2.8-c52np <span class="keyword">in</span> namespace istio-system -&gt; 172.30.112.9</span><br><span class="line">2019-11-08T07:26:38.227484ZinfoClient received GoAway with http2.ErrCodeEnhanceYourCalm.</span><br><span class="line">2019-11-08T07:26:38.227760ZinfopickfirstBalancer: HandleSubConnStateChange: 0xc0001fbaa0, CONNECTING</span><br><span class="line">2019-11-08T07:26:38.228913Zinfotransport: loopyWriter.run returning. connection error: desc = <span class="string">"transport is closing"</span></span><br><span class="line">2019-11-08T07:26:38.230352ZerrormcpError receiving MCP resource: rpc error: code = Unavailable desc = transport is closing</span><br><span class="line">2019-11-08T07:26:38.230387ZerrormcpError receiving MCP response: rpc error: code = Unavailable desc = transport is closing</span><br><span class="line">2019-11-08T07:26:38.235755ZinfopickfirstBalancer: HandleSubConnStateChange: 0xc0001fbaa0, READY</span><br><span class="line">2019-11-08T07:26:39.230701Zinfomcp(re)trying to establish new MCP sink stream</span><br></pre></td></tr></table></figure></li><li><p>istio-galley日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl logs istio-galley-64f7d8cc97-8nbpc  -n istio-system</span></span><br><span class="line">2019-11-08T07:23:38.860184ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125; ACK collection=istio/rbac/v1alpha1/serviceroles with version=<span class="string">"0"</span> nonce=<span class="string">"16"</span> inc=<span class="literal">false</span></span><br><span class="line">2019-11-08T07:23:38.860197ZinfomcpWatch(): created watch 28 <span class="keyword">for</span> istio/rbac/v1alpha1/serviceroles from group <span class="string">"default"</span>, version <span class="string">"0"</span></span><br><span class="line">2019-11-08T07:23:38.860217ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125; ACK collection=istio/networking/v1alpha3/gateways with version=<span class="string">"0"</span> nonce=<span class="string">"17"</span> inc=<span class="literal">false</span></span><br><span class="line">2019-11-08T07:23:38.860268ZinfomcpWatch(): created watch 29 <span class="keyword">for</span> istio/networking/v1alpha3/gateways from group <span class="string">"default"</span>, version <span class="string">"0"</span></span><br><span class="line">2019-11-08T07:26:38.227268Zinfotransport: Got too many pings from the client, closing the connection.</span><br><span class="line">2019-11-08T07:26:38.227414Zinfotransport: loopyWriter.run returning. Err: transport: Connection closing</span><br><span class="line">2019-11-08T07:26:38.228857Zinfotransport: http2Server.HandleStreams failed to <span class="built_in">read</span> frame: <span class="built_in">read</span> tcp 172.30.104.4:9901-&gt;172.30.104.7:57190: use of closed network connection</span><br><span class="line">2019-11-08T07:26:38.229130ZerrormcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125;: TERMINATED with errors: rpc error: code = Canceled desc = context canceled</span><br><span class="line">2019-11-08T07:26:38.229162ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125;: CLOSED</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前面其实有一个错误，忘记记录了，是一个tls的证书问题。根据上面的错误在google上找了好久，各种文档都查看了好久。就是安装的时候去验证tls证书，还有什么webhook问题。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;解决办法是；需要在apiserver里面需要配置 enable-admission-plugins，由于在安装的时候指定了某一个插件，导致这个未启用，如果没有配置该插件，默认其实是启用的。两个插件分别是：ValidatingAdmissionWebhook、MutatingAdmissionWebhook。安装文档里面已经修改，可以<a href="https://www.xxlaila.cn/2019/09/11/kubernetes-v1-14%E5%AE%89%E8%A3%85/">参考配置</a>，修改以后需要重启kube-apiserver。修改了这里还是不行。还需要重新安装istio。</p><ul><li><p>验证api-resources</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-resources | grep admissionregistration</span></span><br><span class="line">mutatingwebhookconfigurations                  admissionregistration.k8s.io   <span class="literal">false</span>        MutatingWebhookConfiguration</span><br><span class="line">validatingwebhookconfigurations                admissionregistration.k8s.io   <span class="literal">false</span>        ValidatingWebhookConfiguration</span><br></pre></td></tr></table></figure></li><li><p>启用 admissionregistration.k8s.io/v1alpha1 API</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions | grep admissionregistration.k8s.io</span></span><br><span class="line">admissionregistration.k8s.io/v1beta1</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用上面命令可以检查当前是否以启用，admissionregistration.k8s.io/v1alpha1 API，若不存在则需要在 apiserver 的配置中添加–runtime-config=admissionregistration.k8s.io/v1alpha1。</p><h3 id="重新安装istio"><a href="#重新安装istio" class="headerlink" title="重新安装istio"></a>重新安装istio</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">helm install install/kubernetes/helm/istio --<span class="built_in">wait</span> \</span><br><span class="line">    --name istio \</span><br><span class="line">    --namespace istio-system \</span><br><span class="line">    --<span class="built_in">set</span> global.mtls.enabled=<span class="literal">false</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.jaeger.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.provider=zipkin \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> servicegraph.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.gatewayName=ingressgateway \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.jaegerURL=http://jaeger-query:16686"</span> \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.grafanaURL=http://grafana:3000"</span> \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-ingressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-egressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> ingress.service.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> global.configValidation=<span class="literal">false</span> \</span><br><span class="line">    --<span class="built_in">set</span> ingress.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> gateways.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> mixer.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> prometheus.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> sidecarInjectorWebhook.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> pilot.env.PILOT_DISABLE_XDS_MARSHALING_TO_ANY=<span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>参数介绍<ul><li>global.mtls.enabled: 开启Mtls认证</li><li>kiali.enabled: 安装kiali</li><li>tracing.enabled: 启用tracing</li><li>grafana.enabled: 安装granfana</li><li>servicegraph.enabled: 启用servicegraph</li><li>global.k8sIngress.enabled: 启用k8sIngress</li><li>global.configValidation: 禁用参数校验</li><li>ingress.enabled: 否启用Ingress</li><li>gateways.enabled: 启用gateway</li><li>mixer.enabled: 启用mixer</li><li>prometheus.enabled: 启用prometheus</li><li>sidecarInjectorWebhook.enabled: 启用sidecarinjector<br><a href="https://www.cnblogs.com/CCE-SWR/p/9990291.html" target="_blank" rel="noopener">更多参数</a>介绍参考</li></ul></li></ul><h4 id="配置验证webhook"><a href="#配置验证webhook" class="headerlink" title="配置验证webhook"></a>配置验证webhook</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;完成以后我们需要配置和验证webhook</p><ul><li>admissionregistration.k8s.io/v1beta1 应是启用状态<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions | grep admissionregistration.k8s.io/v1beta1</span></span><br><span class="line">admissionregistration.k8s.io/v1beta1</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在前面的一篇文章中我做了简单的部署，但是在疏忽bookinfo的时候出现了错误；然后研究了和学习了三天怎么来结局这个错误，这个错误不解决，没办法进行下一步。后学的路由规则完全没办法学习和测试。
    
    </summary>
    
      <category term="istio" scheme="https://www.xxlaila.cn/categories/istio/"/>
    
    
      <category term="istio" scheme="https://www.xxlaila.cn/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>mysql8.0 错误</title>
    <link href="https://www.xxlaila.cn/2019/11/07/mysql8.0%E9%94%99%E8%AF%AF/"/>
    <id>https://www.xxlaila.cn/2019/11/07/mysql8.0错误/</id>
    <published>2019-11-07T01:36:43.000Z</published>
    <updated>2019-11-15T06:24:23.442Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h4 id="mysql-8-0-倒入数据报错"><a href="#mysql-8-0-倒入数据报错" class="headerlink" title="mysql 8.0 倒入数据报错"></a>mysql 8.0 倒入数据报错</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天数据库从5.6切换到8.0测试的时候，倒入数据到8.0版本报错，错误提示：2006 mysql server has gone away。<a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经过查询得知，导入SQL数据库结构+数据时，如果sql操作时间过长；或者是传送的数据太大（咧如使用insert…values的语句过长）；就会报这个错误。登录服务器查看了数据库连接超时的时间默认是8小时，问题应该不是出现在这里。登录老版本数据查看该数据库表的数据，发现该表存放是json的数据格式数据，而且很大，很长。根据这点消息，可以简单的知道问题</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种情况可以通过修改max_allowed_packed的配置参数来避免，修改my.cnf加大max_allowed_packet的值即可。</p><ul><li>解决办法<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;找到mysql目录下的my.ini配置文件，加入以下配置或者修改以下配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max_allowed_packet=300M</span><br></pre></td></tr></table></figure></li></ul><h4 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h4><ul><li><strong>max_allowed_packet</strong>: mysql根据配置文件会限制server接受的数据包大小。如果一次插入数据库中的数据太大的话就会失败，<a href="https://dev.mysql.com/doc/refman/8.0/en/packet-too-large.html" target="_blank" rel="noopener">官方介绍</a>，<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里我刚开始修改的是200M，还是出现这个错误，然后我看了一下sql文件大小是在260多M，索性我就把这个参数调整为300M，在执行倒入数据ok。这个参数调大不会影响服务器的性能，可以参考官方说明。</li></ul><h4 id="mysql-1067-Invalid-default-value-for"><a href="#mysql-1067-Invalid-default-value-for" class="headerlink" title="mysql 1067 - Invalid default value for"></a>mysql 1067 - Invalid default value for</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql 8.0 在倒入数据的时候提示: 1067 - Invalid default value for ‘xxx_date’。查询结果得知跨版本升级引起的默认值不兼容问题，登录老服务器查看该字段是一个时间字段，是一个datetime类型，而且默认是0，然后看了一下导出的数据数据格式居然是0000-00-00，该类型可能是默认值被限制了，查看 sql_mode。</p><h5 id="查看-sql-mode"><a href="#查看-sql-mode" class="headerlink" title="查看 sql_mode"></a>查看 sql_mode</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'sql_mode'</span>;</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Variable_name | Value                                                                                                                 |</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| sql_mode      | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION |</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.02 sec)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NO_ZERO_IN_DATE,NO_ZERO_DATE这两个参数限制时间不能为0</p><h5 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> session sql_mode=<span class="string">'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><p>这个我操作了，没成功，我用的永久修改成功导入的。不知道为啥，可能是姿势不对</p><h5 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改"></a>永久修改</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以直接修改my.cnf文件，在[mysqld]下面添加如下列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_mode=ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h4 id=&quot;mysql-8-0-倒入数据报错&quot;&gt;&lt;a href=&quot;#mysql-8-0-倒入数据报错&quot; class=&quot;headerlink&quot; title=&quot;mysql 8.0 倒入数据报错&quot;&gt;&lt;/a&gt;mysql 8.0 倒入数据报错&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天数据库从5.6切换到8.0测试的时候，倒入数据到8.0版本报错，错误提示：2006 mysql server has gone away。
    
    </summary>
    
      <category term="数据库" scheme="https://www.xxlaila.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="https://www.xxlaila.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>istio部署</title>
    <link href="https://www.xxlaila.cn/2019/10/29/istio%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/10/29/istio部署/</id>
    <published>2019-10-29T08:21:08.000Z</published>
    <updated>2019-11-06T07:30:39.462Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="Istio介绍"><a href="#Istio介绍" class="headerlink" title="Istio介绍"></a>Istio介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio代表的是Service Mesh的方案实现，Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。提供一种简单的方式来为已部署的服务建立网络，且提供具有负载均衡、服务间认证、监控、流量管理等功能。</p><a id="more"></a><h3 id="服务网格（Service-Mesh）"><a href="#服务网格（Service-Mesh）" class="headerlink" title="服务网格（Service Mesh）"></a>服务网格（Service Mesh）</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务网格（Service Mesh）用于描述构成这些应用程序的微服务网络以及应用之间的交互。随着规模和复杂性的增长，服务网格越来越难以理解和管理。它的需求包括服务发现、负载均衡、故障恢复、指标收集和监控以及通常更加复杂的运维需求，例如 A/B 测试、金丝雀发布、限流、访问控制和端到端认证等。而istio刚好提供了一套完整的解决方案，通过控制整个服务器网格提供行为洞察和操作控制来满足微服务应用的多样化</p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 服务网格逻辑上分为数据平面和控制平面。</p><ul><li>数据平面由一组以 sidecar 方式部署的智能代理（Envoy）组成。这些代理可以调节和控制微服务及 Mixer 之间所有的网络通信。</li><li>控制平面负责管理和配置代理来路由流量。此外控制平面配置 Mixer 以实施策略和收集遥测数据。</li></ul><p>构成每个面板的不同组件:<br><img src="https://img.xxlaila.cn/1567136153850.jpg" alt="img"></p><h4 id="istio-组件"><a href="#istio-组件" class="headerlink" title="istio 组件"></a>istio 组件</h4><ul><li>Envoy: Istio 使用 Envoy 代理的扩展版本，用于调解服务网格中所有服务的所有入站和出站流量，属于数据层面。Istio利用Envoy的内置功能实现如下指标:<ul><li>动态服务发现</li><li>负载均衡</li><li>TLS终止</li><li>HTTP/2和gRPC代理</li><li>断路器</li><li>健康检查</li><li>分阶段推出，按百分比分配流量</li><li>故障注入</li><li>丰富的指标</li></ul></li><li>Mixer: 是一个独立于平台的组件，负责在服务网格上执行访问控制和使用策略，并从 Envoy 代理和其他服务收集遥测数据</li><li>Pilot: 为 Envoy sidecar 提供服务发现功能，为智能路由（例如 A/B 测试、金丝雀部署等）和弹性（超时、重试、熔断器等）提供流量管理功能</li><li>Citadel: 通过内置身份和凭证管理赋能强大的服务间和最终用户身份验证。可用于升级服务网格中未加密的流量，并为运维人员提供基于服务标识而不是网络控制的强制执行策略的能力</li><li>Galley: 代表其他的 Istio 控制平面组件，用来验证用户编写的 Istio API 配置。随着时间的推移，Galley 将接管 Istio 获取配置、 处理和分配组件的顶级责任</li></ul><h3 id="Istion-安装"><a href="#Istion-安装" class="headerlink" title="Istion 安装"></a>Istion 安装</h3><h4 id="下载istio包"><a href="#下载istio包" class="headerlink" title="下载istio包"></a>下载istio包</h4><p>执行下载和自动解压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.2.8 sh -</span></span><br><span class="line"><span class="comment"># cd istio-1.2.8/bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cp istioctl /usr/bin/</span></span><br></pre></td></tr></table></figure><p>安装目录中包含：</p><ul><li><code>在 install/</code>: 目录中包含了 Kubernetes 安装所需的 .yaml 文件</li><li><code>samples/</code>: 目录中是示例应用</li><li><code>istioctl</code>: istioctl客户端二进制文件。手动将Envoy作为Sidecar代理注入并创建路由规则和策略时，将使用此工具。</li><li><code>istio.VERSION</code>: 配置文件</li></ul><h3 id="在kubernetes-集群中安装"><a href="#在kubernetes-集群中安装" class="headerlink" title="在kubernetes 集群中安装"></a>在kubernetes 集群中安装</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 会被安装到自己的 istio-system 命名空间，并且能够对所有其他命名空间的服务进行管理。这里采用helm进行安装，<a href="https://xxlaila.github.io/2019/09/04/k8s-helm/" target="_blank" rel="noopener">helm安装参考</a>，我们需要为Kiali设置身份验证凭据（监视）。用于后面的登录认证</p><h4 id="设置用户名和密码的环境变量"><a href="#设置用户名和密码的环境变量" class="headerlink" title="设置用户名和密码的环境变量"></a>设置用户名和密码的环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># KIALI_USERNAME=$(read -p 'Kiali Username: ' uval &amp;&amp; echo -n $uval | base64)</span></span><br><span class="line"><span class="comment"># KIALI_PASSPHRASE=$(read -sp 'Kiali Passphrase: ' pval &amp;&amp; echo -n $pval | base64)</span></span><br></pre></td></tr></table></figure><h4 id="创建命名空间"><a href="#创建命名空间" class="headerlink" title="创建命名空间"></a>创建命名空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NAMESPACE=istio-system</span></span><br><span class="line"><span class="comment"># kubectl create namespace $NAMESPACE</span></span><br></pre></td></tr></table></figure><ul><li>创建用于存储上面设置的用户名/密码的机密<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: kiali</span><br><span class="line">  namespace: <span class="variable">$NAMESPACE</span></span><br><span class="line">  labels:</span><br><span class="line">    app: kiali</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">data:</span><br><span class="line">  username: <span class="variable">$KIALI_USERNAME</span></span><br><span class="line">  passphrase: <span class="variable">$KIALI_PASSPHRASE</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用helm安装istio-CRD"><a href="#使用helm安装istio-CRD" class="headerlink" title="使用helm安装istio CRD"></a>使用helm安装istio CRD</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm install install/kubernetes/helm/istio-init --name istio-init --namespace istio-system</span></span><br><span class="line">NAME:   istio-init</span><br><span class="line">LAST DEPLOYED: Fri Nov  1 10:13:22 2019</span><br><span class="line">NAMESPACE: istio-system</span><br><span class="line">STATUS: DEPLOYED</span><br><span class="line"></span><br><span class="line">RESOURCES:</span><br><span class="line">==&gt; v1/ClusterRole</span><br><span class="line">NAME                     AGE</span><br><span class="line">istio-init-istio-system  0s</span><br><span class="line"></span><br><span class="line">==&gt; v1/ClusterRoleBinding</span><br><span class="line">NAME                                        AGE</span><br><span class="line">istio-init-admin-role-binding-istio-system  0s</span><br><span class="line"></span><br><span class="line">==&gt; v1/ConfigMap</span><br><span class="line">NAME          DATA  AGE</span><br><span class="line">istio-crd-10  1     0s</span><br><span class="line">istio-crd-11  1     0s</span><br><span class="line">istio-crd-12  1     0s</span><br><span class="line"></span><br><span class="line">==&gt; v1/Job</span><br><span class="line">NAME                     COMPLETIONS  DURATION  AGE</span><br><span class="line">istio-init-crd-10-1.2.8  0/1          0s</span><br><span class="line">istio-init-crd-11-1.2.8  0/1          0s</span><br><span class="line">istio-init-crd-12-1.2.8  0/1          0s</span><br><span class="line"></span><br><span class="line">==&gt; v1/ServiceAccount</span><br><span class="line">NAME                        SECRETS  AGE</span><br><span class="line">istio-init-service-account  0        0s</span><br></pre></td></tr></table></figure><h5 id="查看安装的CRD和pod"><a href="#查看安装的CRD和pod" class="headerlink" title="查看安装的CRD和pod"></a>查看安装的CRD和pod</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上述安装会把istio的23个crd都提交给kubernetes api 服务器。如果启用了证书管理，crd计数器为28个。我这里未启用证书管理，只有23个。还生成三个pod</p><ul><li><p>CRD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get CustomResourceDefinition</span></span><br><span class="line">NAME                                   CREATED AT</span><br><span class="line">adapters.config.istio.io               2019-10-29T08:41:31Z</span><br><span class="line">attributemanifests.config.istio.io     2019-10-29T08:41:30Z</span><br><span class="line">authorizationpolicies.rbac.istio.io    2019-10-29T08:41:36Z</span><br><span class="line">certificates.certmanager.k8s.io        2019-10-29T08:41:38Z</span><br><span class="line">challenges.certmanager.k8s.io          2019-10-29T08:41:40Z</span><br><span class="line">clusterissuers.certmanager.k8s.io      2019-10-29T08:41:37Z</span><br><span class="line">clusterrbacconfigs.rbac.istio.io       2019-10-29T08:41:26Z</span><br><span class="line">destinationrules.networking.istio.io   2019-10-29T08:41:25Z</span><br><span class="line">envoyfilters.networking.istio.io       2019-10-29T08:41:26Z</span><br><span class="line">gateways.networking.istio.io           2019-10-29T08:41:26Z</span><br><span class="line">handlers.config.istio.io               2019-10-29T08:41:33Z</span><br><span class="line">httpapispecbindings.config.istio.io    2019-10-29T08:41:27Z</span><br><span class="line">httpapispecs.config.istio.io           2019-10-29T08:41:28Z</span><br><span class="line">instances.config.istio.io              2019-10-29T08:41:32Z</span><br><span class="line">issuers.certmanager.k8s.io             2019-10-29T08:41:37Z</span><br><span class="line">meshpolicies.authentication.istio.io   2019-10-29T08:41:27Z</span><br><span class="line">orders.certmanager.k8s.io              2019-10-29T08:41:40Z</span><br><span class="line">policies.authentication.istio.io       2019-10-29T08:41:27Z</span><br><span class="line">quotaspecbindings.config.istio.io      2019-10-29T08:41:28Z</span><br><span class="line">quotaspecs.config.istio.io             2019-10-29T08:41:29Z</span><br><span class="line">rbacconfigs.rbac.istio.io              2019-10-29T08:41:31Z</span><br><span class="line">rules.config.istio.io                  2019-10-29T08:41:30Z</span><br><span class="line">serviceentries.networking.istio.io     2019-10-29T08:41:25Z</span><br><span class="line">servicerolebindings.rbac.istio.io      2019-10-29T08:41:31Z</span><br><span class="line">serviceroles.rbac.istio.io             2019-10-29T08:41:31Z</span><br><span class="line">sidecars.networking.istio.io           2019-10-29T08:41:34Z</span><br><span class="line">templates.config.istio.io              2019-10-29T08:41:32Z</span><br><span class="line">virtualservices.networking.istio.io    2019-10-29T08:41:25Z</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get crds | grep 'istio.io\|certmanager.k8s.io' | wc -l</span></span><br><span class="line">23</span><br></pre></td></tr></table></figure></li><li><p>pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods -n istio-system</span></span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">NAME                            READY   STATUS      RESTARTS   AGE</span><br><span class="line">istio-init-crd-10-1.2.8-pbtb8   0/1     Completed   0          47s</span><br><span class="line">istio-init-crd-11-1.2.8-shx6q   0/1     Completed   0          47s</span><br><span class="line">istio-init-crd-12-1.2.8-zmh2w   0/1     Completed   0          47s</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用helm安装各个组件"><a href="#使用helm安装各个组件" class="headerlink" title="使用helm安装各个组件"></a>使用helm安装各个组件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">helm install install/kubernetes/helm/istio --<span class="built_in">wait</span> \</span><br><span class="line">    --name istio \</span><br><span class="line">    --namespace istio-system \</span><br><span class="line">    --<span class="built_in">set</span> global.mtls.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> servicegraph.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.gatewayName=ingressgateway \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.createDemoSecret=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.contextPath=/ \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.jaegerURL=http://jaeger-query:16686"</span> \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.grafanaURL=http://grafana:3000"</span> \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-ingressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-egressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> sidecarInjectorWebhook.enabled=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;验证文件里面的服务是否都部署在kubernetes 服务中。确保部署的pod 在对应的kubernetes namespace 里面，并正常启动。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这期间将创建所需的RBAC权限，并部署Istio-Pilot，Istio-Mixer，Istio-Ingress，Istio-Egress和Istio-CA（证书颁发机构）。</p><h5 id="服务器验证"><a href="#服务器验证" class="headerlink" title="服务器验证"></a>服务器验证</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确保部署了以下Kubernetes服务：istio-pilot，istio-mixer，istio-ingress。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n istio-system</span></span><br><span class="line">NAME                     TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                                                                                                                                      AGE</span><br><span class="line">grafana                  ClusterIP   10.254.113.150   &lt;none&gt;        3000/TCP                                                                                                                                     3h22m</span><br><span class="line">istio-citadel            ClusterIP   10.254.27.143    &lt;none&gt;        8060/TCP,15014/TCP                                                                                                                           3h22m</span><br><span class="line">istio-galley             ClusterIP   10.254.155.177   &lt;none&gt;        443/TCP,15014/TCP,9901/TCP                                                                                                                   3h22m</span><br><span class="line">istio-ingressgateway     NodePort    10.254.170.109   &lt;none&gt;        15020:31952/TCP,80:31380/TCP,443:31390/TCP,31400:31400/TCP,15029:32532/TCP,15030:31518/TCP,15031:31525/TCP,15032:30404/TCP,15443:30309/TCP   3h22m</span><br><span class="line">istio-pilot              ClusterIP   10.254.228.182   &lt;none&gt;        15010/TCP,15011/TCP,8080/TCP,15014/TCP                                                                                                       3h22m</span><br><span class="line">istio-policy             ClusterIP   10.254.13.184    &lt;none&gt;        9091/TCP,15004/TCP,15014/TCP                                                                                                                 3h22m</span><br><span class="line">istio-sidecar-injector   ClusterIP   10.254.154.169   &lt;none&gt;        443/TCP                                                                                                                                      3h22m</span><br><span class="line">istio-telemetry          ClusterIP   10.254.71.72     &lt;none&gt;        9091/TCP,15004/TCP,15014/TCP,42422/TCP                                                                                                       3h22m</span><br><span class="line">jaeger-agent             ClusterIP   None             &lt;none&gt;        5775/UDP,6831/UDP,6832/UDP                                                                                                                   3h22m</span><br><span class="line">jaeger-collector         ClusterIP   10.254.100.29    &lt;none&gt;        14267/TCP,14268/TCP                                                                                                                          3h22m</span><br><span class="line">jaeger-query             ClusterIP   10.254.18.117    &lt;none&gt;        16686/TCP                                                                                                                                    3h22m</span><br><span class="line">kiali                    ClusterIP   10.254.156.117   &lt;none&gt;        20001/TCP                                                                                                                                    3h22m</span><br><span class="line">prometheus               ClusterIP   10.254.145.181   &lt;none&gt;        9090/TCP                                                                                                                                     3h22m</span><br><span class="line">tracing                  ClusterIP   10.254.87.72     &lt;none&gt;        80/TCP                                                                                                                                       3h22m</span><br><span class="line">zipkin                   ClusterIP   10.254.39.22     &lt;none&gt;        9411/TCP                                                                                                                                     3h22m</span><br></pre></td></tr></table></figure><h5 id="pod-验证"><a href="#pod-验证" class="headerlink" title="pod 验证"></a>pod 验证</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确保已部署相应的Kubernetes Pod，并且所有容器都已启动并正在运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods -n istio-system</span></span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">grafana-6fb9f8c5c7-n2plk                  1/1     Running     0          3h19m</span><br><span class="line">istio-citadel-7c9b84ddb6-n5h2n            1/1     Running     0          3h19m</span><br><span class="line">istio-galley-64f7d8cc97-zdbb6             1/1     Running     0          3h19m</span><br><span class="line">istio-grafana-post-install-1.2.8-98grv    0/1     Completed   0          3h19m</span><br><span class="line">istio-ingressgateway-65c7498b78-dfmfp     1/1     Running     0          3h19m</span><br><span class="line">istio-init-crd-10-1.2.8-wxxjn             0/1     Completed   0          3h20m</span><br><span class="line">istio-init-crd-11-1.2.8-brjhh             0/1     Completed   0          3h20m</span><br><span class="line">istio-init-crd-12-1.2.8-w8wnc             0/1     Completed   0          3h20m</span><br><span class="line">istio-pilot-569499d666-vhgn5              2/2     Running     0          3h19m</span><br><span class="line">istio-policy-5dbbc56db5-dmr4p             2/2     Running     3          3h19m</span><br><span class="line">istio-sidecar-injector-747cf74498-99drh   1/1     Running     0          3h19m</span><br><span class="line">istio-telemetry-7db5dd4c57-zngq7          2/2     Running     4          3h19m</span><br><span class="line">istio-tracing-5d8f57c8ff-vt2kn            1/1     Running     0          3h19m</span><br><span class="line">kiali-7d749f9dcb-68tlt                    1/1     Running     0          3h19m</span><br><span class="line">prometheus-776fdf7479-zbrxl               1/1     Running     0          3h19m</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 以一个项目的形式部署到 Kubernetes 集群中。我们可以看到，部署好的 pods 中，除了有 istio-citadel、、istio-ingressgateway、istio-pilot 等 Istio 本身的功能组件，还集成了微服务相关的监控工具，，如：grafana、jaeger-query、kiali、prometheus。这些功能丰富且强大的监控工具，帮助 Istio实现了微服务的可视化管理。</p><h3 id="部署BookInfo用程序"><a href="#部署BookInfo用程序" class="headerlink" title="部署BookInfo用程序"></a>部署BookInfo用程序</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在开始部署 Bookinfo 示例程序。部署Bookinfo条件是集群中至少有4个节点，而且每个节点的内存不得低于4G。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以部署安装随附的示例应用程序之一-BookInfo。这是一个简单的模拟书店应用程序，由四个服务组成，这些服务提供一个Web产品页面，书籍详细信息，评论（带有多个版本的评论服务）和评分-所有这些都使用Istio进行管理。</p><ul><li><p>BookInfo应用程序分为四个单独的微服务:</p><ul><li>productpage ：productpage 微服务会调用 details 和 reviews 两个微服务，用来生成页面。</li><li>details ：这个微服务包含了书籍的信息。</li><li>reviews ：这个微服务包含了书籍相关的评论。它还会调用 ratings 微服务。</li><li>ratings ：ratings 微服务中包含了由书籍评价组成的评级信息。</li></ul></li><li><p>reviews 微服务有 3 个版本：</p><ul><li>v1 版本不会调用 ratings 服务.</li><li>v2 版本会调用 ratings 服务，并使用 1 到 5 个黑色星形图标来显示评分信息</li><li>v3 版本会调用 ratings 服务，并使用 1 到 5 个红色星形图标来显示评分信息</li></ul></li><li><p>下图展示了这个应用的端到端架构<br><img src="https://img.xxlaila.cn/1572576628250.jpg" alt="img"></p></li></ul><h4 id="打标签"><a href="#打标签" class="headerlink" title="打标签"></a>打标签</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为 default 命名空间打上标签 istio-injection=enabled，实现 Sidecar 自动注入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl label namespace default istio-injection=enabled</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get namespace --show-labels</span></span><br><span class="line">NAME              STATUS   AGE   LABELS</span><br><span class="line">default           Active   43d   istio-injection=enabled</span><br><span class="line">istio-system      Active   29m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   43d   &lt;none&gt;</span><br><span class="line">kube-public       Active   43d   &lt;none&gt;</span><br><span class="line">kube-system       Active   43d   &lt;none&gt;</span><br><span class="line">monitoring        Active   35d   &lt;none&gt;</span><br><span class="line">weave             Active   35d   &lt;none&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>注意:</strong> 此步骤先不执行，如果这这个执行了，在后面部署Bookinfo的时候会提示如下错误<code>Error creating: Internal error occurred: failed calling webhook &quot;sidecar-injector.istio.io&quot;: Post https://istio-sidecar-injector.istio-system.svc:443/inject?timeout=30s: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</code>这一步有执行的可以执行以下命令进行删除</li></ul><ul><li>删除ns的label<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get ns --show-labels</span></span><br><span class="line">NAME              STATUS   AGE    LABELS</span><br><span class="line">default           Active   2d4h   istio-injection=enabled</span><br><span class="line">istio-system      Active   174m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-public       Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-system       Active   2d4h   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl label namespace default istio-injection-</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get ns --show-labels</span></span><br><span class="line">NAME              STATUS   AGE    LABELS</span><br><span class="line">default           Active   2d4h   &lt;none&gt;</span><br><span class="line">istio-system      Active   175m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-public       Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-system       Active   2d4h   &lt;none&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="部署Bookinfo"><a href="#部署Bookinfo" class="headerlink" title="部署Bookinfo"></a>部署Bookinfo</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;直接使用kubectl create其常规的YAML部署文件来部署我们的应用程序。将使用istioctl将Envoy容器注入到应用程序容器中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl create -f &lt;(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)</span></span><br><span class="line">service/details created</span><br><span class="line">serviceaccount/bookinfo-details created</span><br><span class="line">deployment.apps/details-v1 created</span><br><span class="line">service/ratings created</span><br><span class="line">serviceaccount/bookinfo-ratings created</span><br><span class="line">deployment.apps/ratings-v1 created</span><br><span class="line">service/reviews created</span><br><span class="line">serviceaccount/bookinfo-reviews created</span><br><span class="line">deployment.apps/reviews-v1 created</span><br><span class="line">deployment.apps/reviews-v2 created</span><br><span class="line">deployment.apps/reviews-v3 created</span><br><span class="line">service/productpage created</span><br><span class="line">serviceaccount/bookinfo-productpage created</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该命令将启动bookinfo应用程序体系结构图中显示的所有四个服务。已启动评论服务的所有3个版本，即v1，v2和v3。而在实际部署中，随着时间的推移会部署新版本的微服务，而不是同时部署所有版本。</p><h4 id="检查部署"><a href="#检查部署" class="headerlink" title="检查部署"></a>检查部署</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确认所有服务和Pod均已正确定义并正在运行。</p><ul><li><p>检查 services</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get services</span></span><br><span class="line">NAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">details       ClusterIP   10.254.61.113    &lt;none&gt;        9080/TCP   2m27s</span><br><span class="line">kubernetes    ClusterIP   10.254.0.1       &lt;none&gt;        443/TCP    43d</span><br><span class="line">productpage   ClusterIP   10.254.130.5     &lt;none&gt;        9080/TCP   2m23s</span><br><span class="line">ratings       ClusterIP   10.254.186.181   &lt;none&gt;        9080/TCP   2m26s</span><br><span class="line">reviews       ClusterIP   10.254.200.107   &lt;none&gt;        9080/TCP   2m25s</span><br></pre></td></tr></table></figure></li><li><p>检查 pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                              READY   STATUS    RESTARTS   AGE</span><br><span class="line">details-v1-c5b5f496d-lphgd        1/1     Running   0          15h</span><br><span class="line">load-generator-7fbcc7489f-vbpnx   1/1     Running   2          20d</span><br><span class="line">nginx-deploy-d494b9564-vx97s      1/1     Running   1          20d</span><br><span class="line">productpage-v1-c7765c886-97spj    1/1     Running   0          15h</span><br><span class="line">ratings-v1-f745cf57b-mdgxr        1/1     Running   0          15h</span><br><span class="line">reviews-v1-75b979578c-ghqqm       1/1     Running   0          15h</span><br><span class="line">reviews-v2-597bf96c8f-r659w       1/1     Running   0          15h</span><br><span class="line">reviews-v3-54c6c64795-tvsmq       1/1     Running   0          15h</span><br></pre></td></tr></table></figure></li><li><p>确认Bookinfo应用程序正在运行，请通过curl某个pod中的命令向其发送请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl exec -it $(kubectl get pod -l app=ratings -o jsonpath='&#123;.items[0].metadata.name&#125;') -c ratings -- curl productpage:9080/productpage | grep -o "&lt;title&gt;.*&lt;/title&gt;"</span></span><br><span class="line">&lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在每个服务旁边都注入了Envoy，架构将如下<br><img src="https://img.xxlaila.cn/1572577460804.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bookinfo服务已启动并正在运行，您需要使该应用程序可以从Kubernetes集群外部访问，例如，从浏览器访问。Istio网关用于此目的。但是我在部署 bookinfo-gateway 的时候出现错误，错误如下；然后看了一下 bookinfo-gateway就是提供一个web访问的程序，既然是提供的一个web访问，我就使用了Traefix来提供这个服务。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">Error</span> <span class="keyword">from</span><span class="built_in"> server </span>(Timeout): <span class="builtin-name">error</span> when creating <span class="string">"samples/bookinfo/networking/bookinfo-gateway.yaml"</span>: Timeout: request did <span class="keyword">not</span> complete within requested timeout 30s</span><br><span class="line"><span class="builtin-name">Error</span> <span class="keyword">from</span><span class="built_in"> server </span>(Timeout): <span class="builtin-name">error</span> when creating <span class="string">"samples/bookinfo/networking/bookinfo-gateway.yaml"</span>: Timeout: request did <span class="keyword">not</span> complete within requested timeout 30s</span><br></pre></td></tr></table></figure><h4 id="创建-bookinfo-gateway"><a href="#创建-bookinfo-gateway" class="headerlink" title="创建 bookinfo-gateway"></a>创建 bookinfo-gateway</h4><ul><li>istio-Ingress.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: istio-web-ui</span><br><span class="line">  namespace: </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: productpage</span><br><span class="line">          servicePort: 9080</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器输入<code>http://istio.xxlaila.cn</code> 来访问。用 productpage以查看BookInfo网页。如果您多次刷新页面，您应该会看到产品页面上显示的评论版本不同，并以循环方式显示（红色星星，黑色星星，无星星），因为我们尚未使用Istio来控制版本路由<br><img src="https://img.xxlaila.cn/1572578398765.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1572578189667.jpg" alt="img"></p><p>基本道这里，动态更改请求路由学习中，😂😂😂</p><h3 id="监控方式"><a href="#监控方式" class="headerlink" title="监控方式"></a>监控方式</h3><h4 id="生成服务图"><a href="#生成服务图" class="headerlink" title="生成服务图"></a>生成服务图</h4><p>要验证Kiali是否在您的集群中运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n istio-system get svc kiali</span></span><br><span class="line">NAME    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)     AGE</span><br><span class="line">kiali   ClusterIP   10.254.156.117   &lt;none&gt;        20001/TCP   4h38m</span><br></pre></td></tr></table></figure><p>流量发送到网格，有三种选择:<br>1.在网络浏览器中访问<a href="http://istio.xxlaila.cn/productpage" target="_blank" rel="noopener">http://istio.xxlaila.cn/productpage</a><br>2.多次使用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl http://istio.xxlaila.cn/productpage</span></span><br></pre></td></tr></table></figure><p>3.使用以下watch命令连续发送请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># watch -n 1 curl -o /dev/null -s -w %&#123;http_code&#125; http://istio.xxlaila.cn/productpage</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里需要配置Kiali UI，我们同样适用Traefix来进行配置</p><ul><li>kiali–Ingress.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; kiali--Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: kiali-web-ui</span><br><span class="line">  namespace: istio-system </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: istio-kiali.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: kiali</span><br><span class="line">          servicePort: 20001</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://istio-kiali.xxlaila.cn" target="_blank" rel="noopener">http://istio-kiali.xxlaila.cn</a> ， 要登录Kiali UI，请转到Kiali登录屏幕，然后输入存储在Kiali机密中的用户名和密码。账户密码是前面我们设置的</p><h4 id="1-网格概述"><a href="#1-网格概述" class="headerlink" title="1.网格概述"></a>1.网格概述</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录后立即显示的“概述”页面中查看网格的概述。“概述”页面显示了网格中具有服务的所有名称空间。以下屏幕截图显示了类似的页面<br><img src="https://img.xxlaila.cn/1572578943386.jpg" alt="img"></p><h4 id="2-空间图"><a href="#2-空间图" class="headerlink" title="2.空间图"></a>2.空间图</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要查看名称空间图，请在bookinfoBookinfo名称空间卡中单击图图标。图形图标位于名称空间卡的左下方，看起来像是一组相连的圈子。该页面类似于<br><img src="https://img.xxlaila.cn/1572579048298.jpg" alt="img"></p><h3 id="分布式跟踪系统"><a href="#分布式跟踪系统" class="headerlink" title="分布式跟踪系统"></a>分布式跟踪系统</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启用Istio的应用程序可以配置为使用流行的Jaeger分布式跟踪系统来收集跟踪范围。分布式跟踪使您可以查看用户在系统中发出的请求流，而Istio的模型则允许这样做，而与构建应用程序所使用的语言/框架/平台无关。使用Traefix来提供这个服务。</p><ul><li><p>Jaeger-Ingress.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; Jaeger-Ingress.yaml  &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: jaeger-web-ui</span><br><span class="line">  namespace: istio-system </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: jaeger.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: jaeger-query</span><br><span class="line">          servicePort: 16686</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f Jaeger-Ingress.yaml </span></span><br><span class="line">ingress.extensions/jaeger-web-ui unchanged</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://jaeger.xxlaila.cn" target="_blank" rel="noopener">http://jaeger.xxlaila.cn</a> ， 使用Bookinfo示例生成跟踪，要查看跟踪数据，必须将请求发送到服务。请求数量取决于Istio的采样率。您在安装Istio时设置此速率。默认采样率为1％。您需要至少发送100个请求，才能显示第一条跟踪。要将100个请求发送到productpage服务，请使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for i in `seq 1 100`; do curl -s -o /dev/null http://istio.xxlaila.cn/productpage; done</span></span><br></pre></td></tr></table></figure><ul><li><p>在仪表板的左侧窗格中，从“服务”下拉列表中选择productpage.default，然后单击“查找跟踪”<br><img src="https://img.xxlaila.cn/1572592255728.jpg" alt="img"></p></li><li><p>单击顶部的最新跟踪以查看与对/ productpage的最新请求相对应的详细信息<br><img src="https://img.xxlaila.cn/1572592385675.jpg" alt="img"></p></li></ul><h3 id="监视Istio"><a href="#监视Istio" class="headerlink" title="监视Istio"></a>监视Istio</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如何设置和使用Istio仪表板监视网格流量。作为监控的一部分，需要将安装Grafana Istio插件，并使用基于Web的界面查看服务网格流量数据。Grafana将用于可视化普罗米修斯数据。在执行部署的时候也部署了这两个服务。</p><h4 id="创建grafana-Ingress"><a href="#创建grafana-Ingress" class="headerlink" title="创建grafana Ingress"></a>创建grafana Ingress</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;grafana-istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-istio-web-ui</span><br><span class="line">  namespace: istio-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: grafana-istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: grafana</span><br><span class="line">          servicePort: 3000</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>执行创建，这里我们可以在以前的grafana里面添加数据库源，就不用在新起一个域名来进行访问<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再次加载Bookinfo应用程序（<a href="http://istio.xxlaila.cn/productpage）" target="_blank" rel="noopener">http://istio.xxlaila.cn/productpage）</a> ， 刷新页面几次（或发送命令几次）以产生少量流量。再次查看Istio仪表板。它应该反映所产生的流量。<br><img src="https://img.xxlaila.cn/1572593852626.jpg" alt="img"></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio 还提供了网格的全局视图以及网格中的服务和工作负载。您可以通过导航到特定的仪表板来获取有关服务和工作负载的更多详细信息。<br><img src="https://img.xxlaila.cn/1572594150893.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;提供了有关服务指标的详细信息，然后是该服务的客户端工作负载（正在调用此服务的工作负载）和服务工作负载（正在提供该服务的工作负载）。<br><img src="https://img.xxlaila.cn/1572594261333.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 在grafana 提供了很多的监控指标，可以分别点击看看<br><img src="https://img.xxlaila.cn/1572594330246.jpg" alt="img"></p><h3 id="查询Istio指标"><a href="#查询Istio指标" class="headerlink" title="查询Istio指标"></a>查询Istio指标</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio的数据是存储在prometheus里面的，这里我们通过prometheus进行直接数据的查询</p><h4 id="查看prometheus服务"><a href="#查看prometheus服务" class="headerlink" title="查看prometheus服务"></a>查看prometheus服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n istio-system get svc prometheus</span></span><br><span class="line">NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">prometheus   ClusterIP   10.254.145.181   &lt;none&gt;        9090/TCP   5h35m</span><br></pre></td></tr></table></figure><h4 id="prometheus-traefix"><a href="#prometheus-traefix" class="headerlink" title="prometheus traefix"></a>prometheus traefix</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过traefix 来代理prometheus，然后我们将流量发送到网格。</p><ul><li><p>prometheus-istio.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-istio-web-ui</span><br><span class="line">  namespace: istio-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: prometheus-istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: prometheus</span><br><span class="line">          servicePort: 9090</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-istio-Ingress.yaml </span></span><br><span class="line">ingress.extensions/prometheus-istio-web-ui created</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://prometheus-istio.xxlaila.cn" target="_blank" rel="noopener">http://prometheus-istio.xxlaila.cn</a> ，可以在输入框里面输入表达式来获取指，输入文本：istio_requests_total<br><img src="https://img.xxlaila.cn/1572594888435.jpg" alt="img"></p><ul><li><p>其他查询尝试：</p><ul><li><p>对productpage服务的所有请求总数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istio_requests_total&#123;destination_service=<span class="string">"productpage.default.svc.cluster.local"</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>对v3版本的评论服务的所有请求总数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istio_requests_total&#123;destination_service=<span class="string">"reviews.default.svc.cluster.local"</span>, destination_version=<span class="string">"v3"</span>&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>该查询将所有请求的当前总数返回到评论服务的v3。</p><ul><li>过去5分钟内对productpage服务所有实例的请求率：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rate(istio_requests_total&#123;destination_service=~<span class="string">"productpage.*"</span>, response_code=<span class="string">"200"</span>&#125;[5m])</span><br></pre></td></tr></table></figure></li></ul></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;Istio介绍&quot;&gt;&lt;a href=&quot;#Istio介绍&quot; class=&quot;headerlink&quot; title=&quot;Istio介绍&quot;&gt;&lt;/a&gt;Istio介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;istio代表的是Service Mesh的方案实现，Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。提供一种简单的方式来为已部署的服务建立网络，且提供具有负载均衡、服务间认证、监控、流量管理等功能。&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="istio" scheme="https://www.xxlaila.cn/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>pipeline核心高级篇</title>
    <link href="https://www.xxlaila.cn/2019/10/26/pipeline%E9%AB%98%E7%BA%A7%E7%AF%87/"/>
    <id>https://www.xxlaila.cn/2019/10/26/pipeline高级篇/</id>
    <published>2019-10-26T01:59:01.000Z</published>
    <updated>2019-10-28T02:40:59.762Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前面的两篇文章介绍了pipeline的基本使用和一些实际使用的例子，看似很不错，但是在实际应用也会出现很多的不足和问题，随之系统的庞大、服务的增加、人员的参差不齐会导致很多的问题。<a id="more"></a>届时会带来很大的维护成本和一些改动，所以我们在做事情之前就要考虑进去，一些意外事件的发生、或者是在将来即将会发生和需要改变的事情我们都要想到或者是预留口子，这样才在今后扩展、修改、引入都能有很好可塑性。</p><h3 id="jenkins-job介绍"><a href="#jenkins-job介绍" class="headerlink" title="jenkins job介绍"></a>jenkins job介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大多数情况下我们都是使用jenkins的普通job，普通的job好处是配置简单，结构化可以复杂，也可以单一。在使用jenkins job的时候我们分为两种：一种是单一job，一种是具有耦合性的。下面对两种情况进行对比和比较。</p><h4 id="jenkins-单一job"><a href="#jenkins-单一job" class="headerlink" title="jenkins 单一job"></a>jenkins 单一job</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在jenkins的传统模式下，单一的的job可以让维护人员可以很好的查看里面的逻辑步骤，job里面所有的任务都在这个所属的空间里面执行，它里面包含了：代码pull、编译、打包、复制包、发布包（使用内置的shell模块来写shell，这种应该不存在）。种单一job服务算得上是服务周到，不影响其他人，自己管理好自己的一亩三分地。好处是当出错以后影响范围小，容易控制。如下图：<br><img src="https://img.xxlaila.cn/1572064519037.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这中模式下，维护人员前期用看似比较轻松的工作建立起了整个发布流程。但是到了后期就不行了。之前我在的这家公司前期也是这么这么做的。开发完成后提交git，然后自动触发、构建、制品库、发布，在一个job里面就完成了。后来我们准备推行更好的devops方案的时候；发现以前的这个job建立有问题，一想到几百个微服务，几百个job需要去进行改造。顿时我们运维脸线一黑，虽然我们自己写了一个快速在jenkins上建立job，但是一想到几百个还是不好。为了解决这个问题，我们使用了job之间的任务关联，然后通过参数传递完成整个流程服务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种模式下的弊端就如上面所说的一样，但什么时候好的服务呢？好的服务又是什么样子的呢？这里也可以嵌套一些微服务的概念理论。如果我们要做到什么时候好的服务，我们得了解了解一下: 低耦合和高内聚。了解这个东西有助于我们在接下来的pipeline 流水线的设计，包括在后期devops的设计以及撸码都有很大的帮助。</p><h3 id="耦合性"><a href="#耦合性" class="headerlink" title="耦合性"></a>耦合性</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先我们来了解这一概念: “高内聚低耦合”。在软件设计中通常用耦合度和内聚度作为衡量模块独立程度的标准。划分模块的一个准则是高内聚低耦合。从模块粒度来看，高内聚：尽可能类的每个成员方法只完成一件事（最大限度的聚合）；低耦合：减少类内部，一个成员方法调用另一个成员方法。从类角度来看，高内聚低耦合：减少类内部，对其他类的调用；从功能块来看，高内聚低耦合：减少模块之间的交互复杂度（接口数量，参数数据）即横向：类与类之间、模块与模块之间；纵向：层次之间；尽可能，内容内聚，数据耦合。</p><h4 id="低耦合"><a href="#低耦合" class="headerlink" title="低耦合"></a>低耦合</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不同模块相互依赖多少？模块应尽可能独立于其他模块，以使对模块的更改不会严重影响其他模块。</p><h4 id="高耦合"><a href="#高耦合" class="headerlink" title="高耦合"></a>高耦合</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;高耦合将意味着您的模块对其他模块的内部运作了解太多。对其他模块了解太多的模块会使更改难以协调，并使模块能力变弱。如果模块A对模块B的了解过多，则对模块B内部的更改可能会破坏模块A的功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过实现低耦合，可以轻松更改模块内部，不必担心它们对系统中其他模块的影响。低耦合还使我们的模块彼此之间不相互依赖，因此更易于设计，编写和测试代码。我们还获得了易于重用和可组合的模块的优势。问题也被隔离到小的，独立的代码单元中。</p><p><strong>好处:</strong></p><ul><li>可维护性: 更改限制在一个模块中</li><li>可测试性: 单元测试中涉及的模块可以限制在最低限度</li><li>可读性: 需要分析的类减少</li></ul><h4 id="高内聚"><a href="#高内聚" class="headerlink" title="高内聚"></a>高内聚</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内聚性通常是指模块的元素如何相互组合。相关代码应彼此接近，以使其具有高度的凝聚力。易于维护的代码通常具有很高的内聚性。模块中的元素与该模块要提供的功能直接相关。如果需要修改一个功能，最好是在一个地方进行修改，然后可以尽快的发布。如果很多不同的地方要进行修改，就有可能需要发布多个微服务才能交互这个功能。在很多地方进行修改，不仅修改速度很慢，同时部署多个微服务也提高了风险。所以在找到问题域的边界域后可以确保相关的行为能放在同一个地方，并且它们会和其它边界以尽量低耦合的形式进行通信。</p><p><strong>好处:</strong></p><ul><li>可读性: 功能包含在单个模块中</li><li>可维护性: 调试往往包含在单个模块中</li><li>可重用性: 具有集中功能不会被无用的干扰</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内聚性低意味着组成某些功能的代码会散布在您的整个代码库中。不仅很难发现与您的模块相关的代码，而且很难在不同的模块之间跳转并跟踪的所有代码。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通俗的来讲，内聚是从功能角度来度量模块内的联系，好的内聚模块应恰好做一件事。描述的是模块内的功能联系。耦合是软件结构中各模块之间相互连接的一种度量，耦合强弱取决于模块间接口的复杂程度、进入或访问一个模块点以及通过接口的数据。</p><h4 id="可维护的代码"><a href="#可维护的代码" class="headerlink" title="可维护的代码"></a>可维护的代码</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般在编写可维护的代码有助于提高开发人员的生产力。具有高度可维护的代码使设计新功能和编写代码变得更加容易。模块化，基于组件的分层代码可提高生产率并降低进行更改时的风险。通过使代码保持松散耦合，可以在一个模块内编写代码，而不会影响其他模块。通过保持代码的内聚性，我们可以更轻松地编写易于使用的DRY代码。</p><p><strong>问题</strong>: 当我们遇到问题时，请评估修复、修改程序的程度。是更改一个模块，还是更改分散在整个系统中？在进行更改时，它是否可以解决所有的问题，还是会产生其他一些不可预知的问题？</p><p>在编写和使用代码库时:</p><ul><li>我要修复和创建的此功能模块是多少？</li><li>此更改是要在几个不同的地方进行？</li><li>我能否独立测试代码，测试整个代码有多难？</li><li>我们是否可以使代码更松散地耦合来改善？可以使用高内聚来改善我们的代码吗？</li></ul><h3 id="Jenkins-设计"><a href="#Jenkins-设计" class="headerlink" title="Jenkins 设计"></a>Jenkins 设计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有了上面的的理论与概念。根据这里理论和概念我们就可以设计出一套更好的devops流程。本文将kubernetes平台上来做这一套设计，并在实际的环境中应用。涉及的功能如下: 服务 Job、Code Job、Release、Notice四个功能任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每一个环境有错误，就会执行告警任务模块，告警目前使用的是<a href="https://github.com/xxlaila/jenkins-wechat-notice" target="_blank" rel="noopener">企业微信</a>。job之间需要传递JOB_NAME，env，version三个参数。在之前的devops设计里面整个job的调用设计还要多。形成了一个通用体系。在这个设计里面，当还需要增加一个任务流程，我们只需要修改pipeline，然后增加一个job，在下次构建的时候就会把我们新增加的流程给加进去，非常的方便。设计图如下：<br><img src="https://img.xxlaila.cn/1572081425995.jpg" alt="img"></p><h4 id="Project-Name"><a href="#Project-Name" class="headerlink" title="Project Name"></a>Project Name</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此job一般就是服务，job名称以服务的名称进行命名。里面包含了四个功能.</p><ul><li>Clone Code: clone 代码。</li><li>Build Code: 就是对开发提交的代码进行编译。</li><li>Env Version: 获取本次提交的hash，以hash为版本，结合环境来做一个版本记录，这里需要进行判断。uat/prod环境不需要env前缀。</li><li>Build Docker: 把编译完成后的二进制文件，打包成一个docker镜像。</li></ul><h4 id="Code-Test"><a href="#Code-Test" class="headerlink" title="Code Test"></a>Code Test</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用于测试进行对代码的自动化测试；自动化流程、性能等测试</p><h4 id="Release"><a href="#Release" class="headerlink" title="Release"></a>Release</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;主要是进行发布服务。当接受到上游job传递来的参数信息后，结合参数信息来进行对应的发布到kubernetes中namespace中，主要包含了以下功能</p><ul><li>Push Docker: 把前面打包的docker镜像推送到harbor</li><li>Edit Files: 修改发布的脚本</li><li>Release: 执行<code>kubectl</code>进行发布<ul><li>当发布到kubernetes中，kubernetes 会执行<a href="https://xxlaila.github.io/2019/09/27/k8s-pod%E5%81%A5%E5%BA%B7%E6%A3%80%E6%B5%8B/" target="_blank" rel="noopener">health检测</a>，如果启动失败，会进行通知</li></ul></li></ul><h4 id="Notice"><a href="#Notice" class="headerlink" title="Notice"></a>Notice</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此job主要用于通知。当接受到规则的告警通知以后，就会进行触发通知相关的人员。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前面的两篇文章介绍了pipeline的基本使用和一些实际使用的例子，看似很不错，但是在实际应用也会出现很多的不足和问题，随之系统的庞大、服务的增加、人员的参差不齐会导致很多的问题。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>pipeline多分支gitlab触发</title>
    <link href="https://www.xxlaila.cn/2019/10/25/pipeline%E5%A4%9A%E5%88%86%E6%94%AFgitlab%E8%A7%A6%E5%8F%91/"/>
    <id>https://www.xxlaila.cn/2019/10/25/pipeline多分支gitlab触发/</id>
    <published>2019-10-25T09:20:15.000Z</published>
    <updated>2019-10-28T08:42:04.528Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="enter password to read." />    <label for="hbePass">enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="934a21145170dcff7f09f6ee6fa0f7ee7682783fed8bf4d95ed2d55c87632ccc">d69a90776b8106231e3f5503e1ddcc13e7f2de9f38f851fa9ae61619f0b385079f325d8d8a42b94bd5e8274b18fa67a9276fac40d0c01b1165b0455c6deee236d6d39121bdd5fc5c594104407f62d06359188401c2f390808bfcec7c4aac77c946c84c3c3e55d7827f0e17407716d0583e366b59b8ffd31b72bacd149dbac46b367e91fe97b14040a8d8211e9ba70bec38953f550b7822d5dcd0771797006da148b1039d6b823910a88e8833599283a27a20c654a6ca977eaecc06f2e122d687809634991b99af7c53593fdaf6a6510802ff8e58763a18f3d9f2ce7e5d4f1662522fd971cbb9eae97c023789782fe4870bfc0206870cdb88cd387d793d4bb5c13ab0fac8e213b8c34a8475de450f631b0a4b779ac2ab65885d872974700d1d4110229d97e04b6378c821f421ee69293f07977d3780e44095503471036d125529d428470eb8df33ad6782c0dbd8bab1f910a8bd54baea5950a08bbdb8bd05c8a83d235c258ed2f329dc8360d2842c83f5bf17da4061ea772c3e3ab89f4a1954a5e7750beb8f81be61b39195275ba541dafc980dea6f7309e3ccfb90381c7dc5066bc2b69b9e07e23e6c74187f869ef66ab60cdfe5d3fbfdf99fc11da5fa837e979ce2c47526f837b9bbdb88ef3255ab9c40ffb9db6e51d169c99cbb6d2c27058b3fd5dfe2d71af00ce98ec183fcb4e3b830d38e35b3d85f5be3e641748a7b05c717d73c365cfc816168dbfeab5864f15a22215fcb37bdf83c41b3517d0f5b66d4575c43ed266c8f02dafed09d889eb1176244defa76e6d8f9e6e568215dc9f38d2337f8dced00183071925953d00bb8592cca1ea8eee35c7dbe5defb91c197acf5221424fb9246b040ec7e59d08e036e8f521cd47f8f718a0e2cd1f5aa8df23e87b189eaac10d66788cf207698039d026ed7131d43120c013a6589d55c02596ebc438b320a1f5fbfed52fe11fbcc0c5ccaecc1775b3ed5300441cca0a5a578cff29d157b3025d6a708e7f8b28901523dd1d577e5bd23ab8f587d25fdb4c3af1d465e5bcc31bb4e016039775f5fa23723c15586b4df644e6339773adc045b0e35249282e9dce183ec06a3a8e64c1389b2aa5910abfcf39879e1affa1c5b7f09156fa9f938bfbeba086e91c4f06f14ef484033b9e36becebeacfe102a710352f1b35e11764bb673267a3ab77674dbc838ce9f2607ee88203152098671e501b0fba73accda0c1dd52977ab0c08f57db3480fc6db97c31f785dc2a6fb3a57ef8ec2a8a009a7b564f18ddbc1ad668f8bb8b0dfe79724d6a08457399d767ff0130dbdb2f1a8ae96e256562a855c7dc7f08f4f144c96eed261040273dbf21e949d8c75a474db30b877dc78030cd85a25a9d2efc49210c2d602ac0f86195d8ab4ac6f639c9880f6259b67ef99026c6bdfc6040e30d71a6f394fa3aa0348da47a3e303b652d4013bed4770f2d00f8e355926486e94cc14e9d968e47c9d4886ff383ee76789d7e02bb3a0ef0379763e95f67acacdf79ab8d29d72dda1d6df145ec86f4a3a05ead4d015591003c012c873af3aaa73080a1ffd56d154d0f5616948d74d9ace06b2e5c903c42837749517143f1c263209059fa4db2f94df1f172b72a6732fd89822d42df0c4625234bb739fc54a6c985c9d6b306997ef1d45fa33a156bcf2819b124e86fdf2c1a45eee3968810f370f15be8942c1bbf67e01357e865425c4872b553b62d41e208c7b63c8623cf8223323ec6ce9326921175c8a270500bd1c25affe24d99a0ea274e26a0f87a7b1750c703a04dc383feb392f7b4c7c4c3735aca44b1d26394fdccbd98e327fe86d4e20a8949817bda783eb2a916f063e1de60e68e171917accc7c0df4ea41d6b833a93a1809eca413a8b4a6fe324099796a292cfef73124c5491dd1c9fb06a9c978dfe2c1e8231f71e82573984b385406970f9d6cdf6a455cbf35981ecde63db0a1fab661e241d6565ac021dd61b948e0f1bd5d97f8de134841e0db71902e2c12b457ef3ab5e6cb7b4a37b61ed00d43d8c42d9797cefb59ac734e63f7af8ac9930c051c99aa1b22b7351f1a2321e21223531d3e389720631b2d24cb4c41de05799bcbdf45d464aaa68399f9fa54825dc9ee70a34ae32265fd35cbf2e9c9f0930be229c4cb4ede0f01725b52f4dff391e43b4ec481645db7a056027a1211f14c20848cd5a28688c78470932f349d37ed4f32566e539324e554bf0ee1d165893b51f9f68bff7aceaac9d59b09c56ace3c6f2883d1ef9756f4ada4bfaf6e7260866823b43248b5a14e0c82c6af2fa2e72bf376c4c66257e28e5bf6a636fb4fbc4c7a519ac3d491df1681df25da435eed67f027e9c7aa6b32fcce4f333d8454825c6ba006bf354d88f0782c3ec9d78b404a5543c82873d79be28f02d6c0524ab80fec5dab0956515240aabd740a902ae923df047dc9ae571f9ee0d432742d28a3f0c3bc342a4f2f979938f513442dfb20db4fb2b6badfe99efc0a024708bffdda87998b39638898e662b9cdd9912cab6427e78dd75d11c60651f358504f3acf6f52208a2bc1bfc00ac8583d7bcabdc442d95621592fdbae61f1aac6fb99eff4a7ec38f78f0f6e4661bc9d1c5519959eae0c1d0a50bf95d40b2df2ae8252f35af7565a863f966ac26ed554862b13eb68de23cb7062e443b846fc19587161bdfb1070acf05ac5bdb47be3f7d3178b97855058818cf7b6e10f5a610428448cce305a143cb04580ddc61fe48e7630aaea95017c8a7974169bc43eabf4050c5e6da3973007d6e8c3db43f7973dff33151ca0e4da68b347522943cf6a97d635b55cb567167d70f7d17813ca04ddaad658a60b52cf8975f87b977c5faa8fce06fdfdb1651f3b5bbdbfac7b6b5cddc08411e923d62b5aa1a66b4b794c8496f313afacde4cc88b549f7da942d018518c00d2c58cc0385db92ffb42121ae4b3c48755eba052499f45d9d85a6afe078c13e8ac35b8e995f9f9ec5428e715d14b5730ac0af35eee9a00f37b7391a5f4440ce3fd36f08846ab43eeb083a97c2c3a1e106f75141600cd6b5f51ad5ba372989a0e89036017ba6c2d9f60c305b9685877fb300448bc7ea6afd89b3e79acb63e952424ec19528aabdd88e49e6fced7bca48f8f573a799da20b76f06eb1d967f9f99e578c9cceb1322e34d3e8e27571b3f29dac6ab8d41320912d33bbfdf9d53852b3a4eb17bd7699ff5050e98433b23c591b84ed086a762157fddc31ead75589b82579b0f9dc6c0ffccac19178635e22ee50d521e64b78e5eea9ab6e48d0c8e957fd56b788112d06119880abd078c7a53634b50c5decd34aff501f8e02442518d611be4d0f98037492fffeae037cc1f44256260a9fa45d041b2c79bb794144bc9a26e60e58345f813d27223e40b0aa1cea6aeb426a36056e3e948676da51bb7ed47bc762f0dfd7b4b09b788937ceb1567ae63e7242efba6aead19db2277f03ee2b3b1126bf1c8f9c92a7aa52ee0619d7e068417abc0f71d23808e1fbaec4fa863482f9100259a7a83454d5b44c46adf92569b6ee94f5d7f287df0d6ca698ede3b42ebd99d51477a784d27cd3a3db6ee68bcc807c3770630118523b5657f6c73ca7a38dcb36bb5fbdd1f1350f71678686497c1be3af32258368037bf480d03a1d863df5b66d064494dc6730dff506caeefd7b9dc10f5066d1017ad48b248df6a53ea3b3ff9b8cd4ab2c4d3a63ab11ff019c6a88dca95ab8f4d955e10feaa6eb13b7c3d6b7529236532d18ceea10e3e7b4c3784dbd3cc69ea48b5e102999f85ab7fc973b0f10532858bfa89138608f6799651cc0d6751be4c203735d26036d2f243c8f5587bc981f7a24f615fc4fbd958e81cbc47fe068fe4bbef8e6acc6deb1f938b9d45ed39fe4d54b3f99d09a3e44f44d123eb2dbdd4b19bdb70bbc5b8599982eef02c36c04ffbfd55e359a84061fad39a232a77811a8db9e2a9b66326fc5b5ba0ace6f96db1a77aa26f6e5817c2d1c7785226732081b51d6352f70b5b84ca71f1e6e20ee2e0689432ee3a4bc98b20e49b922ed068377328fac7ca2a56ceb2f7e3e193a770459e06be40953b76d5890f6cb3782dc8cddb841ca337ad64af6949d5ef13286e1e48e7860865321d04e1a2f6454325a16f9f0b9dab9de3d9029662f39ad5ffec71a87d778c5bdd11cdc7d5365a3ad67d7a0ae5a0db0a3c235337b9de8f62d82eae24de083723ad83d838ce609a434d94dfe23e12f08b24eaf4a08112e9f825751ba79a5fae58a0d86c605befeafd9ca24963ffc13deb6928f27fc9de4d94520959d90d04eb84089259014d51b2920b602dbaf9d3832cef5475a65a646aae76b79e8193f7f9ebccc9f0fc2261ef1b966b1c782d13143e2e45d77d78f83e8a73596b75d42ee2901a96b997b06554e0f7dfefc308c4d495b87ee43c48b7d36bd84bd083faed12b0bedf966f02d291a95d0f3710b524981272b0a0b4f27b00f12195017952006b7e64dc5aa0f1681f55170ab2fb9d9068395ba32cc1f864c90445ab05267c658e1021294191dab1e1c68fa53e328ba6e6c3af0f339734372f7cb40cc94d8e53443e9fa44630b6e7f3c726d50d679914a13ff1964dae19c73dfd8951db0ab9896f71529dabd6fbfca097dc517f83e714a039dfec337d99c12b32c69b5230b8885689d0193b0f8c1721b9d62ae4ad53a8e4dbf3020e8c2d62b56c46af16acdc53481221d7a128e8e2e2ba9a3f69b76935dd932ca7dd04c44fc276f48085b1ccbf23659885bdc339f71d70ead3a840565ef198e8e00773f498a65ab3b29fb5cd3e933ff40f51331e504df2105a1d2b3b79589215bca81663b1c34503a2992fa994d1eaee033fc28f2b2800082acc161caad02cbe4090d6ccaaca26bf0ce00713664de57d47589a653ff0d33c9df1c8c31c6c027800e984aed2f2ca9b300faaddd77ec5718506f2a2b0cfe699c02b954a30546686238e72f159ee0fe35d99e4a4148d20490cf3e27477fcc47e85308a5867af5579954d360ef836f1aac1ae41c1577b96b2fe2330f8c0b020649e9c012f43d82250d0e4cb0fdafbae25155fa5ffdb845f975070f79fa3cd5889364ea7013920321ab9152800211dce8cc0eba3d70baa7638ee3afee901cf02fb8a0bd523889cd8d8b503182fce85e6e97e68af81409e189032aec7cd1c81c98a5118b6f65bc18789167d8abcae314a55c406417849062c001715f08f8f078a74a3cc5fad531c410668865a5dda1c3bce6e07b895472011b02d458673edf472fadf4b4db89f9abc1406d9019381b04635a66b04b3d7b333ee0d9e0e8f8eb2a1bd6e2629d4cbf2f70a29582c89fe7aef834b2140a79b9126248e49674fa6408b9ec64ea4fbf0c7eefad6122ec37d6166e7b84c2f2b4d410b027cdea7b6f5d8c119b2aeae509be85de386aff814d5b8119022e2bc36244dd44ea12a6595a4bf1fa1ae54dc3bad376a36a1e1d73957999bf99af51cd2b52a9d1ac02f97ad0428ac20556c2fe29d002f5628ea1cb8dc0b68c6e363ef742850a07768827670a6f0e1cff1cd52e4486258b0202ecf4ca77b02c4011f7abea385575e42ccd8e2c5bfed58479a4d24df65dc1b1b8fd56f6348e876594338c5945255c28c58e6d71c0e09560821e6219f6d2770f89751b149071fc086101bc4d8be742f1976d2205ff3aa862f6cd9041f43a43a05742f59476c64691f982135059d8b28ff11ac54b745f55ae43c2c3ecfb735d063c293029beaf8db382679113a8f72c444aecfd74eecf4d0176ec777f4bc6a16d275f707cb381518c4c2129bb850e4c4e7029917ebe679fe8db31b24cb923950d06f2afc3bfaf24930c93f2f940ccf9a109bb7a2dde53fba4636ac187d73f74b34c92fdcc0cbe7b2681b6fadfdfd01a5bcc1d07244ec8c961c5a6fdeb2405673204254e50d4828f8fd7199932df34fce16ecce7e2be59e5ef6910aa5700bf9988b0f9cc5a050c2847d33ef30f2105d8b8de78be01397b4585a3ca0b3d501baca4a8c560f6b610eedbd257ba47ad5be12264c88c997a267d32261ae8e64dbea11b854ffe39357ef92b114f0d4ef970ff850cbf16c01ffc33d2aff530f29d1b7e240f9dc2fa7b0c23e7712d3ecc54b2f8d585380f04563654b25549da634ebd1498af7e6b31a475ece3b7e671112da572f62e93c8de0ccb1eb193f266c2b58d430ba8be52fee53d331cec2d5e8287c05e67b43ab0687a0e27795912ebbbab051d36090db02887324c0084c50541964b0c7cbe7dc8efa66b9abce2727ab2b25b1370e59325db896dbca0105910d79913e1845e9064bd19b5e8c50a2820cc1fcb2ff70f9190cab884d7879067081f222a7bed50256cb807916b1ef93ea949b7ddcc2b8479bd35f1047f0914609619765779ad0c03e6458dd992e476205d55601e39fdf288d9cd82b1e0299fa4a210540ea5b1c9159d14872475ed225051f9713b3bac83c31a5f7e85d57ed83d096803691299d02aeb526e5c4a6c796da8b7372156282e07f1ae3a70f14383960f806c5fbc260bae1d2099befc5174e797c36f88e04e01888dae1e260b4346ca3586dbb848d182e25da7b31bcd2ebe86ff5d681969d34f9ac1e5ed7ba6a54fb2b05d7f5bc0a4117b722f5c89feef90603811064820a3014798469afc801a34fb034c581b3e8df57e1db9154aa2978b7801fa392bfeb79082e9b34f0fd525812b754be8a6b7ec242a512441e5714e6668e1fb41026593a59d38536dda36d1ed5c2ecf66a82b21c5885b7a302669468468181f48c66e3afb3604082b6d294238869e8bd1978ff4df7418404864e62a2ebc9f578ad837aa3b4892bbbb7f737a497d80478b12d41b5abb41da38da8d6c673816e316de68bd1fa9241cae10e914456984fab605bd51126b1abb42756b56fb9bf7dc43ce2b95c7c6a9897f8db199213364216a0b9bd5b4f2f3e20db27f810f8c92ecbc732a60e8384252b25da77baf1dafe022405ff31e09b533cc042144d570095cf5005316a32063beed9b4165c1ae223d44a661f21f249eb802e00123fc8222852601b46df3429be4bdd1a8eb54cd75434a96cc421e787ea3ec3985875764b22e1b31640df56b531564915177323fab098b2d43cc10192872faa7a955844721acbf86ba7f88405f420bee4aef84a0c6c76a5ce9a05cd7119f3a6c35d1ed8815335f39a80c46d2c4d8cba75a1d9c07f9a67b9513570e0be9ad01d6f51b4d1a9295b3da51ada758fdbc71d128e7fc4b4e65de0d240c77eb3bda8f218d110c473f1a3affc074fee53e36cf58dd1020bd2c8a54fc31c4ed5a4493e738b54563fab2f4264d34904517ea99ec2a31659c95d96464f5c10bdde23820e0a1e02d8187f8eb08585f7392a981a1196114ad65ef4ce47ddd0ea04a700c608c06819addc18d3bf57c0a617e8f76077fc2ff43d8846f7c357b343d25bd4f15fb502441903bfb0801a6a5a8a2ebf9edb287ebc9960dcc3f1858fe2825e61ce2bedbeba471c2d52f5c3e4e2770d73a66c7ea4693d0ddd30c9d4c06a62a63d8f98da34c5f61a0aee4f2c0de589336cd24bc76819d035f6aac862fc51c36b8c70dae70dcc7fe9db8aab1a4b2ae3fb7d128d7094f7a0550087593cb20ba6d6c72ac1e1220381a8c819e84f5647fef34532521eabe0e7d7eb6bd944b44424777f816ae14af1c514d93b0e7e14fb454e3341b94dbfa88d27d5a2c0174e012ce10795919c27360fdfa09bae36476acc20701a3b2151433ba7191e919fb3ab08c6d7fa6aeba2052a58f7dce65d7a846479b8bc5d403a117796af7cfd99061aa58a212ddbc02a3effbae9ece3f27a7c091ab96805b968d726b8a566ea54f053fc0b990a6ff96f028b9b644c1b4cecb3120e08629b539c4c128a2db221562a376100f305ed5a82cd79f6e36bfb06bf638b3c802ed7c53b713ba0ef8490368ad892028b8d03fc6576e4e20442b6ced35ec1957f991615dfa4bf293477a7b8c49356a3044716be232a2f4ca70187161fd4633a3f2814d9e3595e654e59ef8c4e2e38c0b8038ec3fdf2f94e4a9349bf7fc00c6fc67e8a672f0cb8cbf5599374730380fe19d33e8d0af90e3842e1ad275d6e16b234d2960fe3a8fc843dc15e8b790e3813f2f5fdf2ae33bc115fa149e1b3ab0a488e37a779120b1db9c43ad22086ea25ac9e360c17438e7fc29f0f25dbaa01959bceaf2a13e359d6d190ed8fda9fd28f8c97e149b7cedca33ca55cfe6edd50d6aad7ebb02ab3a0bb7f4d9103cfefa8663de18e063e90667449ecd0579a7987d3ea163d04f5d62ae5ea84dde19900bae7f721dc3a1bad9c38043f4676becd749959fc4f8cad465a15adf9d01da98d80171598fdbc4d4607d43647008be4b50a07ce48e936166e51bb3cf7d32115822d012d4445560cd3f8f18612777989bef79985b81fecc09fcaa94ccf61386f9f72911838e49ec19def3b20f534140d50a9742d226a24bdb14739f56c9827f5b23df08783206c283f01a5bf8a06374721e7a9ef75a84006f2b077b93d8ca8363682325713c1ea555ad0723d10f15ddd65d57d578e0a8ef2c04fb9fafa466c44ce08a561df5ee15f70f9cddea88f0923558824d6128152ae5f6c7616d5e78ba06e852ca16f6a2136c1080599ec28d59b6f80415b24760e1c897461e99ef5697fdf14534b074a509ce0df16af933b22aee03991a9449d96ddbe96fef5bc57bbcb25dc1cecf255aa0900f5baf56cfb66bd9691daa9d64ab5104390f4b25723003c3a44bea40b16eb2a918892ba71c898a428b8f4eca46b40e705f53e4d21823f8fb6c912483dd84a1abe0889982f1a5f3297781e26d8571587c9e974ad6c4aae3d77b07381e254d5d0ea6e2557173abae34560d12b56c53fc3729c910df0ec105bec7363f8529fe5d487032af99c7aebecd9f2c9c35db5e8e766a78caf37466774f9ed3c9795f126b73264acf326a1221cc8f273dc83dc1a172e00621dc5f219c652311b593126222997decfccaf5a8f6d5de22c03e64e5b32e2c45286e36683c86ef6ef9893126f0979cdf5d15280bb011c2b961e1729fa1348b4121e68fb58cfa81fbf5668911cd339b1009f622504d94898c3c9e9b13155b1ca27058c9b2635c88513de3647be7946e66bb8972a97107d90defc812b1ed04a4282f449f5cb5830d770cf0c9cd07fb843b5815846d2f8dde00da10564635c6267bb38cd13a75f251f67e75b39922ac241405525f54588bf46a9a3b5a2be421803ef36c46bd6f992a13da0d171cb2bbf1766f8490c465f4a06df58dd043a833fef1176f41db1f7c3036368d0dac3f744ee1d72d85324bff2af0e38f207bf9af1ef4e9042211d5db5fe33c09e553854524561a234af5fbd1f609ad46cf8e2f77e2a440b6d9390a6ae96164e2b38c942fd43e241b6f2ef1cde3549439bb99574f557366954c0a78fd354856d17702cf3d8ff8b943256e30530132f58f3532353839b45da2f25c9e7814edf1d79920b000745e0919c0478a2e5aa2aa950653178a79e5f613aae336c32249835e9f9f4b4d1d6e5ed6e058e63f0473007018efaa0ccf6bd98b8dfa56ed7fb23295fbf0f71d0fbfb4b7e08ad4883c617934fad73258459136fd0bf00895ca0a588dc1a10867372c95e988c888d1cc52fa30d5442ffa634af076421497414b794d4c71388fd8fec712813db37b237e50dd0ff0486c798a41644df9d2f6a53489eb0bdd94a810dd4ce6e1226261870ce50c06c7825b0d7013826a923104abf7db4f97a2549b0d29d9a302bfb47a930ac1d148509e79a198efc6847731dcfb7fa1b5e3104f70ca49f3ba430126c048fdbb6a2c8f0200fad023564c196319618c9c93d8f6400e4dfd2d78351019607bbd2d99371edfb32c21512429b81c17da558a0dc11a6851ba478be49a1d76135ddf5163c3a97142ee5ff84f0f674f07038b449b0c20dfca8a6fcb37da819fd6d34b7da36f26d77e8fa285cc639bbf5515329b6ab32b3e45b751a9d53e0c77b7219ce856bb9e99263c3369a992434dcf211be8fe977c1e1c88f9629b46e80adf613ec3c57a38355b76ee45c9406b06c16ddf8263a344ec781f82a03cbf6081a03d70da44ae9307e7b2a7d3fcd4d3eeda998ee496031ad512b02ae6b6be69f39aceb901e7335d359b6cc42f4980a5360180ac7a44aac20008c48f193b95d11ba2f8482015b2961be01c2ead59c854a83713bd933c94d2a75a4bb64d97f9656510b7eceff719a9e4e639e19ce5a1f78c3a5668930a523988c4a631334019af78958f68073c7976f89b68fe9a1c5cb60e593870f17adb324e5c04047eb71ec1e2f9cfee870e41f7b0e2741af46df786df09fe124d408f22c3a67096f1d123bba5b8ce362e6d3cf21c9c87512e64c59a091710ed41bb5ad9d4f65cea8d868a35775304f90f42eec5ccacae9f32b8b038ce014b6772fabd861dc21d2e3af9882a2f1708ac85d79d88007033377e505e52ee435196b47997c56592d1d678ca26adc6d2d8a89344a26b81b740503514145f4336046f6f58e185418472cccf1ba85fc423103a51fdf8a52281deba1bddd3ee389e00a74ae75dc7e92493d639b260adf14374ed07595fbada59df7180018158898c65fbde16640d39cf3a528933908cea5101ad3225d05b5514610844f918aa03cbfb390b6f762137212e20891033ac9d525aacdf45e550984899b2785a791b71a3e40f4e039aa845d23bc0981ebaf44d8abbf6e3f02bda66ba79d983d63e9855f50d9079324fac3401da926f3b6f370983373f08489eff86eee97a6f97967084369277c2dba1607f42526624f22106bacacd353bdf5b8ddf5527c78bf09e1f603624178c4234d166205a8ed24275cc2068779ba7ed0b9b7f659e41c768cbc8351c4df1a42a7954e8cacb51c7d866e8885cf9c293f1d9d341f90f4de97a29e5b3658d48db91ec1a54765f25c6a49c37d6c333e8dde8b7e2b049d840723eac296201f32db29b97480edf4d3c0a8e76a61009e383636f61d0dfa890111d8b98206c866348350474592d6646d4278d8fd1056b08db6c07b773d32ac0b6e6f3d06db674cdf84595a0650a3da48e2a79e5e64dfa750df04a472804bae54d77e97030d7e0ae43546fa841ed9f2921fa1a22391ebb8ce8e1f13faef7e1e175a6f52de30edfa8b45cdde80afc2f8c385fe96571268f3af95d71612b8d94a9598135a817b138e4b3bad13e2c19fb1107172e975886c0953ae096996edd003fc4e4b45ba3a79aaf8dbdaf296bb7bcbee898c25269e6018a590887eb55f9151aba521c036afda52f8bef40c5bdba3493cc471362e75aeb3d4ecea8f76fb367c5ac82794e23d62debcaed2630176b0aa1488f57bea004768d96da7882b65739760c6b239443dc094a9e6bf477ad8ad667e628f0f43d5cb0c75db3de334f20100e89c6570fe245270f517b6ccdbadf7048fd4aa41308a69e931b0dab488991b2cd1911af63fed24e92a29d4d3bc91035799a03fbc36e6a72e4b2744036c0a653f511de62aac015fa0c7dcbf8d7d855065d73ada66c77e4ec1697a53047a1de77aa6407ac10697894263b0c74fb2acf475d8561e67d193d779677241a11b05765476c8859ccb8719b8941e1b7d99cb87a8edf391aac3d72c356171524608ee42e7898ab3c804aefb87d2f3ceed7d0c7e3b39b5d4183caaaa29942a20aef47a3872ec0175262443689ab215a56ddeaf49332022259b038c781c668bce1e64ca01c6381f027d69c4678a944994922db2f513ecb03647027f2a8f54afb9b8e8dc0a65b254cd9ffbf7c415adfd0f9573ac5f3a286355ed20f3ec7a0ac21fc2d7e8a9e1958ced94118a50882e2f0699e21a112dd6c592ed2e7d98ab2dafb07182f15582a50ccfcab050aafa28d7285138d2149ff6806e5bdcdc84fe924b923b664b6efe0a66335b47b8fea640a91879277090230a5d49cc1c28b0a46c075d85408a8e60cb74ac6a1b6275ba270e83072cba6e71fa9c50a1082d5d2bbdb2dae38ba282a645292cc321062aa912c7bcd844478a4db51fe29ba11269427006da5d416854c1cfdafbf10466e9518b325b43055cf801d2627e611f97b369b97c48c391795686528d8173d630c27b1836fc00b66e74ca69788e22f4000e5aa6d3cdd11c2ad68ce6c6446f6c0cdb4518e9668e821426d59f0a581e370adba3259af5c3d9396029a89cc9675322b4c18e6805a51b9ed33bbf06181b728254941efddc54c1c1694f4d24763293af6461dc81e9fbff1800292201ee63dd90ae07fcaf65357902d1bad6a67746e2916f1c66d5ed7ab344a882e84b7bc4676629b184d0ce58bae23b48acb8f791e6fef69b48eb96c133108322252198cc96e5c6a9ab0ea48bfd05dd919f3ec83a373271da90d11086c8712a7909720459d87d0032aad5c34df9bc1fe705b28ddcbbdfc493dd67ce6f2a1c1f9504387d61a3052a56f1e99e94f307ae6b5b340d8453d866a9c31db07e38b1bad71a1885fc572c7a12326f5f6c0a6bfd9d4a33ffcf0076932d775085a005cb88d51bf02dae81f02fa3cb903d10c5bd6012d577981a9625131f6b5981f3ad3bab5ab4e8f81524cbd18e55f22ce4beb5739be6ac5963b147289a3adfb5e36a3d82ff026afea8a079163c4fb1676dc83bb5a04cd6bd11dfaae3818bf247868c38cecaba3bb2c56cf4a57e8b9f0f20b1d39ffa43e1249e7e0f1bccfb9cb3f46c66db6db3aa1d8c21705d020ec0b1852f41daa70976bdb3f05b152251b170cb056f5a729b88e5920c61f61d1556a1ad25acfe695dd45b8c85326c3ae996247575222f82a5ad8ca3b9c74a57831865bb483c55043e41fbf2bfd5fbbf92863353a852f38455e449a78d4ea76491b2e9911073541028f4127b70f75140ee16a71ba5e43cbd63991794ff6f2934acbfcf8945930a5c38950f08d2fee53899b699ddbe03cc2cfacbba4292b7f7b65082e23b855eb06a1895f8a1eb2f18451bb731dab07304dee2b0be43449fb7022afdc83cf4cb5d19617f5e9b9be191d9cf45856a9fc54d82efe0a5b87416e83622590f5e0698117509f4e2e7aaee7f0aba94b5a85bde2013304fbf5b1a56f2a67abd2ec01bb6f37e7adce544a964df17e795e718fb4d11c1007a36193f0df9740dcb4bce4909f5172764cf6d48c2a66d1016560fb5df6b2acb526404814d5c8eabf0dcecc9e85acfe286ec20a088fe2a787b01993b294b824cb420f25266cb15fad1b97cbfd27a4178f6ad9d1c56aaad0059a6d2037de8dd191b81c0967ba97026b412b03c435facc74c5393664a39847240c41fdde696fceb73b169fb7cab920872ca162425778bae310e615d2263ffe73ff0ce057b5878a7c0b0a3bd016ac9cd7c756c5314e76423bfb78d3887400a923cfc5c94c5718c3b9411412966d44f3edd0fc17f8e0d8fb6c7600cda6e33cb19dab30b0d6627920a49fccbebc4ee77cabc3de627b64665675886900dc2301566d597bd36430bc7c1b5cdd79ba369440f70e951f170c080bee3091621ef1d09f238ee65d9724019e135387fd08a7206a3afdb9445bc320b4825f298c5d62c815d649229ca727754d7ca6a90fd360e793c4dbcf4a47dca51779d4f501ef9804860c9a7a246f3130012217c50799fca954c7d0db0c99fbb270cb6b9b329aa501c5bca6201e640551cf9fdc23afa611517ed06c55a1fef4ee515fc667b5ee9278856bae975891ed80c72e988934693221b5f26c498fe13205c8cc79b5e4746f9ff40b769d8729f91a2a05407a85a19c393f868bf3828c6259c841eaef339382ed0592e3962aaec5e68a2337bd61e0d3800e3c767cce47b3926dc324789c68bc0a3adfb96f42f27668b46b9f050bc6f2dcbdbcc28542ae6c71128bd6e8f643849079525fe3cc86a3f9963f4bb035a24b37409a0b35aed5713f5656c630ee730fc14e7577f71974a286c22b0a276479f78956f0e2e062a47e7c6299c1e1a9ffcc435d9e96a53f173dfa2d6e1df7539c65227018944142d8b8935d2e7c1a16bb4b5d4290ff29bb2d2dbb49baef4b6c3ea4bc55316d6e93925af1bb2ec525217547c400b0da0c4f39a23e9a59d77a1551cb3e81b8f3915f69ed956d9deed68783b71844d6578467303eb3d58ef3ae1f832b4cfd54bec81789259d0dade9a0fa4007ea4e8cd1c36424e31a3b5fd82c966c15f18da855c03c9e1d46c503a910964d8ac83064cbaf35302aad7454d89e3760e867cb6ebbe1255d0f3a2fe8685ab02ce23b7550500c381bddc5c68e9fe1514a6ebb87b7c9b4dc9063ff7021892c778bc5704bec1a2bfc4a79e9f0b6fb57a62cd9da0b7f866ce79c6b14f29f95476a66091efff631bd67a4e436f112934e2fe9860df5f4c8fd2c02952cb4162da6c3c86a327b8abe0cba43fb5a2ba51e4131a7ba773e5baf18aba34659f784129d19ba15e9f96cbf1daf296e349bcbfd3b1eaa4fa856144e476274ea8cc6a625e8dc617375c50a36fe6d9dc7bc23221893680ea2ebfb511176fc824c09aabec6afd358cbcd95953ac98608cafa33925ebf62593a8e72e7a47ea0b7acacc5d9b90d42bb72eca596bf8c07e53fab5d6bcbe345beef4464d0dee57b902cf28c5ffa537b2d2b377ac9fea3f4201ac0099a9ef11a11668fcf4e36b87b4ca40a0d3c190b4f89d4c48e2a9608d90807e44de56aeb31f3ba52278aa856e041cc9551ab80b24a8dd72c485bbc6404d2343338638e90140503b5cd34c70ef92c85168ee02e3c792acb1dd25d00b8f88e9624177b6c1c00647d27a01df1e038f79c139bb1f09568d78fb38b37d9fdbafe39a6b937c3e08660cabfd19b148538fa0249094aac26c328694e519310038b5b929741b037419376f11121d4b7c2bad0140266e7142e5a2f9c4014e33eb9999cf447c93c1b944f22c2acf35f9da37ee05477555ca2937701ec97937528e7cfb515df741e124f046384622fdb226be1a233a77e464c1eea8e47b7c926a954bd72cf7930a023e6fa3bc64549211c5ece43e6775498693edf465f6dd8c64730014d3b9dc49b950c85b0aae9d4464eae245627d28810b6df2b13e80ccf2cecff16fe6b284c21c9e04f4c9b29811b05d5a58d9dc23d0f1f642a0d535ac0efd71e23a775d336b2279aa2686609436929cf8b049c40ebbbbb032b83aec3348bae98325ccb2a81b785a8acc126879c1b02e9490abeba50209aa5809a3c96eb462a6789e90c601bc273d4758bda03184e99b5dc49d2b157d5dd1dd23e3ecc64de3ca34fff905cbe9b4bd74dfa462d4811b6ecb946f10e090985f30d6df63cacdfa1481c4fa9f2073f2eb072a9855ba555799c25a79be59feef348e48dcf3b019419fe95528dc19ec6188a5661fb4cb4debb37084a01bb37e77ebd34cf896d9cc90bd6f9fcae6679f33d6c4bd62b21aaee37e5a6389ddfaff7df5cfd37e3090fc8c657087fcaca2a83b02f31027ba2f5fbae87d8dfe35b4b2c4436f3292103061e7b1ff1f69f2d815c9e1b7f6d914dab1c9edfe3fae49ac0cee5d8f11e19adbcbb4c5974158cd752dd2178c8dcd3592984d6d19bac6b3990d77161ad337a8f21f851539e6b6e7aab56fa6ae46f050a8193db302c161f8b0a9f21b16ceec3dd22557b24d4e9daa47b844d57ea5565a8961441e83be53b4eb8bb75078834bdae7c7e05bb91c2ab7c1e3c99649d88f2d99aee80bcaeb6f2ebdf996487211de69b3a5e3c92b08a5b3f8776a5d66d3d0d8108d8e9ac4eb20661fa00fafa8deac0d77db28dedf18d818ac44c6912893f3623df1e5049294ae8a1172e99a9521ef532d8b02dd70b4ab1d3e2a756212f68898cedcdf1be25fbb0db187e04bd2c5bdc656fae99aa2358c63f338b8ae3e9c5a356607fa542677dd595f461df7dcd187282cd2b25a1112119e84f7f93ec1a652efc42b52fd212f2504ef424dafc8992b5b80949706dc528e2d8c6516202e464b82904cb313eb12c59489d139307091747c7bf79a3755a5db9d31e3486763b8f7ce9d8d75a7623217c6d84d36d6224c77b17e8eedbe50d7b343bf768c79263cad7a5ddd33ba113fed8ffeb1f7c35bafe6dd6f5758165677c3235360a4ad7ecfa0368a68117ca75ecad239fa0e40a3ce32003a68f2ed4b324c86e77aa694e4ca2cdeb1117d553269db07579a50bb51249835f7ae227fc1c1708eb856887b4f6510b3e7c5be03dc864d8ab676daf0d754da52f25559e7da0e865a05e525067594dd27e5a038d9d5a18954b467c345dc3c4f52dbcfbdb9a47f133207a89f18cbd4064ddb4d441aa3edba4b02a8c957476143d048439f3eab4ec150a436a1096fc4884929c5d046e15268ff8c6266eb868322c7c715e29c018dfeaa233ed92669ef82fe89b7ff2310417711a6679c95dcaf2e8096b266e7db90e43adb8700b682df056116f6d20c8e6f2be11fca8c57a9240e81866117c2dff5de44fb4f0ed8c9f2960d76a8e5f310e8835e9a9e66a4739cc894671fd54a98cda7ddf515cf7a48149db5789cd833df4330dcbf8358cd7e17eb789e03e0ec331a64029deade490e3c26111cd9c05945afcbae7e831667d5198781afc69f33a8db19d57f9b8f8c9d651ca758f73d370e0d9c0e6f429d4ff4d27020a286da1ed0d7032ab720ca34ca07ae38cce9fa9b06153afb67fe0b22ea3559ef51b029730a7df1022853082b9f0c20b01457ab93c89bc8833aa2c6aff93e1965453ecc8f7fc61938479dde5189417af225cb890eed2c243845ac4a9ccf661d5fbb90590099e37b56ae0a541a5e1952e3da42954902bd125fcf53a7be3dc5c0f56e2d3fe195795a428116ce1547c647f87aab148ea325d38c24562d78582b927b24a918a02e7576228fcaa3949db6bc11c4452c12d37a6e1917ffb1a85e856ba0055b558cd2228fba515b903c07e9169ed708b3ddced9785f8b195348f9565e4f6a7e75bb34d52678032eacc3a0b42fa4bd3de683a680710b95df12a2c6fd1407626a495f09c566ade419b097248e513ecb40c50f852569e27681e27710d7d7ece0bc93f1b04e1f3a67d0601eb163ed49b8d19e2d10a8f15334bcf8069d3cb73b513dda0d5c0f6c0af2004e857beb5e858c9170e7c8e864f10aab4a02657a909926285c62a459654c451f72c11308b7e1a294877cccfa273b90eb5f5e3f39cb3a27a87833d5c054f653d85fd9da76e30f4bd2abc3e29cd9217c9127684244c1aebb24b46cd2932094e34cb2f239c67ced3b1cec0c9a49d1851bc4af4bcaa44429cc1089ec3a8e4923fe8dd6e3c3d6ebb7e6f17a32d45e2826e3e943e6ef19e02cdcc0e8f8787eab0ac864457668e90e0e5a5656064bc19f138368b45de8c7fb5948684a95c48c3ce41337985a7eb08bfa5c1a1beaa442c9bca95f9d8bb13b303bebad58ff5585942180ad3ca00244676a9aa066c1ff8047f88439e093f33cfe49bcc7086b592ea6fd9f859e8c5b3f51caf914f2399c514972773c8ce9e8a3a0d0c7af0c684709698b31abee256adfa1acbdc1ce6b3746076a88021ebedb43944657f60bc26296ec0e89df74ff146c234f1b7e40d4ea0911008b4cea9186b8ca163abfc4a8e5300cee1af018e6ca61f55d30153b4ae5b0cf0c2411dd20ec459919ec3197f7d8be84d9bf5f52c13cc06f8fd31005ce5dc123a3c2b3e4fdc7c3a9f4b73004316d9227bade830f71440eed209e911a027313db93c8343636179216b33cab32d335e4cf9c57fbf73c3a7d8ed7d2e7afd05337e90eb79bc0f5df4dda3f05110d876f8555a4cd361768bc1b420c9dd02104203976617a5820dee8ae04a24fbf3d573b73135e1e5090099764d00590b14c524953eebf7f9c56d7db710f79652abbb2dbaf574163987870d7144fdfc903f3a5e6df3b2f8f5e0d44f27a92fdd031223b1c137d9c9dc47f69cb34678baf935c34a0de7d20d29191638be265e4d3806ed609a2253c9e8732876c6dfbbb6646765436e3cf01e0dd4d2a5faca6f0f4cae224931a77f03cbf37785daf8ff90ae4836f2f38d5b5912cca2bdc64bd15e662ca18173df839703b4f24f0af35a8c61453afe2c3eabd59b6e6d87ea444c074f1051ca7d15345876e4fb3ba04290629b9942a8ca75cb51762638a94ad35cbd6e96049c025811609ae98413f73c2363cb2c28d2b2b3cf9756667598c02415a5ff6bda8e65f2ca97b8d228deb7b747f3555cead7aa8757378934fd282a6c393b6a5118b79510e90a07f508d33691b89c5b58c58efacfd29178adc202a4a108f5b20a94e76e47866e79f59a7bdf7e2684f7ae7ea798845d4b1416eccd6299834a8aa31750d225199cf957db261730dcf78fb0d2d65e59948d666c920fd0b612d6d9d08b5c86457dc10cd6c2f944881db983ce41ca9b4e8d783ffbeff70c5241d98c100fb3decdb9cd5b79c36446e24be98b6c9e27afd22f2d07112da315005b1a38ff73496d17a6d1d37127c853c0dd1a5a8b9ae287cffc439759958fa52b401f63b99aec8b2e09e6a3552475d58fff95c3b1b712384084d1e56446ff17b35f1bc6e5d3ad2b74917ebbbd35f262c81b1cbaae3c46aeedcd58cc828beaca6aa7a0bd95d94ad10d9cbda238ac62202f6a7902460ac0cf475ecd4d90945d3bef5f7dd6511b4a9266f511b495d5536304292d62124efab70d10f20e1dc47a1e43b7e0c26d5f0199139e476a531bfcb6b5ba64900cbda90433c5e88f98580c0f20fe9e3bcb304124cc909e7fbd61929bf2a5bdc87286e42ae5b02fb081a865c2601d8431e3f68224c5c5f3fc7979b476aad3d173ac133272e137c848b04b4c1e4e2fff39e59d341f65e893e82ae57c81202f354bdf716f6f5e4ad508125e885f2adc60744d83cc365ec84adf80d7b63c7c240945b3d414008caf2d13bd5fac5e95fdf95ddd6e1f08b106ffb21d6353ee7b928e3711711e0ef04830f0d10fee9b0c655edef5fbb34c65bf828565862760ac7483914e6d3337a7ca2b467816204c6ae9de569397c18419d4c1a362d93e65060f9ce91e3725a38e971a02292287628a6ac7066029a5e5cf9f6ef9e92e0375f012a9c52b255baf85c2c90987b7ae3c2a2129d4b884faefb111baba927c7477fe0d5ef74601c0960bf057a619da0f82da1e3371312548135d07b9e2ddf6205a77e7d31d785e809d8536b2fa553b81f9bbdc2831b3a4a1a60e3df663c1e7d89945fbfd3944d243ae5c53fb398c8a4bdb8c9a3b29ff838c1dc9f4689923f88a646a80e5afe1b5feaa2898cacbc60af1d672437cf930b63eed1cb64bd1f37bab05ecb67c3f09b5ba735f0855747d4ea1fde015f4b14cde8a3d0092e9f6d98e26523018355aa37a08c4f5b2a684b9e2c97ff6c9f4b3d6d0870dbbda94d71ad1d22b00572b6b06c824a4efe09d08d5c23bf9dfc62cd99d11d27683db86a28bfad69d27f3301ffa0df289a543b6d7a667c69a8044e6911b0ac3865fa22d749922c9b11a605975c423d5495ae90b2c534387ec71300028eb05f40deeba1fe1064d7975d7be9c3d01dcb7bc88e0b6b4d0f9ea555f63bb67bf70e2e634bdf5ceebd00a0362e0852909d11d834480ee5444c8cb0c01a5a3836b248ac9104b92058939a5cbd928597bc2c562e5697db1acd60934703606d30ecfa568b2d78d03e88b2f34d16bccaf8a87e1c03b3c0865d7c86b32a688575378ee6806967ad6c6e42433799f3e322cdc168aef5380822c07e482ce68c906ee1e6d49de098401e75bf17a41fb8aed5efc8d93edc9cd621504144fcea2b2b3699a5d029147bfb09596e9aac0d9e8d522a253dd0f5d029096734aa3ad46f1dacaa58e75daa2001dfc0fd56c97e85dfefb11d15b6c98e73628ab65135ec7bef807cb811adc0bdd6b66b21f505be85d01210283cf485b51243333d18fdbe94e884cc62206bbbff79074b137980e001a2b7b0d189d9c6a9ac342d63ef935c8eef4e57af3dea197b79157f418fe4c296c43fbe3a69a5159035d78f758c0298ab7d3386aa6c94d56ec9488ed15232914b23187218cf49f2a67d262204130a2ba0a73a217b4a71a34905a96f2a40c96c90c47afe5ed67d98cd54437e75b13630c8616161443594b6b6762e60b1f4bb48754a5043e0aaeb1edc5cd35c8025a51b43513f1259efece59c05729f86a969e1bedc74a5f1189ee082e01ffce6b82c58448435792abc0a9df6042634520bd9ded2fc5836e0b275e49403b898e4f4c80e5839a5928c36db0cf9e87d1b41171decd0814b1322be2526ad26f943d64e9702a47e950f042a34b1b150715c5006572e98ec8e7cbe52171204be0276707024d841801f4bed8b04f42f71957bc9518caa11416943f7d8a3d6e1fdf683a1ba01182e4b4dc5fcb3dec9d6d52c264560d376a321267dbf7ce591463fb7886cc502d58da85bd4ff38c25ea787631e4d595d9c521b46433b12b9ab572415f1ed8a6e62393654859795fff41d50fc07fcb16f823199ce9ad8ba2ba9375a422b48aa03400a7f742499003cde7c3283e7caecd524b41034465d2008ee228e8d2b20a49d4633ec3212596595812211a76903a07b633d33a8bb6c7144194a55263a7bd92c3fc5c5bd9ea0f252b8f31d5a1061747085fe8788f0ff1f1049ef56811da7775f5266f0644376b6a07bf194d5adcc32dbab9ac4668d61e22b0bcbc745b360e05c5d67a349f4082813cabd10682810637d8496b47084d5119755f6048b0c6928e7faa064ff1647459c45d6d8b84b684f24cd2dbb4d0adfad62aabcbd59e06b66eb3e8e8101fa3b185249d4e69e3efdfa7b7f55ae9aa6eb5d044f019bb54761c3f27e514ac3bd924c1a11f2b1528fca1e815e938f83b0a33a6a9add99a5f4b8de520045b93f5fcf531425cd8db291f38eab91c831faad71f8c211f0e340eb6128c515f8e39da5c84fedeccf48064b63be4a0a12ceded27551f366b705488d5402a6da090d3df7f944968f4b735e113340e3fe940725d2ab9ec34ce5b97d9c8fa0e485697e1cba80d9427be18cd149b9ac1bde697adadd5941c64b6574cfd84d92a8eeacff03aab0c9847bfbe4d9b13fcec1cd062f8e7a919c3932a671e76c4b701a9ee6cc6fefb2d3c2cde036aad7b72e206acd002bc31659d55251f5bfe23eb3bdc7e72ee80895708bfa47a779238a71e27d11997e1ca2ca2762e2283331ead7d586afa10ed65aedbee1634271928d2f25eb5c5c8a9f56d822b4761fb65bdb41d45b88fb08ea3614249520d5f1ac87a27225fd5325fef327945fc31d2193d4b43eadd403d53edc170c1ccb8b7c4034e1050921ebaa7898a6182965412d3186cfca86e4d1cd50ad5433e9008135e3b8ae6b94b209013236f89bebde0f1f57abca24b5915e329363dc549349790c8376067d58b84d4c970eef2efc24a85b3500a55ce9ea95d05180fae5f07c704769d48b7a3fa42b3eec674e8d67d610663fa226ce619211e8c10414421881f36aed0293d43ea31db5a9b724f7726089880db9216b351a7d6655ec82de158e16b80c0276d948657b73d112277b1560e9d3fa741a183f5bd6e193a802b376b94bca4fb0b728a23a63ffbde28c760f2ddbac8a178d9b67486334514134ea7da72f9fd7db2755c3f935d62c2c117c620a3bad6fc05195669067329589eb1a60b7fdee86966f546ec43cb391935d8565fd176a4a73008a25f195a8c9aab592713c96d56ab74261de3cc6e6ea4b3b17b768aa20223a1e43050a7c0281a718ef08f96cd28aa06a255ece17e18298f7b9aa821229a180548bb7857b8ea55436e71a66d61167d1c8995900a9f65a5279743016ee88df451123de5614a601924c3c1ee6e430995447ada89734f7cdfeed33f882007e708b3da19ea465d75e2426fdb9bb66c2a6f99340e260f3631bafab9f1fc9e17d6501df293f5e8f05a7ce20562a8df95e0234086ecc93751b3802eea850d57dd88395321effba1b641f4cc9065b4403ab0dc1e00fce0f56f9c960932a59a7c7c26271d7758d62a1ca13bc21ebf882028c71b63e68ff5f3c39cad7cc3d85e389f62f37fc6d3198043904c1e61e93bb0ea23822f42f9911ef50b3f2d4ec2cf15d78476eec123af7828335bc0706b9c2d860198d0bb5d978a36a917dd2ad9bf7c129474c418210bf952144b6fdd5912c6f3f30dc72edca6574e1727eafba4cd349d3be2f339a97f6264c3fe6a7db288a1549e1825ca22378e3459dac90af86d793a93633d98bee1e65baf66805df742f53d2c040ff8dc5a4868ad2f4b73a02f1f350e9b90e3a926095beaabab867b292b3660284ccbd24fe1e398dce1b2532d13705784918db95df232db034c7e01f85294b3465ce75863dd540811279f1c237c0d4b7b76d80474e8df37213dcb7944511493db220b9c38e225f0b25888eaa73a4842f7c22f9e46a8b72ad03424fc0f8f7ead77d8897971165f24f10551ed769297af6724bda637f8a97fb720502eedec402882170fb955724dc905b3b0d8607f82464cbd1042effe77602ad09aeb7b96c3173078a80d9db0856d5f697a3a38e8aecda3bc1899f3e19bea06dedd70e1456c4fb2adb373b4eb9023fd8f243a61779ecc5bcb63f81fd152c269c44318eb18dc4aa2ebdb5cf1abc7d1ccecf9182de6be4296c88393d2e756bec75cac2d756f4e821f45a1e7e7e7776c5c9dc8dc7af0e97db229bccbb55922e208e0d77842a3350805e217e4c03efcd367f0e84cefe55b42122a7bd225f0ba2193519538a954d740064bf36ea9933df30de91c7bdc95dbfcbc6caca230779b3b940d392b8d0976a42161d258d064bded4e847be5482f1f6a1b9623f7ea7558ffdd964da3b7f63ce91004c674434bf6dda6056fde41411b1ada0ef01a7ca6f609b1e9760061d42addccaf8f86a27c53a17727c041157848e73643bfb85b34a8b0ce334cdf2abbc6b207b6e83c77e9c3bb11e502623d05813ec740a9b3accfad5f174321473214b7ee97dcf7a99cdcc2fbdee712b48331e276da981ea6f38564e03ff69ed0a26fbd5f6e24ca5a5f7b3a0dc7c6db415717aa89c847cf0039e596c11b5fd592d8d400c3fbc6e94cb016fd94f267e28d8bf079ff5ced6482d49db6c0bba1a0a4546d948dc9edbaa524204b89f106f5b2672f12d349f6fab4e91cb8bd054b70f1e8a704a2ae1699716a465a279f4825ba83f0f66c9aeca939a8187563d4bbae68990b5c2bf50f3ff9ac95fc94a1c017d81cd0df32f1ab0bf01510055a4ac5b0d7e0f07e22798f9c2974b5a2e81b285b9ab9fdb40ca57f0795756328d79c994d3a0d3a930fe71b48ee5eebe1a62a623f6b5038ec28fa8164e92c3d8c5138035389986c214b9b70313320547331b187605bda9efbfce21841f8d57fccd75749d0959b5e857722d443f0af899ca7d0780cd1017e3b38ba14d04ea60583eb2dd9dafd30503879b549dcbc1ca85e3130251332eeade0588d5bdc8e22ddef12162e9c10f7c6caf9a0fdaadb670cc436bb2e38587a3e92b30caaa12f954efcf7ebf042bfa9d242749510e26cefb6d6474d8227d7e7866d3eb40df75a3dd5b06a6df5ee301b61ca5f665e9d7710c14558d14c9e48cd8189fc49b1db8e6400b86e7cd760450a3d89dfc9b1dad5f9aec2d779943e1906a2c0cda49035c000e8f795359bcdb19d8eb3c3d8822edb498b17c45b5db534c6d90679ba048c006f18e2cdd1b8926ddb1e21e5df3060adf1f1b6cc93b0a0c41e5146b17ba43fc06b25583bf8c72de3de43ab1ab91907f6a805232db49d7f0ab71394daf93c4306a1c3560a0cb40070e79fd59669971b311456af89d37933a9b0c20560cedb6d8c8b73f261458d31e10294264dbda0b17bb9b5240c127022ca2e993a913dff83217bbf2cf88e6c29143e1edb0f820ea5f10a62bd9886fd6d369fba43d1242b5610e2b97325473c549fd822028d422f60718eedf951c242bcdba6d8fad344c0dfb2a8c1a981a9e75e0ed1fbbe271a567d767c920678c0957854da16ddfef7c5269819cdaee85b1f79684eb541f2e0a0d58637486f8180bea60493cabfc0f5b66ced49bab062f316ce1a8ea5f9d334792f418bf160ff9132ef61813eb593f5993ddefc16f9f0b9a9112542c3724243ae1eba7fa8c27317d14795620e224469ed2b05567006995e361f45bf9e0f72bc71174c9f4e467ad58f6d77e1bd16eaad55af8cf2fc411677f63eeb513370cc199bb733eff0f30d31ad434343f7617a296ab9caa9f4e4507f23ec72acdef23f4b8df37e5cf5db3d1cf83de04f7c6e869bc5b813c780256e1718d9ff26a8c9881bf32e207ab4d3ad642c378fe9a5d95020fada712f6e3a3ba9ff0546b338948d614f0e073b632386303ce1f7cc182af42f6cdffea480636804481dbf8c63bb6c1a975ba065da86732b37ca5c5c954df5bfd5f3258fb0cc55ae8a33babb72d7bac36ea3dbf47136880c184b604874c3710ce85444cd966b68981806a4c43fd8b8ad6dc83f0ee1dda7f2eb1782003cf20a1258f43262801f6ff00e2ec4e56ac34e5b24a04c436cbe7194fe36ca928b673376e7dd94bf07f0c341b212cdc0793f322d9f93f0158788d84cdfe147ccf5e7b4134af16264a661071dec0496716b479b8100e4223671b09a3e68337c1be845edb1e5a8afe521c117da717c707f9eded32765fa2ad7ecc30adc5cfacb2a5e1666020d24a3babac980339155b24c0aee7667cc428c1a5c5cf9f32cb1608c0b00880256e2b23b2fd3ccfa8d85099d1b116d067543afcd2a38a076c2c98498e0f336b739816a0ce25dfa47b51806027e673c2b8dab8adf638710398e8bd2585867669e8115d8f11aeb926cfe47bf8b467803e56c6e48d4c35902ce4a7ed9023f6738af2b17b232a867f191f409822009080f12e01d65414c0427a63d95a852b8a6b57cb67e53d965ee78017ddaa446b327c2d1038cc245eff02cdc9151f5d505b9c07e5eae32de6315dfee066ac7fe4202aa89a6126aa732023bf5df59160acf7983ebfc6ddd6048c16f4ccfae91115637943775b6dfb9d2196110a1db483fdac975dc9e8da463c60f8a05af6d33fd70dae52e0cb1c4fa44735685c3e2606dc513c1c42da202d663bc0874ae4885834b694b55f4e6f6dab77c95b68de494c827cdb3c079239d9ac9ad769ac65449d17d708ab505519c76c7da6403a4b4478bdb88a4d0092650cfa45c66c67046cad3b98b3b34bebefc2c83a649e649329c3ac5aa66836fbe57dc636fba566af4e30617db849bc9fe9072f25e190bac9177179c4c5b12321b9f1770deca4b04bd0bc1a6c5ad1f762dad86933951c9fb97e19569cea3af44bbcf2cc8e025f39def4fd1f01ee31035bc1e2eb678dc5c3d09b399a8ea295f1a1774faff034aa8ec8f0059703cb10707e9c610d50883edd8522786f47c0b5d213164e00ac170e6b2d103067689a1950b2d4bde53f7d5fdaf27aeda8278441c2a14da3509d4fa741584dcd590b65687098e487d03f28a84f8d034ab5a75f07585dcbfdf28253ac06c25913e419b2947f0e93960eeba42c3f277710950a17568f31b70e855b04049e7c9d7812aa78f97ac80541fc4c0c58149bf70121916cd828105b49a68a7cecd9cf6dc054f3b5b9927f7d737c0dee5bf1cb47bd196dfcac0b7729c731606de552911e49a69e1630c9c3df83e8c36e6672c4cfbe041691ad1b34df6eecc79afd2269a170a6f31ff82d6491c99afdbfcf78cca017250ea8a10c380c1a76067e329ec30f5a4d75825b1b17c73c3f23b7ffa77b51908e43307aaade526bf0109a91ec410d0ca7639352baff23f10fd43b238cb56e57ef3303edee7074245b3afd77c78892f3099f1e8a2965a9a41945bbfe87bf9bcd3665643e5e9c82a7d59ca701e926b3c4ae9af687a4ef5973e244eb4343a29b750f3598873a34b31ef8ab33d66cf687e4482515045ce7660c9ad39c6549ad3acd5cbe3df5361e52ff732017ef074b3efcd73db5d75c9a8294d88f1a977c2297834d4525e8b8a9e60b8c8ed9787af882058e049d917f798827496093aa17f77e0cc5bfe85e888da5ec7832fad2def64010643b84452d113284b07a20afef2982d6b0f175d3a1a377b680fd1fe0d4a24116b257d84f2c78e2b0a5afd749861e4deb8fc163b69868c31375dbfd3231dbce73898864405afff6619751ac024a91b40f405f5969785abacb792a142e089bca331d913281f9fbef4e8e3bb2b15e77426573bcb1eb59686526cbd6eac448abdee64c18bb69bdee791c26f4bebf10e843799cef685a0b62e229f088d39cede19c1509592c3e8ec0bd6fe8c707cb8b111c35ae5f1a592bd217798785d541e084124b44fa92f728cdc2245935b14819a1508cdeb5472da534f578f26071d88148ddb4824eafcfc1366678654eac62813a828c54aa56ddcaf2c71ae6e232375d97d1d3cafec849247574fa0ab276cff66ba07b2c25a3f58c231cdb73771a8f7343ca0b55e7740cca77e89d676f4631532bf0ea0fdcfbd807d9930a5bb6a8bdc68f748baabe7c75fdbf5634dadf140db01959e428a94908a2226f6e12ff1c8416daf95704f751957d9ed06716f7e6046303e530299ba180b97e33dd623ba8667ee08b60a38d8e70f6a1a5317a3c5b34041ef6425fdffb867d9cddb8078b8a3fe5f7d36366b855133ba67c3cc26c7fa41c592baee498082c35657476b2aca871450d47570ce93d519256b68ac75963362ac400d69817e3da40be6a90dc54cb4340c42d5b8f61ec961b9d7ca141239f17a79aa5ceffb4516cf89e79e119951ac2fc9561e034c36d8243cacbf67604ea5ae5ab4322bcfb9323837fbd3c0e8e1f5ecd33976383d3d7d34fb24f04487164f79cb05a1675cf730dfd0f418bc5caec003d9b22f2d18e1de91ddf5970025fe16553d4111fa8ce72bd9a20a1a9599126b19bda8e5cbebf8cf1f6c9e9a64a40ecbffabaf0d6c303e41fa850186ec6df15d076752c51630e6613a5a33d87c28ed18995d62bd6dabffb6590ed5cb3c3d780dfb2f1e77e85280a97dbe979fd03e1e7aef9fa3d8724e41c170d977aed523d8e200395f5b3da30ded7f19c5e90acfeef5a57a52b8a576b3c4685d21546db29d1b0361f6cbb985117468a0b79d257418d0cb26e23d056822cda8842431e61242d6c8305cf98033b6262abbe31daa10b449f1816809428cd83c67bdfee4805eb97220ff166b38906fc588ffec81011e1bc2fc1225af2e44403b0ea16dc3b29dbab76a17cfc7a73b11f6fc9131ceade919cb13b23406e92840984aadc3a82d9eed883b910ef51ea70f149f78a8ca27aa84ac727a6b4b419a3dce1fe9052ddcb43892cf14bf3c4c78a070f5785d25f87fdc0f522a4349ae6ea0beae9ec2ec1a6214b7283523134bae783316cf3552f8e20c12fa5b713075d8a42cdfc615b3194eb178287128e3dde71bb2afa02950886bb66fceff40001aeb7ed5c9ad5ba3bd7a6da3dde5090cd6b4f5e94a9c085922719c0ae2561d81faf91eb9788b8a82ca36540050be636b96af8b1726d01948a11ad76cc1fc9b929c9548138e76ace45f7e28dde9d18cf9ad41477e9832f2be3270e11e07035f3cbcbcee15e26994effadef9b0316f9b080057aab23f867d3b3b6735a42add024012377242f3a84014298feed6b6b5de3ec2d63ccec2261cd2a66bbfd02b6dbbeb8e39d017da71d5ca64997d15a049ab360e3001482e26ae8d3f6653b8eaf48d3db4e890ec75a442125e249ee699be8a76e4fb29949d7464f1c9b4e3c0efbd1774a902ae9bd2dc14f8b176aed8ab57fb7a1d0bb9e3b841daa06591cabdb08fb1e02c31aab0ed40d48fd79aad5dc84b6d5aee8735479144d4cda3d823de115b5ad1d8b54ea49413c737ef91425594c091aeba257d930e682238eec27b0c17c059f525c855aef4f288662d59d89910ed7f57caa3d783797ceb1e1b54defb3a2d95a94bb8174925f7009c8caff94cf97804994e0f03b6aff3dbb077f4bc36372199e24b8d26e55eda68a571755d0f2f8a4df46d3125b53d9be4cebc45c6471c25ee327aa1a575ac6d3fa7dac2006a746a10c263b57e626f8022975694ba82ad3be1067fa5e88e60c7650f5aef112684b3ff279dcd717c3c7bb5111e4b58bc6de9b4235c81fe00497728c566395442f5d67b55e071a7bb28312c4083c0093aaf372d7108d456f2655ab6c974fb12a2b7c4d04a978622940ceaa4496612019d39bf38f036dd42318497a6ea27d9fe65c35ebda5a52ae40b47f9d36758cb85d99078d2537010f0f67f80e67ac62bb5cf0135a744e073624638495c04cc7cd6e54313f3c54f816bb66f5faeb587e18b03019f9b2f8b32a9f9e27ef9e46237e04b785333028ae712ca45f65ca53ff6a55a6da4d4947b07a905dd264f4e1208743f0cd6e17916f0a8d23018f8c3b2b468ee198104e31c64a008eba44f4849ff5041d6c67098c295c18df5b35c98e510d6fd0601d2fe1966221da8f6aa9be7c50f1fb4c75cb299363f054a2f6c529fecad24d16d0b2e1abe3b1fa209630a18d8f5bcca6bc757a77eccc68dcf8e9000e6c4b69292b16d6c383391fb17d4277dac9c28641c36a6a6f4e04ffd61626f899b8b333146a8a02e8725d06bb0d6c35f5c1c438fe6582e1d9d1b985c1d0a8437097074d59bdb01015ca81b0ec61e256c936cff2bc4c5d3c4241389483b89b03a1edc3a81eedb78293e51ad90037e3989f2d4683828b02b3edcde536c64b187fb6d40d88dcd6325bdeca7a74a15f60038ce3e9b979826a97bd0194b6c3da4614c4e0a60bab7b6dbfc083deb0aa5ba6e3c776e8cd12e3349cf0ab73056b7197665535a34bf829fb9ade3e47f0a38a01234f771a81b2c991fa4405014b9acacb68b26138bede4ed0486b405bd01d6b4e0ea8d92e23958fa3d0ef0f8b7ff92795ec3cd712785e29a1d7d2d514c50db0f75478bb3fb65862c8586ea73204e53af6bebfa78881595dd074bebc058fe4ad08055d8251d9dbcab7e672ea941c172cfd8db69452e6728d682a7a46a4763a7c76efb28679e8a8fa2e13d9625e2f4d3e9be30d0d027437888090462ad140eca339a2135939d5387b20f08b0b3d18c428d401de65a135689543204847bf624b5f4ceb6d57d6e5167f650d9d7e0fc2e807236cf7159b95cf716d9ede11a047a5c50fa86826580261a13d3c9907b14b7cac3a09daa54ec4a67cd32c08fcecc6bb82d1d64a1208ea0edf62c827d4494496015c14e25703de181233c7dcf107b7f48fc30688bc0dc44afc4d6c8ff39af1efd5e948c5cd1174d4b4214886212f48b64724222c21f5203719e8541c2be29bcb030a19ba9b86ee740935fdab3d993abd18111d3ec3571e17d1b826121fa77cea97cc7845bedef2f27fbe590c0ed90254b6d87c32b8afd677e228532cb90d5f412a5716f3f70939529447e6ad52b185da0937f442ba1a1f471d234a9b5d20a3fdc3b04e29d6e58090939d3dd8efeee424e9d83205a7e0e8914e9f4ff06e8d3b8fd2a21aed9290bd1b01dc6567e37f1e543d1693c26407d591c320ac82348d4ff8540973bc8f93c70a3cfdabc00039f5201a572d5c68a5e672f3d079955722107956c2bfca51ab4731afcab688b3c853c68ef4c4d9cef9c98bc05f47e6763476f67eead537219d705aeb5dc993b61da4aa6f404625619de632a548b4b4fda7476d3e939cc1a962784fd0786fae01dbcdfc6d4e1d3bd75a05fb04fc5b65936a2651a5b7ff7e7820fa709bc2371706fb6977e94a64138facc9d4e6cb9e26191d70cb4fcdfd2393d04694e569f8dbef6f18046167e1fb9c97913b572049aeb6e55392bf81aee01c849c2b65874aa48b7f880045b7dee3d096abe4564ccb64bd2fe5deba28628331f99ba8a1a03828e63efa76ba634c64ad61a5f16eca8daace3be9e4c0bff1c10447be7f5dfe6122bd329bd10bb5df1e69a2ac0fa4ced9eb2b0a931c75b2e5da0e83176bfaa10e88b3455dc4c74931ba4aab4e51e6d2c3b8bb7db8975dd20882c1d3a962634b047b5700a41337548d244a261bc11ebf731b41878fd8855ccfe4648e53b2d907bc43b7940ea3b949bbab51d0686e0d97cf963e8d6355722bcd6aafcf167d1927567d26802cec19daab740d3ce7c74ffdf3ec03e5dfe6f6d28a19bb7e9e22dd725883c331c2977b7a34615b1a70014a2deb5c31a55e0c6592f6202c7c2b9ff17621e9bd9e93acb072b1222cce3ce54584853781eda07c0d04b3220845796cccfa8aa93ac3888dc46dda18c1de5c3fbd97acfcba89751ae016041ac0656e992a605754ce87b8602341f1b6c06533ca34ba9f9310b87b1a9a2815624954e494d5a891e5ff54bed12bd34170828be375be1a6158f78e79d31df7e62b8eaec05fad9e50437fd5d36815bcecc53c41cd3d5453e4eb6a78a173b54cf57ebb0a934d9044e72f7b7167b6a4a722512b74ae6dd138a64423f9e6f34e98a2536d4033738dd33c3fb7280fad7de6431e29a4426287429a26a58b527970286e3de6aae13c7e38f589ad05a8e84ce7352c112f31c64ea9fee283c58e2ee592be9c8998f3e447fcc289a1589284ef3cb26dc8d2f5118d8a33ef368d070013566e15bcf8529a5b205de14c1867721a0334ab3e5dc6b929512f13e08089b4bcb7ffcbc14297b59649b11c223e388cfe249a967c28734ebe75406fd3228ba2e872f5d0595bc16937fa43253dadfad3632423e58b5546e23fef1dd80fc7254d9fb0ae9e395a2001a9f1a70576715ed435afb38dbce5fc8a623393e567fc135bdae8f67d1f7b702b88b9949ea20ba043781822986af08a4651eb27c745a811cb700461f98ad5abe3d2c51cc6adf282b378b866376acd936b9f15a47d56c306df0ee832c4fc0766af13d70a616ebe733655c6d778bbccc6bc88990aaad20ec59ba0bdc3af1b7f8342fb6952ab51465977087b8dc500c728be54a27b95008adc76a1b0df97fc82c309138a5124a0aa9273008a3ddf04e327771187112daca7d4f44f2401a45a5ec2928718535fa37898528ecf74a50904072bb60c01cfcabee249086d1301bfa5db37ca6f20967f4fe5e2affcc7f9a3d1d0efa9d12da2958651d610af68d09c9acc53e2dd5706efa7f166818ac0eeae16b3c51d89f330e49d081c7984121ec7f3895033d260238150f82ff5841c52836f2beaeee7546918223925209941832604755c9ead2739632134f6f652100229f46ab5fdd6eed5085ef799f84ade006387e5959922bf30ab5d5fc9bf6905d0c72251d30fb5935750e5172234292c9a3265734b607e7b01e4b5969c5e6fcab8dc025cd609d717d2da5fe0315e8e26df99bd454e07a840a0d7f86aa489ac54d59775b477a8f4b600021f196f73232aa3d3ea788fac2e14b0b37fdf4a5719c5b2199b89e06012e298b03e3b0813f462f2f63d19da0f6ff5d52892cda9efda030ba86d7ab43ae3937a936da763baead052c8eea113357d71058968fb3dbaf4e81735b9f719feab9d6897a340c6e6bcdb3280a03a8c5e23aa8797acbddaa1e9467f0bc908ac7ba817bbdae88faffeca0a1b1b840ad85da544539d2ee1c3687e04878639fb777fd4afc54e0f18a30c54eece18469283190b0bd4674f117eec71eaba85f12a30984832e66aa9cc53af9833750410cea428a2bf41a093cd886f06e7d608b751983777ec9a719500a3bf2675dafc9ba6c926c71b47ba15d34c2656f569ff11b6d94705eadddc6ca453b12dfacbd2968514ea3131b134aec2fc40bc52220842e7ec774d5d0f58df722e672444ddd2bc81ba21545e71af7a19b17a50d1e8d0c88722596509891af8af261859fbfeb1a2063e68450d711c3e0707e966875474f2b6734acd9ee76ae22e6a4dd24a3b943bd92fdc6a61452a2735546dc47fae7fdd82f03e3b63272b44fc00b252bee5f737f116e98843737aab83a59ded639e63733168f286779f3c50dfeea5a858543f11ae72d392bc129e90589c96a1a73347181d257ccb41c1e27342988c2406b249aee61528fde420156e838a62324b5f4b64fd6b366ab259d144f5e11c66495ae3a6cd7cb407930761bfc0ae9460aa21508b584fcbfbd44233609fba473e9fe64a6f975aa4e2a23508ac1143339b4be235609b2ec92a59238723094a5a081625a39818129b6132a2833c29624757c79689934921ea66b13412ef49a4a04db8132a7a643a132f258a2396a7e282891d483edf0202a0ac3ae4f7fcd765445fd9c06cf1a231217831733cfd9701d9c015c629d2223586bb124f579e81720ff1e59ca80853d5ad9740e7dd03ca72e685cf29517aa51738f06bfd138787427c4a6d9fa6a47b36703fe87d27369a544683fb1e3f59053d4a8db97780fc63aa0956af31e94d02786b53b968f2131377843530918277758bf6f2e437f388345cf1d6c5ae39822d14284de8461b5ca86afa13d2baa613265b7ab560e0960fea21353bdeeadee646f6a6415c8a9b859cd1f0b8ff1c1790d6c4e46e4b91f94cbf0c41c476ab056d849c4a5810a7eb9af714c9c5eb02e32b62841d67a619df4d9258bdb8e25351824269a67b8ef8c65824fd5f4f4873d6c68024532bb94949a3f41c993b6010557ebc00de33b35222b4bdf35a957272319240994b48a4abb4080217c23d1d9d309198595ff0db89393f322b3e85e2dd7d8004a52287b21ebf9ebdc9a8346efbf0bc35dfea4162f92cc0d9826bae6ab1bb19aac5d88ab4f78ea7018fe17744c9159a85177f296ec689f88aff1fae193e997dd4e3a03d9ab0ec495583a3456eb522e0bf74e100cf382d527efb825542d9a3dce3d248f6475806d5ad6fab14e54ac9d8af34ff98be1aa5c043316892839d2e72c71673428af4ab76872e127a76aede7edb21bac0cdd1c3274029063062209ba6bfeb382b2b54af7013a7f9426b7a162da7d41ad2eb90b1126cb472b1b343e44b255750cdea3783ac16c52f7a1fd2a59904c8fb77f85dcf141855bd7c8fc82431eda66d636876d3b544151108e473aa07cf95c359b0d912fee56d1216e01613cff01c58508cd4a92dada75710e9c85e7c6cca6b65f38a6052a93b52a789a4ccc7fc7ba93ae999c843efef71877d836f4062917ad1add061365f49bc96ff3d8f80d49fb908e4c5339fc261d6431978403910c5654fb1f4a19a8b7642f449c8a3969df697cace9f261de46d336db241fc836a82748186962e57691069bc9a4bae0f02646d8434e99106db6c72dec4425441f83953a2dd7d4febff861beac7698179dcfebb3b323ecce782e4ec128fb0353a1b9a36a0c2bb15951704db47be4dc20a2696a515eeebe4a85493bb126baa60f9899d1751b2caa3b3e60c38b7907bf6b2e2e674364f84a4dcfee09ef56f674b6fe338ab1da97113683054cf86246f411f26d85e003da22525220b822ef5e905543c947fc6c5daaab9b13278b6b644381e1bdfacf8d161f055fc8e4be828c685b09c1e353a954b413780a7b43f813d9f5740d87e6ec6e095011ea868d256a9d7aca410e365f6ee14e0b357b21ce14189f803fd32d4f757f20bbfe40678ccc7932cc477e024bbf5a75f7c97c93ed1e6e3b56367ec205c8a31488c823da3363592f38a8809aa6520e1415d670180da5e0599536150f910850bf90066da2724f25d05fe89cf75afa6cfe1e12a2de33ccff721e20ac36acc8b5503916d5e3a0e8bb6096a56d80b051e4e2458bc7568526f0f61f69a073843b87ed65a35353d69fed26dbcea04eba0d253f529245b5857465172c1f5357e34f435c7091b8cd34548d08a2364a7ba7901b4c74f80c513f0052cadc1350923436ddb0afe4fdb40c99f81ced34cc313d60b9ebbbb4ee5781b9cc47ca9bee83ae95eec8a11194102748093ae38a4675b11a674c641bec15aa8ea86be45f4defbec50237247f73720045b85a9678ace894f79bbaa16108135afcccc9c3db60d42f23c431cb183e96fa6566516febaf32f39118e66c26cea34c40ff86e55befbdac779625b64872d7ded72206c75d928fab0908092cc6b6f7756eeab0f71af628b9879647db00ac4684c81c818e824ed90984915c121af3e05ba3d5ea8e8bc3bdedcbcc7bc333952c6341099608c90c3e5d006c96b42fd900df70db175ecf53756dc5b4588585e45dccebde8a49111c9bc50218cee12e598354f8348e45f92295fadd99cc0fa6cef24b1aeea5b48317b5f00c750791338180a11f043d58a33158cc335e6ffc8700bcf7192d24fb73ead0ede57784ed7285552fec810db929f5878f0b2809892179c261a23f33698e7047ae9806b3cfb2adee1a4e787c33bd23104cb0913e2dec6ad0b71bb3b7f414e5dc2263f41b5490ff053b697bdc9819118bdc889dc6c2934854d3a70bced4b6c6698c78782edf64fec2506ba122d339aa65e271de39f0d765a20f1911da0655ce8f20e344699bdeabd8f0f6b8fb86bd3ecdcbf2b45c90f916e3a7338fb149c1abc5d512224b526609adb3e7e8dd8f166ea6f2ef8f4f9eca926bd5a2b8e32bdaf547cb256c9c496bdab491299258f68ca4748ec6774143c0d4c80a174a8edd34d1d831127554f9eec11ea946342d645895f74211c33c37497b8b6050693028a020fb09e08d66397e84495facfb10f5260b929a3d240e6e2607eed8b6ac01c4fabb4f93c63e04869bdf48a7c82c1463761baee307f104dba87cc3301600913b89a137eb8a15bf9a5654baa4c0a6c46e8eff8ff062e4f07753c354f1a8c3fe1aed091dcd93803d6c4b2c58e2510169d9a8dc9ef7c846496dcfb1bffbc157ab555320c6f348f9537d046e1878739017aacee242090cd35e04755ead0af84b7675c00c95eedf26b8101be4a3b4e55a19307ecdeb75286a84274d879ff2123b679ddb698ebc083053a114e3f78cc901aa2b5fc3f4652cddcb788e1b0bca4ad19af7fe4311bdfd8e68954a6acf7ef78db785b4388ccd0428363bc8f56abc35cf667e9af8f8de6a7f9de9ad7068870b7effae5ca7497a850beb42fb88a47f15504691c4e293a70fc69b673997328ba3ae02a5efb51c9f201a6a9777111123b8061bc5f6da6c4a247758547efd5c85708e2ba5081e2b3e1f064687a0cc74a29c99567c1666e9108b895b5acb9f3bbedd3d89a839701ecefc8cecdf25b77a6b15e96e171dc1fa601900adddf09375d1ac282988a61723a0cdedc7c2a57d6e31b7372e55c922f4664c9c2fb4588c271e1e54bc574cf4176372c0ffb671103b4517dea375af4a97594a200517e3aabf8c996e3c4783408a722b5c1a8563c1b3356bed9d8b86af7b2cb881eaf36acb6f3b5cd6c7782668aaf82afaf9c7bc65845c9cbbb070dd48d260d5f1501bf827e6c2726250613d404941d9e26971c8c6839e4f5a92cddf0dba635772d3740a16b662749b7d24503c000eb24ee360d6381b0969a0b56767296bfbde037d53cee4b9b1b129d5f5541782825434cb7cf1e7ae0c0312e535ec52a8dc26101c19df9b1ac389428dbd316e99ca86ce99340a9db80f4fff67116d2c655aef44af33f0b6bc0544ce04b7495ce3639164e60b5dcf304ff9975cf2d82ed5f3ecbb4eb9d266d5c486950e66b7985809997163366c5d319a76ca477fb8698708512983b1026101a32790959286d1b599fe605e8db9f917564867bcdefdc82c151058033ae016506653d5ba783b09a4bd7c40b8063e96bd8534f5557737e701c3d6ec5f30b429f30763d8f107112fb2c9cba17aa73483a6bf380db25514398240daff8b1950cb191d023dc4ded08e9baebba69643e22fbd5ae9bd5a204e84041cc1148ddcdea4f8008ab493d39c27241b2a27b2f50eef910bae98c865f5fd8b22bc769d6f6685769e95ae0b9400d57f96fc216ce90fd38134b6694542ff8b6f1c5f97206c3be27f51ab2cc8654540eb59fb2f9fe284a77dfbc6c2801245f4d53d4b6248c1b917a3d6a7b4e9a3d10c3dfced8c993ab1647f3d051ea0b63213e5f253535a8dcb50b383234979127cbf044dd269be5a999f8477b8294b224b99836d411dec6cc1ccd598eae60fc4a209003d0fcc67bc309e343f172997a6ded3107f2677e645baafa508675dbe0e6e2e60979ede9253c28fbed0cf85807350dc6228cb6ae3f8cc39bf52c46db4985e3b2ebcbeebb43a854c892cf8bf1f2612a9e9da14e7eb8b40060fa79826a77704f2124508a061a71e259ffc5d1ad42cbc5c64de66a0ba5cadd432ed4a1acf85f88650d35e82af0eca8e6d40909a9a289852717fb65ea18c9e43bba830acc7ff5caab956a4145356b0587b0fb5bd6f8140a5ed702d41a8ef4804bd8bbc8f73d176f2438b67097d4348cf4d6adfce075971aa0ba77a399742c96903d691d292a5712c2b997793dee17054d465fa251c86305a60285b78c3e8b72b9eea30426edad7f123fa6aff1728165d57d9580e007b526e6cf5ada3eece23583371aa592f7a8471c510a50b0f72ad4066d3148e6e40661fe12eedad07eac21d84a78a3a9c275ae3ee05ffeb379c2ea307555ee7ce4883128e2238b83c906be906a8e347689799f516ee8428a87456e11a920cbf4f3661541684d88cd127ae60e448bd81d0a1076ac4afd15329eca59f58edf139868bb6f672d6638c34cc94d569d6331d8b9e7a7e2236f180410ebed91a7a7928b9a0576885fc1bf66f59c1ebe1062b931492b5efc7c5036cf6eec34c76416c34422e8bcfd72876c4a743b1e3c7aca06cfa8a912865ce59e67227771bc1f3d819c66b51fe6494b3ebcf24a78c1242d42f966e9bf9cef6f12aec19fae5e2b24cd79391d10781de46872dce71c4985eee67b28bb70d0afb22c3e4ebaa76c17314583bc294df44de966e5172d7f9a1e4548a7c26905b41a8a319c2b964f4723b6ee27f8a969c6b7d6d08821bef444dcc34c5780ba8d5b22abf4587d729cdfc1c438eb87f8101bc2ce72d8282c1d38caf35caab2b7ba6d6d80718e04ea777ebaa2be847dff316f718d001d6a22c091950cb59add1c25de461b7d088b95478642041d63dcbb4d768e6be36fba7ab50727335aae6c18d45bf8e1a1b6c25d437f42621669762a0c8cf8419935ef7083948c47cfba7bfd4202a63bbc90c0cbcdc4c66bfc071c12fd2c31e31c4f3cf4674e652406a9b4692cacd31118d5e6deb1e49da43461e2822c225ee53ef0b415ab67ae7b84554894c4bfac49e229ead171088cf4b06ba1161834cab8f70e48f9950ac718353c8b9847de0662729a88cc29de12838b7e5068ea05b0c543fae65aef6b815d12a94e6f2585a2fef9c567cc6115a77adc64d24e23fa09b2dc130124e594fa5c59e78d95ecb0a0e83c038de89e40c777152b6e519eb3f99fa55910bd37ba9405b3db77af502e309006d840656e6bb30362a8e0449dce7e493c9a213e9e24d7acd03f05cda24fd8b75579fd9af18fa7561ea2718096e45ff91c67401a535519a78b07692ed6be7bfc248048cbd0c05967e8f66bcc587b4cc32224288b6670c93da17a50ffa9dad27223d30e8b22f37bef9eeebaad0ac32f7745656ae63b4160da9fa8278b6c9c7619c80a5a141b9000a447f27ee9816310c2550c99d05843de069767c3cfba0d56966e6e1e04e3b07c4e653152a554619bce1466735546e8fe8370ad8f8b3c8ed30972b7233784ed4bab31871f56fe5c5a85562783a31754aefa43ccba660a53c253986a5afa943fa42e702a6d6bcb19012b0242c75afad854632b05ffc92521b86e875fe1c3bedee91ad2e95ea65eb0ba2223215cf6fd177bca45123c8223f58f7685e337ad4e086e306177be10a7ada9544688075c302b6a00f9b69eae4f44674c7a5fe9ec240f56b975b097d7e644f6de278160966405af07c38a79e776d860e1f6802217ca34958aaeb2729c2d0eccc80192e57b71d03a9b889c1a3b3d85ef4ce458b183d04e75f101fb0232dbac2218f694143f45a458fc0154554ba0a6efedb53240d3fddcf27a7de4df676ccc5a28c683b69b32725f8ade7d9204b9e2b18fce7bb7be3d0076d9913a4c9e5bff93ecea181d95c056d24e23e18786d95ecbbb8320d59dbe54cedd152f7b1591fd7184378cca02eaec58de6aeeba88e668df26a110be0980f58b705310daaa9e96a1e77ff0e94a0bab54d9dd8309f45cd79a6b19761c389fe25bb3bc3c77229de378fb07f164be71a670539bd401ae928264d82431e0d7e09d6a4bd53e60a790893f73dd08483990faf0054d6006bc41812564acb2321a97e0df1829e1ea1f2efd44bb801cf933537a76902c480b3c707589f4c76a0e79bea8a5c46608423fa90c99da7430d6f77e8e27447b8a5e7acec79096f54f0d7ccdf9e5c7b837619bb951d28561efbe893c1403ee7fd71d21b7507bf3329dd9564039c54c2cd78e19dad5e41b68828d8ca44116483e294c777ac24c63545702a056028d7b98aeadeede8660c8caa7ff91ea5123b1a6eb26268ebc088aad179ea87ed6c683e8b3c2d635e9c16e097ad89e633b459b8057c6ff881d3ba36358f6073d1d3542ac67fd2fbf18bfe38ab3c5756f6e321e954d28b6c3c17c601396ee541c7afe90237b913d3b89a720c654f01ca53455fb8cf7a43762c5933128f04045a8d886b9a9a04e9f9006b1514d65e2354305032425038b4e7e480701aa51d40e6f8959efb3a08a3adc5447900ef2ad598e063d1054c25c0ebbe9db4d87f20b622f4eb36ec55c53d53130a7780e7ae4990bc4a1ee1d2d238167776bb02342e181f9835d15ab7cf9154a1e6aba40a90b603d41c8b5ae4c7e1ae5b8d5b6d39a81798d50bd8f91956de12d8401d15c3c0e423e67399854b2aafddefb5a403fbd6a202ad5cc63be58a8094c3696455e220a548060d51d3087f7e907f84072959a8220b4bc53b5ad8aeaff8c23c9f0a64bafd9e7669c2a6be7f26044d6dad6c7c95e5b6b1810348573196426aa935e897a2bc83c9b52328b13d4f8ab37230c9588ad1fc5963a06a4b522994b5fcc3ccf4c3a925efc62945b0b9654ecaa7e739237b26f291cc582aff72835572f5dc8b86a88573558e266c52e6e1b3ceb539bd612be464e18ca57384a5054aedf90f6419530e043166f9ee7364a3c32a334bf93e633d939a21e7bffdffb5ca7241ed61a75e6cc7ccfd2035cd06de2a6483efb7cb355fe5a7396de2076daa7c3c4960f45e6704cece913e0edd7f5f62759ecad7b22fbb8e08f57bff1fd18671685ba506be4530215e1f12426b5e4eee62ae0cc02ab4fb0b62feb8858abe5390f0fedb365ebe344638ea1c48cf4d3d1a40595eeaca4474adb065e10cff133ac02ea85a9984a73ba56d1db5980d70383e52e8a123ecc96904cfcb7eb068d1700035f9013032ba5070d9d277c0d2e1d796f67da8dc81478d34e06d9c959c647f8b78119584e24f13fc05f34913b2b2829908832127175eb08c588f67486d340c4501c6a73aef2c2f548aef3cbb8dfaeb9da52cb9671c0fe1686a585b1b3cd55b5358252ad07b06bdcc6f9e1319f37996152bbd844722b4c3ad0717508faf15c8f949b25776f6c1307ac90ef5336669975ba4bff6aa3e1c3fa2c61d3e48740974963470f79e7db3ad1c31a10f0e8d89405ca72a3459e60ce8ac9a43f02467fb4ead9879d6f40d92281a2143199faa9690fb43a1e73073950fa61fbae89475d09db3e95a58350e1fdb0c630ff08f56b198b8715d637d8f9134c5d7167a77181f486d6a6beb9ba0599a23db31cc95f18828987bca629546927943dbc629bd691628488e6735a3897e285ecdaa83f6ee59c511d06ba540d4729053777b6fb8f32e1793768e8c0daab0872a9f863df5afef04c76d554c8e648248c73ae3d99c0b82ceb2512164c05a420d47fef40d0b8e542dbef9474bf36bcbf1d21c2dc82c32fa79c972523e08bd2ab7883fb7a9dbe600a7169e09294a1a4fbdd2c02077efd65e250127a7f25183e618b87f9398a35c970ca786bda220057f1b1f61a5ef2410926e35f4eb00a911eb064d59e2267d3d96c8275cab6a948a2e1e294d022af032f1a9d84d9f3bb88bd4d8fbdaa5d94546f955267c22a07b178244b93d0d37d7be44babc9777064cbafe8c90ff1145a9c64e40de7696a35c5de43fd8458ded11ac6fadbabb32808320aa7e8ce13bfabbacc2cdbd1a15fcbe2f71a32646268a74455183e41ebd699aee2670058b6100811d5230e23c56b447bccb55a5bf29288fe901889c1d695d86df1d5a35f53e533af7893c565522e1f1b857fda12aeb89c5e6f6c074ba7958ac29522ae8a46f7a71d35d56c90663c651ebb3f1b00fd4fec8be1ad69eadc1d742b049abc071c83a09f4b37fea01f16c3f02728f90e49212250c24e9e6fffee707adff607ed314d5135aefb8bd641683aaf6a3110acd65eef0a11263fa13a02c1c25610dcdbc286fb5c10cf1b5f4a00a11129001bf57f75d8180a9deecdfb7a8691d8b43eb94cf18f0133b6b5a4d71c9f96d7a21d2db5de96d9b31e462ec1a1e26fc9acf65a968204c1470421eb899d5f26058f2f949553ee7a6654930edcc521772be55ebadb8ac021ff3178b4edc480abb5b13530f4956964b9d350578ab42c5480ad38ce01376d07e5ebaed53a89f581fb1e36c2dab6e2d07266cd25bfdb33ed0e9e432a8f34a114caf0ce5e0988e9cabbbfe3dc3d82c10964c27982b5cff6c34eefeaff0b78faa1b6c1a2c556411c66f74467b458ef9b5be767650b52eefaa70766bb5c78d4549cf782498d5e9becd46ff1832c07f9f882b4c6eb43c105f35eb47201ae367f8e21e6a572c79c9108426c826e2b625a457fe75caf9b7d0b06fe6b125aa25445e55d93ad5af593d2fc9a8534157f2e7e5eb8ee27ac9b57ceeb050b66340c65fcfc8c1e396cb296b2788ffec2985064693232e117471ca19063b4d6aa0dd78897fd5d200a70f6a908c7bd1086d91284d35675f65129ce114cebd7c5ca59cc82df86f9a37ef67a9407011aed4914e470e53612a295c381b551d218508bdf8034cc85d37a28d8486a6c7905300553915153dfcd0d71973fb1b8ad07a886ced9915fbd8c136b9a2571d333b6de2102fa7299c289951329e497415e5afc86c71de92cbd327822aa878a617b5846b925395f13330454183f9cf37a444b27356198cf3db4443c948ea50da6366f28b2b53792d944e491274e45effc36ada7ede376270f353ef6c70ea996d0c73ad976cdaee8effb8d41308cc48cff9321c930487d5d5f53328d2b7edd8de3477f76cc23b28a543c1205a7bfcb7af85e39deef878e868c6aaae79aa465f39ee1cd9cacdbbc60871998841bfa2bcd942fdfe3c8bb893d603e4f9d47215e8bff8c4e493b028ae929212d06f9a7e25c86449da09fb5569351b6b77deb17587e161b633e94a9e4b5465fe7e09c2714cc16a8085b6ddfb79eca44ed1c0226d6202b21de96cfe81720a0149d448207803ee9ce7cb25f6634300be2efb20c76b93e2a176e90ea6593bd1edf0fa894d365cced23f876a90e91dd503334fb7719e338fe487971b67e6d0bf1e62ed2dbb1f2f132bf222d60c91ff6e427b10883f25fffb94b91116f06fcb45abf453b4c745a049aa0d89b114bdf8936dc43057a2f83339d6be4dc280b52b2eb280e98f98eb2e1652ed9ec3bd41737969d98c7c882783441efa6054da589943ef0ceebc90cac5f637e55e72d65277390e7f758085c2472ed4af9399c090b320965e0cba214e6258499ef1df69d7fd7420e5c03b470ade1deceb8a770afd3a43f86c4136c867af32d9ab1fe83486785461d0a7af4261701605b3d34113fa50f9a6ab77fe519bf18856be4a908c87fb67966f5d6f72f0083fd9a4edb6819fe25cb4306a8245ebb7bb383b6b83a405497c043ac154131fd5385416627aaf30c69524a063de3862cb2ad69676f61ce713826b5e5c5bf9c992c6917b05d9200d313c8a332ef768307265a48d6636c39886fa93b1a7451a83c1c6e17c0b6782e49ae2bbd1ed32c7b866b1f905f907ec2a0216743c12f16fe6e2b2cee0f1c7793a4a0a7c727b36d033c823f1c35e3d1048b5da60664dad4fb40bf4e4bd9bfe1d50a01aa4a14a5bebc81683380c8893f7a162c2bd4568f286c8d3a74e11de87015271d3de6cf8b33da8cf8fbec73b487102cd8f6b18e39cbcfd14d48da8aeffea808ac6f15f316bd3cea79c02eb4cefc11995ef912b16a27c4558663a0f7c0bf1da9b828907c8fe29135001dfdffd9a093987bbf477eaa7566abd474aeb2d23765eaf19ecae272e899118ea29bac14cab8c9c84e24bdda05963fc47b4e3e65c1144f8a252725d569f9371ccc73bc6f4122bab4dcd5180f92fcfcf2571de3745897003d4664a1f2dcd727e5b4f5de3f88e56a17bf9418ca34260d5eb10db858d1bdeef76a2e690067d9816d077d9baa901ba7fe0513e2e9253065d21cf125796a8b68ff1076ee35bb1ad5fcb850f771be6142c2e0c45f86c6cba899341ec22b9597ff5b3357d903c6a7bc2c8dcade3a3588fcca4efde18e3cc8605331d6badc3a3b2ec93243c355126320d822d1a246d7750a27a7558a0181e820c2589edadaac99142d6e255e0bb122ea573b5db56537d8013b96ca5721c3a6e1f42150a0cda8f08bae1eb0a62020592b02f596531667860246793094030afd679ddbe63568d0f40df385a65b9328ec0f814a563acffc424efe1bc567d151cc2eeb3a2177b8c75abad0d1ce8ba96c38829e4d8d610e8973bb98ae93673f60c07d4592baeca7d5ce239d19ac0ec6e5a8c519e786e205918620cc6f816b68d3e8db242d32a801e229e4a9a8880ef8b3e39a7da87c1b56173404ad3e7d8726521eb81d43a595699695adf40a44c0b5f8c41ba81fdbcc9d769539a7860914ead58eb64d4440a6fa05c7b2899634d46c31ca67fc4a37bffd15255e2ef83e439c2925ae6e6ed32a9caedbfc6ebefeedcd10e7be6394d13d210c04b05231dd7ece40ac77f8428e2eb8ad586061f53c877c6752e6ffc47014131c9ac9247f8c77d01ec2b2f1e3568f9f354e98f40fb3383bd7790a46e839f4fb5951545948468b28af763dbc4e9f22961b3287a49dec3c379cf9c0e3d9369ad8e6ac1179dbccf60c014b43b2ec40ab6db0fe576d2c5b2e5765add2da595477f4177140eaf4e6a7c1b70014479c693d54cb460b2303f70aadca6abac4ad79667d9a016b65e44ac04eb59165678cf0880b91fb97d9427c741eaa2ee9c12c627297c161693cdf7abe2eb0c4b6d8082a8f9abfad456d016a72fd038c95c34b2f9476e93d935076cc2cbca7d544a0a30f4f2ae476eb68790480a73a47207b48c07e1c34282e9a37759bc5adeb4022198ac0b0f96d48bbbd805ae9c6889658866629a80b654f115ab1efde80399117951a98f706089fe0095dc097a7464d812c41b0acc2d7607eeeee95aaf468cfecb857682991a89de682a7c06f11938228fd82555cfa325cf07fd379a35ffca8266ea4af3823e0b82f58d8bd5ce2ee22c7518219c78917d1b0c94d8caee606be1a3564df9148e446de286113f7c6c4acaf383a5f412ce03d13bc7419c2921dba655226bcc3d519c9a6a18c10d32cc43b766eaa4abcf3d9921f414d437018a1544b226c1e177a2c80c75fbb5893c32347647b0e23832a94a65ffe35cd0cdfb7df48f7a1ccb89d25fc27fa557ce77f7142799e900e238fc65b61bf7e75704ae720d8fa57f96efeb6fe017b482af2629a402cf136ce5787eba408d47a6c304695c4b31b11f0a05efe2f143f427ee3be268525cd014735af6f92c1425da5a04b2af83777e5ba4b8754a6c55f1126c2f4c1e227b38141e7826e22450de42acbfc36ec67b1c7230a74b5a0e416f2541c3a937bf19e36318d67e7e33c21fbc2791d14a0955f25a5cd9872c487187e4bc231a9ff5ee9d40287704859b12aaff114cb91e4a744cdd77ae5b8ab264aaeaf80510d34b4e94197f8b4522a1f83a532643b98f5a9da6b5427a590f3a311b8d3d39de7914ef797f408a6aaee76ecefd739adfc9ecdb6a9fa17910feefbde1d41788a9c1d39b1548ba5ce830d1757669c20baefcbcca51c8c5833e437ce126b47a813bd3dc2b3e638c631d05c1ebd6b2b9a7d0b0af41f9cff84b5fb0711fb9c64cefe3efaf39c3083e29e01845def5a317c893fb39759727764c5eb2b5d97b815bd47fd49ed4fcf90fe4ea6a1e49938fdf83a11603f3d5b2616e736b4ef33a5af35f025807eaae44b4d843df4930d5ea9ec58146b205e81b831fd8e7cb615ff139949d8e68be5c2b2b7b48fb86b731815ec1940611661c04cbf6cc5a41f517b2d0e4b599a3938c03575faafd7a00658bd34d10bd065328a5c4d7db1be0d10a2b2e39118f57b208e97c7d4ec4c0e2ac3b53a625ccbde490770eb2715cf3614975419a006a55f076fb23aafc6084199de7c3e9e981104486879c962c43adc8a2c73f50921e2efcd55c21f2a1e56d656d2fef8c84de897cb5f72bdfee9a859d240bce5e186ce655c19603044a39ea327f349309a6093e1074b4ff1a553b1664fe0e92780a6ad734f2f0dd7643c867887d008f9ce558d40017dcfd6e0e71d90f883d88322440f1f1c4b24f61dfb75b86d3dc4ae1411a8a2bfb231d5fff69fc94f94aada9a7607f4302b13d77c7fbdf95db3d1d34793c84b7b92a27d8c4f52c112323ca64baf8210b96d8a7adcc3554681ef9d8e19853418bae54a57e12bb4880a1b43ff9bff80df3517ea27dea82db236589b246e47ca69fbb28795aaa5b1df777f77938368d5746c02983e878c6e357fc01d157625f225de4b9710d557b612950cf4ad1ac44c14b7f02bb61b9bd9b298b301727960a6a280574416fe43e1fad966e31e061b2116c094c7f84a9bff36f32a674d28a68b646bbdc50b027f2d8872a78e28881ac29ae2e029e7a7fc585fdc6d0f685ff189209634d748e73227a313dc741aa1492f2521a6ce5034a0ed71dbc04feb6897e1f62eff43bd397566f1ea33b8af3b8075ee913229f08bdb6e608f70357f187d089e8189ff5eb0a5fd073f98ff9269006bc842758aa3416298c98a340f39d006af0ce0317f7340990645519fc4ebfead8acca90a000a0fc91d4898164713d67309fca3c39a1c8c2ebfa69bc06efd3c581cf92ded6cea90b48b2818e6b67f7770c723269bee6fafc9b370c2d0c63722d7f837e57a4d4cc7bdd17864e40d7070079a0f76d65d0d201241ede481b6832d14ffaedf8740301c6e430ab4ee00a3e1bc741dab29b253d3e25e1063f5dfaf770d62f61c3a8304213f512eccd46fbb4bd8034f23f599309d9f4a10dda0e75e8fa056f59a1506f2666aaa540b955d59b381daafaa46028663bc1be360707c6f3faa20b4baa3ffbfee84537208b371dba0e7263c04e5508063595009deee300747ef52d60e0da437acd546eece0afac17ae13f8542b779230cd98b853db5445c140c626dde2e689103fd2b25667f965bd4771044f9058afa6ee38bff411db2350a89091271580f3e9840a09cc40c4b07dca49afa4624e37d5422a04535bdd971f76b2d4ff7541ab4e31b90ad95adc94b18cb37b098349f815a53e1376b715a5481321c86667755479a07b6a53507d13640f2286dd14828312b7842564f49c1b7327d12fbe3598f0f440d4589d1927bd17f5903bd2162fc8376c50282a10497d98edf50b91c55bd61596bc133afdefd1da2c8795f7dc4440a5b0d83b54ec1b387237e5b2ac0117038c2eb49017b7bc6178c7045dd1822f20e0417fef447229e905816cc50c112d1b8f3bf50abd814cdeec7f06741d76ee444f453bdbc947514227ab2ee45b121d41c92a7a39a21a8fabc1b2850e05dfc803a677afeceeb41aa1285bb78255c86c522cc15c80ff3f3982d29e97b9867d3d8dffe865dfc01e321cd985e9821871750387668caf3b327597c380ae1a00a9e85c8fea33b7d26f675f3f93a1070415bdded3abf7d225cb4431c37a64b5992d22288334a341581912b9330b01fc223e6dcb1295950949c64d26e9b3d824b960309ea2802cb77bd67c6a4281dca794bf185a40a567775025964ab74fc594137ff20ed93ad3f3f32b8b079ed4a9d0651879c9be0171198ccf5d6e56f39f5d460970bd025878ddd66b9d003ac44f83c4f38b0cdda85f6b58074f03ccc586f0326f441851ddd9f2d705e7f2d5e4a62668b17d4bc494b5b36246dba06169f9b5b1c6eeb34337c2dd4dd1577b3f6443de26e7c1eec0dfe7d2dd8622b07286df694e2cce2a76bc1f7653b2828ff438bb8ce9168553f09652868d9e229d206e9dcb26f1c2c1aaf4f37dbdc99f4557d6c86e80051f2ad829118644b9247b4e86da4e440aae0723c548b4657795b211c6cc8e5510016ac0df2c700ea84bca5fde8b296d80df0b7150fd1ba2b1d7a19e4ba02148c2fdcf6a653e18d0518f800547863c44a9f6dc058e1348e43d370f9b703c5c4fece1285e340b30e854a66c8b05c276325e8bbaeb45c3939c2b90e2b15a417908ba930d0b03c1a517991144347ece830fd422b99b3fa743e70179ba484d1bc9552db64256cd38a79b17bbc81aea9c1ad0b189dc965e61d0591e4d22a787c29d646fcb6c3e98cb9ffdb44bf765193ffce6cd1f0de9bebdc68f81573b7ae4f52708cfd0d034a5299863985955c71b2125568aa0c49f464dd8c5bb2856890e84dfb64d1bbca1c585e9acea53d4588fe08565eeb10b01dcc978d6852c0a9fe92263aafe7926e320b79a9ff1d4c82573c20a3cf3acfcdd54d3b44cd86b79a3f708e36cda57471e800bf8ddd80ebf0a6ff21f7a80d639688748ad57016008a3a2ddfc6580079d06510dd40e62e9e1342bcf1117b125d36a0d13cc4533620c28f5c9566daa0e83915672a494177fcced046fcfef347b7d940063c6ccec46d3a624714e6b982a5fa1ffd65364ec618a090a934c20c97b2ba3754f4be080cb38a374eeac60c720aebcfe79e6062956054d6fea5cf03169c5ca06a59c2d0b078019a5aa81a44c51562509a8b29f491dae14fa690a799a00da3f201c3e9919afc24145d8fd131a0ae448708e6d81a785d25668b4b712fb970b6c28e629e8639e2db99974297f48b5aedcf36d693a443c99e12b393ac645aaab5601ca71f236a1c2f327be81efc6e1a0b561d4a1357314d15e245bf969b6e9544e2b9ee97a7c46ce79286627becb0e15a89447b967ee25e0052460a0519dbe787d89cff3ecbceb663079a0643db6efac07f5667431521af3d62a8a59e98b849cd7d218701065e272a8b9ee3172cf6bde60ae43522ce83e5c6d3da7cf2d828acf0a38794334a64f5f3f7721223fa5c202c2401232aad45cc1e96aaf91e1fda1df516a6fd1ae88b35a6e987d577de5e5d813179c38a45ac590a4b24da45dacc29dbad6d8c5bc9147b53dcfaa490c39f7c1b5559318561e136ede8812a7ed18412c5c52f02862e8746a96d74d0f023e7d5c4907329993111c0257db8a5bf94373c3654f9e4564b22034332994d2168be74d195ea177c01ee661306fdfe9db198d74fe39606cda9c126b9efdef4346a7bd14a7a17032f21abf49a2267f67f777f91e684451c385a4ffa496a2333d9ece1e2d967088a0a80ca311d4485e531a9ab5f023684fe0baf1bec9b483d1566310eeab2b59b85d05a9c92dd048739e9cd306c5c75121b72e6ecfc42f9ce151177d4b0d3bb45c69124725b84ce22bba0a48f736b8ba17e53f97e48944b394d319e281871eb9eb770b91051da0993cd143880bad3d067bb0a982028ad9d2c661ed9c5ddaab57988a8ae0bceef1174bbfd304c884175b2e8a6a5f758852de419640d377ae1afe99b6b49487ea0266f6fec83730455efdfafd8d1324ba303f893928dc0e306035d62a168ed0f32bd669ca80a469748ec3a70ebc15ee1ad8d543015af4a39d7457972c8ecf1221b06274d14707c1420722969c88833afc9b068d2c5b5a4171fe7001d559c7dc4c6c36db1d2783129cbcba79effa579fd28144447c35ab50f34523e4db6c36a265bdb3200305adf4960d1c05561f86230dbd6602900b35ee3830ae901422e6f6e60311c5ca699b82a9775f5eac5bfba3d4bae915b688362a67e469ef47071619e80cf7defca218639fcf563af5ff6a4f8098eeb883c2cccfd512a7ead19dffa302702f5e0f577834ae7ab082d21d4b8470bbdcd5603d15f2ba95abbc7b229c43b0a323bb948c08207849793c7b2838fba820039d4d84c9bcae330207c56235c46a6fba4efae4e1260be40499554f2bf1810c9b1e9710529e8601b543b399d40b028775e8c9ea93c7797b982973b69417790508d6cb88414a0fb1f417e562e7ab15917617222bf1afc2a903b84ef4f640320ed252188e01ce1fc906ff24cead68412c9754eb1e068389449d2d51173f72402a383b66480eaebcb378a2c8834e227f083f713af4caf240240e92b3cb929bf91a277ba0f7d58923148f6a9eb25828ac2fe7d7c4421cb14fc91d1e286356eaad4bb553723613478f51ae46b0b5f16c08399ef82aa8380c45e2e8a08f64de2ae992262e58481e3ce46bc8a738d30991128bdf727c8080baf5adda271de61994fa4ef483df15a71c72d2018c45c026666d9cc1466aab1baf613cd7cc11f03696b44652bfa656628073d741df9c1546f8da6aaa61efebd572165ba6029dea4230c31229b4ca39a962c6eacff2ad162109430440a45065a39429fcdf7cd402f82f2cdd2224feea3e96b0dec5f118ef3c9db214973f594933f28bb90d703fb957b209aea140e3185974502377a8525b7934c240d00a71fc8d090f547a3873f90091af9c68af885ff0757b922f82f2a727fca57bdf015409856ce6eee36c3170e1b51412aeff78b684c8efb554e36afc728d9a99f71b11c67b07343602b202e9112d6e39573a5f0c0ebbe49828f0c3613678fa486ed0214081f845365edfb92e6bb179b71896a6fa3a6f950c7df11dd51e4ec7d788cbf808e6969bd47e7845c29710c9a1e0278b68c908f4787562a151d132d731f9b974c4b69a8a940f3cb55af686b5e3b408ad5d978178de818942d3369852d426495c4583147c1caa87b065d1eac3290fc354ed003d24761a0e4227160706bc0c4aeffe4945d1239deb41a8d6186714164812468fecdaf8394d64ade0818977a6eaad88b575da5762014fb20c3625059058c6c519cea436bd8fe357e27de766663c7b32b47b3e8067ea35a743d7b300f01d2965d4036cb380ae842a312a1b99fc3e7c77a7e4244e533db22d65db2543a473a8a13b3e47ee2fb2f4f19f39ebdf806e1a9a8218b17efaa6432bce8f0689bb26c91eea089fa3a4f30842412a3489144d629ffb613a80bc55f2218f186d5e8ead905f9019d40f9089226da3d2fe145327e541e9061c25bc89eccad1b4d4079ca79433f4bac072621c6708c75bafc20186a32b7322494da1bc27ed8f64f68d674eda2a2da53263be295056492cfd26ca3fba4f622c63bd563a90e6194fe815854b92fc53c311e226e2da5f3dcb7a784961421a242d0a2caa8a4f4e7fd4cd829694f053c7f1e0437660c5c06822b562506e6f80292a1a02505fd77568e9ccff496d6f228f3ac564467e76dc6e05783565712f7a85d6b0765802c25b296675c81b9814ef621e1f1716629ceec5c8a17bf65c030d3f4e5ec7ae932dc3d7612598c2f0b5f88d06c43d2b789e94e5eb4ebc235935fd18f705b1e9cc69cc2d8318b265fcc9127adbbb6cdec8e9b542943ace6c0bdd69aa87309881fcc192390fc2260602565428bde4d3e1e9f6eee110dff83820201bc7761e69768bd01f00da450faf2d9a0eb8d4f331a359f34a4c6fdbb636b643459788caabede678886efd90d3a5d45f22c8cc0f3f5f461220d4c32d04866e10d8cd74649520948d171f7a5746ac8edf1c9c58422647fc7969903910e32948d613185390d40d95d50614e1e19b5c4a03ff8c38b582edb9d35cea7a44eabd9a6dc2d094c5d6539a0060fc634fdcfaeb161176336fdc0c9d7af59d229d5abb79ec44e928a5900b3abd78eebf01dde47e5b3d8bf491a17d91a95ee5a194a2f1739e268a70f7244f168b53bfa88258705d3cdf87021876843e1182bbd31e318e43b7deedcda650f641dd71770be7727ece0c97c3b67d884b14ffd230af95280ec54ac7550495d5f95cf7f8b4e9495e181eafc4b980a2bb3f4dc5649d011ec399750cf722edf03dc11d34fd70c2c6bb15de9d720a2beea3fc551f4f26351e089ea2b5d6f2eda1129a7ee087573a1e285a104743dfa87c0270140ca0a16f96ac9f285b1202199842dcaca2c59c769209a71bb919301041184eaca2a7341527bc17570c836642ad361faf786cfce361558beee5e3298c3771acc0099d84bed18807a9a188cbd6b3b332327c42bce0dc33b9b56b38c466e034a03e6df19ac82b81a60473b6a2bcca7be12c133025627a689893bdcfa0796449f022d4d5f0cae26e82eb9c523a4b6eae7740010f3892ad84f278c557e5e47411e1635d4a708df7569190442952f0081b5a0a740361bac7bdfea52139b341e309e49d3e61a525272fb4f78f3c75be386b582b04fd38c1a6fb02fc80ba67fc28b77dc00ff6ac353ca06b23a1d7733838d9ba40042c4cae7b7ba5958ac8922f4981f36fb2c44a9d99673aabbadcc72b7659b424944a933b9e68af1b30dc0d378f1e72dbc71fd0cf31327f803c26a41c00018db0f163d758ea7ffa6eb8be1a50cded09e34de74924a3a796de06917d4c26706c02fec7deace325263954df920e7ad327fc7d4cb457371e35c803d100eca93fcae47531b0a28deaef089503712ebb60396ed71d7cbb4245523102058393e1fd0e1ec1a4cf451ac2454c38f84402472423e8968fe371d44dddfec06f9f1daf25086b31f580c56bc0a3d7c9a0daa086ee75318e2569dd08dfce2fc892710acb081d0e93e112e8449bf10e669b6f33a5e916371855fc414282bc837ab78dbc9bb55bbca9ee57018f4b348f53f5e3ef302fc5026ee594f390372d6b82c63bed8c215839719c86f2beda62d2087c50bce993a07ad1656af91ff65d91327f827bc1633e8915350bf29639f9774aa22e644330ea9e5ae853cf411384b583dd6039a9206062114647b78e99ff012abc3f59381f4ac33b32e6fe53ad8e9ccb2bce9a696e493c5e0560cbea8f9e395f40523b4dd8d673c84dacf7926ad64e7c3245bb211cbf66bdbaa0628a4596579c5d5b4dd031f1e12fc437601e4a6e25dd248f03effa064d67a0ef023e0b9ce7056295b1b1acdae03db83a02168095ddb136f066a9d0537509a6ea71297e1b6161593c98580ef80baff42dbd46655922a0e0963733adbd1bc43dd8ec08b864b7c846a22fdd281663306925acc8aeaaaff76f1438617552fdbdbca87535da7bfb647ad0e857444bf06c218d4d8fff1c70524a1708678c22c21002331809c68b5a358a7a0ad49f7e08f07760c713638ff3013c32a9d0d680da0222d19630667cdfbe08ef330ebc62289ac11aee5b9799a08f58ac4b8c0eefc47c513695cd9ad1fa7414e99ba7f5afdafae19ef771155fb7294ff586d0caa4f85e0c39394b301e13811514f0dc36c72b00e559f55bb70e58f332f7a18f4bc70b04955f05661d84596604244c83ad1e91d838bd479a818dd25efcd7f48120b0f8b0b4036e9caa3db4487bb46366c4978545e5e36ad5adc5e92b90baa7b01362d76960d8529e01473cf6a979164c262eec8b313a6a2eff3e55574623c8980de404a8baa7b7cc8ec12ae41fcacf49fb1e0eceb9d72ad15bb5844aabc891d249d9804da29977ee4730adeeebd35d489fd330b426b1d41d40139f24e541c72bf84fdc15b621e434f324a40d2158952bbffe01013abfbbcefb8d06352afb90e7e5a6873797d1f7f15522f74149f00cb2ee013337af04743a539a4592e687ae72181ce80a162ac000f368257e5156d4f5374b962ca4cfff216038abf817e853dc86bb7206e954e2436bd88a3448587bdd9a2986ac3c18f00241a49fab639d1e30edc1c86f18a9ad08070e38d5d64dbb174581c63e90e7814a8467a7fe601e3c03a9d2a70b9859706a26c55b2002eb5051b8c2001ac46f70cd480bd290d8e8800909cfb50a36fbe6fd974edbb2c768dcf4ee24893ccaeb513929ca9fab6da6cd11e51dbe76641f3a408fd6bf5f05af2f76a9eed4fd96abe86e5afebcf1350ce5a2f592558f37868dc5ad84f705e54689ff6f334803d57c445b32317cd0c6dc94c841a3cb4e33280b07d3f8f2085d0a55379208ced891f99ae51787575d78e2a86c0f69b2a10075ad733442e8f24c099e9d3ae724882a11fdd26f39bd7fe4b90d6bd4d1c5441e2189a458bb6a12117e09ebaaa08de145556b646be5c41649e518d659a4354ef39d32e07218f5836660150b3fff6a7d7e38b266a8f230b222ecf7f1aed310ad1b258b372c0d39a08e1d2b8eda9193db9d8378b99c6cbda5938f38ae5f0778ddc21debfde07bb595b85210b04ba50dbd0f52ac15feb4449b6f12b64ee839db4059832d5aa7df2e426e1dcc9dd4279ba8aa082acd4b51e1122bc4aaf74ba5b7b7c5fc70ee3312ae78b6dd90962c9e54b64d9e27d505a18d0314e466adde5bfcc477e2e5e38a1602257c839fd34387ec72f3307f8c16070023c9471f585a226cf5075e35bbea6ab088b884770912e28742b587f118f1297f49a48aa5f82b48f0bdb37d216c68cb92d1bfd60114dacde52ac70e500e6e83dc9c829ecbb308f6889b2b44cd23c66b50cfe3884d466f0db27900dfcd168a8da0da365f5eeac4c95865cc6f02d9a221d72ac5f3f3a31a9238fe7f273169d73b7f104ff39570f36dbda59f5b0aec4885e4800206669e7b141188b6c05893119f0eef841fffb536d1ad4be863f3bf881adefd3e2ae0a3554fe701e990f14b141a49b0ec275f9370712697a22d6355a8b65a9df135c7c44b26a618e6924e7ddc0ad87a90f503ed7a64425542f0d281cca8a782f6488ad04b6b93fc0fa0ea0811d0ed82a216afa0c09fc302d64c137247d76083c0e2c17c608c5ffb6e002292b75825ed4f4bde5f62f172e56c302e0b058a7e22da522dac49dd53aac275e3492248e84479c8f001ecb623633adce6cef0f954b2cd0dda3dce4f0e28bac423cb2ecf2da2d776c93bf4e2837963ced1cc7117475ba75192dc61e4ceb809ad4f13bb566a341f8b6eccaf345c6cf6589ef9b62c3f7d2d5e45226851c41a0989fac3a3c42b70eb668173b90986596650972d9d67b793e593c19a1bb3276f0b95e0d9bf6e55391bf7963ebac4ee62dffee9204a8d0717d9b41412a7a32166c81a8d2231baaddc4a6eb1c7512596a7fd413f933466ddf7769bbf6d095274c4533cb963106107331f33dfe883c2fd835f47126d0fe2e9175a6fcae5158e8a5e47d3d085ace758dae10753b4ad88dde25d46b349e32d248ee539737d3870a7ee5953fbe4384d1e531a48bd551d2ccdab5d6076d1a722854bdff11366fe593fb21a8ef3fc99ebffbeea89f0c3a18cdab9650df4ad3d37dcc4c1e8869438daf02796e96613aa29efa1825819f6ccc58c09dcc5fd753c20e04a9e7a5959526afc8bcb6c717c34cc6969088d9e5ef1480867bd685cdb0b2986bb21a2231be9125a0a871db55c6b026c84a3330262c63aa71d04faddb0d7bc33f3e3e3c97e60a85842c1ba0929665ec206a31c01578129b0eff24c87854c01df2f480f50aad1dabc086a8822f6833bc82d7fb7fa8039f287929f3ce465316b956d6cde4ba66e8c3b7f7653f36c19f4d1528f74e22c583abefc54cc4643474bec79fb57f7c7af3c0b72aa16fe50cc25f658358a7625b516f067664056729d60886458672449d5dcb65b5b8f05440067de41382dbab0b219c3308dacd4d0a6845fc82e1dea1fa01051a25e96c750fa0c5235a9162344997ec5538109756c14f70f99b085d3c7d01b57321dc21b53f978f57de579783dc91cf591722c1a37ed2eb48d5ff1cec7a70534c27e828cbaaccab5671e0e0e0ab4f0fdcd30f09f68705f6c3a99b4fd6001e9a092f0c4e63532bc0293851a0fd41c7a59ba913b6562bb05fcfc8e07a1d62c564b5b82f5eff1e565a551d41faa96350581fb5f5fdf5bc252ce3b50584229197545d975fb7cf3e91107759cd0e95d2f9a1c1ba8408cd230cd086a5dbbe531251883bb87416d526c74bce208c4c0dae6d3353238aa4f465279cd570e856970ad146ba9d66486ad69a661fbeab89b35d6987bc87909e8cdcf0b5ed38fde1d1f9355096d374bb8437a207b0ab4d088862f1754b9db8d566b6089b227cf967ecb49fc6fe1964a240fe9541b72c3aa72424a060932fb5994a6f51bade2113a50db754ca23abe42f51f731d1d2a6ee9b272ee02a7a8caf317a2872b8ae131c0ea32bf99c8963e38051cabb1b47e4d06da5414c5a28e74916d92a277a0f18280e0b66df3e98d92ae1e651bbb087248ec9a02783212061d8cb4efa226210e155d6fff1d8ada9e938e7e03ec904c1791f71f73905175fcf99a53c27c7a1c99f416e5f3d3f273a7500ff399b36bcd90cc05a3d08987b9c08f94191fd5caf96b2c70162295c45905b4bdfaa0f280d4e2f59d07b2e3c9b56941451ed5931dac06d11e0f8d6d4e5348c1ae995b9b50ed46b7ff2f5b27034bd698435847bd561f67f5a48c3acf9a8b991ad5ea764931a12dc987a631ec007b21924d7dbcb1c09acfd92d86dc48358c0f4cb2f7ea9a8cce7d52d4640d205847130ed69a13cdd511533107723a65c259ca87a1bf759819e77004ba479cc88a8edd502430e02d871110d9dd68dad6e838c99ef0cd799ad31f7e6e74bc6705667dddfbd9ea72233067831097ec228392471e64ab2ad1ec3caedb2018d255742645866a16a932b745f610d83bb167d8981a1d6b723e6529f87e80851a4497906e4410d0daab8773c79de3cc47378b4f93377b81c50fbd5185bf1559e04dfe39d5f9b42732b58bc62ffa0ceafd04aa036ffa352937a568c042ca088aa03117cfe2d57954f265b3e0538f45be56b78ed4c89594825ce0cf9f92f38177bddf2b3dc11ab3a5148e5322093aff212c9473d849c1c8bbab0ad609789cf61757d816d5da5c444b09110ad5ea035bd8475af0affaede0cb1deb1c41d3842d4729894a73fa3c105f121bc3f1754f6586eacb50b7280e9b1bf9f7f3204bfcabde3c8db2d639fa53a3176e9a104bff2bdc75048b4c7d41cde6f5b94a1edc32b715843b605876641e55de4f92db24733e57c71639f520bd040b17cc528eb45c8a79e53ef089c3cb7d685ef09671b8c29694b6e137a1ddb2fd1e6d24f346db2c00c17453dc1b58277c0ae3fe3dd546d6815ff3864dc5220fe09a9eee1c4f06d1fe950a281133cafddbdb2df0e51027e38c2d94c11f87ed169876c554ba204dffb4391eb5a2e635927a0cdd1ccfea57d69398f7df0a895a9a86f9bcabf4ad6064dd50d1607cda1dce67194a51e171ea680f385d560f7ebe48203786341ffc8b6052b545f942f0ad8d9f01657f217612d75a5c3b1e328fa584ac21f5427ddab47ffb48b135a4d6353cc94c3cc3656d4996edb746523ccd4cc900d7dffd544d96b9f82b2ab7279162dc85de8eb0e9c9a3414f58e130666fdad82a046078462ae870536cfc7dc46ac56364167448880e10b9cdeb5362fac940208b7e1abbcf88342a840dfe83585440723d282599434b461ce60ea0018d8bd8bce37ebcf545ef64a5b3c4ae6333ed0e40c1a5c2dfdc263810368f4c62a966ea81ece269002be3b61eb790646c65f27ad35afb1d4c57a29d8a3585b91e193f6ea098dc177fa4a9c282668cc88209defbffdb3bba7003388eb19ca901229cb25ea7878bd391c1f1a297c6c96cc109552d7b79888770def975a0cc46169213a12ac6431c432623ea479e5ee7ca7a15e1b2b5ce11ac10007647b6e94aa8f119ec6adec462d3ae4fd69f050a5947f5c002ea92e0ad8b7985498a5c383677e4f3c61c271b73170891f7c0362471bb6c25bcc0a89bd94defb523712754f679244358edba63d3fcd34925ec155a650bc93941ddf2db814e86223b9ae42e1fb7234267b532d49c34bed7178ba73517d88061d44eb9c62e8cedbb2bcc34a753eac3be397603dcc37b6474366a7be20339b4702d943b7993879666ffdcd7047367ced6c0c6eccbf30c59e12979517dc48d1068680b23e7cfb2558478d65780a0f58639d4f0d8e8ab7dfb2aec714fa0eaa809a10e2640d83b78f2ae12efbb55ca96ee2c6b30e1f0f23eaa688ae1acd1314aa50f9e6d765f144fda0e75bd38fd789dc0a900b752a014698dcc8262ef03ded7084e1f0af0b2d33eea818cd55006d603ed89d9721f326e04721f4f284d8063a5a7a41d3ae0004f779e5ab1018a0da75fcfc22e45ce941c9d58cda41b39b4d4d6cd9bada4d90d6c77e38e55b61a0215ec1775587ee688af2773e91a0837df232cefd180f682c0164e61313293a981b0f19f79dc1de29a50386be9e94ad0fb385caa50d686da7ae56b59fe5cd1bb16b33a6875dbd7e4c7458a835046491c93fcd4ac2b53a15103e13b1f8e07f3087f44d79927ee52ee83e7b745ef24ef2d900f66ff3b7d146d3251021f19e14b5bb9fac01613c94e7c5c95736e335f116ce886c7f6a62f63e93ececb6732b60b8d48d696826758517ccc313a3f0e31012bc620c908c727ac78ac9bad60835dbc65172bb2ea91af04ec4cfbfa4b73ee61eb2d870d9b6dfcb008ccb9c519f276c1942f148001150e4a95a37d447cf3385dfc735ef515238e072f5c9d80f0b5d762405414f5e44dd007506de1f7ee98d27c034394d551e9c86cec61ab7834733086fa1dbb82d27a4839d952a8539e31a28a7a6ced5fb2e518985f25f102881e3da5922f0b27c1aa02e9526b6ed4552b33412ffbdeccf15ac6ae0dd9d2f9d35dd26629e25dedffef1c4fc10d905894800b6c2fd2ea0d18560aeedee33425632fefce123288d21faba2de27f4a7443efd2fad93ff967501efd2b48f5c706c533ee01f73ee90240bb0fec3ae2906a090b1e1d1b98ef1e8361e1bdd8a9594f1274ee91c7805183ab4dd271117a1fda88c9476d7310020f9e226685ce6955e413eab61ded896c20f6a9fccb9a8ec85099f983e6372d2fbf1360f089df5c434e36168764d6fc19e4fa3e7f975b636eb71f41180c538c2baf9f56b4d0265bd124a935e6c9d4324fb15c050b0f004d21b767a39d3db02c16fadbd512ffdbbb5c25108de816402fed432c7a9638978e526792483c5dbd5e2b6d0b872a2dc40146254b6d2e4561ed3c36ac63a3ed2be2958caa06fc4414e2ed0bb66115a08f581c46cadb2e086fb0e7fd76ee408e471a1d835a3bf29492b1ed1fc769b6725a43a4648e60ca5c394c8e438dd8648ba0e3b920944613b781de0be88d21d93b5081fdd282f5109c6b6e601793d535da968e93eacfcded069a7a80671a84aa9c1a750a759795e24d612ed40de89404e0467ea21aeb036b1ed31f59f9feca8091337b0c0a9ea259f185d9d23c206956b3fc4836f0d94d38f136956785ebb291e1355873b6a14c42ffb7d11a2fb7e2c0effc05a4f49499cd4d183ba01c1f2ca114af33f6e11aead68cd753184146deab3d0c9f22ac6ce9dae9a7dea4a7265b19240ef078f05c2d86c9184a6d3eedcb8d86525a934094d2408ed9404354eb8ca7ec2d02215a725c8b9395ac2ea77fe6c394f93c5db7a1df29e0b78a259cda855ec124e1eee567d195cce65c48649879161b14d06fb1e91bfcb8e6ac02b936aa5a65d35fb83f1a14d7ce2d973ecdaab94acd46b5f61a9447cb19b1d733b22d964c0645844465a2a155b0ff1bc820affca200bddeea47d6c75eae9a5bf048a0257141ea34bd737537b1a1ab0e62d1ee738331ef3e5df59b15b9e67f4c42a8ebd4b0b606143fe2ff5e00ace4505921d75b9fb72fc5905dc65f9dcae12cfb88492b135590c8aba4e66af5e5d258cd01df4e86b6b5c0f7c944a01facca58ee2db4a6f2f0a7bcb878736f8af169e354e5c9c964f9d66f9af7838abe93f34f5b02cb41b796c06f0159ab2ecd365470058f7a2728f60d66c9c8423c569ca4e9f26de6d9283f0d9f5ad4e08ed74ac27975c9b294fa8a36f203dc1f585d2caa3ef3ca72f3c3855ed7118aaf976a53fce46efdc2222c5d55efd471fccb3663b33a52ad9220d18ffcadec7cf2c22c563abf48affa3af6a37382b798b6966bdc94cec8502e431e5e1a4f69bbb57b226b3caa0b5faf87899f60b9d7a9fa0b814a7e765f55616c5f065737b33a781032634fdfd962791f6368003bbd5e5786bff3ed50fd6baf4c02ede46b0790e326f806778fca8bb0842c3cc8bbf040ed9aebea8190ba448dcf60de904308d7365e891e0a4ec92516846eb72e87a5be466abe99953d320df539a26b711b46079d21b1e929d7702428d0811e92ef091614279f91fe5544a8ac321c791db801f83ce1c61ec1f8dd5dce3b8dd53dc191201330a3b9f88ad6dd7728280f6fd787cc9bde323cdc99604e7c1febc64b270b10a19bcba71ae7ef0e44c047abbb5fabf517bdcc38e5abe7162c131032dd088191665ec4b511fc34efd14ceb49d929ea515ed46d242a8f1c5e546be571cc8da8846cbb0137014c914d97447a54932ccd7105a6759848d5f8599183f6d57e3b7b2cc8195870ac159f8326971a568fc6da13f3838ebaa3d1bab4d46bdf6131345b1b74a61ca99f3293c124f602f8104d0eed84296dfdb35bcbf423917dfb62ffef0fe30522ca0c38f460b46b771366523f6c5ecdca4ae2ae53e33f644d98e0f4d84ac16126961537653313e6881d624c6546e4c734e802d1558bb62fdbeb81a9da2a18a58df3363821151d000177c46427480a55022fd12616f627ded7b443164f81edea92b492e6e77d765954dab286489de5f0c1b649099dd113b1bb7e18a57d03d48c7a6e6f34cede53c68e39f04eeb3c0e9cbcf82b2a0e8ce07f7520b426874b4556813bebd67c3f002ed51fbde4b413e4042bbe597e6ae9c874cb07cd0ecf18ef61946531aff5bd20f314f755f624fa5ff166231b0b9e659499f180082f33e80697e5293098385219222ef8916292784265b80a63a7b6b236e7b7031f6471faa6c0314cc4d2bfce9cfa9a73ccfbb7a8b634946c90d0cfac83e91ede3a6be9aec13ca4cbb11a53372329fe6f4bd45c26188f64c684b368bff4f845407dbb472c8056104c9e78cc2183abf1de806212aa059e6c2056daa77a97dbc08cba48c2f8b45d97c91de4f19af00370e589992696861050de27f63f701bab791c0d7d615923eb20923bff35f10ac967a2d1f6bd84f9f5cd85589e549e16ae6497391f032f190929558ce4d5a68a4b3e8fdbb604bf72a28457b5ba98b5fed2df24b1f4f251a84bdb33fda995a6fe5e36c997374cf945460dd853ae87da4fbded42cd4399cfefbbbff2aed240aa295e97c144c4458005c84eaf4a0dcdb7cef4770e207a3b2e6955a61db1324c9cc7b16aee506b9988fc8fa7cf2a86715dc65744072b9327a4475d0ebc54f17136291df9e71b2a74da37caca8ffd43b1de605769d09dcb64b79774141e1a82697c9705317107ca503b4022700c7c3804c62e18707cc8766c18740feeeebf0641cc6c3d5c59504a48ea2705a204ad8eca276f49506e36f5c676eca6bb9ca38741ada0acab53d89e250e529471b531eef553ca7f4a76d567ee8351a45317a8c06e2325772604605c1b88466417fba8fcff947c008e478a2c1f631434813f1f5c8096fab2e93f7dcc3f3aef22568cad8a7b0c05ea56b96bb1b65c802a15db6c11539854c8304eb4450322458b211db1ab95b048530800e0218d7feac5612d4f205f38bea81d1552247d4653a6ac282bc9251705043a9c4f4ba2e9bf42680feac268ad66a34e36ae4c4100067f8a2bc610257a4f037389d7f372268307c18c0c73e791d87a0abe483b0d2e007d211ab991a0dd48df411200120df35a0a8d76c8f4839029f2b26272ea82f9ae0406dc244e1a2f4fa78d6128b7379ba68c30d7b9a60cbff250066e62ecb0f9e1cd0f47235b09fb8c7b72251fdd503f6cf682719ba81df175efc1d80621871d90ad6c180d0dda2742477dfc7c1110f271a2d84b2577b06418384532621273192fa02ea0164d92e728b93513c2bb93f12a738866170880083712515ebef30a076ba82c5b7c67d24c86bdd5daeab70ba01895d3dadb1069561ac009ce80d9612c27ea85999e4fc9ef034d87e465810aab05177763265677b3ea4400994e67ee3c3e77685812a9d75853cd4ffe1366397a8610a9f2712642424b2c78c39a8c5fa22e05db6394188b178fbb0c527c49f6345551c82b520a8eeda3a1e0bb739a1985d3d0782fb5529bb0896fb5662572051929841c76ac4691996a0f2023501d147bc9dd074bfb1d5fa78b2167fc2713accd7b5a62856bf5135306a94aab258f2f3899a55509127fe4d50b2c483f30b0d6bebbd31a420f31a6338e527dbb232b4edd91d63a4479715113c4d06ed31de9da995de54e150476325625909fa112151d8032e7379040b58e8095f2a687567c9a14c4e22242e8d16f8e755db063dde76993f66a106f75a3f3e80d4d42e149f1b5852d68c88298e0845582d8d04f0b2dee27f6cc008f1d4688c096ae2ca689192a072c666903d41dce4886374c24b8fdbf4c5eec46c95ceaac26c3078b0f4f75a84dbf4a454e399573450798afd71f59bf0691ae4bf755bddf4e336204d673f0db78ad809cb265b38c53575c185802a1c6b6ff5717077bab6b3340f1e36c6d516ade29e0205bc86bb335fb33b8a5ff48daba7e8c06b0ec6f89f1b6f4eeca6945b2156016f651423fdb07ba9c8688a55d3f086f1dfbed6620d7141600536a8f3d53408951b30813ea1daa9b355321063d8417c3fa8bc26cae6656cc4543fa0de4234ff0e965ae89e58c294551a8978b5e2ed76a53ea0d2e2267759ba8d0bfdf9beba2277623844cde0481b39bcc47fc6916a8de32df4de8d5084943f2ea7abf24b7ad7751d6715c68b548d638a7c7a344b678c797509129c3f9f9ec01ba0520647849552de888461daf3242da9f51784eba812c320f7503527d2131f38d46b97e66fcaab10563252e93c62c2af4e522f52d2ef3a8440df86022409230e0c6413ceb898657f04e7d16861f8cde0cb11379918f1cb506640b598d3cfe079cf11ff2b0ec36a4e67d31e28a4694f92764df17d3e8e2934b1eeb42d827425cd5b41769684b3112366b77586a7b8d433304180872166fdb84dcb74e26679156d7c203230c029099896b7d71ad10b93b4509df07e472e82fee2fc834c0c6b3f80c12f1af9ffba6c91bd5c137875e0072b9f4927c374de11026458cb2f827315a7c96281e84883d2548de835120630c8a8850754f864e67225d51b7acfb7782ad24e40fb6f5a0dddbefe7a0dcb2ff8b32b98c69cc496ae5d36cda1869b196e09b16492f1daf3022bc3ada4a8245c186909441c6201c8f940819e93219b93fa892c7be75fa3a95139c5c9d6ddc6a14ed9155cd190c9531596bc89733b13bea028a02616eb12e8068ace643e1bc61ce02fd53bbfef332185faef1a87bf89d7c7e86135a5fa65e56462fcd7b91d57d20c3de265523f175a3a20c0a2f7c1cc7a4dc3be3ea3ee596071589aa00730e3e85918099def34f41a5b0b4afa152307629654a2ccd8723a559122c988b73a6ecc84949693f3d1e58fd0e1895b4740a8f26557ce0f196e55e6637b1a40d282d5b17333cd6e174e22e9ff805e548970d8dc2ec626e3dcdc67ba512e177e899277158c248d64fd5739be1c89b480d5f88bf6ed5657181c4ff66a6fdd02c3c1cd323b0fa48a21d74f1ae2c4a8bf49a149b5b9bbeb8ea5e78eed00d106f21f85228ac3de75969835e7918355445daf1048c6c876a165f6e7948031ab1a0cb35c44dcd547f5bced7786d21ba4ee9dcd99a10dd03032f4c6b0a5e7cf36e78380d9baf71e752a2ffa201078a2ccb12f3b25568f27d1b5f8731c48cae7d4ed5855641def0fdb578742e25d08467fca5c3fb965ec1ca76c87c77f60e080068a3677ee80ddc3fe7a619a4dcdfdbf77525593f8b81466789125600ec6932e7ee16a3dfc2edbbc16b7268a954993523a17832b380e632ae085a4a8e64f8069bc88774a0bd3dde3665563d0f931b904e71e021de41f405af9839c4123ed56cf3d891f647141eb516087767b316be6ab5bdf16316afecadfc2a304bbd5e75681ff3dc83091dee7b9f101e1ed591911dce2bddb648a33a9973aeabd098d7c50ff890c7762d7136d31710cdac13d7d1b2ddb41a94c92aada9cea7e875b0c9f9f69f710032254ae5e864a11c3900c900aab26d82151f06ed776c1948aa435e2bc29176c10b34fd3eeefdc656be716e32c71014e4291842c4f27de6b5827390ec0a651789d2d087dd7ae01cb46fe42bd86f3c5790568d2a7c1692bb80ab8474c6d25a29a50974a846a66ee6520d9321d251939e16d325f07869371718698561bd62e08ace503c37061c6404f657cc798d322c515e85c491702752d6e394d4221287f0dda691fcf1306e82beecb73742f1297c2fff67c2716bceb36f2c2731c2751863f2c89c26a249b07bfa7f7892c55a59adedd65d769054a65363f6406b66c7ca8a8512040c023d67f26ce8b8225eaf23b41a8c4d494878c60f80b080d080dc9c09e00a78c8ed6a72efc909d423d08129a41e88151b5696e63d495fc4929307bd5cb6777b3ef0e3eb5e1ed414caf807a445fad3ff0800b31142c63241d97eec516678950cda549d2c6404d212dd8d6a27202fae81ce842868ee30ccd9e2d9aad7b0e775d66567a680bd33ed9b095d13fa3ba9e5df6176cc98a0c6704d8c34c0efbdcd53de70d0e3b9bb976d846fe219774c0c2c0432300008c271620ae881dbed78e49a04449f44b418d2502ef89dce8a64aa776b9d343cc8d2459264cc4ba80d78a2ba4215e3e3fc3d08d75293b97f6a64780c30d273ed0f7e1cd52970a964656d3ee76f13cc8cb949a78d5fd1167900f15c2f478195277e79e7ba4b8d200ec4440ce1bfea6e65d3ee134ba1a8a45c1cc853918025d392f3dbc8915427d0a3794b796d25e92079490fa8595451ddc179282c6f778ba7ff2b53da7f15115f26ea89436546ea3f5c35bb1e9493d905d95a595ed29889b8b877e38b66dc6c4085750089097b670897899d0e723ef31b8f15148ec84bdb5967defe9d05d2b8fde072ff1ae1c88f3b32a4fc88a68c93474f83b408e581bbffe90f2ec4d0aa15d984b34f461190ac6b997c918437339d9bf64b6b04c6744298ed5015fc6f6b6e22f65c1f7ab167f32810fcabebca4fca59b846d9149cb42e3c8607c388c36d0a16258ee054145a0f92146d0a58952014624935ff9237312dcc7ba7de92c55de4b8575ac4e44c5559567de66793d05fc345f4a03b9ede6e4d461a84f9140c0e7708ed0113c463e6992c8387127a083f5b70632cee761ce40f9d3c32a500a87956cdf9d517230922c3438f19f629d8d9be75cb742ce1647348c379c9cc99a795adb4df5adf6c941fc478f034c268880f7ce9f604026e4ca8325d1abb2cc7196ad223289231fbd2587b78c065a4772b62886813fedf586be2811a6e2e79731aba9d9bf9f7c66c52f873bdd92fd064cd38cae4f4b2af3a2560dad6f3e8ed92f03f88082e074d01a7269fc8d9b54d979b634f87c0ab7f1e8c17f74e858c069b54a639accc26a8008119595b156eee2315ca082f12b3e8b9773262e7f99ec21b4d5aa5c3932568d7bd382996ecab57172ab0ddfa3e9e318e6f82ec65cb6d802e0b35e0489ce9b94449587c5df6d01c021500ce684d7d4360873554042d4394a1fa17c29a530b5a01ffeaebbe57ac36174ea1f55846cfa6e5c9bf38c55e082a2c1072cb06c939f06e7a7e48fc67d7137b1ab6beed6c1fbf7554dab0e60e7780b1247fec0d430bed9e3d6984d3abf0f0be780269269f3984e7f4f26b866cc1b5333286adbc98a3b04240615ebffe0644c909414a733aa770aab1b62c2cacef2107a231e62ffd2190fea81de7ebc55b0c334f2622a21672c0fdfb14b2c31eff15fc1d9d2bd40008af2c77a58ebb6bbdd77956464b84cbfd96c127b55d8bd11d338342449c803e752f817e57f06b81d9cb05f37180d6e00d511c6b75c29b3ef5a6673c716ed782271ee3477d81d0f8cb2ff48289628493b013449a234437eea6e799b5698c7d52f79aa22137fd1a1ee7065881553654259286481af8b9f5c03b72bccd293c02f599135312adae171324969155990c70093d6c21cdfc1128e14216982f15dc6ed09a07ff96cc4f01a07eb821a44c8557c735b2dadc98452e36940d7da57ade4829bb183ff666dd44ae32ecd6974fe2f991b3f1ac9db3ed74e8f0148cdf46373118bb1566358f2a340f23a3c9ef332be3723ae590999dfcaa1a18e3ec9ba2230fd1ab8fdfbd6522e58d5d9005d3d15757e48413e243ad03131e6db3dcebd5cc77e4fa1eb3a2754a41787de3f029b80bfc3998f5e27e9a55cdf13c5e54c5a55f8a879cfea05aeb7ba453f7eebcead7ba66139901459d544779fdf23d2072e7838fb06a74f8d488d6cef9774591a2d9fd88e7eb1f2e84d7ac1dea63f0ba6191166bb43e4540fe45a781df751cedd88b713c3875c8c973656adec05347a1c2ff6c628ef665e3d37dc4960888485320ee27a588876902d1feb7fa215a1b4c79c6e1940fca7185212b97a31fa741e4dc54280dc51fc885b659df3bd3274c27d05512276da58eeb9e4875e34e485ffb8ded63003d3e73d0e6d384914fcce6d8f3458915bd778cf6709567a60b8d579a18cd12f0ac117e9e2a2798070ffa8367405b56fe0d2278f6906fa6cd0287ad44104b3a72c04ddf3d02ddf417383286125dabbae3b8c2c1d8a98429c3ef69c3881b34a9b5c7699d1b53cd9e3f862cb3a3fbf9b4ff14ace0baa7ecc0821985889d0dfc868ce0ef031581081922b07d25b39f660d51518d524154e6b87a9331cc631d35d4ac7805904b30e9f130d2a50110c30c746594e0bc421c64ad661631216e358876a93085230ae8d30b49d496e368b302ebb08499ddbcab7b54785039334097864be1ebaf258e4a94402025d488fbcccfeaca5ac458835f9152d84ade7b12f99ed432087e6872efcb0a19f55f6dc63bd77967de42080307eeaf6bd7a749fb800b3bf6bb2ef04a0378bb036bbc8dc1abde12dae91a1912f03d0223cbae620aeee18ed351102df06ff45adcf0d8a7ffe91897404a1325ae1a3d50960fa2f0be71c15ce2e76a34988be3f2182812fb2dac63bf97354bf448b23ed74178d68fcd366223fab1a8866600e0471a48562fe7bf8f6c6226587eddbf2c54de139eb8948adfe66c80bb0bb5626b5994c1e7253ef957fc5f4d30e6981b59c73fff05befe75b3f3b619628804a7338f4e2bfcb91ce777ece55217c44c92ca6788bed6e60f913f65f77f67dfea24860e52b72f83af02013dd652c207e7b6c9641c928aba74eb0be4392d5863a566c7a45f69bdafe78dff6a5437fd6d226f47d3d32cd507edd65d13fe73cc09f8695620e63576bffb5e709042e95496559510b36b33f78ca232867d74daf0f46eb1c08faca2638745e77df2bc728b42341fe94506e18a413442bf7ba2362e7d384bd49164b6ecc124bd3dd9a65598f7119563b09d3bd530daba97e73360b7f0877b54cbb9155a6e6e9fc1563adc708b5c61e9f0ad27c2b4c988d4c1025dc85429e1ba9ba580319d6a08e48f8b4ac8b081b3e56e0a3acd05c6c061c1e1d6db637c44a1f94768147730386ae3875819cdfdb9f818538d0cbfe48beb0ce4f05065807bb0e3901906d01b1fe25cd36d4ccf3455b3b6f2d8edfcc53c2dd57c7ba27a71f4a183ca36b1626bd79a79fc7eadaab93fb562bb81f18040fdc4789cb915e474e5beb19b688f960e0c07be2b190fac45ebded475d51247451b9c1d928722c4e55d6f340b9af9de0bfcf4062899e314c38e6538ff01e408585f7544ea3ab3bd44cb4889c990a65c3437a1d53e6249335b1beab3d619c7f650f992962fe7c59ff7ed747ce9d74d2fef7839eba099ee39e79916a19f38e23d05bb578dde566420805be6586f331d6a81a6092f42320f85cef565b9c3fe2213808c46145e2304b580f38c223f41aefed12650845de9a770c01d129ffd9c20081f0e37aca5a566186b18ff236267c1c8fa495490ed5fcec8472acc0705b7561f488af5fddfd8d8d2b557484d2cd042e608f156ccb9dde33b162185230c00280a4b09fae9bae692f4404e11f8155443a9d4f6e793ce691da49557a65199ecf32b48e1e6bc3cea707fc795c4076c556941b0e090032adae36e0ecce31c6244e5a0a1a3935d60c06c48277e75d7a2d93d25f0f6886f790e2343de1c9b91cf306d4e74feea01d3014656a1918e7da9ded999cfe0017a8cedd22031242d6e664994d2a75509a09fdcf5ce52399746f4e98395a2ed8ce43da1d83800455a05511f8c4057b0b159166f19331f8f56d0764f8e545d263aed8f3bc73e7c09edcffbc85e078755ccf8b7b7455d12b6f013c6af14c667739f43c4f2f7bf9195e7680c3db3029af20274628cab12a64e1b95d4674e46f1b7802c3ebc991a3c00ede50496965f925cbad82de223ec7b8d8dfedb79169054639e097382d9619f4ad56678dbab31f27a68c9e863c31b19682fda23681ffe4b4fa2dffd0d073b241421b5a48c3a8638dc2f36afeb522e74126c8f04f1311d942589eb7fbdae00a594f08ed530ac77d2184d036b01c7b75826e31f3a677a1e7b85142934cde0f2beef60e46b97cc495e1e5061db4ce7ee15eceb9877efca79f0640523f9de76cbca56a255100995bab76048f451e2e6520cae7fb77d6dcc53c90e93bd6633a9b6af06fb319213d79ef8e252c24268d0c12f08f14a6467863600b264f3e79f043822725b1f97ff183a07d43258439de02df077e8bd9d5e6673f8071455a1ed2c0a27318bd27592bed636f0ace1f344578e7605e317a11e572cb9f7809500c5d0c8c7ed5ff41bc13ba7fda59fd5fc5920ac4eead1b235b369cc767fdd74dea10826a830d7588e5b73bcac0e90d1a18a64b06a8463b6eb2926132cbe073bf15b601cdb45404756a1f7688bc2922981fa1f39a4c3efc3ed18d2de0400bcf4d1be3252d5d3900987ee21d276ed6e6d86198f735ce5a5d981d6ac16a8905d6dcef39fee2c7b77849217db468a32769fdd41f5c27f257638f8ecf6a4631b9e7d30410d39ac584381bd733062c555b25bb9c0d70d9661b55525fef56ce8c66ef54227689f2f92109f8f34937b6e317ce8ad62ec6a2505196588c5d35088f9d977ae74a86162e4051c627ba0eed45832f159a9c066a2a7eb47dbbac52358f63553c6a43d5f3eec832120eb880176cb5b30f94bea8645bd2d11f43b8e3140fd6842d6352c7ab55b9bfb5380a5ce1ea8688fddd58aa66ebd17a61ec44ce9a901da14969057eadfa24306dceb425390064ca1908c13d786fdb0bf0c92567dd43abb9802167555c4ae06a7a420590af12de5e241bc4794d3fbd55a66fd6dea8a10353034144e623fb0a0ef12d6761c471858407eb501f58db13bd26b80d736ceb29b270d46985fef8b54b5823cab9dc7c3ebb38e2064458e0edca578422efa97134a0cf4219eba442f58348584f51149befe84926267ba044f0e0c4c045cd8dc3b8552be230c66e5d32e8aa14f6ad846e07f6dc0b035d78ffd1aa020db4dbd3fe5fdc7175d81e36c5e6fea65b1db95ba9ac0f5d3cf2b4cb985d34d15badcd008bd5809446860f713ecc30f998caf1cd513895671abd3336cb79ff05575efc8c03f8526b756e0fa9a4390badc6a68a50c1f6edcf1391c5e20ee3bf27199ac6dec94f72d38142ff804ae2869161d8c6f94181975b2ce382639e3d37e5a87d9848dd99969dd9f3440cbdd1d0126993b774e93d356e12930706757f4d3f2fa18ad4f9ad9b203f7469e4de350f2719e9492c6db412fa86d5d8c3ace06b6c70002ef5a622c0615dd6a0e4b21fc3ec4ea3a302f0d4cd6b3ed2cfd469edf456ec06ec41483613670b5124589e87c977f1274e18cc0d6c384419824442c1d99fd7d3da8d98a2ca0b0afc3985eea2cd052e47686137ebe1e73587c141452952a4732e384cbdbd50d649caca8159c88cd3cd92a92c03d2f77f60eeb5db89e6594d86ca22f6c0a9c166b3994d8e4f618d77175afd9318a4f228ba6561d71855351a1ef84b8e097c2df94451d13a5d06d75d2b989faad7b1dc936d05cbfff3d1259ae299e2d5d91b60392c8f976ab0bec0bb3a39eaa7ae9482a7ba111252d6b42562e5a272a359117c8a82f093ba52ad64d48e07d0421d7018f005c6bc06fc627ab7d2ae55521a8f9984b5e051de69a35c70a2eb3cda53110045c786f2736bb8d99691b676def80248f1509e9753753e61d3071d70e196975a8a915d7db38ca2844b2dcc4d8ba20215cc18355113c7ef76e731310d56964e5db0b5e06802d3b8715c337d44d0cfa248993ab5fad22bab3587798dc51089ba58f1f334c20ecb9ed1189fa09c4dc5e6e1d6a1db744a1300d2d9ebd414e4a197849f269e1f09654da68d834edc2dd54aca96a36cc88d5a030201cb14e5738e550f84b76cdda4c921a54835dd6e23bb9ce78b6b57f6c9a147928b3d49d86cce32c9b79e2e6d29218067aef127779058b5b1503f2885152ab65cec07f73ac81dccebb749ed4b8a11fd6f2ecc60afa456130ded8cabfcbb6cfd5fcbeb4df2431bb42dce5f5e93d45431cad0cc7e529f2a4d5121bc0ed138ae7efcc1979edbc88af03e6669b23ca84f3fbce3b43e3decf6da6ef4111b5ef7414fb2843642bfd4bc350c327f2ed356ecfef42dada19cf9584c34443d79cf6ee55be8b6bc0e5e39428178a7d1652581ea35e68cc9950bfe8eae29185757402e69a5c763dd3536a1c13e67f3581539a1b77c2ee2615d4ce33129cf3a04545a5883e58ab38f41b8bc334c01f6986c10feab0addd73a5800c0c1130ae3b14bbf7de615cc5de9c4ef35da8d214f83dd1f84ac51f1dd2dc6d23a99ce5b2fc24b478bbc1ad9c59eec5b47ed30f7a2f5e9098ba791f2867fba2e2529fb69a85c8c973aeb228b893ebd673fc22a08b0dcf58c14f26fd3b407eec26b597acd462a2c29ae61ead967974cc13c72ab885e61b616e2734e27655fed5aea12def5dda63480c538d315424b9d4a4977390349f96d4fbf97d65067dcbb8f9f12ede141bc0a3b26d83e286d73b6e4e7fd29c5a57f3e92380f6ff5f512346b69fd0de02fbf2628b04c62e5d59088d5faaa0a938fa1319e1f6698ae135258a5c27079ebe3e4d2f62f19269fd9d1d9d67bb032faf8def95145faf16124fbad4f6c6f3cd4ade112f2ae48aced6712a85c9f32f7742763af377c580f695622d5364dca597525b6a9ec1241cc014f2746bfa847f1d20edeac271a6fb714cd2e8f2c109d5eb5e85651f0d65d1b40e5b268a8ef65b62e2dc3552f9475437c0a90c0432d0f9f21e2cef441f618399ee1623000666416906b45a62e46b87daeaa621c560691fa393dff89bd8a10ddafa15ea3af473fe8976a31b44f96ba4993f8156c36460d12d9db49c0ae2f26b3d85bfadcb0c02cd1fa4d42c437f9223891799a7daa173bb79a318206642fde03317eee437053cae23760256edb0cc38d493cc625218a3149ed28ceb8f5a962163d7e2ebc360214bbbc68854bc7587eace30a45f7656964c95f90603f5baa93e476358421888e75f816ce603b7d3ada56a7aa4ba8c8f137c07fe2a4ededff62ab45ab3a548a890b23339bb1310ad22dddadfb31243c3689e07a52d5177eeee5f266d96e0a2e97ae31600d230feee8ff0780adaa6c1a5549be186803f12d326f94e1ddb51f72a4b380153e4f9116dbc6b0de43690b01e233887fe75de73d9fa4a107134c97ad78ff7b7e8e451b5b1301b4c998210eb41c0a56ae31641d5556def2ccec90edaf7c234312546b9973eac95845906d6ede7f432c75f82d9650e84aa95b750e9d48dab13fcd317c2d2325677681ad06ea5854f69caf41ad2244da7da4f60795eb378bb196806a6a469553e98bb0f5fb7cfcdc94d2218e4065dfafa4636640fa7911f25aff0bf2b3c8a13ed340a45ae5b36accc0a7b77d1121443f2dfc7a1950d9d10e76ddb5e7df8c13f8283bd2ccf9c3cd64d03a33a7b51e6d096db3175e18f529ba9379b2232992f0f86b11943d32fdeb322860ec207301d5dba88c58261bf8feba2f5bc8c998b2423555e4c69986fea903d2ee07e70979d2fd8670ee52940cee023ac851594f4d632ef642fe3f2a647b1227585ea511566134cb9b3be24ca70de92dce84a668d3a5743c628c49cc4e807a6e17c2f4ba1e19916b07da04fdd85b4e0a748b57d425cf626067f109dc49a46b71a2401cef4f735e113d84a802e1f99f053299276b5fb5ccc0befc6e899257974df7a5c948238febd806ffb962dd860aa36ca50d88f151ebb3da09d9755317d26983e2fe34485628d9b34e8db24a4c1893607ba19694553ab89683e873cbaa138a37f8183dbde51e7394b87a44d246fa61f9687b49c918b9239839186b0ab6d2ca13c7aab01c31b710c0a211e77f394ca0a95d2494b83e757750ebc9151adec10804bea4e066ecb767a3a002155bd87edb3b0e12971326580123c0e1b0bcd05638dc4b858f209d8c53cc8a6480b4cf09db06c0250c3c83cf8d349ad41c557b531e815542be5708e2f9324aabbeda62d6909d2c2e77defad31c59acab958dc421a551c83b2d5e399fe76c8264464bf0fda6241960f24e1e5f034123bd3d417e752ecf8750ca113226eea23dd6317202a2b8431f7847e4654cf455a7b526f85adf2ee74064c1b123696255e00c44629252b5421ef533a17e44aac43e4a5860f89722cd1f34449b343c7c45141796d955aca6280c2d50d6de735c057fae838e17d2770afcfe58bbf89abcfee97e74a75d0b7ea6efcd95b9ed4f29bc549fd0efa1a4554dfd8aeb254c5c229214dc36d2d6c5fd6441980e35bcb829064897aa53c04590f46846bb60af0201e9fc602babf064d884498a6669a6cacf6a782012f7cd147be496e1391fca91dbc8b3a291210a2da04ce34e2bf51905e608c2f3d7959239ecdcce854f48e70bb69667d9e6c9d846018f3da846ad65e686d8cdded6e1bbd87de6d5e771c71d524602e03e6ebe40c7f6f52d58ca0dd9fb81eb57be6fcc4aef5217e5a372768691e1489ae25566b77f5e66f7b510ecc1cacac70a02a4eb9c312043f84b8a56eda041413f3e8fab2a5b8890f3fd0af3f36ec36b85e9fa66ebb8f1dadb972eb29a61c56b7dc8757341b720211e8839685cb28e66c8d4c5351ac508d48c90c673abfcc2e920d440b205454c3459d2be62e45a1f2a086adb6646472b19cbaa7077243a6be44ed75876718d9fe055639054746639c1d56c8a58316555f2d9e62f7294075173b5596ef571aeb0c687a1264e5fb80109a89a7a79cd301761cbd8326c9108c41fc1a8df130cef1e6bfe4a3bf2833d9f40f589c1683e26c6573ef01c94733e7f01697b6a0562dbb42e384745fef15f22bd95f698d22a83de0ac1efeafab9d9c3d1f0bf3c9b544b5faf13e04566c014b52e75fe5285d22ea943eecdc99d1ba9f3c43a610bf47aee9053c45fd312bc370609de4077be1e3d514523f5824587b617c57a6776f15c05aba2b924d494ee21a2c4e4f90f888a1a06ff3b2282de6fc586141cd85b9a7fa3e7fe7f3bec2c3a1626ec5a459eef6cd837f42f00eebe3be804aa8f023409bebead845173a5e90a65e902b7a8cba9d28e682eb193ad264fdf092e2a4c7c3fbb4ee899930511637adf806cccfe5988c78ef62309885d5c9ef329cfa3dc1644f2d29c68df68e60a2612311d92e650318f2dcc6d4a0c5f562f9d91be63052a2ccfd01d376534abf5bb77c2166bf5fc756289f18af895177fe770363a325e6741fdb8d46dedb7c1e7fbf7920b5f6b5bc4dc2fa7444fdecfefe9b414734b6655ed73efa0b7a6662570a6feb430eaf636c69b147f9467a43df7cc733f4eb52adb6b8d35134758f0470d4ecf464d1eb87cfe41b6018e13a0418889d3e4fdec2081234a40c0b598c6d1a9c66c6b3e16b43ff3c1eb3032ee68b11b8b0929b5a8506d188a92b0cbbe0b0afa0bc43070ac18e116ca7f250a3587ed10ee835bfd4b2fd4fdd59229bf35d5789e3cb33f1cba15e48f2cb1b8aad67ebbe7ce7fc5f97b21a2a146849ad790c887c381eff611bdcd0ef24b35c69974dc25b5d9e0e9fd25fa7aaaa519548d2f81442029d9695723daa05f238ab51158d11da8a093f577ed5daa6cf08d40589dbf9a434ab1e07c9b6630fd0540ca133c2de728ec1af2e51b327f91fc0b54a27a34583637dba6a8d242a7469406ac5c83217008fc873c04059e8dadff1987dddf5d724edc0e85ae04e817a64cc22f8a0be7e8c482dab6a5ff9b38cf4dfa5b1d1f69f8432e799369bc115fb6064153c96e8258860573a959de7015adaac15dea72e085ca152f36ddb561e5c135f3de78f63dfb5da4f4ecdbfc36a59f63d665c94f9c284adbe1ecc896ea7c8d3303c1bfa15527e19204b1f6cc58c3b615131f4e398ea6e7c7c8a9eabb9d657d7c8f26c2a2cf71ab168ae3f5ea2f7481ff3a7ea33edfc32af723915b1a6d4ae9cf73afbc2648df1cc4bc2d05993f9bd3b78b2c73b0392ce0309b8cef021ea763a438ab85a17d6341fd803b7f987a0c86d022f5b16e3e4b667672c727952455ce7bf0f8a70b99c6743d8919649a9f7bba2cea796002844423c89ae9cffc7c13973c8d553156419b5a7c93b05328cefe5484e0d0f5161d0608f963cfaa906efee5c333797593a98c9587f9fda5c91c6f10c85375198e23fcd54707f26205fa2de68a0e76895ff85e7a001a5950aa7aca77426e0dca41ec513dcc308ba2fd82ec46325a0fc1691ea51cd8b43e05737d168c95e0e0cf32b536b74f422106078008ac2ca2c435b18c64e0a499428010d3ee7f08fe6b5004f189aa42b146f3ae2ff9081d7a6133d76c59164dc66d6a880dce6692dae1e21c87c356cb77ba1abb64694f986f5ea75c4735e48c5904035ed544006157d2f1fa79fcb732b2e9e793cc78ea83f186a07c9fab26344e041aee08727782a687a92db5e3da67a28650fe265881fcbdbde13322a2a5fc767ee42d64dbef368e754efcb7b74816c014711b2c95fdc3e486e94f6caf5d64e33be54e59c5db2b1f76adead3f5a8201e068fe412e7a5096a556a834db200405a3c864c22a973ff7674297328b91f907c70040e7092c2176867e90aa5da6f0d47ced2bd35246ad523aa92849848611ee64a127f6edf8382d81bd60c526fc1ddebb2cf72bba35566c5d72f2231f48accb242539647ac64504d9de6e7f505cc0581a7e07cac2418b0fd4c6e94f569140c6070d54ac14eead0a7964357f9175a79499a2c3a520275b4714de8f9267e427c76d8f076a5a92f157217ba041d3714538d34fc240a12fb51b941f8fca86fe297b4e4ccb3a2f6afd7250c05247c990d0525443bf8660b33128a3b3d7d345b9f33728721c595fa9d590371958f09bd2ea70b389066643528a5fcbfbf10b990c0d66306ef2ba4099eab7d9309eb1335de2cf909b61b23923f40e9d785d2405f140e825037cfb3d965e4668087f9270f1182439343b730af023371817f3befe2727fae98cce8713b8a86d11ea30f4afabb7d7d1200259f52fd82140c0833721bd6a4bce347f54dada9bcc393f699a4592ed0794402a4d4915eed471b297939624622c330eca0798d0f11a3e1bb12891c4bc03d61902f605109edd942ef772d789eec469bd55dd948419e77873190328a132fac4e2ff20e5ccdccf68432748a97323116d781472a53061029dfd23708de3e5a3055c7f27c2c4b21877ed244ceb0087a872212997015628cf5467123a86c4c7b2d50529e357f4b2fa99137d666507744355557fb1828c8178902df1224a296ed7d21df18beb0ee3ca8dbb69e9d7827c52a708b3d1ad51a1422f71e3948b8983c2c47e1e82cc4c61c1b0284b69811e42f83b70c3d9303890e9915a686fe79874adfab7adfbcd62cf73e60caecb80f2b2d384f95f4e42b1f0871c4812c07c4b4807ca6fc465c7481afb0ed178e0d3946b6fec0982114a19e4688fcf93ab9773292df165dc5d23a5832923e2a28d0f2ce3cc88e35d068c0823e83edcefffcf62a4e5dcf63eb6382b84d7b82de8ca843daff04224a524e2529cd5172a0c24ada67e4eac21502b67994a698a155ea338e49d2a294ec67ed0ed58986ad8cf1c1212d8cb1c2ee43ee395986da1f1b83386498dc49d3d2f54fa49e1b414b684790297047ac70559273e4604af035b6f146536ad16ee6aa8dd01705430e91f3835fa660c0f91e31ded511ef31249d1931d271a8778e64716be613ce8c0cdf6720519ad39402859d5ad97479c667162e3c9a1f8353546edfa53a9933f3b8370598d0d59ff21453b42ad55695bc25f3ee39ff1fd98ef839aac1c6e7ea99956a6940dfd0e044ce0f7877587c950663b73c4aba14f01df5f921f5b2af8898f4eb84187790db43103edeb34e4dbdf42f92d2256cb91688052da2c5b84ff715222d9200f2cb2cfcd01b7c291b70cf509094caa83c1ab787eb5420545743ca068612ce9ba6731793069a2945e785495770282db3357fc937b023f5eb14a8fee7de9234127a314de3a50b111135417fd90a6a642d781e9574520d6603542ef25d56634e93f80e8270be10d9d29565b857b2c5f409393fdaa79a50a0fe2df6dafd1a2202f9ea89f09ea9e2fe4b4b37b0aa62a40606998e532a62284f09dc2d3ce7788f7f8dd68ac4dfcd0f85e26e2fa66d6d3d52f764b970116ee86f150fb68bbd34291bc3c264597141cb09162d7cf487034692d85b310f4fe06c3575b0e6feeb85e77e35e962bf452fe23cacdebfa19909c00dd4b67672369af75b54d54e25be1ec90e0b13c48f0c7c79c677635d221317fd73bb7923fe408696e4dc1fa2008eecc27492deb31445ecd295c9638d652b08c4dc7b5f83164a5bd2917d1868b6bd99f4e7b21897079211316e941e1d48dff1286e82fec2ebbe12c07fb9b5b8bfa7c8c8e571afa82d82abc34b91ec950e2679bde1851a692a2d56cacdb9d1dd2ff868b7b6feb3dba38a337d73e172c939fd0be89bd7d1dfae03682c6ac47a4919edf2cb00369877a752164205cef7b5bfed901bde3e37649cf23d1f5b3d358b9106a18b0fdb210ac9ae5241ef2ff0c6f559b22c70ef006dfe579e38e61c650d1f5cc6df9cc388623816d87d4922c611a766660587181abeacfda890cd2bf208d8ac9044b26bd1022f51c363e809da8b32f113fb646aac56412095300ca2cf36135731ae721b4f62cd3c047a48acc007708921f4ab94a813a70582adcb2833bb77868bc1a7de251c919c0e6436c3c515876f83b96df85f2da5a90fa2d53dbf45bfb262ac686b36f5a5fc96d7470a85c5bf3304bc6489bfc49804811058655d6b344cebdb6f4073666fa96f8d6c114a57c281b6dff8f929575937336888ee5adfb91a38909c3c3bba1c4aaeb2b448ff139ab1702b393af571f67aca3c3ee03fbacf75f99e0fe5c642195cbe1f7b6a65cf77b78696d59f261341971fb6c7e085ffddbff69006c6561daba86767654be915e42c9e813035bda3c897497280083efc0484c87f426d82ed8087d0708449768ea3f001eaf8d49c877ab8694dce995ca39263f12a38263d2aed745f46ac249b96dd5f1478312da5290dcf46fa2ca1e1a43827dacba2e78be9f695d26b75c3cb710bc837f4458115dd234ba6d2045e9d14e3627cbb1ff4aa242a824e99dd3ac4675917942dc66f0383d1ca413ab721b51c3d8d49a21d11f66ce2df9f1cef188c0a52a64ef84d93eea8caec3d8312c68f3140df9ac7e4486b2ffa18539c2ca5703271d356b1c9431c60a5e9e57ca2981ae3746052254d9fdd25b5947d76578745b4d5db744af11a5c3ebe5ba14b694a5e374f32ffbc72359bef060a78200548167049839c3d3e06caa27a133904ee28259ea1c63eb5802abb388979d0bf5ad3eae1979111a982586f500c57241feed8766071eae9e5c8a310fe1170012c2c74faf2c0c471ec6e4387a7cf402257a52ecb6b784ce0d5ba642f2ac396410cefed33759ae061b8995ad5d445a075ef48830525ef445ca89f69f14aceb617b4ebe894940f18af2744ab83189fa502b7fdf2d21c7e3e3fa0eacfab5888d10bca467a78c54c1b4a3ff4f1495646278ba72b272bb8d0f0ccab9ee2644f1d4ea271a2cec2fcd64d9a3056162283b0da3640018800692d06861fcd469cb7c2ec672bf4bf11c28da7da083a6b0fdef5cd852d82009f2391145248d80bc849f896230b642f4183817ab1199f1cfcf26a0f69917fc6dd7bb7ca80fa226552c60bb6bc3a6cd838e2ba2a618e4216c9ed9baea197533ef8374573920585afe34cc8168029c6f30980f8c4ba5ec28e4fafc66a5a36970b4a0f74a8c0b753527f626368a124f493825ee149b791b93c7735dd76004f0efaf2199ce8392c5129c4e962e8d7a0e83ec5b7cdff9cad5555fca35dcd4d8ffefc232b6fe148d20a5c152daa0856798850db1b49a5baeea3c531f3297df3572a7f3c2062abcdb6ff564f8eba3d4feb50e88438033965c212876a7cc9f50ada8feadad70e4fdce48df99d58a855d7d156078f7a6995464fd47df51d37c7033d21d216c256cdb11f56c7538ed8e184dcfe97a5ee012463e00455c33e115e60c9e555daf4bbc55263f5330cc1046f4d732794a2477e76ae6e286da1e08bffa27166e440a47ce8670c1b9074ca67acbcddb39cf3a0688b33208cfe896c0cfb514d743480a23b2750cee9c43a0a0ebf5c4c70cdb2d53bb8456aa8494aa1b880e4fda8fecec2ecf8a363fa795008479380477ee5f9edc65219d76261be0bae2621608da6a0e4c449910b0c4a5e1d7016dd89b7b9e3549702d54faf2789515345a12fafee69a0d6325b2a9a0aec1872142e39a88c01f2afa690a1c0991126bc7c2a23d9111545ae9871c0b3da2ecbbb4d42d5c4eb9d9c9b887450ae61021bdd3c1ff3d6c905ec593f593a77b8ef4c0869e156d75aa80275607e562ba70b0e9aa9b795828767f5368b95e551c6d43d0c4a322a17aa3c0308bb5cd18fb8b843bd31d1335307d73e32583417b7ce6163e880ac9288da55aa2d889347e74c882e11fad73d87b17cc8eebb1cc3a42f56c7149b409cf28fbeb02b1a691869c5373267032b09cf5b1a3f42e2d55c9f1efb7642bc4ab74dddd12628ffc32843421d70fc7673c4aaf6b0a55f4d9f10f8e6129dd9b2d3e3fe8d84ed1f2ba76c29d78d23ff8714604818793101e5876e207cc65f70a5dfa7b0fbe3ce357879be946a2e865d77038bb655fbda3c2f03dccb8cbf24c8901baaa1a79a920c79e05fc75102b0d2641ab12d1dbdb88be041010ccc88261938fd33b196c5df2f0d74d5196bd79c62f31e42c80a264b5556bcf1e1c34e60ba85559eb22336891781d23ad5793cc2d5c820a40123549498f3fcdef9439c81d161dc52c4bd3058d19185e1debb327d518edb19cb4ef1d71ae72687300683e5d7ec2e9dd94b71367d7d627eb686fdd174d3600834b4d1a153ffdfb4357ff0080f8a9cf36a4042f435b24d361b7b10e0c3b71628f81abe61472ee162856eb0cd107632496ab46c8d2c5b3f56a7954036e2351ec9e5299dd91de97d42845629231553b248b3f7d16b135423fdc789575d1e0e4281701a7414160ce0cc262a8fae9fde6c46175bc9353f1c6efe9227e829c5d42fa906d000cf48212d7e738da390812f2db6a996845624b495e10cb60855475d0e597593fb138a189611b81eff92c142af361fbfbc7aaa9a2480d1ead6aa83a1a6fd4fdd69e3c796f487a31971b1b63d73057dbe4144a02c66a73686329e568a696b88fb1cbce62b278dd8647399c0d02228c4fe3b3248d22ed4b9566a533066d55e7e029d37033dafe1d5d534ecc1205196e93bcabe7a0c2b773b727e30801ed1b98decd9b5bb4db286afdc487b8234bbef74dcdb95cc5a68931e66c6578e33cfc71fd4c0bb04f8636a0b81ecfda64f8ecf15aff029aba26ec747b0f8488d01fddf4a56988bb5f9e4fa5588129c36f1b34ca5a66e266b7122455984551e699c3b410a75fa4fbf0eb7a640ad47177866e24934bd7f77c16f659a26170305e7f806d945fc8a0fed90429ab4ad3c421d0df8e23a1e788e1c572bec7c8e4df5f7502b883fca05c5dd5105c1c593ad77fa39ccc73d62a289dffa1ae794150069847b1a8f93acf09f775e30db426d3425fcd1eae684c193a665adede86f3304c8a94b6233cdb1e34a2e44ec39586bfac300a9ff55f14f718816af73a3e0da34a0f053479825b02cf376fe9790221560b6d616cd05dbb88008990677e192974b675d43bfc918cde86801adbe2e7a5fb58699fbbee6db2e3705bdffbe10a416ea2009126ba8fe97b30df0adbc992aedcd722c173c6ba47ff2422a0b1b57242d193001c2e112a7d7e76888d0b6ddf65fcc0af677f488b78c654f4525667e67b813a9561a38e3722fed35a47c7ce57ed8455fa49abbf2cc79cd1dbeae6924178203e48d4254f6f4c7e688761657e7739196be6133dcefc984ec3340227036cd16df3c918818cf0019c435dd7caa864fb1195c65de392ddb1081d4304493d3c76022df16701e1976246de4a5bbc57c02397b4c77eb4755a72736367ada36c6ca9ccadb856265363382d54fb9c67b1a1c42b3cd9347b35518d994a3ff04716881279d4b61f1c513973ad1bff02ba1e2c1b09effaace1a8dd5b4cad418d3415b6ce097b9f697e8e08e2f4e3c7f00c701c447ae492838cb7348cb15c55180eb039ec998a51a857645207d25980b569f262c9c73aeb4882830e54f74020efd0accda1b6450b8c6f1db1ac54957e0fcf43cef39ca392627a0a37c8cfe46c2ebfcd0ef9378f20959dbc8a90c56379ef1d4f2cd27b0fa22ba4bcdcd4e5a7bd5c9d13593efe0b1b9690d5d544e3509e77578d773579ea54fe24cc51cf84025d8e1d0e7bd064835a9af499dd3f755601832721861c2cb4b7bea14c9f0c06deb90105c427f12d825508427e872cda27e46c7c3c58ddf61a4e314eb26978754a1e74673c1d87051a54f5915e05a9f430c6f8928668741624c0178a3dbd6ff590753da9e49f6f7f39791f7449a136572f551fa69cb63c1b95f092636bec0088fa0af35e824266e51a336f80ceaa8997112394a87a271c530b15fbf5611231a6ef69737291e42c0a074b9e6845e90cad1e38dbb646f7a1d6038daa9072720ee459a98cbaaeb52051cff1c903065f52d3b11758564bf3744bacc10c376efe397ac5f67cff8bcc24bba80254195b49d8af17b6f2d56cde8bc2bc098d78b44b6f412939923802e54b51fd62930b4a05429caed384bd92855d5f024ff5b2a2c3c37e2f2ac8446fbd0ad16413e08fc10107312e4568f5e80b6dcca53b84d54f009d5513c62fdd93acb28c0466212c02d9c03e28cc7d6251d1165e8c5173132ef3722610f7102808afd9967579b13ac108e2258ba5c70c2b6e5744c436958d96a25c73500a9840b7e5ab2474c907097b745a736a44ae92a39dfe3da398994d86fab28a115403830f929ccd56d61c8870644a7b19648fc801accae059d3adf2bd1259f274762497eccd95b5903d585e7b5fa848275ede2246b05d76e567456b0b9264850da1b04b775ef6f0b2955a1bc56989927518c959c226e690bf718b2481d0e484f4e213b7128efa00aee6d9fcdd7ba71b3095bfea71c1fad86d964bc684fd8d3c311d440c20828382bb0e7b13efaad0cc825715b00827b6aba45614dbaa426184d7d7cfecd435b705f29df0b879dd19e99e7471e26d52b0c0130d0025b55d8a472c56dd08bb34919d83d970916607e452749aaf39058281e547f19049990303ce069316844b9375cc1c8f429e25a74b9b23ee28097f5e997ae6401eb111198b94b693f3648a4b2efbb28a0432aab8497bf78bb091f948bba0188e370964f3d18320c61585e3c2b141d8f81d5aacd369d9b308e738d6a14cec882ad17d62b78812b808cb800a8b6b91b6361ba18628533358d5573edc80aa4956d9710563b869a56f4710cf55b8a6a9a09bcf5b9e5d672cd951a8ba584791cde850111fd937ed654c9a449ee5be4c04e39dc6395292b1af50165bb080a6171fabdfd63aae9ae13a4d827a93e7facf79ae3282c72a7ab4aba1d07156047161487042067348c2656adaa558bd61078a2ef663c0f05a3e1966486f81f5fe7d5a148df43b91dab35afadc366e08e9b3874350a4ceddbe3691611f792780649c9e51013fd1c630944275980897fd98038aab071bcc3765e983b8c7022fd162bc085c87aea5cc83a85680baba25a8bd9a1f891adf1bf86a61de7719be4397278b01d23eb98ed78ce9fe3ac15f8b1e910b335beb121878cbc599926394a3064294bb90ec4beef35fb4dd323057981e66033b24b69aee50a25faacb9dec6ac458d14afc590707d3d312ae2e2020f612b70e2a7a461d14e6f2a38cf0bcd920ff990d45840c806e6db43f7bed50c860b2e709d1073a66562151436c84656c60e4ad63c95c8226a23112547047fc67bd9d4634af28c0fd0df477f0f117b4127bb0d41e7e2d2da04d69c7b047f9d40f8ee2b7eb455be2a0fe7ed8ea48625d0e5c8e85489093d0dcb7d52b4cad70d5cb207c63bc84a150941b8b80bbd526cbbeb5a9862d1e842a6e00f2acd18e5177459793309806f546ff0a8130172724fda57e8352587f5645690763507d61e349a873b77b8c81fbaabb7cc4a1739af2d1a89817fc9cd2cfc1895b3cccfeb6dc435465e9a6ab475fcfef8b2942bdcda1b9f708d4fabea3314421bc2916aa258ae938d297c0154ab448efc3ad58e30668e75ad9db99d8cb7a0e2952e6abc5261ac71b08bd942133a64395153f7bc6f9a186d55e3a657ca08f83f18666dfc88080f7827aaa41b4b2a3f87d3ff9869a10ed2fbea3674f96c3b816aa53715ee47dbd2e066fa1fbc512a20c09acb45e33853104d1ef24ce5e1e8a86cd91570c889a59131d810b60ebbab1b31dab1f69c1d8194be52d8ed4c10626f8c590371b4c8dcfc082384cab79989b3b87db086082f02a4df03966c67fcb5beeacd67d02b9323bd869ec741ce30d34963c76e479d7f0f740d02bc0db1e96adb629d2c43500cd41bd3f21899e3c1efe5bc3dd2d2bc570fc7851ead0f55f7686010be76ce54b4786affaecc2d4aafded6d9f169684a7c7e1f3f8509e226beef19c5066771c104f4ae4958bb025ceed11bffb0197af2dd8d3966dbc5862d1fd3297551de8323644fb5ab52a7029f4592963e264230d6df5fc6b6b71c3b9d7a66ff694f4414b90db933aaa9eac8d2cf2cdf0e7617541af9985ef8cd7f9ba62e02e99baa35b66b74ea49430714e3b780e9ec39a874cfebd64f9eff34d9a905df62c83640aefce5dee8d9519d446b7145b3502573264d70d357b6451fcc03d3b7877b07fa95cfba70ef9c2647658593e90a610f1d0163fc7f0bec85846a5c93549bf2065284db4f1a06111eb5b1bb68049b3a55c9420735e86ff24cf9a94d2f3423d9538f4fe6248c3b1cce2c7fe6755ada8cc2bd35ccae65617ba39288e038d54949f43400f6cab5af0d06e0ad4cccac676e417b59f5a564a4f5bc4529cf75f46d21beff7ec250cc164fb39cbbf7b12fcab1c308d2e8da426e3811a6944cd2aa1d2a41b19af2ece030694adbcc9649d6df86ee7599bd1fa76d8ce08438a0635a5a63a212bbee34ce4068a33c81f548b83a5d413426049ca0f346d49ec4a40219c47dbdc6b2a0c6cfde660668c0b3ff3e004ea78ce1a112c54d8d73ddf2560b7730a0f9e6b03a2a3738e5df072cb738adbb587c5179d6644eb9aaaf98b00b7edf08a8ccdc83fda8cbf6a9e619cd27cac16a0339664afce465c7c2a6f21eaf36b11485f692aba2713687a9e87bbfca09a71b9544dfe8c3d66d2f07169fa76b83c5eda66b9b3c13d8a8c2f26e35f23f903c27a0d46786333c5e10cdd9f9d9832b0cd69dc0e55bb87439f844c6df2b870bb57fc6f94b57646fa2a71ec67b25d874cf724f5bce9d62003f444e24b787d0838eadfe0d163df128612a83c18f15300b1805ae1c90b102d4372f5e766fdaff23e20d6e6aa09c1fb139ca98f48529bc4370dfd253ad3238e934269992d5f0d6c64fe03de1094662999458ceb164de8efad1dcfbadacafa5255740f84a30e1904c6a765a6aef8d1cdbc69807cc8da9d1cc0a0ce5bda82348e0f2f0cb784fe080333f331d18d11d5569628434b2373dc3e7828e4e40c310c616546b03524702b3609d2b146d4a0967007dfde289cabc7e5ad04a7f37bf006320170a61a9678de58bece1d3420a2a2c27d7f7a749c35dcf3fc5455ef61436630743527c3cceb6fa0c70acdf89c13f960088d685275d7eb6aefd6aaefabf0c424838f27f67e856adc0ea8ce401bab92835cde3112d38242b27ceacf23128e859a71db49a7182c5baf2d74ad6250400c37a99ecb228dd4f0e0f2e5050b4c1f2043004e446aa6adaacc83833f9cb43a1a70a392ee4784bbb65099e6baa37aa2c66282ee9a64995c94a1ad96a78e136fee3ec97495ca05b1d0e654c892593c9c4b7e17f10d000cad98fe8af0fac4c993a4eb398c5b50e45250a67670651d324e4c737fefe63383cb487a6d1c4b4f65c951568f410283c447f36b4366b4c91b6fd3b9687c07d902d3e96adb1c5f91f8bb64d75722644871f4f1262e560fce97f6fe1e362d57c8b089ef38bbb377192d57506bc647fbab1e0b89b72f4887aef33775ea79115369763419df32db1f5568b08f28c898ffa75aac6e2d1fb0054dfe9901720956e9d54e4c0264966e2680fc2cc22ced683581f25ad37a5d28f42903b265436fd263f98fda2d5678cd83c5dc53663462cd06418b999a0aadf316d8326e7fe1f4acd4b7dc5ff33b6347c5ad45442d505ae6d74d04130cb4dac139f0332acce5d8fc9103cd17b00aac0a9699d238608f568e58c306f8d9b1df3eee79521fb32e7aca8565d314ab5552c317e6bd5d1d251b272fb19f7b0e6caac8d69569e18aeefb74bcd1f52cf2080b88cf7eb2500c866b0afb3dca2291760537eddbc83c751521f7e372bb52f35c29ba3be56787a9c14ba7db3f53b80f3175a8e99a7a9f79a8be420f4e04d8aea8f0dee8d6718b1a17a96571f2bae24a8f608e1477128dbed55ca0ef83d288ee901e85c1571cad76e5995b7e31834fc6e0135b5629889e9c8706ae731eeb77bd9d3b91ebc3c07673f83c0d6b26c4c055e97c84c5341779c27c7983a141fc532f39905e57ee821aa223835e4c18c0c2b4e585147dbf8920b277c6006d8a383889921920978bc88173e82a60c9665b793ec0224d01be9a4286370f5281e580f3eadc525f06806c90292185a772cbe523b62fc7e0ed65638c7758219b91819ff79ec03380af471320c1f61eeca8f648367be66dde8635fad3982cfe4adad4be00427269e64359fcdc328a328b2eca78c7c89eb8b636c2e23926739790e87559bff49b1dd002330b55d72318f2a8ebf3d6ab900bd76cde4ad1a7764583f966bb779fc1dfc0be36b95b12349924d9a06cd836033cbe0dcff0946b1f22e681c30c919c5b520e64c393b056b2ed2feb69b33e8305b1da90ecdd3aeb6474760c99d95124df01042876bd7eb1194b2d1f678108329b1a76158eaba0d978d50469307d33a9eb9d6c40c84742c44d67ae13292484f67a2306df49e33b2089d250c87d7ebeee0aa42c896636c227a446ae1e20d8f3fc7178e309c1124424003286ef59d079c55f22657a05176d745705e76243ed515fe16c86894a9e833890b9f16203713926051ce1c30acdc6bbf34d1d25b4db6b06a9b14b06a49ff3768d25408fb9f35b77759bff68fa76d843a68cb65c94b7dcf78e9f5aa3063499bd0b922276d991c6aacb6cb6c63cda8635f004d206a922971cdf07c43a641471e77e1a5ec16c22690cafffce81137e12ec61705c42b99b86dd0a050264b8c5b864c9f3b33948ed19c07074ed24bb0c552ba469123385229cb1e4cf2a07d1d7e8e5114f5351f2bcd845be2798b914bedbcbf3de98eedca65ff71bdf75ebbb1f4d1957f2234c65b027c56b262d4a4be4d3071ab7de994d0cf367a2e8586ec4e39631ef1ebdefc12073960aef9d0cb4e82295c02b2584e6afa34d7fd90d62aaebfaadd3bf5861cd0e65caea242a401a7b090a1115704041fb289eb374317797f3e9dbbcde2c5d8e8adc7d345321b831664c5e426470e3a59441702c314b356ecc74aed3499537f5f8d58a1fcc80ffd39c565de93584d879f6710a5d94f81143446c6afe0366f117e6aca8a8de4616c19eb69587077363c4a40cb1d7287ba1c489cb9e55ce04e85c79db4e4de98214b7f717d90e174084e480dcfcb9a039690ac227dd6a424d3c15e72028cd8008c45ba18bfbeb974c64515730bcae41e9f0f9a51e97342dac2077aa2c291fd5dc9fb3f7925ed6cbd1fff7520b478476ed0dd4d32bf116a005bb079a3e8fdf2d722aabc1f73493397c3e9464ac2db664fb1dd978a973386ba2284d2a9eafbe54dcacd6472b7fd4c507e81c2df0180b6f61a90d8ad812fb41e7e47d88c2f3ecaf2ed018dd4809e13728f55bcc64fffdf7aab7ea1e9c571acbfc91ce67d0539d57bba9076ee4cd066e198ea75bccb84321e274c56cda726b16d94940c26f4abc292fb8de3bf0733fea96a5b5b5701893ae865fd079fe390d0ce807298da14ca3931e44ee0ddf085a8ac61580689f36d334cf41ca523b3abdd1c5a96f53a758f4a8a10517d0b75dc5c5c7f92e24dc76cc3f3c1a7b4bd109143e72616dbcf47b4fe872592e6f9881e17ad819b6f01b5775c705831dc6e4d986ef12fae1791969ef85a6c6af8865d65e9a516043e4c5926cb8f4edf03488c5b38c3da186b37be829599a198a1978bac2bc4452e7105ceb1f5aabd2f6d9b61694119ce55bfed3339959dab13d03681fd9426d6c3c7f1def6c8fe0d49ae915c9b9a7671b6ea4b0c0c47ca1ea48fc2e564d4aa7f00a82386e97d8e50e1517a30ab482fa785332450d6846d968ec135b8da809b04afbc68995fb53878f32a80bbaca4380d83afe6afdc97384c3b7767105a5cf752fdc9ddd0ede993cbd673e6b7090099aa66f11522071b742f81e85d1bd50eac1fecb3940c0a7068b9f0d867bd35ba42a5cb92c16c72c392b6279b87d8cfeee3b05751446d0cf8c1487d70ec0629a7661077c62b3a97fd9eb3701317d17e61771ad63b6bd41c2f0dc39c89218ee3e969397e8bc988c7a3e8a58d206531b14a42561a78323f709bd1179e239a083988d242c13c8f299afe670d56d8142e11191d01e3c7de9f451f7fdfeeca42ceec237d36cf255aea9a49037862158b67d07e704688cb75748f8d7224e7c696c2f59cf7a0fa19fd508981e3989ec9c01b4bc45e42ce0ce51d40a0af508118816f940b6fedf9e02d23203b0e08ca95f19588b101154b00cfe75626d0e5b255aa1889da04ceb576ef40e89e9db72e63063b91abeeae81cd876d0f6a887e4e4782ebb3549890e6781ff84243ce4ac9d35083d52e4b6f06f4c3dcf346091cf131e32e6e6532e6162fb6ecbd8617dd22f00532478731345d1a37b8300fc89b7c8e2c2d6a89ae93c135ed90bae3998ad297c0484cbad42c68bcd7fefca1f1938749e562cb17d5ff15adcff91fe202ac795c2a25026940fa0fda3bfaa1e5013f7a8a97548b80047f0662ca901c4e6efd7d6eac7faf092463826854aebfdebe78d72af6ae98b5655cbb73768954ad631df191befa5c6243e6661d2d87d26bdd165b61c5b75ba815a124cc8b46fffd79617fe44353a754c24b7420b3950be5f1e7eb2eab254ecdab0170b8a3582952a9cb4bd51a030ce8cdd934957ee7e8b326e1bea0fc3ae5629153557e863394596e1fc135c131c8ba4aaddda9b68cf33bef957fa7d14cddd186a10b7138a497ad1c837714f4b031f9926c4d0212636ccef5b5657eb6cf17bce54fa1c6b51850a2c189f046cad634fd4e76fc5cb85d39ba3fb77bd82f988dc3350ba9238fea28a2eea494db1382ca9c982e52dae04a00f8f43ef7a43690635401a199af1277975fee78061268e900cda02afeb21635517b2bede248155eebf79bad36a3afdb6e8234af795c586da8c2b6ef531742e04544de1e7f8925f9f11832bbeb799a40be59e44f6cc855fb75d447caa20fc710c07ae1862e7d172caff47aba34fd82ef78b72ba637c9a65c609038a3d55f3e34a15c1ec48e803c302036a84cca59fa23b5f29c5dd2f0c8a70c6b4b0b7011680b12273634192862c0d7f85ca23eee5b15c188033bd95460a6a98caab6aed1a332e017bf08b004095b18d54778aa4c433fe38a0f7cdc71b8be1409a760ad49ea1bf000b41429e9f78d1a270621b2f90e58b44fb3d3865b5ddccf8e627c9f7c9b29c8652b7233baea985263a58df3c2ba6d2ee8436e5a2ab7cc62077015c8cd3e1f08014c57773504801c93c6ca9b13d7e2183e8209b7ad6222c8c59a0f59d6786a266d024c0f2498859b58d92241c1f4df7495576132377c62cffc3fcc12841a8461af212ca3d5026dd55c42c6c1fa915c17817b24a819a6289d1b319663a7955f45353f91674955c56bb3ee98c18819ffdecdb256f53b52a186a1384af3a750128b8c656ec05628d952fd602fbf62c97beb47cf18c9d3b7af8130ab132ae1f67766115f8153f84ee601569c6ba473e8ebe9d6b2dcd436f1ffae6634edb7e7ec667877e9a34fba529c4d70283efbe03ce5d563883cadaf4a86277e6af25c2bf2284263eff47488af341c23e055daf50a90d6bf3090bc8c11528dbf7201efe2c66833f2a0ea0244447986207ee2dfb6cd7f1970b29244557b72dc3ba48a684ac173aee1eb4506fe50b7a69950abd51220d3fd44a96012a5293f8a5a666cab3d591d97209638b23f620d4f6360241ae5b340cc74b677c84c05d896f900dd1dee6c845a7473c977fda7b203edd31683bad0ed9d48a02655e8f03275fc9001f54cd447153ae63078f5b35d41f654c259684ddf29e1e933b47da7a1d2d19abb2bb1a3007c2f0e46b587be4e2056a46b3e2e9cb3462a88c54b6ed059245c31ab5e420b61e1769f853f0745f8c093690a0f7b713c8cb71dbcbefd7639a41af69b492b3d135bdc73f8167fe2f552b2e1d096aa83dcb46e879c9cdacd44d06c61c426b37bf463468f9c34c1502bdb40c17373a5bd186dc0c32cb596a2f6fd5b7983675a620dd3a29558ecef0ec4a8afa35a73f366469083f167dfc016347bba2c71b52597440c9b478b889804b705b1fb33249747d7a73f441c73574906cfc73f28fc3b4504576f7c13062ef6b3158da1f974971a37f98fece39acfd84c8e822f5b5b7ca9b27bf43eb20e6df5113ef9e2563d68cb90680385a7e0586cc299e20157654e0f2ce891e6af34d734768ce424f780ee4671b7dca58384d187e75d32a9227ef2ab8641c98b01a5f41bfd336950baf7f305aa903e1001e6ae9f771022910cc827b4aace9e0c5e99805bfe481b96a01354f5ab8552a6040be53b231b9fc3d16ec9aba4b10badda9e605e3b357416e25e8566c6a9d91ab7ce3c5c834a4e9105385bb51ff0a7485ad4706c2f0cbcbb9b163b760b585fc918fe1feee1923e162c0b85adcd669bea45662dc6f0d54275e4ab1c027e8cbd990ef707bd076d9f8f725e27e1d40b11b335e222da4a32393cf93fdad85770ec4fc89d096e46d1d40695d80646e2d77693543ccadcf3f57f9e735b1f81cf01ba564e364e62237da2144edb774792bdd292fa00d99e79252d5fac5b03abb7df44a089629e909e561276244e610f2bc8a0454a4829f49ca4f172355f1207d0a0adef0ed5e39a2ed3fa594d320457b12993fdcfdac9a0e4011c0ff92379d28d357ccada8cdf5a6d8381eab9bec4ad28b1978481e5106c594545b7698348b69039f879ddaddbfdff7114e304d69c4a9105372efceb39da361a3a334cc499f304c86e612a1c381c95e96ea72977b78588c096bcaf8c0658e94df8bbbdb9353c90fb2c566808f0e42040887179888a44718f02e863f90fb0e502117bd6474b3baa1a9a072aeb51f749bf7ab3af96131446f16acfd9114214e48722c4e8483a1f061f7eb7ca7cc69f64979b38bc4870645371dd1d3c9233c83d404cde690e79202dc9e0ad9a021faa66e20b524b20c13e01dd72927c7602b7d98d8784ea82297d2a52961612d3eecba9c26fc1d887e14aae4d7d77861d1bcde6ff5dec2553e179414c15536fa5e32dd01324d71e55d3c11266228207687586bd0d1340cc746f7240111867ed81fa00429469e675f5a3cc6fcb5aa29a6995b40751eb3eb6732919044576e32f74ea10c9f95284c1373890ad05b55e93e893e6ce87f0a4163e69413b223de39a5850d57f7d3cb9ae51f4e4d33dbee832d8eb556ae8fb313899d9733a0aad893e461736adcb68949e35680f9393962a6371da9b464ae83bab31feeba6eab486c6a76ce1903a8c52c6b2923b5e2266e948058207b0939138515bcf4380c62a424968dd1aa4bd865cb48d8441ecb1e0fc342e8acbf7b0d9e5df20e3a5c83fb7053cd4199125029751b3670b7df4208a738a038f2bcf12e968f740cd7adb01b0550eb03923587633bd74ee31f2dfcb6ba44a67f26697778d110043397d1d9ec63c3669d5238f5a1f20cffafe8acb708e1b6252c08d2a9d3d36cfa5889843bd55f05a3c10deef68c18baa01902f4681cc5458737d812c64f28b727d71cef7014e26e0c062d6316d5bec742ff7957ab7ace70050d2f41360b668a311f8aa7bfa40a8dd888d5db947ffe0f931179f9e7bac09d0bcfff1c5bba0a0ef4d624b646766775e3e756c13c14cdc2c760507b1bfa721de0bd968774c6948b33c1c9c1859fe7b054aaaff4f93e05b54ac1e7920303c84cf317baac490c38baf67397fcadd0e12d10ba3362f8bf0bc854ca5d830a60f4f4187ab5dc0bd4d0a85426c06f2b812684e6612f3176e7bbee194072aad8f10559cb495e36e3ebab3a00647ea0ab2199f3b6cb69336ee91739ba4a0cbfac54e44d8d1d6b019e0b58a85c9b340badbb98889ddd69757c20b38c9fcdd46a2b88b07dfb88d42033e9ebb40f581f83475765951040102208dc628d74328c4e2c4e5b4734ecfc7dec58ffa8fbbf3e2208b5486b999a2a2c930a669299905a85942e682591d54a998ab56d5ce5c9c85dcbe381dcf79183cd6487601d583217e451e58deb726252590596829b95a71aef9227b6d81dfb61a0e9babf70a7db559e4458fa52208277ea894a559c95ff252a37ac82bcb8450f2ad7c1d2552f2fd2be3ae19a56d1cf259c89b1b4ba1e3e481ce555ccbb992ec237677890eb87645d517b5958047f9408c3d0fc7f0e145417df7979b41765b64c0c220f20bf9a227a0170fada441dc97ef665af589ba487ec688288980653dd452e9340a4919ca8c62d9145931552dab35be67c1cf368c07d</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇未公开文章。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>jenkins运维篇</title>
    <link href="https://www.xxlaila.cn/2019/10/22/jenkins%E8%BF%90%E7%BB%B4%E7%AF%87/"/>
    <id>https://www.xxlaila.cn/2019/10/22/jenkins运维篇/</id>
    <published>2019-10-22T01:22:52.000Z</published>
    <updated>2019-10-28T13:57:20.321Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="jenkins-可视化构建"><a href="#jenkins-可视化构建" class="headerlink" title="jenkins 可视化构建"></a>jenkins 可视化构建</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在之前遇到过开发提交代码后，完全不管提交的代码是否发布成功，及时后来加入了企业微信的告警机制，但是依然有人不会去关注这个。<a id="more"></a> 只有在测试人员在反馈xxx你的代码提交了没有，这时候研发人员才回去看，有时候一个触发构建失败了，摆在那里很久，如有下一个开发人员要对这个工程修改提交的时候发现过不了，这时候再来解决，成本就有点大。这里可以借助看板的形式让研发人员可以随时关注到自己的提交的工程，结合告警来做，效果还是不错的。</p><h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装Build Monitor View 插件，然后在主页面添加<code>+</code>一个视图<br><img src="https://img.xxlaila.cn/1571707794737.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以根据job的类型或者根据自己的条件进行<a href="https://xxlaila.github.io/2019/08/09/jenkins-job%E7%AE%A1%E7%90%86/" target="_blank" rel="noopener">过滤job</a>来生成看板。</p><ul><li>Build Monitor - View Settings: 根据job的一些状态来进行排序<br><img src="https://img.xxlaila.cn/1571708048469.jpg" alt="img"></li></ul><h3 id="jenkins-监控"><a href="#jenkins-监控" class="headerlink" title="jenkins 监控"></a>jenkins 监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有时候我们没有监控，但是有时候需要看看jenkins的一些监控信息，如：内存、cpu、系统负债、http响应时间、系统进程数、线程数等，有懒得安装监控，这时候我们可以借助jenkins自带的一个插件<code>Monitoring</code>。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件安装完成后，我们可以在系统管理菜单下面看到<code>Monitoring of Jenkins master</code><br><img src="https://img.xxlaila.cn/1571708499625.jpg" alt="img"></p><p>点击进入以后我们可以看到<br><img src="https://img.xxlaila.cn/1571708561404.jpg" alt="img"><br>页面显示乱码，这个可以自己google解决</p><h3 id="Build-Trigger-Badge"><a href="#Build-Trigger-Badge" class="headerlink" title="Build Trigger Badge"></a>Build Trigger Badge</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此插件直接在构建历史记录中显示代表构建原因的图标。它可以让您快速知道是哪个原因触发了构建。如果没有此插件，您有时可能会想知道是什么触发了构建历史中显示的&gt;&gt;特定构建。要知道这一点，您必须单独打开每个链接，这可能很麻烦。<br><img src="https://img.xxlaila.cn/1572059619062.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;jenkins-可视化构建&quot;&gt;&lt;a href=&quot;#jenkins-可视化构建&quot; class=&quot;headerlink&quot; title=&quot;jenkins 可视化构建&quot;&gt;&lt;/a&gt;jenkins 可视化构建&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在之前遇到过开发提交代码后，完全不管提交的代码是否发布成功，及时后来加入了企业微信的告警机制，但是依然有人不会去关注这个。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>pipeline语法</title>
    <link href="https://www.xxlaila.cn/2019/10/21/pipeline%E8%AF%AD%E6%B3%95/"/>
    <id>https://www.xxlaila.cn/2019/10/21/pipeline语法/</id>
    <published>2019-10-21T07:26:19.000Z</published>
    <updated>2019-10-28T03:35:08.785Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="pipeline"><a href="#pipeline" class="headerlink" title="pipeline"></a>pipeline</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近在测试k8s上的ci/cd，之前的ci/cd其实也能满足目前先业务的需求，但是想尝试改进一下，优化以前的job，希望在登录ci的时候更加的简洁，<a id="more"></a> 而且查找job的时候，点击一个job就能查看完整的信息，不需要job之间的来回切换，等等各种理由，😁😁。这里使用jenkins pipeline，起初测试的时候使用pipeline，没问题以后，使用jenkinsfile。</p><h3 id="pipeline-常用介绍"><a href="#pipeline-常用介绍" class="headerlink" title="pipeline 常用介绍"></a>pipeline 常用介绍</h3><h4 id="清理历史build"><a href="#清理历史build" class="headerlink" title="清理历史build"></a>清理历史build</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;普通job的时候清理和保留历史job的build 很简单，勾勾就可以啦，但是pipeline就的使用一下方式，而且还的写在最前面，不然识别不了，会报错的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">options &#123;</span><br><span class="line">        buildDiscarder(logRotar(numToKeepStr: <span class="string">'8'</span>))</span><br><span class="line">        disableConcurrentBuilds()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>buildDiscarder: 保持构建的最大个数</li><li>disableConcurrentBuilds: 禁止并发构建</li></ul><p>详细参数:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buildDiscarder(logRotator(numToKeepStr: <span class="string">'8'</span>, artifactNumToKeepStr: <span class="string">'8'</span>, daysToKeepStr: <span class="string">'8'</span>, artifactDaysToKeepStr: <span class="string">'7'</span>))</span><br></pre></td></tr></table></figure><ul><li>artifactDaysToKeepStr: 发布包保留天数</li><li>artifactNumToKeepStr: 发布包最大保留#个构建</li><li>daysToKeepStr: 保持构建的天数</li><li>numToKeepStr: 保持构建的最大个数</li></ul><h4 id="gitlab事件触发"><a href="#gitlab事件触发" class="headerlink" title="gitlab事件触发"></a>gitlab事件触发</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之前的我们的ci/cd都是开发提交到某一个分支，然后jenkins会自动触发编译、发布，而且配置这个步骤也需要好几步才能实现，但在pipeline中也可以通过代码形式最这种触发器(勾子)进行配置。这样让每个项目都和jenkins进行耦合；运维人员只需要专注的维护Jenkinsfile，创建对应的项目即可。gitlab触发jenkins的构建需要依赖Gitlab插件。这里需要自行安装</p><ul><li><p>接受固定的分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">        gitlab(triggersOnPush: <span class="literal">true</span>,</span><br><span class="line">              triggersOnMergeRequest: <span class="literal">true</span>,</span><br><span class="line">              branchFilterType: <span class="string">"NameBasedFilter"</span>,</span><br><span class="line">              includeBranchesSpec: <span class="string">"dev,test,master"</span>,</span><br><span class="line">              secretToken: <span class="string">"<span class="variable">$&#123;env.git_token&#125;</span>"</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>triggerOnPush: 当Gitlab触发push事件时，是否执行构建</p></li><li><p>triggerOnMergeRequest: 当Gitlab触发mergeRequest事件时，是否执行构建</p></li><li><p>branchFilterType: 只有符合条件的分支才会触发构建，必选，否则无法实现触发。</p><ul><li>All: 所有分支</li><li>NameBasedFilter: 基于分支名进行过滤，多个分支名使用逗号分隔<ul><li>includeBranchesSpec: 基于branchFilterType值，输入期望包括的分支的规则</li><li>excludeBranchesSpec: 基于branchFilterType值，输入期望排除的分支的规则</li></ul></li><li>RegexBasedFilter: 基于正则表达式对分支名进行过滤<ul><li>sourceBranchRegex: 定义期望的通过正则表达式限制的分支规则</li></ul></li></ul></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;所以分支不阐述，其他的两个选项是最实用的，我们在正式使用的时候一定会用到这个，上面的例子是一个接受固定的几个分支</p><ul><li>匹配的方式<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">        gitlab(triggersOnPush: <span class="literal">true</span>,</span><br><span class="line">              triggersOnMergeRequest: <span class="literal">true</span>,</span><br><span class="line">              branchFilterType: <span class="string">"RegexBasedFilter"</span>,</span><br><span class="line">              sourceBranchRegex: <span class="string">"dev.*"</span>,</span><br><span class="line">              secretToken: <span class="string">"<span class="variable">$&#123;env.git_token&#125;</span>"</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里的git_token需要在jenkins的全局变量里面添加一个<code>Environment variables</code>对应的一个键值即可。</p><p><strong>注</strong>: 所有的触发器都需要先手动执行一次，让jenkins家在其中的配置，对应的指令才会生效。</p><ul><li><p>jenkins 验证<br><img src="https://img.xxlaila.cn/1571644117201.jpg" alt="img"></p></li><li><p>gitlab验证<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要将项目回调地址写入到Gitlab钩子当中才可以。经过测试一个pipeline的job可以管理多个分支的触发，避免之前的每一个分支的job进行触发。</p></li></ul><h4 id="parameters-模块"><a href="#parameters-模块" class="headerlink" title="parameters 模块"></a>parameters 模块</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该模块需要安装，parameters指令提供用户在触发Pipeline时应提供的参数列表。这些用户指定的参数的值通过该params对象可用于Pipeline步骤。研发经常会有打出一个特性分支，这个分支用于hotfix，这个时候就要给研发提交一个可以选择的分支，然他们去部署到对应的环境。</p><ul><li><p>字符串参数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;定义一个字符串参数，用户可以在Jenkins UI上输入字符串，常见使用这个参数的场景有，用户名，收件人邮箱，文件网络路径，主机名称的或者url等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    string(name: <span class="string">'DEPLOY_ENV'</span>, defaultValue: <span class="string">'staging'</span>, description: <span class="string">''</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>布尔值参数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;定义一个布尔类型参数，用户可以在Jenkins UI上选择是还是否，选择是表示代码会执行这部分，如果选择否，会跳过这部分。一般需要使用布尔值的场景有，执行一些特定集成的脚本或则工作，或者事后清除环境，例如清楚Jenkins的workspace这样的动作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    booleanParam(name: <span class="string">'DEBUG_BUILD'</span>, defaultValue: <span class="literal">true</span>, description: <span class="string">''</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>选择参数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;选择（choice）的参数就是支持用户从多个选择项中，选择一个值用来表示这个变量的值。工作中常用的场景，有选择服务器类型，选择版本号等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    choice(name: <span class="string">'ENV_TYPE'</span>, choices: [<span class="string">'dev'</span>, <span class="string">'test'</span>, <span class="string">'product'</span>], description: <span class="string">'dev env test'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当然parameters模块我们用的最多的是在手动的时候我们可以手动点击进行构建部署，至于其他的目前我暂时未用到</p><ul><li>选择分支部署<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent &#123;label <span class="string">'agent-node'</span>&#125;</span><br><span class="line">    parameters &#123;</span><br><span class="line">        gitParameter branchFilter: <span class="string">'origin/(.*)'</span>, defaultValue: <span class="string">'dev'</span>, name: <span class="string">'BRANCH'</span>, <span class="built_in">type</span>: <span class="string">'PT_BRANCH'</span></span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">'gitlib code'</span>) &#123;</span><br><span class="line">            steps&#123;</span><br><span class="line">                git branch:<span class="string">"<span class="variable">$&#123;params.BRANCH&#125;</span>"</span>, credentialsId:<span class="string">'gitlabUser'</span>, url: <span class="string">"http://gitlab.xxlaila.cn/xxx/kxl-eureka.git"</span></span><br><span class="line">                script &#123;</span><br><span class="line">                    build_tag = sh(returnStdout: <span class="literal">true</span>, script: <span class="string">'git rev-parse --short HEAD'</span>).trim()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>parameters<a href="https://wiki.jenkins.io/display/JENKINS/Git+Parameter+Plugin" target="_blank" rel="noopener">官方参考</a>，介绍得挺详细的，<a href="https://mohamicorp.atlassian.net/wiki/spaces/DOC/pages/136740885/Triggering+Jenkins+Based+on+New+Tags" target="_blank" rel="noopener">辅助参考</a><br><img src="https://img.xxlaila.cn/1571651950634.jpg" alt="img"></p><ul><li>还可以写成<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    gitParameter(</span><br><span class="line">        branch: <span class="string">''</span>,</span><br><span class="line">        branchFilter: <span class="string">'origin/(.*)'</span>,</span><br><span class="line">        defaultValue: <span class="string">'dev'</span>,</span><br><span class="line">        description: <span class="string">'test code'</span>,</span><br><span class="line">        name: <span class="string">'BRANCH'</span>,</span><br><span class="line">        quickFilterEnabled: <span class="literal">false</span>,</span><br><span class="line">        selectedValue: <span class="string">'NONE'</span>,</span><br><span class="line">        sortMode: <span class="string">'NONE'</span>,</span><br><span class="line">        tagFilter: <span class="string">'*'</span>,</span><br><span class="line">        <span class="built_in">type</span>: <span class="string">'PT_BRANCH'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里有一个问题：当这里设置了可以选择分支的时候，然后在之前的自动触发就会有问题，就是在去分支拉去代码的时候就一只是dev分支，而不是其他的分支，这里仍然在探索的测试中。<br>编辑job可以看到<br><img src="https://img.xxlaila.cn/1571903055002.jpg" alt="img"></p><h3 id="多分支pipeline"><a href="#多分支pipeline" class="headerlink" title="多分支pipeline"></a>多分支pipeline</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;按照上面的又要支持用户可以选择分支，又要适合自动触发功能。用单分支pipeline来管理项目，又要回到我们最初的模式，而在实际过程中，我们可以用到多分支同时进行开发。这样就满足了我们的实际需求。多分支任务这里不做过多的详细介绍，这里阐述两个功能点；分别是分支的扫描策略和孤儿项策略(Orphaned Item)。</p><h4 id="分支的扫描策略"><a href="#分支的扫描策略" class="headerlink" title="分支的扫描策略"></a>分支的扫描策略</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分支扫描是jenkins根据一定的策略去代码仓库扫描分支，如果有新分支就创建一个以新分支命名的任务，如果发现分支被删除，就删除对应的jenkins任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在”扫描多分支流水线触发器(Scan Multibranch Pipeline Triggers)”下有一个: Periodically if not otherwise run（没有手动触发，就定期扫描分支）。选择此项，设置一个扫描间隔时长。可以根据项目分支的频繁程度设置周期的长短，也可以在任务页面手动触发jenkins进行扫描。<br><img src="https://img.xxlaila.cn/1571973819297.jpg" alt="img"></p><h4 id="孤儿项策略-Orphaned-Item"><a href="#孤儿项策略-Orphaned-Item" class="headerlink" title="孤儿项策略(Orphaned Item)"></a>孤儿项策略(Orphaned Item)</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该功能是在代码仓库中删除了release分支，那么在多任务页面上，该分支在jenkins上的任务也应该对应删除。什么时候删除，取决于下次分支扫描时间。如果代码仓库中的分支被删除，而jenkins上响应的任务没有被删除，那么这个任务就是所说的孤儿任务。对于分支任务的历史记录，保存多长时间设置</p><ul><li><p>界面配置<br><img src="https://img.xxlaila.cn/1571974190710.jpg" alt="img"></p></li><li><p>pipeline 写法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">orphanedItemStrategy &#123;</span><br><span class="line">    discardolditems &#123;</span><br><span class="line">        daysTokeep(10)</span><br><span class="line">        numToKeep(5)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>注</strong>: 这里孤儿策略pipeline 需要另外一种方式来支持，<a href="https://gitee.com/jenkins-zh/gitlab-branch-source-plugin" target="_blank" rel="noopener">Setting up GitLab Server Configuration on Jenkins</a>，这里没有用到这个，不做过多的阐述。<a href="https://github.com/jenkinsci/job-dsl-plugin/wiki/Migration" target="_blank" rel="noopener">github参考</a></p><h3 id="多分支的自动触发"><a href="#多分支的自动触发" class="headerlink" title="多分支的自动触发"></a>多分支的自动触发</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分支的触好处是多多的，自然在多分支面前自动触发肯定也少不了。多分支的触发有两种模式，分别是前面提到的Gitlab trigger和Generic Webhook Trigger。下面分别对两种模式进行阐述和实际的测试</p><h4 id="Generic-Webhook-Trigger"><a href="#Generic-Webhook-Trigger" class="headerlink" title="Generic Webhook Trigger"></a>Generic Webhook Trigger</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generic Webhook Trigger 插件需要提前安装，GenericTrigger触发条件是由GWT插件提供，GenericTrigger触发的条件分为5个部分。<a href="https://wiki.jenkins.io/display/JENKINS/Generic+Webhook+Trigger+Plugin" target="_blank" rel="noopener">GenericTrigger官方参考</a></p><ul><li>从HTTP POST请求中提取参数</li><li>token，GWT插件用于标识jenkins项目的唯一性</li><li>根据请求参数值判断是否触发Jenkins项目执行</li><li>日志控制打印</li><li>webhook响应控制</li></ul><h4 id="GerenericTrigger-的写法"><a href="#GerenericTrigger-的写法" class="headerlink" title="GerenericTrigger 的写法"></a>GerenericTrigger 的写法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">    GenericTrigger(</span><br><span class="line">        genericVariables:[</span><br><span class="line">            [key: <span class="string">'ref'</span>, value: <span class="string">'$.ref'</span>]</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        token: env.JOB_NAME,</span><br><span class="line">        regexpFilterText: <span class="string">'$ref'</span>,</span><br><span class="line">        regexpFilterExpression: <span class="string">'refs/heads/'</span> + env.BRANCH_NAME</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.BRANCH_NAME 这里指的是分支名。当然这样修改以后是不行的，是达不到自动触发的，需要自行去gitlab上添加钩子，这里经过测试流程：用户修改dev分支，push到gitlab dev分支可以触发任务的dev分支自动构建；合并到test分支，也可以触发test分支自动构建；在合并到master分支也能自动触发任务的master分支自动构建。<br><img src="https://img.xxlaila.cn/1571984557618.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们要实现这块，要理解知道这个东西，首先要知道gitlab push 数据的格式，知道了gitlab push格式，我们才知道应该怎么操作，<a href="https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#webhooks" target="_blank" rel="noopener">gitlab push数据的格式参考</a>，</p><ul><li>参考<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"object_kind"</span>: <span class="string">"push"</span>,</span><br><span class="line">  <span class="string">"before"</span>: <span class="string">"95790bf891e76fee5e1747ab589903a6a1f80f22"</span>,</span><br><span class="line">  <span class="string">"after"</span>: <span class="string">"da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">  <span class="string">"ref"</span>: <span class="string">"refs/heads/master"</span>,</span><br><span class="line">  <span class="string">"checkout_sha"</span>: <span class="string">"da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">  <span class="string">"user_id"</span>: 4,</span><br><span class="line">  <span class="string">"user_name"</span>: <span class="string">"John Smith"</span>,</span><br><span class="line">  <span class="string">"user_username"</span>: <span class="string">"jsmith"</span>,</span><br><span class="line">  <span class="string">"user_email"</span>: <span class="string">"john@example.com"</span>,</span><br><span class="line">  <span class="string">"user_avatar"</span>: <span class="string">"https://s.gravatar.com/avatar/d4c74594d841139328695756648b6bd6?s=8://s.gravatar.com/avatar/d4c74594d841139328695756648b6bd6?s=80"</span>,</span><br><span class="line">  <span class="string">"project_id"</span>: 15,</span><br><span class="line">  <span class="string">"project"</span>:&#123;</span><br><span class="line">    <span class="string">"id"</span>: 15,</span><br><span class="line">    <span class="string">"name"</span>:<span class="string">"Diaspora"</span>,</span><br><span class="line">    <span class="string">"description"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"web_url"</span>:<span class="string">"http://example.com/mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"avatar_url"</span>:null,</span><br><span class="line">    <span class="string">"git_ssh_url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"git_http_url"</span>:<span class="string">"http://example.com/mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"namespace"</span>:<span class="string">"Mike"</span>,</span><br><span class="line">    <span class="string">"visibility_level"</span>:0,</span><br><span class="line">    <span class="string">"path_with_namespace"</span>:<span class="string">"mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"default_branch"</span>:<span class="string">"master"</span>,</span><br><span class="line">    <span class="string">"homepage"</span>:<span class="string">"http://example.com/mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"ssh_url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"http_url"</span>:<span class="string">"http://example.com/mike/diaspora.git"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"repository"</span>:&#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"Diaspora"</span>,</span><br><span class="line">    <span class="string">"url"</span>: <span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"homepage"</span>: <span class="string">"http://example.com/mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"git_http_url"</span>:<span class="string">"http://example.com/mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"git_ssh_url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"visibility_level"</span>:0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"commits"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"id"</span>: <span class="string">"b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327"</span>,</span><br><span class="line">      <span class="string">"message"</span>: <span class="string">"Update Catalan translation to e38cb41."</span>,</span><br><span class="line">      <span class="string">"timestamp"</span>: <span class="string">"2011-12-12T14:27:31+02:00"</span>,</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"http://example.com/mike/diaspora/commit/b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327"</span>,</span><br><span class="line">      <span class="string">"author"</span>: &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"Jordi Mallach"</span>,</span><br><span class="line">        <span class="string">"email"</span>: <span class="string">"jordi@softcatala.org"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"added"</span>: [<span class="string">"CHANGELOG"</span>],</span><br><span class="line">      <span class="string">"modified"</span>: [<span class="string">"app/controller/application.rb"</span>],</span><br><span class="line">      <span class="string">"removed"</span>: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"id"</span>: <span class="string">"da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">      <span class="string">"message"</span>: <span class="string">"fixed readme"</span>,</span><br><span class="line">      <span class="string">"timestamp"</span>: <span class="string">"2012-01-03T23:36:29+02:00"</span>,</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"http://example.com/mike/diaspora/commit/da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">      <span class="string">"author"</span>: &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"GitLab dev user"</span>,</span><br><span class="line">        <span class="string">"email"</span>: <span class="string">"gitlabdev@dv6700.(none)"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"added"</span>: [<span class="string">"CHANGELOG"</span>],</span><br><span class="line">      <span class="string">"modified"</span>: [<span class="string">"app/controller/application.rb"</span>],</span><br><span class="line">      <span class="string">"removed"</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"total_commits_count"</span>: 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果我们想根据不同的分支提交来触发jenkins的构建，那就应该知道post数据哪一个属性代表了不同的分支，我们可以在第四行看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"ref"</span>: <span class="string">"refs/heads/master"</span>,</span><br></pre></td></tr></table></figure><p><strong>注释</strong>: 也可以通过IDEA工具提交的时候看到提交的选项。可以看到我们用ref可以很好的区分不同分支，这里就是为什么要填写ref的原因。我们可以通过pipeline代码的生成器来生成</p><ul><li>pipeline 代码生成器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">  GenericTrigger causeString: <span class="string">'Generic Cause'</span>, genericVariables: [[defaultValue: <span class="string">''</span>, key: <span class="string">'ref'</span>, regexpFilter: <span class="string">''</span>, value: <span class="string">'$.ref'</span>]], printContributedVariables: <span class="literal">true</span>, printPostContent: <span class="literal">true</span>, regexpFilterExpression: <span class="string">'\'</span>refs/heads/\<span class="string">' + evn.BRANCH_NAME'</span>, regexpFilterText: <span class="string">'$ref'</span>, token: <span class="string">'env.JOB_NAME'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img.xxlaila.cn/1571982583457.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571982622070.jpg" alt="img"></p><p><strong>注</strong>: token参数的作用是标识一个pipeline在jenkins中的唯一性，这个参数的重要性就得提起GWT插件的原理。当jenkins收到generic-webhook-trgger/invoke接口的请求时，会将请求代理给GWT插件处理，GWT插件内容会从jenkins实例对象中取出所有的参数化jenkins项目，包括pipeline，然后进行遍历。如果我们在参数化项目中Generic Trigger配置token的值与webhook请求时的token一致，就会触发改项目。如果多个参数化项目的token一样，则都会进行触发，所以这里的token最好时JOB_NAME项目名，因为这个是在项目或者是在为服务领域他都是唯一的。</p><ul><li>参数介绍:<ul><li>regexpFilterText: 需要进行匹配的key，例子中，使用从post body中提取的ref变量值。</li><li>regexpFilterExpression: <a href="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html" target="_blank" rel="noopener">正则表达式</a>；如果regexpFilterText参数符合regexpFilterExpression参数的正则表达式，则触发执行。</li><li>printPostContent: 布尔值，将webhook请求信息打印到日志上</li><li>printContributedVariables: 布尔值，将提取后的变量名及变量值打印出来</li><li>causeString: 字符串型，触发原因，可以直接应用提取后的变量，如 causeString: ‘Triggered on $msg’</li><li>Silent response: 布尔型，在正常情况下，当webhook请求成功后，GWT插件会返回HTTP 200状态码和触发结果给对方调用，但是当Silentresponse设置为true时，就只返回HTTP 200状态码，不反悔触发结果</li></ul></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的看的出来，我们只要是提交了分支都可以进行触发构建，但是呢，在实际生产中，我们定义了dev——&gt;test——master 分支，就是只想要这几个进行触发构建，其他的不进行触发，让开发自己去点击。</p><ul><li><p>指定分支构建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">  GenericTrigger causeString: <span class="string">'Triggered on $msg'</span>, genericVariables: [[defaultValue: <span class="string">''</span>, key: <span class="string">'ref'</span>, regexpFilter: <span class="string">''</span>, value: <span class="string">'$.ref'</span>]], printContributedVariables: <span class="literal">true</span>, printPostContent: <span class="literal">true</span>, regexpFilterExpression: <span class="string">'\'</span>refs/heads/(dev|<span class="built_in">test</span>|master)\<span class="string">''</span>, regexpFilterText: <span class="string">'$ref'</span>, token: <span class="string">'env.JOB_NAME'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>多分支Gitlab trigger<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;多分支的Gitlab trigger和我们前面介绍的gitlab事件触发一样的，没有任何区别，这里我测试了一个job，没有任何问题。同时新建了一个分支，jenkins会自动的扫描新建一个以分支为名的任务，进行自动触发。当我删除了某一个分支，就会触发自动扫描，然后查看分支为删除。</p></li><li><p>删除分支<br><img src="https://img.xxlaila.cn/1571996378764.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571996257688.jpg" alt="img"></p></li><li><p>整体效果图<br><img src="https://img.xxlaila.cn/1571990331005.jpg" alt="img"></p></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里介绍一下部署这块，根据branch来进行判断，不同的branch部署到不同的环境，当设定的值不在branch范围内，就需要人为的制定部署环境。当人员三分钟内没有来进行环境部署的选择，系统就会断开，对该分支标记为结束。</p><p><a href="http://xxlaila.github.io/2019/10/25/pipeline%E5%A4%9A%E5%88%86%E6%94%AFgitlab%E8%A7%A6%E5%8F%91/" target="_blank" rel="noopener">完整文件</a><br><a href="https://jenkinsci.github.io/job-dsl-plugin/#path/buildPipelineView" target="_blank" rel="noopener">推荐学习参考地址</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;pipeline&quot;&gt;&lt;a href=&quot;#pipeline&quot; class=&quot;headerlink&quot; title=&quot;pipeline&quot;&gt;&lt;/a&gt;pipeline&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最近在测试k8s上的ci/cd，之前的ci/cd其实也能满足目前先业务的需求，但是想尝试改进一下，优化以前的job，希望在登录ci的时候更加的简洁，
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>elasticserch</title>
    <link href="https://www.xxlaila.cn/2019/10/17/elasticserch%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4/"/>
    <id>https://www.xxlaila.cn/2019/10/17/elasticserch日常维护/</id>
    <published>2019-10-17T03:23:17.000Z</published>
    <updated>2019-10-26T01:31:46.569Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="days-1"><a href="#days-1" class="headerlink" title="days 1"></a>days 1</h3><a id="more"></a><h4 id="elasticserch-索引和数据操作"><a href="#elasticserch-索引和数据操作" class="headerlink" title="elasticserch 索引和数据操作"></a>elasticserch 索引和数据操作</h4><ul><li><p>查看索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET 'http://127.0.0.1:9200/_cat/indices?v'</span></span><br></pre></td></tr></table></figure></li><li><p>删除索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET 'http://127.0.0.1:9200/_cat/indices?v' |grep "red"|awk '&#123;print $3&#125;'|uniq &gt;l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in `cat a`;do  curl -XDELETE http://127.0.0.1:9200/$&#123;i&#125;;done</span></span><br></pre></td></tr></table></figure></li><li><p>查看shards</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET http://127.0.0.1:9200/_cat/shards</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shards 有几种类型，这里说一下<code>UNASSIGNED</code>，es 集群里面的分片是分配在多台node上的，为的就是高可用，比如你的某台机器crash了，那么集群就会让其他副本顶上来，避免出现某个分片不能提供服务的情况，但是难免还是会出现 UNASSIGNED shards 的错误。</p><ul><li>删除shards UNASSIGNED<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET 'http://127.0.0.1:9200/_cat/shards'|grep "UNASSIGNED"|awk '&#123;print $1&#125;'|uniq &gt;l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in `cat l`;do curl -XDELETE http://127.0.0.1:9200/$i;done</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="elasticserch验证集群"><a href="#elasticserch验证集群" class="headerlink" title="elasticserch验证集群"></a>elasticserch验证集群</h4><ul><li><p>集群相关API</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat</span><br><span class="line">=^.^=</span><br><span class="line">/_cat/allocation</span><br><span class="line">/_cat/shards</span><br><span class="line">/_cat/shards/&#123;index&#125;</span><br><span class="line">/_cat/master</span><br><span class="line">/_cat/nodes</span><br><span class="line">/_cat/tasks</span><br><span class="line">/_cat/indices</span><br><span class="line">/_cat/indices/&#123;index&#125;</span><br><span class="line">/_cat/segments</span><br><span class="line">/_cat/segments/&#123;index&#125;</span><br><span class="line">/_cat/count</span><br><span class="line">/_cat/count/&#123;index&#125;</span><br><span class="line">/_cat/recovery</span><br><span class="line">/_cat/recovery/&#123;index&#125;</span><br><span class="line">/_cat/health</span><br><span class="line">/_cat/pending_tasks</span><br><span class="line">/_cat/aliases</span><br><span class="line">/_cat/aliases/&#123;<span class="built_in">alias</span>&#125;</span><br><span class="line">/_cat/thread_pool</span><br><span class="line">/_cat/thread_pool/&#123;thread_pools&#125;</span><br><span class="line">/_cat/plugins</span><br><span class="line">/_cat/fielddata</span><br><span class="line">/_cat/fielddata/&#123;fields&#125;</span><br><span class="line">/_cat/nodeattrs</span><br><span class="line">/_cat/repositories</span><br><span class="line">/_cat/snapshots/&#123;repository&#125;</span><br><span class="line">/_cat/templates</span><br></pre></td></tr></table></figure></li><li><p>查看集群名称等信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"elk_elasticsearch_data_2"</span>,</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elk_elasticsearch"</span>,</span><br><span class="line">  <span class="string">"cluster_uuid"</span> : <span class="string">"T47wQwa6TT-6MHJVFM40Tw"</span>,</span><br><span class="line">  <span class="string">"version"</span> : &#123;</span><br><span class="line">    <span class="string">"number"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">    <span class="string">"build_flavor"</span> : <span class="string">"default"</span>,</span><br><span class="line">    <span class="string">"build_type"</span> : <span class="string">"rpm"</span>,</span><br><span class="line">    <span class="string">"build_hash"</span> : <span class="string">"595516e"</span>,</span><br><span class="line">    <span class="string">"build_date"</span> : <span class="string">"2018-08-17T23:18:47.308994Z"</span>,</span><br><span class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"lucene_version"</span> : <span class="string">"7.4.0"</span>,</span><br><span class="line">    <span class="string">"minimum_wire_compatibility_version"</span> : <span class="string">"5.6.0"</span>,</span><br><span class="line">    <span class="string">"minimum_index_compatibility_version"</span> : <span class="string">"5.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查看集群节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/nodes?v</span><br><span class="line">ip            heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name</span><br><span class="line">172.21.16.198           29          85   0    0.10    0.04     0.05 mdi       -      elk_elasticsearch_data_2</span><br><span class="line">172.21.16.187           48          85   0    0.00    0.01     0.05 mdi       *      elk_elasticsearch_master</span><br><span class="line">172.21.16.206           25          86   0    0.08    0.03     0.05 mdi       -      elk_elasticsearch_data_3</span><br></pre></td></tr></table></figure></li><li><p>验证集群磁盘分配情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/allocation?v</span><br><span class="line">shards disk.indices disk.used disk.avail disk.total disk.percent host          ip            node</span><br><span class="line">    98          1gb     3.6gb     96.3gb     99.9gb            3 172.21.16.198 172.21.16.198 elk_elasticsearch_data_2</span><br><span class="line">    99      887.1mb     4.5gb     95.4gb     99.9gb            4 172.21.16.187 172.21.16.187 elk_elasticsearch_master</span><br><span class="line">    99        957mb     3.5gb     96.4gb     99.9gb            3 172.21.16.206 172.21.16.206 elk_elasticsearch_data_3</span><br></pre></td></tr></table></figure></li><li><p>验证集群健康状况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/health?v </span><br><span class="line">epoch      timestamp cluster           status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line">1571648406 17:00:06  elk_elasticsearch green           3         3    296 148    0    0        0             0                  -                100.0%</span><br><span class="line"></span><br><span class="line">$</span><br></pre></td></tr></table></figure></li><li><p>查看每个数据节点上被fielddata所使用的堆内存大小。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/fielddata?v</span><br><span class="line">id                     host          ip            node                     field                    size</span><br><span class="line">VNcRqM30T3axzVjiPkDTmA 172.21.16.187 172.21.16.187 elk_elasticsearch_master event.resultCode.keyword 352b</span><br><span class="line">VNcRqM30T3axzVjiPkDTmA 172.21.16.187 172.21.16.187 elk_elasticsearch_master <span class="built_in">type</span>                     720b</span><br><span class="line">HNc5BrMWQcummBeAskQc4A 172.21.16.206 172.21.16.206 elk_elasticsearch_data_3 event.resultCode.keyword 704b</span><br><span class="line">z3zUA8KxTH6B7C8CmVRUIQ 172.21.16.198 172.21.16.198 elk_elasticsearch_data_2 <span class="built_in">type</span>                     720b</span><br><span class="line">z3zUA8KxTH6B7C8CmVRUIQ 172.21.16.198 172.21.16.198 elk_elasticsearch_data_2 event.resultCode.keyword 704b</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;days-1&quot;&gt;&lt;a href=&quot;#days-1&quot; class=&quot;headerlink&quot; title=&quot;days 1&quot;&gt;&lt;/a&gt;days 1&lt;/h3&gt;
    
    </summary>
    
      <category term="elasticserch" scheme="https://www.xxlaila.cn/categories/elasticserch/"/>
    
    
      <category term="elasticserch" scheme="https://www.xxlaila.cn/tags/elasticserch/"/>
    
  </entry>
  
  <entry>
    <title>nexus配置ldap</title>
    <link href="https://www.xxlaila.cn/2019/10/15/nexus%E9%85%8D%E7%BD%AEldap/"/>
    <id>https://www.xxlaila.cn/2019/10/15/nexus配置ldap/</id>
    <published>2019-10-15T09:28:34.000Z</published>
    <updated>2019-10-29T01:44:21.623Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="配置nexus"><a href="#配置nexus" class="headerlink" title="配置nexus"></a>配置nexus</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录nexus在设置页，点击ldap，</p><a id="more"></a><p><img src="https://img.xxlaila.cn/1571131890608.jpg" alt="img"><br>参数介绍:</p><ul><li>Name: 随便写</li><li>LDAP server address: 支持ldaps和ldap,而端口则取决于配置。 如果没有特殊配置，ldap默认端口是389</li><li>Search base: 只需要填DC即可，比如DC=example,DC=com。 其它内容，比如CN、OU等，不需要填写</li><li>Authentication method有以下选项:<ul><li>Simple Authentication</li><li>Anonymous Authentication</li><li>DIGEST-MD5</li><li>CRAM-MD5<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常选择Simple Authentication即可。Username or DN、Password里填写账户、密码，而 Connection rules无需修改。填写完毕后，点击【Verify connection】按钮，可以验证信息。 如果成功，即可保存。</li></ul></li></ul><h4 id="Choose-Users-and-Groups"><a href="#Choose-Users-and-Groups" class="headerlink" title="Choose Users and Groups"></a>Choose Users and Groups</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这项故名思义就是配置用户和组的，在最开头的Configuration template中，有四种模板可选：</p><ul><li>Active Directory</li><li>Generic Ldap Server</li><li>Posix with Dynamic Groups</li><li>Posix with Static Groups</li></ul><p>这里选择<code>Generic Ldap Server</code></p><ul><li>Base DN 在LDAP中找到用户的基本位置。这是相对于搜索基础的（例如ou = people）。</li><li>User subtree通常需要勾选。 如果把LDAP的Tree比作目录的话，勾选以后相当于递归查找子目录。</li><li>User filter通过过滤规则，减少搜索信息，用于提升性能。 仅仅只是提升性能，所以，如果不懂它特殊的匹配规则，也可以不填。</li><li>之前选择了<code>Generic Ldap Server</code>模版后，User ID attribute默认为uid，Real name attribute默认为cn、Email attribute默认为mail、Password attribute为空。</li><li>Map LDAP groups as roles如果不勾选，就不会同步用户组信息。 如果勾选，则可以选择Group type和Group member of attribute。 若无必要，保持默认即可，默认是勾选的。<br><img src="https://img.xxlaila.cn/1571133103461.jpg" alt="img"></li><li>填写完成后，通过【Verify user mapping】可以验证查询结果<br><img src="https://img.xxlaila.cn/1571133221971.jpg" alt="img"><br>点击创建<br><img src="https://img.xxlaila.cn/1571133286829.jpg" alt="img"></li></ul><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;新起一个窗口利用ldap里面的账号进行登录，可以登录，没有问题，但是登录之后用户没有任何权限，这对于研发来说又是一个不可接受的事情。接下来配置权限</p><h5 id="禁止匿名访问"><a href="#禁止匿名访问" class="headerlink" title="禁止匿名访问"></a>禁止匿名访问</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在实际应用中，是不允许匿名用户不可以登录就能访问的，这样我们ldap就没有任何意义了<br><img src="https://img.xxlaila.cn/1571133691247.jpg" alt="img"></p><ul><li>禁止匿名用户<br><img src="https://img.xxlaila.cn/1571133811908.jpg" alt="img"></li></ul><h5 id="创建角色"><a href="#创建角色" class="headerlink" title="创建角色"></a>创建角色</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Security——&gt;Roles——&gt;Create role，这里创建角色有两种。一种是nexus relos本地角色，一种是External roles mapping外部映射的形式。为了满足我们ldap账户登录进来有浏览库的权限，研发又可以上传第三方依赖库的权限，但是不能删除和私下增加库Repositories。所以这里我们需要单独建立一个本地的relos，然后在映射外部的ldap到这个本地的roles，这样ldap账户登录进来就能实现日常的基本操作。</p><ul><li><p>创建nexus relos本地角色<br><img src="https://img.xxlaila.cn/1571296771150.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建完成后，我们需要对他赋予权限，对用户进行权限控制，没有权限控制，就没办法达成我们上面的目标。下面是我赋予的权限，可以结合实际需求来进行赋予。</p></li><li><p>权限介绍:</p><ul><li>ng-component-upload: 有上传的权限，比如java依赖的一些第三方库，研发可以自己进行上传</li><li>ng-repository-admin-<em>-</em>-browse: 浏览所有的repository</li><li>ng-repository-admin-<em>-</em>-read: 可以所有读取repository的配置信息</li><li>ng-repository-view-maven2-maven-central-browse: 具有浏览maven-central内容</li><li>ng-repository-view-maven2-maven-central-read: 读取maven-central内容，在maven编译的时候具有下载的权限，(后面不一一介绍)</li><li>ng-repository-view-maven2-maven-public-browse</li><li>ng-repository-view-maven2-maven-public-read</li><li>ng-repository-view-maven2-maven-releases-browse</li><li>ng-repository-view-maven2-maven-releases-read</li><li>ng-repository-view-maven2-maven-snapshots-browse</li><li>ng-repository-view-maven2-maven-snapshots-read</li><li>ng-repository-view-npm-npm-kxl-all-browse: 以下是自己做的npm代理缓存，可以参考之前的<a href="https://xxlaila.github.io/2019/08/23/nexus3搭建npm私服/" target="_blank" rel="noopener">nexus3搭建npm私服</a></li><li>ng-repository-view-npm-npm-kxl-all-read</li><li>ng-repository-view-npm-npm-external-browse</li><li>ng-repository-view-npm-npm-external-read</li><li>ng-repository-view-npm-npm-internal-browse</li><li>ng-repository-view-npm-npm-internal-read</li><li>ng-search-read: 让用户具有所有权限，没有此权限，研发查找一个包，估计会死</li></ul></li><li><p>创建是External roles mapping外部映射<br><img src="https://img.xxlaila.cn/1571134166780.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571297568491.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在进行Roles ID 这栏目，需要填写的是Users，这个Users会在ldap上同步Users的一个用户组。根据自己的ldap账户组设置来进行填写。下图是ldap的组设置<br><img src="https://img.xxlaila.cn/1571298567078.jpg" alt="img"></p></li></ul><p><strong>注</strong>: 其实在这里我们也可以进行Privileges的权限赋予，但是我选择的是先创建一个本地的nexus relos。然后我们在Roles栏关联之前创建的<code>Developer</code>，完成以后通过ldap账户登录进行测试</p><h5 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里主要是从四个方面来测试ldap账户。分别是: 登录默认的权限、浏览所有库的权限、Browse的浏览、Browse库的上传</p><ul><li><p>登录默认的权限<br><img src="https://img.xxlaila.cn/1571297962563.jpg" alt="img"></p></li><li><p>浏览所有库的权限<br><img src="https://img.xxlaila.cn/1571298121188.jpg" alt="img"></p></li><li><p>Browse的浏<br><img src="https://img.xxlaila.cn/1571298018356.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571298167348.jpg" alt="img"></p></li><li><p>Browse库的上传<br><img src="https://img.xxlaila.cn/1571298224331.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571298260091.jpg" alt="img"></p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;配置nexus&quot;&gt;&lt;a href=&quot;#配置nexus&quot; class=&quot;headerlink&quot; title=&quot;配置nexus&quot;&gt;&lt;/a&gt;配置nexus&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;登录nexus在设置页，点击ldap，&lt;/p&gt;
    
    </summary>
    
      <category term="nexus" scheme="https://www.xxlaila.cn/categories/nexus/"/>
    
    
      <category term="ldap" scheme="https://www.xxlaila.cn/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>jenkins配置备份</title>
    <link href="https://www.xxlaila.cn/2019/10/15/jenkins%E9%85%8D%E7%BD%AE%E5%A4%87%E4%BB%BD/"/>
    <id>https://www.xxlaila.cn/2019/10/15/jenkins配置备份/</id>
    <published>2019-10-15T00:55:19.000Z</published>
    <updated>2019-10-28T03:36:02.239Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="jenkins-备份"><a href="#jenkins-备份" class="headerlink" title="jenkins 备份"></a>jenkins 备份</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当jenkins在用起来的时候，我们难保他不会出故障，但是出了故障我们怎么做到快速的恢复呢，这时备份就显得尤为重要了。但jenkins本身不提供备份的功能，<a id="more"></a> 所以这里就需要借助外力。备份可以多样化，一种是我们直接到jenkins的目录下面手动备份jenkins目录。一种是我们就jenkins自带的插件<code>thinBackup</code>和<code>Periodic Backup</code>进行备份恢复，下面进行分别介绍</p><h3 id="thinBackup备份"><a href="#thinBackup备份" class="headerlink" title="thinBackup备份"></a>thinBackup备份</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录jenkins——&gt;系统管理——&gt;插件管理<br><img src="https://img.xxlaila.cn/1571101180571.jpg" alt="img"><br>安装完成之后重启jenkins服务，登录jenkins在系统管理界面可以看到<br><img src="https://img.xxlaila.cn/1571101557754.jpg" alt="img"></p><h4 id="配置ThinBackup"><a href="#配置ThinBackup" class="headerlink" title="配置ThinBackup"></a>配置ThinBackup</h4><ul><li>点击ThinBackup<br><img src="https://img.xxlaila.cn/1571101640273.jpg" alt="img"><br>可以看到有三个选项:</li><li>Backup Now: 手动立即备份</li><li>Restore: 恢复备份</li><li>Settings: 备份参数的设置</li></ul><h5 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下面是我的备份参数，可以根据自己的需要自己设定备份参数，设置好友save即可，<code>Backup schedule for full backups</code>意思是周一到周五每天凌晨两点进行备份<br><img src="https://img.xxlaila.cn/1571102057919.jpg" alt="img"></p><h5 id="Restore"><a href="#Restore" class="headerlink" title="Restore"></a>Restore</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;备份文件是以日期+时间节点组成的文件名，我们恢复什么时间段的，点击进行恢复，<br><img src="https://img.xxlaila.cn/1571102188007.jpg" alt="img"></p><h3 id="Periodic-Backup"><a href="#Periodic-Backup" class="headerlink" title="Periodic Backup"></a>Periodic Backup</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;备份除了上面提到的插件还有一个插件是<code>Periodic Backup</code>，安装<code>Periodic Backup</code>不阐述，安装完成后可以在系统管理菜单下面有一个<code>Periodic Backup Manager</code>菜单<br><img src="https://img.xxlaila.cn/1571709136813.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打开<code>Periodic Backup Manager</code>，第一次打开是没有任何东西的，需要我们自己去建立一个规则，点击<code>Configure</code><br><img src="https://img.xxlaila.cn/1571709270639.jpg" alt="img"></p><p>配置项很简单:</p><ul><li>Temporary Directory: 临时目录</li><li>Backup schedule (cron): 进行备份cron的表达式，填写完成后点击<code>Validate cron syntax</code>进行验证</li><li>Maximum backups in location: 最大位置备份，保留多少个备份文件</li><li>Store no older than (days): 保留的时间</li><li>File Management Strategy: 备份策略<ul><li>ConfigOnly: 只备份配置文件</li><li>FullBackup: 进行全量备份，可以通过Excludes list中填入Ant风格表达式，排除不希望备份的文件，多个表达式使用分号分隔</li></ul></li><li>Storage Strategy: 存储策略，就是是否需要进行压缩存储</li><li>Backup Location: 备份的位置，都是本地目录<br><img src="https://img.xxlaila.cn/1571709879768.jpg" alt="img"></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;jenkins-备份&quot;&gt;&lt;a href=&quot;#jenkins-备份&quot; class=&quot;headerlink&quot; title=&quot;jenkins 备份&quot;&gt;&lt;/a&gt;jenkins 备份&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当jenkins在用起来的时候，我们难保他不会出故障，但是出了故障我们怎么做到快速的恢复呢，这时备份就显得尤为重要了。但jenkins本身不提供备份的功能，
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>jenkins配置ldap</title>
    <link href="https://www.xxlaila.cn/2019/10/14/jenkins%E9%85%8D%E7%BD%AEldap/"/>
    <id>https://www.xxlaila.cn/2019/10/14/jenkins配置ldap/</id>
    <published>2019-10-14T03:49:32.000Z</published>
    <updated>2019-10-29T02:04:04.913Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;公司研发人员和测试人员，还有运维人员有时候登录jenkins去查看一些job的状态或者是其他的东西，虽然有企业微信的通知，但是感觉还是不能满足，<a id="more"></a> 比如job错误了，企业微信虽然吧错误发给了研发人员，但是研发还是要登录jenkins上去看，就感觉要舒服一点，测试上做的一些自动化测试，有时候失败了他们也会去看或者是去建立一些自动化的job。之前建立了公共的账号，开发和测试人员都去登录，但是有时候他们误操作了，导致一些其他的东西失败或者错误，虽然做了权限控制，但是他们还是死不承认，所以这里介入ldap。谁动的就知道了，这样就不怕了。</p><h3 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录jenkins——&gt;系统管理——&gt;全局安全配置<br><img src="https://img.xxlaila.cn/1571025388007.jpg" alt="img"><br>访问控制——&gt;LDAP<br><img src="https://img.xxlaila.cn/1571027524602.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;配置完成以后我们需要测试一下连接是否正常，点击<code>Test LDAP setttings</code>，输入在ldap的其中一个账户来进行验证，没问题的结果如下:<br><img src="https://img.xxlaila.cn/1571027696951.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;配置完成并测试通过后就可以用LDAP直接登录了<br><strong>注</strong>: 启用了LDAP登录后将无法再用之前的登录方式（本地认证将无法在使用）登录，登录进来的任何一个账号都是管理员，都是管理着肯定来说不安全，权限配置请下看</p><p><a href="https://wiki.jenkins.io/display/JENKINS/LDAP+Plugin" target="_blank" rel="noopener">官方参考</a></p><h3 id="配置ldap的账户权限"><a href="#配置ldap的账户权限" class="headerlink" title="配置ldap的账户权限"></a>配置ldap的账户权限</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面我们虽然吧ldap配置完成，但是我们需要对用户进行权限的配置，不可能每个人登录都能对我们jenkins进行无限制的操作，这不符合我们之前的意图。安装<code>Role-based Authorization Strategy</code>插件</p><ul><li>在系统管理——&gt;全局安全配置,可以看到下面选项，每项介<a href="https://xxlaila.github.io/2019/08/09/jenkins%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">参考</a><br><img src="https://img.xxlaila.cn/1571034253089.jpg" alt="img"></li></ul><p>保存以后，返回系统管理界面就可以看到多处一个<code>Manage and Assign Roles</code><br><img src="https://img.xxlaila.cn/1571034433352.jpg" alt="img"><br>点击进去</p><p><img src="https://img.xxlaila.cn/1571034507945.jpg" alt="img"></p><ul><li><strong>Manage Roles</strong>: 角色分为Global和Project，可创建角色分组和添加项目。</li><li><strong>Assign Roles</strong>: 增加具体的用户，分配到角色组，指定项目权限。</li></ul><p><a href="https://xxlaila.github.io/2019/08/09/jenkins%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E9%85%8D%E7%BD%AE/" target="_blank" rel="noopener">权限设置</a></p><ul><li>下面我的配置，和之前的大同小异<br><img src="https://img.xxlaila.cn/1571038684383.jpg" alt="img"></li></ul><p><strong>注</strong>: 这里有一个小问题，这样配置以后，新用户登录进来以后就会提示没有权限，<code>Access Denied,xxxx没有全部/Read权限</code>，这是因为在打开jenkins后，没有创建用户前，先不要勾选系统设置中启用安全选项，如果勾选了，就会出现无法进入jenkins的现象<br><img src="https://img.xxlaila.cn/1571037187865.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在网上看到有这种的解决办法，有几种方案，一个是修改confing.xml的文件，修改config.xml文件的三种方式感觉都不太切合实际的业务；下面是我做的两种办法，推荐使用第二种</p><ul><li><p>Role-Based Strategy<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在<code>Assign Roles</code>吧用户添加进来，然后勾选权限，<br>系统管理——&gt;Manage and Assign Roles——&gt;Assign Roles<br><img src="https://img.xxlaila.cn/1571037604678.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是这有一个弊端，就是每次新来一个用户就得去添加一次用户权限，虽然满足了业务需求，但是不科学</p></li><li><p>项目矩阵授权策略<br><img src="https://img.xxlaila.cn/1571041499340.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一个全局的配置，特定组只能按照最小的权限授权，额外的权限可以在具体的项目权限矩阵里面在添加。 默认只有<code>Anonymous Users</code>和<code>Authenticated Users</code>，管理员组是需要添加的<code>admin</code></p></li><li><p>Anonymous Users: 匿名用户，显然不能</p></li><li><p>Authenticated Users: 认证用户，就是只要是认证的账号都可以拥有的权限</p></li><li><p>admin: 就是拥有所有的权限了，这个组一般只能运维人员和部门老大加入。</p></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;加入admin组以后，他会自动去同步ldap的组用户，如果用户在ldap是admin组，那么在这里就会是管理员权限，如果用户是普通组，那么就是<code>Authenticated Users</code>组赋予的权限，使用这种方式只要用户是ldap里面的，就可以登录查看。这样就满足了业务场景需求</p><h3 id="日志记录"><a href="#日志记录" class="headerlink" title="日志记录"></a>日志记录</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;记录用户日志需要单独的安装<code>Audit Trail</code>插件，该插件在Jenkins主配置页面中添加了一个配置部分，可以在此处配置日志位置和设置（文件大小和循环日志文件的数量），以及用于记录请求的URI模式。默认选项选择效果显着的大多数操作，例如创建/配置/删除作业和视图或永久删除/保存/开始构建。日志将按照配置写入磁盘，最近的条目也可以在“管理/系统日志”部分中查看。<br><img src="https://img.xxlaila.cn/1572057054289.jpg" alt="img"><br><a href="https://plugins.jenkins.io/audit-trail" target="_blank" rel="noopener">Audit Trail官方参考</a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里配置以后还不能记录job的日志，需要对job进行记录需要另外的安装<a href="https://wiki.jenkins.io/display/JENKINS/JobConfigHistory+Plugin" target="_blank" rel="noopener">Job Configuration History插件</a>，根据官方的介绍，可用于查看所有作业配置历史记录或仅查看已删除的作业或所有类型的配置历史记录条目。同时，如果配置了安全策略，还可以查看哪个用户进行了哪些更改。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装完成后，我们在job里面可以看到一个<code>Job Config History</code>的菜单。最开始没有没有任何记录，只有当构建job或者修改过job以后才会有记录<br><img src="https://img.xxlaila.cn/1572057782047.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1572057958019.jpg" alt="img"></p><ul><li>点击Show Diffs 可以看到我们具体修改了什么东西<br><img src="https://img.xxlaila.cn/1572058118436.jpg" alt="img"></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当我们安装好这个插件以后，也测试可以使用，但是我们不能让所有的job日志记录保存历史过久，如果job过多，记录过多，这会对我们的磁盘空间来说，肯定是一个压力，所以这里我们就需要进行配置，保存多少次的记录，而且还可以设置排除的文件。<br><img src="https://img.xxlaila.cn/1572058857084.jpg" alt="img"></p><p><a href="https://wiki.jenkins.io/display/JENKINS/JobConfigHistory+Plugin" target="_blank" rel="noopener">Job Configuration History官方</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Thu Dec 05 2019 16:43:30 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;公司研发人员和测试人员，还有运维人员有时候登录jenkins去查看一些job的状态或者是其他的东西，虽然有企业微信的通知，但是感觉还是不能满足，
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="ldap" scheme="https://www.xxlaila.cn/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>java应用部署</title>
    <link href="https://www.xxlaila.cn/2019/10/12/java%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/10/12/java应用部署/</id>
    <published>2019-10-12T03:38:32.000Z</published>
    <updated>2019-10-15T02:18:36.026Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="Welcome to my blog, enter password to read." />    <label for="hbePass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3634a69a5d6c92d925138f4238a1e1e6ff3d29ebb9669299932d73235796634b"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="java" scheme="https://www.xxlaila.cn/tags/java/"/>
    
  </entry>
  
</feed>
