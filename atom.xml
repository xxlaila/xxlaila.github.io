<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>懒羊羊</title>
  
  <subtitle>我是不会和普通的羊一般见识的。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.xxlaila.cn/"/>
  <updated>2019-12-23T09:43:27.263Z</updated>
  <id>https://www.xxlaila.cn/</id>
  
  <author>
    <name>xxlaila</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>centos 安装字体三步曲</title>
    <link href="https://www.xxlaila.cn/2019/12/23/centos-%E5%AE%89%E8%A3%85%E5%AD%97%E4%BD%93%E4%B8%89%E6%AD%A5%E6%9B%B2/"/>
    <id>https://www.xxlaila.cn/2019/12/23/centos-安装字体三步曲/</id>
    <published>2019-12-23T09:38:36.000Z</published>
    <updated>2019-12-23T09:43:27.263Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上传字体到服务器。</p><h3 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h3><a id="more"></a><h4 id="安装字体库"><a href="#安装字体库" class="headerlink" title="安装字体库"></a>安装字体库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install fontconfig</span></span><br></pre></td></tr></table></figure><h4 id="安装字体索引信息"><a href="#安装字体索引信息" class="headerlink" title="安装字体索引信息"></a>安装字体索引信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install ttmkfdir mkfontscale</span></span><br></pre></td></tr></table></figure><h4 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;linux的字体目录默认是存放在<code>/usr/share/fonts</code>，可以创建chinese用于存放中文字体。吧字体复制到该目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir -p /usr/share/fonts/chinese</span></span><br></pre></td></tr></table></figure><h3 id="安装字体"><a href="#安装字体" class="headerlink" title="安装字体"></a>安装字体</h3><h4 id="生成字库索引信息"><a href="#生成字库索引信息" class="headerlink" title="生成字库索引信息"></a>生成字库索引信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkfontscale</span></span><br><span class="line"><span class="comment"># mkfontdir</span></span><br></pre></td></tr></table></figure><h4 id="更新字体缓存"><a href="#更新字体缓存" class="headerlink" title="更新字体缓存"></a>更新字体缓存</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fc-cache</span></span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fc-list</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;上传字体到服务器。&lt;/p&gt;&lt;h3 id=&quot;安装准备&quot;&gt;&lt;a href=&quot;#安装准备&quot; class=&quot;headerlink&quot; title=&quot;安装准备&quot;&gt;&lt;/a&gt;安装准备&lt;/h3&gt;
    
    </summary>
    
      <category term="centos" scheme="https://www.xxlaila.cn/categories/centos/"/>
    
    
      <category term="fonts" scheme="https://www.xxlaila.cn/tags/fonts/"/>
    
  </entry>
  
  <entry>
    <title>nfs服务器异常</title>
    <link href="https://www.xxlaila.cn/2019/12/23/nfs%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%82%E5%B8%B8/"/>
    <id>https://www.xxlaila.cn/2019/12/23/nfs服务器异常/</id>
    <published>2019-12-23T01:29:41.000Z</published>
    <updated>2019-12-23T03:15:53.971Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="故障表现"><a href="#故障表现" class="headerlink" title="故障表现"></a>故障表现</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;近期发现只要是挂载nfs的服务器，不定期的出现服务器卡死，发现是在ansible自动化发布的时候出现一直卡死，然后登录服务器端发现发现命令不能用，如: ls、df等命令无法正常使用。<a id="more"></a>在客户端查看系统日志没有任何错误。查看系统资源，资源利用率也足够。</p><h3 id="故障解决"><a href="#故障解决" class="headerlink" title="故障解决"></a>故障解决</h3><h4 id="nfs服务端"><a href="#nfs服务端" class="headerlink" title="nfs服务端"></a>nfs服务端</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录nfs服务端查看系统的日志发现:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Dec 23 09:01:01 dev-nfs systemd: Removed slice User Slice of root.</span><br><span class="line">Dec 23 09:01:01 dev-nfs systemd: Stopping User Slice of root.</span><br><span class="line">Dec 23 09:21:26 dev-nfs systemd: Created slice User Slice of root.</span><br><span class="line">Dec 23 09:21:26 dev-nfs systemd: Starting User Slice of root.</span><br><span class="line">Dec 23 09:21:26 dev-nfs systemd: Started Session 12836 of user root.</span><br><span class="line">Dec 23 09:21:26 dev-nfs systemd-logind: New session 12836 of user root.</span><br><span class="line">Dec 23 09:21:26 dev-nfs systemd: Starting Session 12836 of user root.</span><br><span class="line">Dec 23 09:22:01 dev-nfs systemd: Stopping RPC <span class="built_in">bind</span> service...</span><br><span class="line">Dec 23 09:22:01 dev-nfs systemd: Starting RPC <span class="built_in">bind</span> service...</span><br><span class="line">Dec 23 09:22:01 dev-nfs systemd: Started RPC <span class="built_in">bind</span> service.</span><br><span class="line">Dec 23 09:22:11 dev-nfs systemd: Started Session 12837 of user root.</span><br><span class="line">Dec 23 09:22:11 dev-nfs systemd-logind: New session 12837 of user root.</span><br><span class="line">Dec 23 09:22:11 dev-nfs systemd: Starting Session 12837 of user root.</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Stopping NFS server and services...</span><br><span class="line">Dec 23 09:22:12 dev-nfs kernel: nfsd: last server has exited, flushing <span class="built_in">export</span> cache</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Stopping NFS Mount Daemon...</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Stopping NFSv4 ID-name mapping service...</span><br><span class="line">Dec 23 09:22:12 dev-nfs rpc.mountd[29810]: Caught signal 15, un-registering and exiting.</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Starting Preprocess NFS configuration...</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Started Preprocess NFS configuration.</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Starting NFSv4 ID-name mapping service...</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Starting NFS Mount Daemon...</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Started NFSv4 ID-name mapping service.</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Started NFS Mount Daemon.</span><br><span class="line">Dec 23 09:22:12 dev-nfs systemd: Starting NFS server and services...</span><br><span class="line">Dec 23 09:22:12 dev-nfs rpc.mountd[31339]: Version 1.3.0 starting</span><br><span class="line">Dec 23 09:22:12 dev-nfs kernel: NFSD: starting 90-second grace period (net ffffffff81ad9d40)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;发现nfs的服务端出现 <code>kernel</code>内核的异常，于是乎登录google得知。发现nfs线程数不够了，提示要增加一些数量的threads。</p><h5 id="当前nfs状态"><a href="#当前nfs状态" class="headerlink" title="当前nfs状态"></a>当前nfs状态</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /proc/net/rpc/nfsd </span></span><br><span class="line">rc 0 0 30463198</span><br><span class="line">fh 0 0 0 0 0</span><br><span class="line">io 1447382326 1456801108</span><br><span class="line">th 8 0 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000</span><br><span class="line">ra 32 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">net 30463199 0 30485174 266</span><br><span class="line">rpc 30463198 1 1 0 0</span><br><span class="line">proc3 22 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">proc4 2 70 30463126</span><br><span class="line">proc4ops 72 0 0 0 570540 491739 28774 6320 0 191550 6463291 255991 0 0 0 0 177217 0 0 523775 0 0 133 6853388 0 230 203547 27936 0 8180 209 0 0 209 0 311026 0 0 0 2126786 0 0 0 266 14491135 185 0 0 0 0 0 0 0 26 15971485 0 3 0 46 204 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br></pre></td></tr></table></figure><h5 id="查看线程数"><a href="#查看线程数" class="headerlink" title="查看线程数"></a>查看线程数</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /proc/fs/nfsd/threads</span></span><br><span class="line">8</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;原来nfs默认启动了8个thread，应该是不够了，可以手动修改增加一些。修改nfs的默认线程数方式如下</p><h5 id="修改nfs的默认线程数"><a href="#修改nfs的默认线程数" class="headerlink" title="修改nfs的默认线程数"></a>修改nfs的默认线程数</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The default is 8. </span></span><br><span class="line">RPCNFSDCOUNT=32</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要重启nfs</p><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /proc/net/rpc/nfsd</span></span><br><span class="line">rc 0 0 30464433</span><br><span class="line">fh 0 0 0 0 0</span><br><span class="line">io 1447382326 1456801108</span><br><span class="line">th 32 0 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000</span><br><span class="line">ra 64 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">net 30464434 0 30486409 268</span><br><span class="line">rpc 30464433 1 1 0 0</span><br><span class="line">proc3 22 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line">proc4 2 70 30464361</span><br><span class="line">proc4ops 72 0 0 0 570540 491739 28774 6320 0 191550 6463293 255991 0 0 0 0 177217 0 0 523775 0 0 133 6853388 0 232 203547 27936 0 8180 209 0 0 209 0 311026 0 0 0 2126786 0 0 0 268 14492227 185 0 0 0 0 0 0 0 26 15971626 0 3 0 46 206 0 0 0 0 0 0 0 0 0 0 0 0 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat /proc/fs/nfsd/threads</span></span><br><span class="line">32</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat /proc/fs/nfsd/pool_threads</span></span><br><span class="line">32</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat /proc/fs/nfsd/pool_stats </span></span><br><span class="line"><span class="comment"># pool packets-arrived sockets-enqueued threads-woken threads-timedout</span></span><br><span class="line">0 485 4 481 0</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;故障表现&quot;&gt;&lt;a href=&quot;#故障表现&quot; class=&quot;headerlink&quot; title=&quot;故障表现&quot;&gt;&lt;/a&gt;故障表现&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;近期发现只要是挂载nfs的服务器，不定期的出现服务器卡死，发现是在ansible自动化发布的时候出现一直卡死，然后登录服务器端发现发现命令不能用，如: ls、df等命令无法正常使用。
    
    </summary>
    
      <category term="centos" scheme="https://www.xxlaila.cn/categories/centos/"/>
    
    
      <category term="nfs" scheme="https://www.xxlaila.cn/tags/nfs/"/>
    
  </entry>
  
  <entry>
    <title>traefik https使用</title>
    <link href="https://www.xxlaila.cn/2019/12/19/traefik-https%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.xxlaila.cn/2019/12/19/traefik-https使用/</id>
    <published>2019-12-19T06:06:08.000Z</published>
    <updated>2019-12-23T08:40:58.471Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之前已经使用traefik服务作为入口，测试并访问了tomcat应用，之前是通过http来访问的，而我们在yaml文件里面也添加8443端口用于https访问，在实际环境中我们也是需要<br>https来进行访问应用，通过traefik实现https，<a href="https://xxlaila.github.io/2019/09/05/traefik-ingress%E4%BD%BF%E7%94%A8/" target="_blank" rel="noopener">traefik http应用</a></p><a id="more"></a><h3 id="操作实践"><a href="#操作实践" class="headerlink" title="操作实践"></a>操作实践</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里我用了公司的证书，就是为了贴近真实，也满足测试需求，创建一个secret，保存https证书，如果没有证书，可以使用以下方式进行生成证书</p><h4 id="签证书"><a href="#签证书" class="headerlink" title="签证书"></a>签证书</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;没有证书可以使用命令生产证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkdir certs</span></span><br><span class="line"><span class="comment"># openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout xxlaila.cn.key -out xxlaila.cn.crt -subj "/CN=*.xxlaila.cn"</span></span><br></pre></td></tr></table></figure><h3 id="部署准备"><a href="#部署准备" class="headerlink" title="部署准备"></a>部署准备</h3><h4 id="traefik-toml"><a href="#traefik-toml" class="headerlink" title="traefik.toml"></a>traefik.toml</h4><ul><li><p>http 和https共同存在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">defaultEntryPoints = [<span class="string">"http"</span>,<span class="string">"https"</span>]</span><br><span class="line">[entryPoints]</span><br><span class="line">  [entryPoints.http]</span><br><span class="line">  address = <span class="string">":80"</span></span><br><span class="line">    entryPoint = <span class="string">"https"</span></span><br><span class="line">  [entryPoints.https]</span><br><span class="line">  address = <span class="string">":443"</span></span><br><span class="line">    [entryPoints.https.tls]</span><br><span class="line">      [[entryPoints.https.tls.certificates]]</span><br><span class="line">      certFile = <span class="string">"/certs/xxlaila.cn.crt"</span></span><br><span class="line">      keyFile = <span class="string">"/certs/xxlaila.cn.key"</span></span><br></pre></td></tr></table></figure></li><li><p>所有http请求全部rewrite为https的规则</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">defaultEntryPoints = [<span class="string">"http"</span>,<span class="string">"https"</span>]</span><br><span class="line">[entryPoints]</span><br><span class="line">  [entryPoints.http]</span><br><span class="line"> <span class="built_in"> address </span>= <span class="string">":80"</span></span><br><span class="line">    [entryPoints.http.redirect]</span><br><span class="line">    entryPoint = <span class="string">"https"</span></span><br><span class="line">  [entryPoints.https]</span><br><span class="line"> <span class="built_in"> address </span>= <span class="string">":443"</span></span><br><span class="line">    [entryPoints.https.tls]</span><br><span class="line">      [[entryPoints.https.tls.certificates]]</span><br><span class="line">      certFile = <span class="string">"/certs/xxlaila.cn.crt"</span></span><br><span class="line">      keyFile = <span class="string">"/certs/xxlaila.cn.key"</span></span><br></pre></td></tr></table></figure></li><li><p>部分域名强制跳转https</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">defaultEntryPoints = [<span class="string">"http"</span>,<span class="string">"https"</span>]</span><br><span class="line">[entryPoints]</span><br><span class="line">  [entryPoints.http]</span><br><span class="line">  address = <span class="string">":80"</span></span><br><span class="line">    [entryPoints.http.redirect]</span><br><span class="line">      regex = <span class="string">"^http://traefix.xxlaila.cn/(.*)"</span></span><br><span class="line">      replacement = <span class="string">"https://traefix.xxlaila.cn/<span class="variable">$1</span>"</span></span><br><span class="line">  [entryPoints.https]</span><br><span class="line">  address = <span class="string">":443"</span></span><br><span class="line">    [entryPoints.https.tls]</span><br><span class="line">      [[entryPoints.https.tls.certificates]]</span><br><span class="line">      certFile = <span class="string">"/certs/xxlaila.cn.crt"</span></span><br><span class="line">      keyFile = <span class="string">"/certs/xxlaila.cn.key"</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="创建证书secret"><a href="#创建证书secret" class="headerlink" title="创建证书secret"></a>创建证书secret</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  kubectl create secret generic traefik-cert --from-file=certs/xxlaila.cn.crt --from-file=certs/xxlaila.cn.key --from-file=certs/dev.xxlaila.cn.crt --from-file=certs/dev.xxlaila.cn.key --from-file=certs/test.xxlaila.cn.crt --from-file=certs/test.xxlaila.cn.key  -n kube-system</span></span><br><span class="line">secret/traefik-cert created</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get secret traefik-cert -n kube-system </span></span><br><span class="line">NAME           TYPE     DATA   AGE</span><br><span class="line">traefik-cert   Opaque   2      26s</span><br></pre></td></tr></table></figure><h4 id="创建configmap保存traefix的配置"><a href="#创建configmap保存traefix的配置" class="headerlink" title="创建configmap保存traefix的配置"></a>创建configmap保存traefix的配置</h4><ul><li>traefik.toml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; traefik.toml&lt;&lt;EOF</span></span><br><span class="line">defaultEntryPoints = [<span class="string">"http"</span>,<span class="string">"https"</span>]</span><br><span class="line">[entryPoints]</span><br><span class="line">  [entryPoints.http]</span><br><span class="line">    address = <span class="string">":80"</span></span><br><span class="line">    compress = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    [entryPoints.http.whitelist]</span><br><span class="line">      sourceRange = [<span class="string">"172.21.0.0/16"</span>, <span class="string">"172.16.0.0/16"</span>]</span><br><span class="line">      useXForwardedFor = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    [entryPoints.http.redirect]</span><br><span class="line">      entryPoint = <span class="string">"https"</span></span><br><span class="line">  [entryPoints.https]</span><br><span class="line">    address = <span class="string">":443"</span></span><br><span class="line">    [entryPoints.https.tls]</span><br><span class="line">      [[entryPoints.https.tls.certificates]]</span><br><span class="line">      certFile = <span class="string">"/opt/traefix/certs/xxlaila.cn.crt"</span></span><br><span class="line">      keyFile = <span class="string">"/opt/traefix/certs/xxlaila.cn.key"</span></span><br><span class="line">      [[entryPoints.https.tls.certificates]]</span><br><span class="line">      certFile = <span class="string">"/opt/traefix/certs/dev.xxlaila.cn.crt"</span></span><br><span class="line">      keyFile = <span class="string">"/opt/traefix/certs/dev.xxlaila.cn.key"</span></span><br><span class="line">      [[entryPoints.https.tls.certificates]]</span><br><span class="line">      certFile = <span class="string">"/opt/traefix/certs/test.xxlaila.cn.crt"</span></span><br><span class="line">      keyFile = <span class="string">"/opt/traefix/certs/test.xxlaila.cn.key"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rules</span></span><br><span class="line">filename = <span class="string">"/opt/traefix/conf/rules.toml"</span></span><br><span class="line">watch = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl create configmap traefik-conf --from-file=conf/traefik.toml -n kube-system</span></span><br><span class="line">configmap/traefik-conf created</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get configmap traefik-conf -n kube-system</span></span><br><span class="line">NAME           DATA   AGE</span><br><span class="line">traefik-conf   1      25s</span><br></pre></td></tr></table></figure></li></ul><h3 id="重新部署Traefix"><a href="#重新部署Traefix" class="headerlink" title="重新部署Traefix"></a>重新部署Traefix</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;重新部署Traefix主要是要关联创建的secret和configMap，并挂载相对应的主机目录。</p><h4 id="deployment-方式部署"><a href="#deployment-方式部署" class="headerlink" title="deployment 方式部署"></a>deployment 方式部署</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修改片段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim traefik-deployment.yaml </span></span><br><span class="line">---</span><br><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-ingress-controller</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: traefik-ingress-lb</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: traefik-ingress-lb</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: traefik-ingress-lb</span><br><span class="line">        name: traefik-ingress-lb</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: traefik-ingress-controller</span><br><span class="line">      terminationGracePeriodSeconds: 60</span><br><span class="line">      hostNetwork: <span class="literal">true</span> </span><br><span class="line">      dnsPolicy: ClusterFirstWithHostNet</span><br><span class="line">      volumes:</span><br><span class="line">      - name: ssl</span><br><span class="line">        secret:</span><br><span class="line">          secretName: traefik-cert</span><br><span class="line">      - name: config</span><br><span class="line">        configMap:</span><br><span class="line">          name: traefik-conf</span><br><span class="line">          defaultMode: 0644</span><br><span class="line">          items:</span><br><span class="line">            - key: traefik.toml</span><br><span class="line">              path: traefik.toml</span><br><span class="line">      containers:</span><br><span class="line">      - image: traefik:v1.7</span><br><span class="line">        name: traefik-ingress-lb</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: <span class="string">"/certs"</span></span><br><span class="line">          name: <span class="string">"ssl"</span></span><br><span class="line">        - mountPath: <span class="string">"/etc/traefik.toml"</span></span><br><span class="line">          subPath: <span class="string">"traefik.toml"</span></span><br><span class="line">          name: <span class="string">"config"</span></span><br><span class="line">        ports:</span><br><span class="line">        - name: http</span><br><span class="line">          containerPort: 80</span><br><span class="line">        - name: admin</span><br><span class="line">          containerPort: 8080</span><br><span class="line">        securityContext:</span><br><span class="line">          capabilities:</span><br><span class="line">            drop:</span><br><span class="line">            - ALL</span><br><span class="line">            add:</span><br><span class="line">              - NET_BIND_SERVICE</span><br><span class="line">        args:</span><br><span class="line">        - --api</span><br><span class="line">        - --web</span><br><span class="line">        - --api.dashboard</span><br><span class="line">        - --web.metrics</span><br><span class="line">        - --metrics.prometheus</span><br><span class="line">        - --web.metrics.prometheus</span><br><span class="line">        - --kubernetes</span><br><span class="line">        - --logLevel=INFO</span><br><span class="line">        - --traefiklog</span><br><span class="line">        - --traefiklog.format=json</span><br><span class="line">        - --accesslog</span><br><span class="line">        - --accesslog.format=json</span><br><span class="line">        - --accessLog.fields.headers.defaultMode=redact</span><br><span class="line">        - --insecureskipverify=<span class="literal">true</span></span><br><span class="line">        - --configFile=/etc/traefik.toml</span><br><span class="line">        - --defaultentrypoints=http,https</span><br><span class="line">        - --entrypoints=Name:https Address::443 TLS</span><br><span class="line">        - --entrypoints=Name:http Address::80 </span><br><span class="line">      nodeSelector:</span><br><span class="line">        IngressProxy: <span class="string">"true"</span></span><br><span class="line">      tolerations:</span><br><span class="line">      - effect: NoSchedule</span><br><span class="line">        key: node-role.kubernetes.io/ingress</span><br><span class="line">        operator: Equal</span><br></pre></td></tr></table></figure><ul><li>执行创建<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f traefik-deployment.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="测试ui"><a href="#测试ui" class="headerlink" title="测试ui"></a>测试ui</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;ui.yaml&lt;&lt;EOF </span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-web-ui</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: traefik-ingress-lb</span><br><span class="line">  ports:</span><br><span class="line">  - name: web</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 8080</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-web-ui</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">    <span class="comment">#traefik.ingress.kubernetes.io/frontend-entry-points: http,https</span></span><br><span class="line">    <span class="comment">#traefik.ingress.kubernetes.io/redirect-entry-point: https</span></span><br><span class="line">spec:</span><br><span class="line">  <span class="comment">#tls:</span></span><br><span class="line">  <span class="comment">#  - secretName: traefik-cert</span></span><br><span class="line">  rules:</span><br><span class="line">  - host: traefik.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: traefik-web-ui</span><br><span class="line">          servicePort: web</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;ui-test.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-web-ui-test</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: traefik-ingress-lb</span><br><span class="line">  ports:</span><br><span class="line">  - name: web</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 8080</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: traefik-web-ui-test</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">    traefik.ingress.kubernetes.io/frontend-entry-points: http,https</span><br><span class="line">    traefik.ingress.kubernetes.io/redirect-entry-point: https</span><br><span class="line">spec:</span><br><span class="line">  <span class="comment">#tls:</span></span><br><span class="line">  <span class="comment">#  - secretName: traefik-cert</span></span><br><span class="line">  rules:</span><br><span class="line">  - host: traefik.test.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: traefik-web-ui</span><br><span class="line">          servicePort: web</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong>注</strong>:<br>tls: traefikm默认加载的证书是tls开头的crt、key证书。如果只有一个证书，可以这么设置。多个域名证书需要设定不同的secret名称，在tls引用的时候根据不同的域名指定不同secret名称<br>redirect-entry-point: 该域名强制跳转https</p><h3 id="traefik-代理外部服务"><a href="#traefik-代理外部服务" class="headerlink" title="traefik 代理外部服务"></a>traefik 代理外部服务</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;traefix对外部应用提供服务，这里以公司的一个应用app和harbor为列，</p><h4 id="java-app"><a href="#java-app" class="headerlink" title="java app"></a>java app</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; java-app.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: app-biz</span><br><span class="line">  name: app-biz</span><br><span class="line">  namespace: default</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">    traefik.ingress.kubernetes.io/affinity: <span class="string">"true"</span></span><br><span class="line">    traefik.ingress.kubernetes.io/load-balancer-method: drr</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 8030</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 8030</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: app-biz</span><br><span class="line">  name: app-biz</span><br><span class="line">  namespace: default</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.22.1.1</span><br><span class="line">  - ip: 172.22.1.2</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 8030</span><br><span class="line">    protocol: TCP</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: app-biz</span><br><span class="line">  namespace: default</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">    traefik.frontend.rule.type: PathPrefixStrip</span><br><span class="line">    traefik.ingress.kubernetes.io/frontend-entry-points: http,https</span><br><span class="line">    traefik.ingress.kubernetes.io/redirect-entry-point: https</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: app-biz.test.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">        - path: /</span><br><span class="line">          backend:</span><br><span class="line">            serviceName: app-biz</span><br><span class="line">            servicePort: 8030</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="harbor"><a href="#harbor" class="headerlink" title="harbor"></a>harbor</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;harbor.yaml&lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: harbor</span><br><span class="line">  name: harbor</span><br><span class="line">  namespace: default</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">    traefik.ingress.kubernetes.io/affinity: <span class="string">"true"</span></span><br><span class="line">    <span class="comment">#traefik.ingress.kubernetes.io/load-balancer-method: drr</span></span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: harbor</span><br><span class="line">  name: harbor</span><br><span class="line">  namespace: default</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.16.90</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: harbor</span><br><span class="line">  namespace: default</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">    traefik.frontend.rule.type: PathPrefixStrip</span><br><span class="line">    traefik.ingress.kubernetes.io/frontend-entry-points: http,https</span><br><span class="line">    traefik.ingress.kubernetes.io/redirect-entry-point: https</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: harbor.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">        - path: /</span><br><span class="line">          backend:</span><br><span class="line">            serviceName: harbor</span><br><span class="line">            servicePort: 80</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;之前已经使用traefik服务作为入口，测试并访问了tomcat应用，之前是通过http来访问的，而我们在yaml文件里面也添加8443端口用于https访问，在实际环境中我们也是需要&lt;br&gt;https来进行访问应用，通过traefik实现https，&lt;a href=&quot;https://xxlaila.github.io/2019/09/05/traefik-ingress%E4%BD%BF%E7%94%A8/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;traefik http应用&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="traefik" scheme="https://www.xxlaila.cn/tags/traefik/"/>
    
  </entry>
  
  <entry>
    <title>kube-eventer事件发射器</title>
    <link href="https://www.xxlaila.cn/2019/12/16/kube-eventer%E4%BA%8B%E4%BB%B6%E5%8F%91%E5%B0%84%E5%99%A8/"/>
    <id>https://www.xxlaila.cn/2019/12/16/kube-eventer事件发射器/</id>
    <published>2019-12-16T03:05:43.000Z</published>
    <updated>2019-12-23T07:21:22.010Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-eventer 是一个事件发射器，它将 Kubernetes 事件发送到接收器(例如，DingTalk、SLS、Kafka 等)。<a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;监控是保障系统稳定性的重要组成部分，在 Kubernetes 开源生态中，资源类的监控工具与组件百花齐放，但是，只有资源类的监控是远远不够的，因为资源监控存在如下两个主要的缺欠：</p><ul><li>监控的实时性与准确性不足</li><li>监控的场景覆盖范围不足</li></ul><p><a href="https://github.com/AliyunContainerService/kube-eventer" target="_blank" rel="noopener">详细参考</a><br><a href="http://baijiahao.baidu.com/s?id=1639090263884959561&wfr=spider&for=pc" target="_blank" rel="noopener">推荐阅读</a></p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="kubernetes-事件查看"><a href="#kubernetes-事件查看" class="headerlink" title="kubernetes 事件查看"></a>kubernetes 事件查看</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get events</span></span><br><span class="line">LAST SEEN   TYPE      REASON                    OBJECT                                 MESSAGE</span><br><span class="line">5d20h       Normal    NodeHasSufficientMemory   node/172.21.16.110                     Node 172.21.16.110 status is now: NodeHasSufficientMemory</span><br><span class="line">5d20h       Normal    NodeHasNoDiskPressure     node/172.21.16.110                     Node 172.21.16.110 status is now: NodeHasNoDiskPressure</span><br><span class="line">5d20h       Normal    RegisteredNode            node/172.21.16.110                     Node 172.21.16.110 event: Registered Node 172.21.16.110 <span class="keyword">in</span> Controller</span><br><span class="line">5d20h       Normal    RegisteredNode            node/172.21.16.110                     Node 172.21.16.110 event: Registered Node 172.21.16.110 <span class="keyword">in</span> Controller</span><br><span class="line">5d20h       Normal    Starting                  node/172.21.16.110                     Starting kubelet.</span><br><span class="line">5d20h       Warning   Rebooted                  node/172.21.17.30                      Node 172.21.17.30 has been rebooted, boot id: f4b25a34-ace9-417a-884a-6eb52bedd4d9</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;nbspkubernetes事件分为两类:</p><ul><li>Normal: 达到期望的状态，目前的状态一致</li><li>Warning: 状态在没有预期的情况下产生的</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下载官方的yaml文件，定一个kube-eventer.yaml文件。修改<code>command</code>参数<code>--sink=</code>。这里公司使用的是企业微信。这里使用企业微信来进行告警通知。<a href="https://github.com/AliyunContainerService/kube-eventer/blob/master/docs/en/wechat-sink.md" target="_blank" rel="noopener">企业微信参数</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- --sink=wechat:?corp_id=skjfbikssa985e28974ihjkh&amp;corp_secret=dfjkiSdsdfgL-q8hhhzqKWomFqeC_letAMYCVPsda3sdsa&amp;agent_id=1000020&amp;to_user=&amp;label=kxl&amp;level=Normal</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="https://img.xxlaila.cn/1576465910400.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kube-eventer 是一个事件发射器，它将 Kubernetes 事件发送到接收器(例如，DingTalk、SLS、Kafka 等)。
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="kube-eventer" scheme="https://www.xxlaila.cn/tags/kube-eventer/"/>
    
  </entry>
  
  <entry>
    <title>master加入node节点</title>
    <link href="https://www.xxlaila.cn/2019/12/13/master%E5%8A%A0%E5%85%A5node%E8%8A%82%E7%82%B9/"/>
    <id>https://www.xxlaila.cn/2019/12/13/master加入node节点/</id>
    <published>2019-12-13T08:26:22.000Z</published>
    <updated>2019-12-13T08:46:13.312Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之前一直没有做k8s集群的时候一直没有master加入为node节点。在使用的时候遇到了很多坑，<a id="more"></a>但是都还好，都能及时的解决。这里记录一下吧master加入node行列的好处。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个问题是之前在<a href="https://www.xxlaila.cn/2019/10/29/istio%E9%83%A8%E7%BD%B2/">部署istio</a>的时候遇到的。整了大半个月最终搞定啦。master加入node节点以后解决了哪些问题。istio、metrics-server、heapster的问题都解决了。在部署metrics-server、heapster的时候不需要增加<code>hostNetwork: true</code>参数。</p><h3 id="master加入node"><a href="#master加入node" class="headerlink" title="master加入node"></a>master加入node</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果master加入node节点需要安装kubele、flanneld、docker、kube-proxy，与正常的node安装没有区别。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是master成为node节点以后，我们又不想master部署pod来增加master节点的压力。所以需要吧master节点设置为<code>SchedulingDisabled</code>。设置master节点为<code>SchedulingDisabled</code>的命令是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl patch node master-01 -p '&#123;"spec":&#123;"unschedulable":true&#125;&#125;'</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样设置是将Node 脱离调度范围，但是运行在改node节点上pod不会自动的停止。需要手动停止改node上运行的pod。如果需要回复调度是将<code>unschedulable</code>设置为false。执&gt;行kubectl replace或者kubectl patch 命令就能恢复系统对改 Node 的调度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl patch node master-01 -p '&#123;"spec":&#123;"unschedulable":false&#125;&#125;'</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;也可以使用kubectl的子命令cordon和uncordon也用于实现将Node进行隔离和恢复调度的操作。</p><ul><li><p>使用kubectl cordon对某个Node进行隔离调度操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl cordon master-01</span></span><br></pre></td></tr></table></figure></li><li><p>恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl uncordon master-01</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要注意的是即使设置node为<code>SchedulingDisabled</code>，系统还是会调度<code>DaemonSet</code>类型的pod。如果flanneld是pod安装，这个一定要调度过来。否则网络不通。设置<code>DaemonSet</code>类型的pod不调度在<code>SchedulingDisabled</code>的node上，可以吧<code>DaemonSet</code>设置一个<code>nodeSelector</code>的标签。让这类型的pod运行在指定的节点上。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;之前一直没有做k8s集群的时候一直没有master加入为node节点。在使用的时候遇到了很多坑，
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="node" scheme="https://www.xxlaila.cn/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>istio部署错误解决</title>
    <link href="https://www.xxlaila.cn/2019/12/13/istio%E9%83%A8%E7%BD%B2%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/"/>
    <id>https://www.xxlaila.cn/2019/12/13/istio部署错误解决/</id>
    <published>2019-12-13T01:31:46.000Z</published>
    <updated>2019-12-18T07:42:29.373Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面的一篇文章中我做了简单的部署，但是在疏忽bookinfo的时候出现了错误。<a id="more"></a>这个错误不解决，没办法进行下一步。后学的路由规则完全没办法学习和测试。</p><h3 id="istio错误解决"><a href="#istio错误解决" class="headerlink" title="istio错误解决"></a>istio错误解决</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; istio的错误查看<a href="https://www.xxlaila.cn/2019/10/29/istio%E9%83%A8%E7%BD%B2/">istio的部署</a>，本次根据这个错误来进行解决。</p><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><h4 id="apiserver日志"><a href="#apiserver日志" class="headerlink" title="apiserver日志"></a>apiserver日志</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这个错误访问k8s的apiserver 问题，应该是超时。我们可以查看apiserver的日志，利用 journalctl 命令来筛选apiserver的日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># journalctl  -u  kube-apiserver  -f</span></span><br><span class="line"></span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 09:59:33.659161   31393 trace.go:81] Trace[40457478]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/istio-system/gateways"</span> (started: 2019-11-08 09:59:03.657132211 +0800 CST m=+328870.679516549) (total time: 30.001964129s):</span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[40457478]: [30.001964129s] [30.001043358s] END</span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 09:59:33.659790   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: net/http: request canceled <span class="keyword">while</span> waiting <span class="keyword">for</span> connection (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 09:59:39 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 09:59:39.979543   31393 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.metrics.k8s.io</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 10:00:03.764977   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: context deadline exceeded (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:03.765401   31393 trace.go:81] Trace[1649710078]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules"</span> (started: 2019-11-08 09:59:33.763211641 +0800 CST m=+328900.785596022) (total time: 30.00209862s):</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[1649710078]: [30.00209862s] [30.001534667s] END</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:33.840606   31393 trace.go:81] Trace[970347589]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/weather/virtualservices"</span> (started: 2019-11-08 10:00:03.83792882 +0800 CST m=+328930.860313362) (total time: 30.002612137s):</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[970347589]: [30.002612137s] [30.001075132s] END</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 10:00:33.841663   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: context deadline exceeded (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 10:00:38 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:38.260710   31393 trace.go:81] Trace[460935607]: <span class="string">"GuaranteedUpdate etcd3: *v1.Endpoints"</span> (started: 2019-11-08 10:00:37.644096515 +0800 CST m=+328964.666480867) (total time: 616.515599ms):</span><br><span class="line">Nov 08 10:00:38 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[460935607]: [533.664848ms] [449.34458ms] Transaction prepared</span><br><span class="line">Nov 08 10:00:39 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:39.986622   31393 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.metrics.k8s.io</span><br><span class="line">Nov 08 10:01:38 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:01:38.780611   31393 trace.go:81] Trace[269873276]: <span class="string">"Get /api/v1/namespaces/default"</span> (started: 2019-11-08 10:01:37.631910347 +0800 CST m=+329024.654294682) (total time: 1.148554735s):</span><br><span class="line">Nov 08 10:01:38 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[269873276]: [1.148211464s] [1.148180236s] About to write a response</span><br></pre></td></tr></table></figure><h4 id="istio-pilot日志"><a href="#istio-pilot日志" class="headerlink" title="istio-pilot日志"></a>istio-pilot日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl logs istio-pilot-569499d666-rfjsh  -n istio-system discovery</span></span><br><span class="line">2019-11-08T07:26:14.097765ZinfoHandling event update <span class="keyword">for</span> pod istio-security-post-install-1.2.8-c52np <span class="keyword">in</span> namespace istio-system -&gt; 172.30.112.9</span><br><span class="line">2019-11-08T07:26:27.395268ZinfoHandling event update <span class="keyword">for</span> pod istio-security-post-install-1.2.8-c52np <span class="keyword">in</span> namespace istio-system -&gt; 172.30.112.9</span><br><span class="line">2019-11-08T07:26:38.227484ZinfoClient received GoAway with http2.ErrCodeEnhanceYourCalm.</span><br><span class="line">2019-11-08T07:26:38.227760ZinfopickfirstBalancer: HandleSubConnStateChange: 0xc0001fbaa0, CONNECTING</span><br><span class="line">2019-11-08T07:26:38.228913Zinfotransport: loopyWriter.run returning. connection error: desc = <span class="string">"transport is closing"</span></span><br><span class="line">2019-11-08T07:26:38.230352ZerrormcpError receiving MCP resource: rpc error: code = Unavailable desc = transport is closing</span><br><span class="line">2019-11-08T07:26:38.230387ZerrormcpError receiving MCP response: rpc error: code = Unavailable desc = transport is closing</span><br><span class="line">2019-11-08T07:26:38.235755ZinfopickfirstBalancer: HandleSubConnStateChange: 0xc0001fbaa0, READY</span><br><span class="line">2019-11-08T07:26:39.230701Zinfomcp(re)trying to establish new MCP sink stream</span><br></pre></td></tr></table></figure><h4 id="istio-galley日志"><a href="#istio-galley日志" class="headerlink" title="istio-galley日志"></a>istio-galley日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl logs istio-galley-64f7d8cc97-8nbpc  -n istio-system</span></span><br><span class="line">2019-11-08T07:23:38.860184ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125; ACK collection=istio/rbac/v1alpha1/serviceroles with version=<span class="string">"0"</span> nonce=<span class="string">"16"</span> inc=<span class="literal">false</span></span><br><span class="line">2019-11-08T07:23:38.860197ZinfomcpWatch(): created watch 28 <span class="keyword">for</span> istio/rbac/v1alpha1/serviceroles from group <span class="string">"default"</span>, version <span class="string">"0"</span></span><br><span class="line">2019-11-08T07:23:38.860217ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125; ACK collection=istio/networking/v1alpha3/gateways with version=<span class="string">"0"</span> nonce=<span class="string">"17"</span> inc=<span class="literal">false</span></span><br><span class="line">2019-11-08T07:23:38.860268ZinfomcpWatch(): created watch 29 <span class="keyword">for</span> istio/networking/v1alpha3/gateways from group <span class="string">"default"</span>, version <span class="string">"0"</span></span><br><span class="line">2019-11-08T07:26:38.227268Zinfotransport: Got too many pings from the client, closing the connection.</span><br><span class="line">2019-11-08T07:26:38.227414Zinfotransport: loopyWriter.run returning. Err: transport: Connection closing</span><br><span class="line">2019-11-08T07:26:38.228857Zinfotransport: http2Server.HandleStreams failed to <span class="built_in">read</span> frame: <span class="built_in">read</span> tcp 172.30.104.4:9901-&gt;172.30.104.7:57190: use of closed network connection</span><br><span class="line">2019-11-08T07:26:38.229130ZerrormcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125;: TERMINATED with errors: rpc error: code = Canceled desc = context canceled</span><br><span class="line">2019-11-08T07:26:38.229162ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125;: CLOSED</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前面其实有一个错误，忘记记录了，是一个tls的证书问题。根据上面的错误在google上找了好久，各种文档都查看了好久。就是安装的时候去验证tls证书，还有什么webhook问题。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>解决办法:</strong> 需要在apiserver里面需要配置 enable-admission-plugins，由于在安装的时候指定了某一个插件，导致这个未启用，如果没有配置该插件，默认其实是启用的。两个插件分别是：ValidatingAdmissionWebhook、MutatingAdmissionWebhook。安装文档里面已经修改，<a href="https://www.xxlaila.cn/2019/09/11/kubernetes-v1-14%E5%AE%89%E8%A3%85/">参考配置</a>。修改以后需要重启kube-apiserver。</p><h4 id="master加入node"><a href="#master加入node" class="headerlink" title="master加入node"></a>master加入node</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果master节点未安装kubele、flanneld、docker、kube-proxy。会导致master节点访问不了集群内部的istio-sidecar-injector服务。就会导致自动注入失败。而且当在部署自动注入的时候就会提示: <code>Error creating: Internal error occurred: failed calling webhook &quot;sidecar-injector.istio.io&quot;: Post https://istio-sidecar-injector.istio-system.svc:443/inject?timeout=30s: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers</code>。<br><img src="https://img.xxlaila.cn/1576201446462.jpg" alt="img"><br>这里有大神总结的<a href="https://mp.weixin.qq.com/s/6TjJQrv_z6AZPKw6eigAcQ" target="_blank" rel="noopener">详细错误</a>，master节点加入node<a href="https://www.xxlaila.cn/2019/12/13/master加入node节点">详细参考</a>说明。</p><h4 id="验证api-resources"><a href="#验证api-resources" class="headerlink" title="验证api-resources"></a>验证api-resources</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl api-resources | grep admissionregistration</span><br><span class="line">mutatingwebhookconfigurations                  admissionregistration.k8s.io   <span class="literal">false</span>        MutatingWebhookConfiguration</span><br><span class="line">validatingwebhookconfigurations                admissionregistration.k8s.io   <span class="literal">false</span>        ValidatingWebhookConfiguration</span><br></pre></td></tr></table></figure><ul><li>启用 admissionregistration.k8s.io/v1alpha1 API<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions | grep admissionregistration.k8s.io</span></span><br><span class="line">admissionregistration.k8s.io/v1beta1</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用上面命令可以检查当前是否以启用，admissionregistration.k8s.io/v1alpha1 API，若不存在则需要在 apiserver 的配置中添加–runtime-config=admissionregistration.k8s.io/v1alpha1。</p><h3 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;新建一个Values.yaml 配置参数文件。下面是参考一个大神的。然后根据自己测试修改的</p><ul><li>Values.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  defaultResources:</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 30m</span><br><span class="line">      memory: 50Mi</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 400m</span><br><span class="line">      memory: 600Mi</span><br><span class="line">  proxy:</span><br><span class="line">    includeIPRanges: 10.244.0.0/16,10.254.0.0/16</span><br><span class="line">    <span class="comment"># 是否开启自动注入功能，取值enabled则该pods只要没有被注解为sidecar.istio.io/inject: "false",就会自动注入。如果取值为disabled，则需要为pod设置注解sidecar.istio.io/inject: "true"才会进行注入</span></span><br><span class="line">    <span class="comment"># 如果要使用官方bookinfo来进行测试学习，这个设置为enabled。如果设置为disable的，在部署官方bookinfo的时候则不会部署 `Sidecar (istio-proxy)`。需要自己手动去整。官方默认是开启状态</span></span><br><span class="line">    autoInject: enabled</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 30m</span><br><span class="line">        memory: 50Mi</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 400m</span><br><span class="line">        memory: 500Mi</span><br><span class="line">  mtls:</span><br><span class="line">    enabled: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">sidecarInjectorWebhook:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 变量为true，就会为所有命名空间开启自动注入功能。如果赋值为false，则只有标签为istio-injection的命名空间才会开启自动注入功能</span></span><br><span class="line">  enableNamespacesByDefault: <span class="literal">false</span></span><br><span class="line">  rewriteAppHTTPProbe: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">mixer:</span><br><span class="line">  policy:</span><br><span class="line">    enabled: enabled</span><br><span class="line">  telemetry:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 100m</span><br><span class="line">        memory: 300Mi</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 1000m</span><br><span class="line">        memory: 1024Mi</span><br><span class="line"></span><br><span class="line">pilot:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 100m</span><br><span class="line">      memory: 300Mi</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 1000m</span><br><span class="line">      memory: 1024Mi</span><br><span class="line"></span><br><span class="line">gateways:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  istio-ingressgateway:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    <span class="built_in">type</span>: NodePort</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 100m</span><br><span class="line">        memory: 128Mi</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 1000m</span><br><span class="line">        memory: 1024Mi</span><br><span class="line">  istio-egressgateway:</span><br><span class="line">    enabled: enabled</span><br><span class="line">    <span class="built_in">type</span>: NodePort</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 100m</span><br><span class="line">        memory: 128Mi</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 1000m</span><br><span class="line">        memory: 256Mi</span><br><span class="line"></span><br><span class="line">tracing:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  jaeger:</span><br><span class="line">    resources:</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 300m</span><br><span class="line">        memory: 900Mi</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 30m</span><br><span class="line">        memory: 100Mi</span><br><span class="line">  zipkin:</span><br><span class="line">    resources:</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 300m</span><br><span class="line">        memory: 900Mi</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 30m</span><br><span class="line">        memory: 100Mi</span><br><span class="line">  contextPath: /</span><br><span class="line">  ingress:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    annotations:</span><br><span class="line">      kubernetes.io/ingress.class: traefik</span><br><span class="line">    hosts:</span><br><span class="line">      - istio-tracing.xxlaila.cn</span><br><span class="line"></span><br><span class="line">kiali:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  resources:</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 300m</span><br><span class="line">      memory: 900Mi</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 30m</span><br><span class="line">      memory: 50Mi</span><br><span class="line">  hub: kiali</span><br><span class="line">  contextPath: /</span><br><span class="line">  ingress:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    annotations: </span><br><span class="line">      kubernetes.io/ingress.class: traefik</span><br><span class="line">    hosts:</span><br><span class="line">      - istio-kiali.xxlaila.cn</span><br><span class="line">  dashboard:</span><br><span class="line">    grafanaURL: http://grafana:3000</span><br><span class="line">    jaegerURL: http://jaeger-query:16686</span><br><span class="line"></span><br><span class="line">grafana:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  persist: <span class="literal">true</span></span><br><span class="line">  storageClassName: xxlaila-nfs-storage</span><br><span class="line">  accessMode: ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 30m</span><br><span class="line">      memory: 50Mi</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 300m</span><br><span class="line">      memory: 500Mi</span><br><span class="line">  contextPath: /</span><br><span class="line">  ingress:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    annotations:</span><br><span class="line">      kubernetes.io/ingress.class: traefik</span><br><span class="line">    hosts:</span><br><span class="line">      - istio-grafana.xxlaila.cn</span><br><span class="line"></span><br><span class="line">prometheus:</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 30m</span><br><span class="line">      memory: 50Mi</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 500m</span><br><span class="line">      memory: 1024Mi</span><br><span class="line">  retention: 3d</span><br><span class="line">  contextPath: /</span><br><span class="line">  ingress:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    annotations:</span><br><span class="line">      kubernetes.io/ingress.class: traefik</span><br><span class="line">    hosts:</span><br><span class="line">      - istio-prometheus.xxlaila.cn</span><br><span class="line"></span><br><span class="line">istio_cni:</span><br><span class="line">  enabled: <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>注</strong>:</p><ul><li>istio 访问外部服务，istio网格默认不能访问外部服务，如需要访问外部服务有三种方式<ul><li>global.proxy.includeIPRanges: istio 访问外部服务。指定访问外部的服务ip地址段，直接通过proxy进行访问。默认是<code>*</code> 所有的</li><li>创建应用时指定pod annotaion: traffic.sidecar.istio.io/includeOutboundIPRanges: “127.0.0.1/24,10.244.0.1/24”</li><li>创建ServiceEntry, 需要通过egressgateway控制访问外部服务，应用场景一般是集群的node不能访问外部网络。如集群可以访问外部网络则不需要</li></ul></li></ul><p><a href="https://mp.weixin.qq.com/s/PPTnoyVD2bzeZ6vHRUphzQ" target="_blank" rel="noopener">参考文献</a><br><a href="https://istio.io/docs/reference/config/installation-options/" target="_blank" rel="noopener">官方参数</a></p><h4 id="安装-Istio"><a href="#安装-Istio" class="headerlink" title="安装 Istio"></a>安装 Istio</h4><ul><li><p>部署crds</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm install install/kubernetes/helm/istio-init --name istio-init --namespace istio-system</span></span><br></pre></td></tr></table></figure></li><li><p>部署istio</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm install ./install/kubernetes/helm/istio --name istio --namespace istio-system -f Values.yaml  --host=10.254.156.238:44134</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里说一下这个 <code>--host</code>参数。在执行helm安装的时候遇到了 <code>portforward.go:178] lost connection to pod， Error: transport is closing</code>。ip是tiller-deploy的ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n kube-system tiller-deploy</span></span><br><span class="line">NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)     AGE</span><br><span class="line">tiller-deploy   ClusterIP   10.254.156.238   &lt;none&gt;        44134/TCP   10d</span><br></pre></td></tr></table></figure><ul><li>部署kiali登录认证<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;kiali-secret.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: kiali</span><br><span class="line">  namespace: istio-system</span><br><span class="line">  labels:</span><br><span class="line">    app: kiali</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">data:</span><br><span class="line">  username: <span class="string">"YWRtaW4="</span></span><br><span class="line">  passphrase: <span class="string">"YWRtaW4="</span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f kiali-secret.yaml</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;账号密码是admin/admin，可以参考<a href="https://www.xxlaila.cn/2019/10/29/istio%E9%83%A8%E7%BD%B2/">istio部署</a>最前面</p><h4 id="查看验证"><a href="#查看验证" class="headerlink" title="查看验证"></a>查看验证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm list --all</span></span><br><span class="line">NAME      REVISIONUPDATED                 STATUS  CHART           APP VERSIONNAMESPACE   </span><br><span class="line">istio     1       Fri Dec 13 09:23:59 2019DEPLOYEDistio-1.4.0     1.4.0      istio-system</span><br><span class="line">istio-init1       Fri Dec 13 09:22:56 2019DEPLOYEDistio-init-1.4.01.4.0      istio-system</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods -n istio-system</span></span><br><span class="line">NAME                                     READY   STATUS      RESTARTS   AGE</span><br><span class="line">grafana-6df449db94-496vn                 1/1     Running     0          59m</span><br><span class="line">istio-citadel-56bc45cd9-9tv99            1/1     Running     0          59m</span><br><span class="line">istio-egressgateway-6646ddf7bd-vskqb     1/1     Running     0          59m</span><br><span class="line">istio-galley-8466db4f-9pjfj              1/1     Running     0          59m</span><br><span class="line">istio-ingressgateway-6ff999fc48-pdwj8    1/1     Running     0          59m</span><br><span class="line">istio-init-crd-10-1.4.0-lzssz            0/1     Completed   0          61m</span><br><span class="line">istio-init-crd-11-1.4.0-gp9cg            0/1     Completed   0          61m</span><br><span class="line">istio-init-crd-14-1.4.0-2md46            0/1     Completed   0          61m</span><br><span class="line">istio-pilot-7dbb475df9-fchzq             2/2     Running     3          59m</span><br><span class="line">istio-policy-f8bb48d59-wsmvb             2/2     Running     3          59m</span><br><span class="line">istio-sidecar-injector-9f4dbd594-r9tm6   1/1     Running     0          59m</span><br><span class="line">istio-telemetry-5c57d8976c-8rmvc         2/2     Running     4          59m</span><br><span class="line">istio-telemetry-5c57d8976c-gt8zt         2/2     Running     0          3m45s</span><br><span class="line">istio-tracing-567bc5c88f-gtpfl           1/1     Running     0          59m</span><br><span class="line">kiali-77b68664b7-pdvck                   1/1     Running     0          59m</span><br><span class="line">prometheus-575dbff696-s62dw              1/1     Running     0          59m</span><br></pre></td></tr></table></figure><h3 id="部署官方的bookinfo"><a href="#部署官方的bookinfo" class="headerlink" title="部署官方的bookinfo"></a>部署官方的bookinfo</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用自动注入。</p><h4 id="部署pods-和服务"><a href="#部署pods-和服务" class="headerlink" title="部署pods 和服务"></a>部署pods 和服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl label namespace default istio-injection=enabled</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get services</span></span><br><span class="line">NAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">details       ClusterIP   10.254.148.138   &lt;none&gt;        9080/TCP   15s</span><br><span class="line">kubernetes    ClusterIP   10.254.0.1       &lt;none&gt;        443/TCP    15d</span><br><span class="line">productpage   ClusterIP   10.254.183.24    &lt;none&gt;        9080/TCP   11s</span><br><span class="line">ratings       ClusterIP   10.254.185.74    &lt;none&gt;        9080/TCP   15s</span><br><span class="line">reviews       ClusterIP   10.254.180.76    &lt;none&gt;        9080/TCP   13s</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                             READY   STATUS              RESTARTS   AGE</span><br><span class="line">details-v1-c5b5f496d-ztml6       1/1     Running             0          18s</span><br><span class="line">productpage-v1-c7765c886-592sd   0/1     ContainerCreating   0          13s</span><br><span class="line">ratings-v1-f745cf57b-8d7h2       1/1     Running             0          18s</span><br><span class="line">reviews-v1-75b979578c-nrj48      1/1     Running             0          15s</span><br><span class="line">reviews-v2-597bf96c8f-tvc5v      1/1     Running             0          16s</span><br><span class="line">reviews-v3-54c6c64795-75qgp      1/1     Running             0          16s</span><br></pre></td></tr></table></figure><h4 id="部署gateway"><a href="#部署gateway" class="headerlink" title="部署gateway"></a>部署gateway</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml</span></span><br><span class="line">gateway.networking.istio.io/bookinfo-gateway created</span><br><span class="line">virtualservice.networking.istio.io/bookinfo created</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get gateway</span></span><br><span class="line">NAME               AGE</span><br><span class="line">bookinfo-gateway   4s</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml</span></span><br><span class="line">destinationrule.networking.istio.io/productpage created</span><br><span class="line">destinationrule.networking.istio.io/reviews created</span><br><span class="line">destinationrule.networking.istio.io/ratings created</span><br><span class="line">destinationrule.networking.istio.io/details created</span><br></pre></td></tr></table></figure><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">details-v1-c5b5f496d-75vcp       2/2     Running   0          11m</span><br><span class="line">productpage-v1-c7765c886-lh7hc   2/2     Running   0          11m</span><br><span class="line">ratings-v1-f745cf57b-6hdd9       2/2     Running   0          11m</span><br><span class="line">reviews-v1-75b979578c-n7dvn      2/2     Running   0          11m</span><br><span class="line">reviews-v2-597bf96c8f-fptt2      2/2     Running   0          11m</span><br><span class="line">reviews-v3-54c6c64795-fn74z      2/2     Running   0          11m</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开任意node的ip，<a href="http://ip:31380/productpage，" target="_blank" rel="noopener">http://ip:31380/productpage，</a> istio部署错误解决完成。</p><h4 id="规则验证"><a href="#规则验证" class="headerlink" title="规则验证"></a>规则验证</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在刚开始建立的时候已经设置了默认的目标规则。下面来测试一下官方给的默认规则。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;吧所有的流量迁移到v3版本。需要执行virtual-service-reviews-v3.yaml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f virtual-service-reviews-v3.yaml</span></span><br></pre></td></tr></table></figure><p><img src="https://img.xxlaila.cn/1576483227032.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;设定一个登录某一个用户显示v2版本。默认显示v3版本。需要执行virtual-service-reviews-jason-v2-v3.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f virtual-service-reviews-jason-v2-v3.yaml</span></span><br></pre></td></tr></table></figure><p><img src="https://img.xxlaila.cn/1576483408814.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1576483452482.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1576483506265.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在前面的一篇文章中我做了简单的部署，但是在疏忽bookinfo的时候出现了错误。
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="istio" scheme="https://www.xxlaila.cn/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>alertmanager告警配置</title>
    <link href="https://www.xxlaila.cn/2019/12/06/alertmanager%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.xxlaila.cn/2019/12/06/alertmanager告警配置/</id>
    <published>2019-12-06T08:46:31.000Z</published>
    <updated>2019-12-06T09:57:27.541Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 前篇文章做了kubernetes 的 监控，基于<a href="https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/">prometheus与grafana部署</a>，监控是做好了，但是还缺乏告警机制，没有告警机制监控就白做了，prometheus的告警就是alertmanager来做。<a id="more"></a> 而在部署kube-prometheus的时候，alertmanager也是部署完成，这里只需要稍加修改alertmanager即可实现告警</p><h3 id="配置-alertmanager"><a href="#配置-alertmanager" class="headerlink" title="配置 alertmanager"></a>配置 alertmanager</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打开之前部署<a href="https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/">prometheus与grafana部署</a>，里面有alertmanager的地址<code>http://alertmanager.xxlaila.cn/</code>，打开界面点击 <code>Status</code> 按钮我们可以查看到alertmanager的默认配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line">  http_config: &#123;&#125;</span><br><span class="line">  smtp_hello: localhost</span><br><span class="line">  smtp_require_tls: <span class="literal">true</span></span><br><span class="line">  pagerduty_url: https://events.pagerduty.com/v2/enqueue</span><br><span class="line">  hipchat_api_url: https://api.hipchat.com/</span><br><span class="line">  opsgenie_api_url: https://api.opsgenie.com/</span><br><span class="line">  wechat_api_url: https://qyapi.weixin.qq.com/cgi-bin/</span><br><span class="line">  victorops_api_url: https://alert.victorops.com/integrations/generic/20131114/alert/</span><br><span class="line">route:</span><br><span class="line">  receiver: <span class="string">"null"</span></span><br><span class="line">  group_by:</span><br><span class="line">  - job</span><br><span class="line">  routes:</span><br><span class="line">  - receiver: <span class="string">"null"</span></span><br><span class="line">    match:</span><br><span class="line">      alertname: Watchdog</span><br><span class="line">  group_wait: 30s</span><br><span class="line">  group_interval: 5m</span><br><span class="line">  repeat_interval: 12h</span><br><span class="line">receivers:</span><br><span class="line">- name: <span class="string">"null"</span></span><br><span class="line">templates: []</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个默认配置是alertmanager目录下<code>alertmanager-secret.yaml</code>文件生成的，这个配置文件是通过base64加密过的，可以使用base64解密查看</p><ul><li><p>原alertmanager-secret.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  alertmanager.yaml: Imdsb2JhbCI6CiAgInJlc29sdmVfdGltZW91dCI6ICI1bSIKInJlY2VpdmVycyI6Ci0gIm5hbWUiOiAibnVsbCIKInJvdXRlIjoKICAiZ3JvdXBfYnkiOgogIC0gImpvYiIKICAiZ3JvdXBfaW50ZXJ2YWwiOiAiNW0iCiAgImdyb3VwX3dhaXQiOiAiMzBzIgogICJyZWNlaXZlciI6ICJudWxsIgogICJyZXBlYXRfaW50ZXJ2YWwiOiAiMTJoIgogICJyb3V0ZXMiOgogIC0gIm1hdGNoIjoKICAgICAgImFsZXJ0bmFtZSI6ICJXYXRjaGRvZyIKICAgICJyZWNlaXZlciI6ICJudWxsIg==</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-main</span><br><span class="line">  namespace: monitoring</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br></pre></td></tr></table></figure></li><li><p>解密alertmanager-secret.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo "Imdsb2JhbCI6CiAgInJlc29sdmVfdGltZW91dCI6ICI1bSIKInJlY2VpdmVycyI6Ci0gIm5hbWUiOiAibnVsbCIKInJvdXRlIjoKICAiZ3JvdXBfYnkiOgogIC0gImpvYiIKICAiZ3JvdXBfaW50ZXJ2YWwiOiAiNW0iCiAgImdyb3VwX3dhaXQiOiAiMzBzIgogICJyZWNlaXZlciI6ICJudWxsIgogICJyZXBlYXRfaW50ZXJ2YWwiOiAiMTJoIgogICJyb3V0ZXMiOgogIC0gIm1hdGNoIjoKICAgICAgImFsZXJ0bmFtZSI6ICJXYXRjaGRvZyIKICAgICJyZWNlaXZlciI6ICJudWxsIg==" |base64 -d</span></span><br><span class="line"><span class="string">"global"</span>:</span><br><span class="line">  <span class="string">"resolve_timeout"</span>: <span class="string">"5m"</span></span><br><span class="line"><span class="string">"receivers"</span>:</span><br><span class="line">- <span class="string">"name"</span>: <span class="string">"null"</span></span><br><span class="line"><span class="string">"route"</span>:</span><br><span class="line">  <span class="string">"group_by"</span>:</span><br><span class="line">  - <span class="string">"job"</span></span><br><span class="line">  <span class="string">"group_interval"</span>: <span class="string">"5m"</span></span><br><span class="line">  <span class="string">"group_wait"</span>: <span class="string">"30s"</span></span><br><span class="line">  <span class="string">"receiver"</span>: <span class="string">"null"</span></span><br><span class="line">  <span class="string">"repeat_interval"</span>: <span class="string">"12h"</span></span><br><span class="line">  <span class="string">"routes"</span>:</span><br><span class="line">  - <span class="string">"match"</span>:</span><br><span class="line">      <span class="string">"alertname"</span>: <span class="string">"Watchdog"</span></span><br><span class="line">    <span class="string">"receiver"</span>: <span class="string">"null"</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;配置的结构差不多是一致的，内容嘛都是默认的。这里我们要实现自己的通知，就需要改改啦，这里我使用了企业微信来进行告警，<a href="https://www.xxlaila.cn/2019/08/20/zabbix%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E5%91%8A%E8%AD%A6/">企业微信</a>申请参考。这里我们要新建一个alertmanager.yaml 文件，这个文件名不能随便命名，可以看到alertmanager-secret.yaml是这么定义的。也可以在kubernetes的dashbord界面看到alertmanager 的安装参数也是这个。可以进入容器看到这个文件，默认路径在/etc/alertmanager/config/alertmanager.yaml。</p><h4 id="新建alertmanager-yaml"><a href="#新建alertmanager-yaml" class="headerlink" title="新建alertmanager.yaml"></a>新建alertmanager.yaml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line">  smtp_smarthost: <span class="string">'smtp.exmail.qq.com:465'</span></span><br><span class="line">  smtp_from: <span class="string">'admin@admin.com'</span></span><br><span class="line">  smtp_auth_username: <span class="string">'admin@admin.com'</span></span><br><span class="line">  smtp_auth_password: <span class="string">'123456'</span></span><br><span class="line">  smtp_require_tls: <span class="literal">true</span></span><br><span class="line">  hipchat_api_url: <span class="string">'https://hipchat.foobar.org/'</span></span><br><span class="line">  wechat_api_url: <span class="string">'https://qyapi.weixin.qq.com/cgi-bin/'</span> <span class="comment"># 企业微信地址</span></span><br><span class="line">  wechat_api_secret: <span class="string">'KJfj93rijk903240i--234jsnjkhf23sjkfjsfsd'</span> <span class="comment"># 企业微信Secret</span></span><br><span class="line">  wechat_api_corp_id: <span class="string">'wwa98457kdsnfk8'</span> <span class="comment"># 企业微信CorpId</span></span><br><span class="line">templates:</span><br><span class="line">- <span class="string">'*.tmpl'</span></span><br><span class="line">route:</span><br><span class="line">  group_by: [<span class="string">'alertname'</span>]</span><br><span class="line">  group_wait: 30s</span><br><span class="line">  group_interval: 5m</span><br><span class="line">  repeat_interval: 1h</span><br><span class="line">  receiver: default</span><br><span class="line">  routes:</span><br><span class="line">  - receiver: <span class="string">'wechat'</span></span><br><span class="line">    <span class="built_in">continue</span>: <span class="literal">true</span></span><br><span class="line">inhibit_rules:</span><br><span class="line">- source_match:</span><br><span class="line">receivers:</span><br><span class="line">- name: <span class="string">'default'</span></span><br><span class="line">  email_configs:</span><br><span class="line">  - to: <span class="string">'hahah@admin.com'</span></span><br><span class="line">    send_resolved: <span class="literal">true</span></span><br><span class="line">- name: <span class="string">'wechat'</span></span><br><span class="line">  wechat_configs:</span><br><span class="line">  - send_resolved: <span class="literal">true</span></span><br><span class="line">    corp_id: <span class="string">'wwa98457kdsnfk8'</span> <span class="comment"># 企业微信CorpId</span></span><br><span class="line">    to_user: <span class="string">'@all'</span> <span class="comment"># 接受人，都是all</span></span><br><span class="line">    to_party: <span class="string">''</span> <span class="comment"># 接收组的id</span></span><br><span class="line">    message: <span class="string">'&#123;&#123; template "wechat.default.message" . &#125;&#125;'</span> <span class="comment"># 发送消息的模版</span></span><br><span class="line">    agent_id: <span class="string">'1000021'</span> <span class="comment"># 企业微信自定义应用的id</span></span><br></pre></td></tr></table></figure><p><strong>参数</strong>：</p><ul><li>global: 全局配置。定义一些全局的公共参数，如全局的SMTP配置，企业微信，钉钉，这里配置了企业邮箱和企业微信。</li><li>templates: 模版。定义告警通知时的模板，如邮件模板、企业微信告警模版。</li><li>route: 告警路由。根据标签匹配，确定当前告警应该如何处理。</li><li>receivers: 接收人，可以是一个邮箱也可以是企业微信，也可以是一个webhook，这里我配置的企业微信的运维部门。是一个抽象的东西。</li><li>inhibit_rules: 抑制规则。设置合理的抑制规则可以减少垃圾告警的产生</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里要定义一个默认的接受方式<code>- name: &#39;default&#39;</code>，否则会出错误。错误如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">level=error ts=2019-12-06T08:36:25.005Z <span class="built_in">caller</span>=coordinator.go:124 component=configuration msg=<span class="string">"Loading configuration file failed"</span> file=/etc/alertmanager/config/alertmanager.yaml err=<span class="string">"root route must specify a default receiver"</span></span><br></pre></td></tr></table></figure><h4 id="tmpl模板的配置"><a href="#tmpl模板的配置" class="headerlink" title=".tmpl模板的配置"></a>.tmpl模板的配置</h4><ul><li>wechat.default.message.tmpl<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; wechat.default.message.tmpl &lt;&lt;EOF</span></span><br><span class="line">&#123;&#123; define <span class="string">"wechat.default.message"</span> &#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len .Alerts.Firing) 0 -&#125;&#125;</span><br><span class="line">&#123;&#123;- range <span class="variable">$index</span>, <span class="variable">$alert</span> := .Alerts -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> eq <span class="variable">$index</span> 0 -&#125;&#125;</span><br><span class="line">告警类型: &#123;&#123; <span class="variable">$alert</span>.Labels.alertname &#125;&#125;</span><br><span class="line">告警级别: &#123;&#123; <span class="variable">$alert</span>.Labels.severity &#125;&#125;</span><br><span class="line"></span><br><span class="line">=====================</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">===告警详情===</span><br><span class="line">告警详情: &#123;&#123; <span class="variable">$alert</span>.Annotations.message &#125;&#125;</span><br><span class="line">故障时间: &#123;&#123; <span class="variable">$alert</span>.StartsAt.Format <span class="string">"2019-11-06 17:01:01"</span> &#125;&#125;</span><br><span class="line">===参考信息===</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.instance) 0 -&#125;&#125;故障实例ip: &#123;&#123; <span class="variable">$alert</span>.Labels.instance &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.namespace) 0 -&#125;&#125;故障实例所在namespace: &#123;&#123; <span class="variable">$alert</span>.Labels.namespace &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.node) 0 -&#125;&#125;故障物理机ip: &#123;&#123; <span class="variable">$alert</span>.Labels.node &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.pod_name) 0 -&#125;&#125;故障pod名称: &#123;&#123; <span class="variable">$alert</span>.Labels.pod_name &#125;&#125;&#123;&#123;- end &#125;&#125;</span><br><span class="line">=====================</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len .Alerts.Resolved) 0 -&#125;&#125;</span><br><span class="line">&#123;&#123;- range <span class="variable">$index</span>, <span class="variable">$alert</span> := .Alerts -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> eq <span class="variable">$index</span> 0 -&#125;&#125;</span><br><span class="line">告警类型: &#123;&#123; <span class="variable">$alert</span>.Labels.alertname &#125;&#125;</span><br><span class="line">告警级别: &#123;&#123; <span class="variable">$alert</span>.Labels.severity &#125;&#125;</span><br><span class="line"></span><br><span class="line">=====================</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">===告警详情===</span><br><span class="line">告警详情: &#123;&#123; <span class="variable">$alert</span>.Annotations.message &#125;&#125;</span><br><span class="line">故障时间: &#123;&#123; <span class="variable">$alert</span>.StartsAt.Format <span class="string">"2019-11-06 17:01:01"</span> &#125;&#125;</span><br><span class="line">恢复时间: &#123;&#123; <span class="variable">$alert</span>.EndsAt.Format <span class="string">"2019-11-06 17:01:01"</span> &#125;&#125;</span><br><span class="line">===参考信息===</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.instance) 0 -&#125;&#125;故障实例ip: &#123;&#123; <span class="variable">$alert</span>.Labels.instance &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.namespace) 0 -&#125;&#125;故障实例所在namespace: &#123;&#123; <span class="variable">$alert</span>.Labels.namespace &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.node) 0 -&#125;&#125;故障物理机ip: &#123;&#123; <span class="variable">$alert</span>.Labels.node &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.pod_name) 0 -&#125;&#125;故障pod名称: &#123;&#123; <span class="variable">$alert</span>.Labels.pod_name &#125;&#125;;&#123;&#123;- end &#125;&#125;</span><br><span class="line">=====================</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><h3 id="建立alertmanager-main"><a href="#建立alertmanager-main" class="headerlink" title="建立alertmanager-main"></a>建立alertmanager-main</h3><h4 id="删除原有的配置项"><a href="#删除原有的配置项" class="headerlink" title="删除原有的配置项"></a>删除原有的配置项</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl delete secret alertmanager-main -n monitoring</span></span><br></pre></td></tr></table></figure><h4 id="部署alertmanager-secret"><a href="#部署alertmanager-secret" class="headerlink" title="部署alertmanager secret"></a>部署alertmanager secret</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;重新部署alertmanager secret有两种方式，第一种是把建立好的alertmanager.yaml 通过base64加密以后覆盖之前文件的base64内容，wechat.default.message.tmpl模版文件也是一样。整体格式如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat alertmanager-secret.yaml </span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  alertmanager.yaml: bash64</span><br><span class="line">  template_1.tmpl: bash64</span><br><span class="line">  template_2.tmpl: bash64</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-main</span><br><span class="line">  namespace: monitoring</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种创建比较麻烦，每次修改文件都要去生成一次。不方便。所以可以使用以下方式，简单快捷。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl create secret generic alertmanager-main --from-file=alertmanager.yaml,wechat.default.message.tmpl -n monitoring</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署完成以后，Secret 对象将会挂载到 AlertManager 对象创建的 AlertManager Pod 中去。等一小会就企业微信就可以收到告警信息</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><h4 id="alertmanager-web界面的config信息会发生变化"><a href="#alertmanager-web界面的config信息会发生变化" class="headerlink" title="alertmanager web界面的config信息会发生变化"></a>alertmanager web界面的config信息会发生变化</h4><p><img src="https://img.xxlaila.cn/1575624600073.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575624706636.jpg" alt="img"></p><h4 id="企业微信"><a href="#企业微信" class="headerlink" title="企业微信"></a>企业微信</h4><p><img src="https://img.xxlaila.cn/1575624815597.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 前篇文章做了kubernetes 的 监控，基于&lt;a href=&quot;https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/&quot;&gt;prometheus与grafana部署&lt;/a&gt;，监控是做好了，但是还缺乏告警机制，没有告警机制监控就白做了，prometheus的告警就是alertmanager来做。
    
    </summary>
    
      <category term="监控" scheme="https://www.xxlaila.cn/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="alertmanager" scheme="https://www.xxlaila.cn/tags/alertmanager/"/>
    
  </entry>
  
  <entry>
    <title>k8s v1.14 prometheus与grafana部署</title>
    <link href="https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus与grafana部署/</id>
    <published>2019-12-04T09:55:44.000Z</published>
    <updated>2019-12-11T05:50:28.208Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-prometheus是读取Metrcs、etcd、api的其中数据。<a id="more"></a></p><h4 id="查看etcd的metrics输出信息"><a href="#查看etcd的metrics输出信息" class="headerlink" title="查看etcd的metrics输出信息"></a>查看etcd的metrics输出信息</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># curl --cacert <span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca.pem --cert <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span>etcd.pem --key <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span>etcd-key.pem https:<span class="comment">//172.21.17.30:2379/metrics</span></span><br></pre></td></tr></table></figure><h4 id="查看kube-apiserver的metrics信息"><a href="#查看kube-apiserver的metrics信息" class="headerlink" title="查看kube-apiserver的metrics信息"></a>查看kube-apiserver的metrics信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get --raw /metrics</span></span><br></pre></td></tr></table></figure><h4 id="下载官方的yaml文件"><a href="#下载官方的yaml文件" class="headerlink" title="下载官方的yaml文件"></a>下载官方的yaml文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git clone https://github.com/coreos/kube-prometheus</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd kube-prometheus/manifests</span></span><br><span class="line"><span class="comment"># mkdir -p operator node-exporter alertmanager grafana kube-state-metrics prometheus serviceMonitor adapter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mv *-serviceMonitor* serviceMonitor/</span></span><br><span class="line"><span class="comment"># mv grafana-* grafana/</span></span><br><span class="line"><span class="comment"># mv kube-state-metrics-* kube-state-metrics/</span></span><br><span class="line"><span class="comment"># mv alertmanager-* alertmanager/</span></span><br><span class="line"><span class="comment"># mv node-exporter-* node-exporter/</span></span><br><span class="line"><span class="comment"># mv prometheus-adapter* adapter/</span></span><br><span class="line"><span class="comment"># mv prometheus-* prometheus/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd setup/</span></span><br><span class="line"><span class="comment"># mv prometheus-operator* ../operator/</span></span><br><span class="line"><span class="comment"># mv 0namespace-namespace.yaml ../</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd ..</span></span><br><span class="line"><span class="comment"># ls -ltrh</span></span><br><span class="line">-rw-r--r-- 1 root root   60 Dec  3 17:45 0namespace-namespace.yaml</span><br><span class="line">drwxr-xr-x 2 root root  219 Dec  3 17:46 grafana</span><br><span class="line">drwxr-xr-x 2 root root  305 Dec  3 17:46 kube-state-metrics</span><br><span class="line">drwxr-xr-x 2 root root  200 Dec  3 17:46 node-exporter</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  3 17:47 operator</span><br><span class="line">drwxr-xr-x 2 root root  149 Dec  4 13:40 alertmanager</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 09:56 prometheus</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 10:01 adapter</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 11:55 serviceMonitor</span><br></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署前需要修改文件；</p><h4 id="创建监控etcd-secret"><a href="#创建监控etcd-secret" class="headerlink" title="创建监控etcd secret"></a>创建监控etcd secret</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etcd 监控要用到证书同时需要修改prometheus-prometheus.yaml。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n monitoring create secret generic etcd-certs --from-file=/etc/kubernetes/ssl/ca.pem --from-file=etcd-key.pem --from-file=etcd.pem</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get secret -n monitoring</span></span><br><span class="line">etcd-certs                        Opaque                                3      5d15h</span><br></pre></td></tr></table></figure><h4 id="修改prometheus-prometheus-yaml"><a href="#修改prometheus-prometheus-yaml" class="headerlink" title="修改prometheus-prometheus.yaml"></a>修改prometheus-prometheus.yaml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd prometheus/</span></span><br><span class="line"><span class="comment"># vim prometheus-prometheus.yaml</span></span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: Prometheus</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    prometheus: k8s</span><br><span class="line">  name: k8s</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  alerting:</span><br><span class="line">    alertmanagers:</span><br><span class="line">    - name: alertmanager-main</span><br><span class="line">      namespace: monitoring</span><br><span class="line">      port: web</span><br><span class="line">  baseImage: quay.io/prometheus/prometheus</span><br><span class="line">  nodeSelector:</span><br><span class="line">    kubernetes.io/os: linux</span><br><span class="line">  podMonitorSelector: &#123;&#125;</span><br><span class="line">  replicas: 2</span><br><span class="line">  <span class="comment"># 添加etcd 证书</span></span><br><span class="line">  secrets:</span><br><span class="line">  - etcd-certs</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      memory: 400Mi</span><br><span class="line">  <span class="comment"># 设置数据保留天数</span></span><br><span class="line">  retention: 7d</span><br><span class="line">  <span class="comment"># 创建外部存储pvc</span></span><br><span class="line">  storage:</span><br><span class="line">    volumeClaimTemplate:</span><br><span class="line">      spec:</span><br><span class="line">        accessModes:</span><br><span class="line">        - ReadWriteOnce</span><br><span class="line">        metadata:</span><br><span class="line">          annotations:</span><br><span class="line">            storageclass.kubernetes.io/is-default-class: <span class="literal">true</span></span><br><span class="line">          labels:</span><br><span class="line">            prometheus: prometheus-data-pvc</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 25Gi</span><br><span class="line">  ruleSelector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      prometheus: k8s</span><br><span class="line">      role: alert-rules</span><br><span class="line">  securityContext:</span><br><span class="line">    fsGroup: 2000</span><br><span class="line">    runAsNonRoot: <span class="literal">true</span></span><br><span class="line">    runAsUser: 1000</span><br><span class="line">  serviceAccountName: prometheus-k8s</span><br><span class="line">  serviceMonitorNamespaceSelector: &#123;&#125;</span><br><span class="line">  serviceMonitorSelector: &#123;&#125;</span><br><span class="line">  version: v2.11.0</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>storageclass.kubernetes.io/is-default-class: true</code> 是设置的默认动态存储，可以参考<a href="https://www.xxlaila.cn/2019/08/12/kube-nfs-%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/">kube-nfs-动态存储</a></p><h4 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署前吧adapter 目录下面的 <code>prometheus-adapter-apiService.yaml</code> 重命名，因为前面安装了metrics。如果这里在覆盖安装，就会导致<code>metrics.k8s.io</code>报错。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># kubectl apply -f 0namespace-namespace.yaml</span></span><br><span class="line"><span class="keyword">namespace</span>/monitoring created</span><br><span class="line"></span><br><span class="line"><span class="meta"># kubectl apply -f operator/</span></span><br><span class="line"><span class="meta"># kubectl -n monitoring get pod|grep operator</span></span><br><span class="line">prometheus-<span class="keyword">operator</span><span class="number">-548</span>c6dc45c-vz6l6   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">40</span>h</span><br><span class="line"></span><br><span class="line"><span class="meta"># kubectl apply -f adapter/</span></span><br><span class="line"><span class="meta"># kubectl apply -f alertmanager/</span></span><br><span class="line"><span class="meta"># kubectl apply -f node-exporter/</span></span><br><span class="line"><span class="meta"># kubectl apply -f kube-state-metrics/</span></span><br><span class="line"><span class="meta"># kubectl apply -f grafana/</span></span><br><span class="line"><span class="meta"># kubectl apply -f prometheus/</span></span><br><span class="line"><span class="meta"># kubectl apply -f serviceMonitor/</span></span><br></pre></td></tr></table></figure><h4 id="查看部署状态"><a href="#查看部署状态" class="headerlink" title="查看部署状态"></a>查看部署状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get all -n monitoring</span></span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/alertmanager-main-0                    2/2     Running   0          40h</span><br><span class="line">pod/alertmanager-main-1                    2/2     Running   0          40h</span><br><span class="line">pod/alertmanager-main-2                    2/2     Running   0          40h</span><br><span class="line">pod/grafana-5db74b88f4-7mt8c               1/1     Running   0          40h</span><br><span class="line">pod/kube-state-metrics-54f98c4687-mz5lq    3/3     Running   0          18h</span><br><span class="line">pod/node-exporter-hb66c                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-l2s8g                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-sjbmg                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-vw87m                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-zr8fk                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-zxcwl                    2/2     Running   0          40h</span><br><span class="line">pod/prometheus-adapter-8667948d79-tcz47    1/1     Running   0          18h</span><br><span class="line">pod/prometheus-k8s-0                       3/3     Running   1          20h</span><br><span class="line">pod/prometheus-k8s-1                       3/3     Running   1          20h</span><br><span class="line">pod/prometheus-operator-548c6dc45c-vz6l6   1/1     Running   0          40h</span><br><span class="line"></span><br><span class="line">NAME                            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">service/alertmanager-main       ClusterIP   10.254.101.249   &lt;none&gt;        9093/TCP                     40h</span><br><span class="line">service/alertmanager-operated   ClusterIP   None             &lt;none&gt;        9093/TCP,9094/TCP,9094/UDP   40h</span><br><span class="line">service/etcd                    ClusterIP   None             &lt;none&gt;        2379/TCP                     17h</span><br><span class="line">service/grafana                 ClusterIP   10.254.214.6     &lt;none&gt;        3000/TCP                     40h</span><br><span class="line">service/kube-state-metrics      ClusterIP   None             &lt;none&gt;        8443/TCP,9443/TCP            18h</span><br><span class="line">service/node-exporter           ClusterIP   None             &lt;none&gt;        9100/TCP                     40h</span><br><span class="line">service/prometheus-adapter      ClusterIP   10.254.60.49     &lt;none&gt;        443/TCP                      18h</span><br><span class="line">service/prometheus-k8s          ClusterIP   10.254.41.152    &lt;none&gt;        9090/TCP                     40h</span><br><span class="line">service/prometheus-operated     ClusterIP   None             &lt;none&gt;        9090/TCP                     20h</span><br><span class="line">service/prometheus-operator     ClusterIP   None             &lt;none&gt;        8080/TCP                     40h</span><br><span class="line"></span><br><span class="line">NAME                           DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE</span><br><span class="line">daemonset.apps/node-exporter   6         6         6       6            6           kubernetes.io/os=linux   40h</span><br><span class="line"></span><br><span class="line">NAME                                  READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/grafana               1/1     1            1           40h</span><br><span class="line">deployment.apps/kube-state-metrics    1/1     1            1           18h</span><br><span class="line">deployment.apps/prometheus-adapter    1/1     1            1           18h</span><br><span class="line">deployment.apps/prometheus-operator   1/1     1            1           40h</span><br><span class="line"></span><br><span class="line">NAME                                             DESIRED   CURRENT   READY   AGE</span><br><span class="line">replicaset.apps/grafana-5db74b88f4               1         1         1       40h</span><br><span class="line">replicaset.apps/kube-state-metrics-54f98c4687    1         1         1       18h</span><br><span class="line">replicaset.apps/prometheus-adapter-8667948d79    1         1         1       18h</span><br><span class="line">replicaset.apps/prometheus-operator-548c6dc45c   1         1         1       40h</span><br><span class="line"></span><br><span class="line">NAME                                 READY   AGE</span><br><span class="line">statefulset.apps/alertmanager-main   3/3     40h</span><br><span class="line">statefulset.apps/prometheus-k8s      2/2     20h</span><br></pre></td></tr></table></figure><h4 id="配置ingress"><a href="#配置ingress" class="headerlink" title="配置ingress"></a>配置ingress</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;ingress-monitor.yaml &lt;&lt;EOF </span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: prometheus.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: prometheus-k8s</span><br><span class="line">          servicePort: 9090</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: grafana.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: grafana</span><br><span class="line">          servicePort: 3000</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: alertmanager.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: alertmanager-main</span><br><span class="line">          servicePort: 9093</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f ingress-monitor.yaml</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在浏览器打开域名即可访问</p><h3 id="常用应用监控"><a href="#常用应用监控" class="headerlink" title="常用应用监控"></a>常用应用监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kubernetes 自身常见的监控有kube-apiserver、kube-scheduler、kube-controller-manager、etcd。node节点常见的有kubelet、kube-proxy。在serviceMonitor目录下面默认的文件只能满足kube-apiserver、kubelet两个，其他的修改单独修改文件才能监控。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 上面阐述的是集群是二进制方式安装，而不是以pod形式进行安装。</p><h4 id="kube-scheduler监控"><a href="#kube-scheduler监控" class="headerlink" title="kube-scheduler监控"></a>kube-scheduler监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-scheduler的service、endpoints不在kubernetes集群内，可以通过<code>kubectl get ep -n kube-system</code> 进行查看，修改 <code>prometheus-serviceMonitorKubeScheduler.yaml</code>，在该文件添加如下内容或者新起一个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;&gt; prometheus-serviceMonitorKubeScheduler.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-scheduler</span><br><span class="line">  name: kube-scheduler</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10251</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10251</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-scheduler</span><br><span class="line">  name: kube-scheduler</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10251</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorKubeScheduler.yaml</span></span><br></pre></td></tr></table></figure><h4 id="kube-controller-manager-监控"><a href="#kube-controller-manager-监控" class="headerlink" title="kube-controller-manager 监控"></a>kube-controller-manager 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-controller-manager修改，因为kubernetes 集群是采用ssl证书安装，默认的kube-controller-manager是没有使用ssl加密的，所以这里需要使用ssl证书，及https，否则不能监控。就会提示什么403、x509、400错误。</p><ul><li><p>prometheus-serviceMonitorKubeControllerManager.yaml 修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat prometheus-serviceMonitorKubeControllerManager.yaml</span></span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">    interval: 30s</span><br><span class="line">    port: https-metrics</span><br><span class="line">    scheme: https</span><br><span class="line">    tlsConfig:</span><br><span class="line">      insecureSkipVerify: <span class="literal">true</span></span><br><span class="line">    metricRelabelings:</span><br><span class="line">    - action: drop</span><br><span class="line">      regex: etcd_(debugging|disk|request|server).*</span><br><span class="line">      sourceLabels:</span><br><span class="line">      - __name__</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-controller-manager</span><br></pre></td></tr></table></figure></li><li><p>新建kube-controller-manager-service.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;kube-controller-manager-service.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 10252</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10252</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 10252</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorKubeControllerManager.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f kube-controller-manager-service.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="etcd-监控"><a href="#etcd-监控" class="headerlink" title="etcd 监控"></a>etcd 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; etcd 不在k8s集群内部所以要创建Endpoints、Service</p><ul><li>prometheus-serviceMonitoretcd.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitoretcd.yaml&lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 2379</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 2379</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 2379</span><br><span class="line">    protocol: TCP</span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - interval: 10s</span><br><span class="line">    port: https-metrics</span><br><span class="line">    scheme: https</span><br><span class="line">    tlsConfig:</span><br><span class="line">      caFile: /etc/prometheus/secrets/etcd-certs/ca.pem</span><br><span class="line">      certFile: /etc/prometheus/secrets/etcd-certs/etcd.pem</span><br><span class="line">      keyFile: /etc/prometheus/secrets/etcd-certs/etcd-key.pem</span><br><span class="line">      insecureSkipVerify: <span class="literal">true</span></span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: etcd</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitoretcd.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="kube-proxy-监控"><a href="#kube-proxy-监控" class="headerlink" title="kube-proxy 监控"></a>kube-proxy 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kube-proxy的metrics收集端口为10249，可以查看kub-proxy的安装文档。使用的是http方式，不需要ssl加密</p><ul><li><p>新建 kube-proxy.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;  kube-proxy.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10249</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10249</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.16.204</span><br><span class="line">  - ip: 172.21.16.231</span><br><span class="line">  - ip: ……</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10249</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>新建 prometheus-serviceMonitorProxy.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitorProxy.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - interval: 30s</span><br><span class="line">    port: http-metrics</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-proxy</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorProxy.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f kube-proxy.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="traefik-监控"><a href="#traefik-监控" class="headerlink" title="traefik 监控"></a>traefik 监控</h4><ul><li>新建prometheus-serviceMonitorTraefix.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitorTraefix.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: traefik-ingress</span><br><span class="line">  name: traefik-ingress</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  endpoints:</span><br><span class="line">  - port: admin  <span class="comment">#---设置为traefik 8080端口名称 admin</span></span><br><span class="line">    interval: 30s</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: traefik-ingress</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorTraefix.yaml</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前提是能打开traefix 的metrics页面，跟着我前面的文档安装，默认是开启的。</p><h3 id="grafana-修改"><a href="#grafana-修改" class="headerlink" title="grafana 修改"></a>grafana 修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grafana默认安装后，需要安装插件，否则饼状图无法显示。而且我们还需要倒入官方的一些dashbord 模版，默认grafana安装如果pod 重建之后什么都没有了，这时候我们需要建立一个pvc，吧数据保存到磁盘里面，即使grafana重建之后数据还在。不受任何影响。</p><h4 id="新建grafana-pvc-yaml"><a href="#新建grafana-pvc-yaml" class="headerlink" title="新建grafana-pvc.yaml"></a>新建grafana-pvc.yaml</h4><ul><li>grafana-pvc.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; grafana-pvc.yaml &lt;&lt;EOF</span></span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-pvc</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  storageClassName: xxlaila-nfs-storage</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 5Gi</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f grafana-pvc.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="修改granfana-deployment-yaml"><a href="#修改granfana-deployment-yaml" class="headerlink" title="修改granfana-deployment.yaml"></a>修改granfana-deployment.yaml</h4><ul><li>granfana-deployment.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改</span></span><br><span class="line">    volumes:</span><br><span class="line">      <span class="comment">#- emptyDir: &#123;&#125;</span></span><br><span class="line">      - name: grafana-storage</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: grafana-pvc</span><br><span class="line">      - name: grafana-datasources</span><br><span class="line"><span class="comment"># 新增</span></span><br><span class="line">        - mountPath: /grafana-dashboard-definitions/0/grafana-dashboard-k8s-traefik-ingress</span><br><span class="line">          name: grafana-dashboard-k8s-traefik-ingress</span><br><span class="line">          readOnly: <span class="literal">false</span></span><br><span class="line">        - mountPath: /grafana-dashboard-definitions/0/grafana-dashboard-k8s-etcd-clusters-as-service</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-clusters-as-service</span><br><span class="line">          readOnly: <span class="literal">false</span></span><br><span class="line">        - mountPath: /grafana-dashboard-definitions/0/grafana-dashboard-k8s-etcd-cluster-as-pod</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-cluster-as-pod</span><br><span class="line">          readOnly: <span class="literal">false</span></span><br><span class="line">        - mountPath: /grafana-dashboard-definitions/0/grafana-dashboard-k8s-etcd-server</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-server</span><br><span class="line">          readOnly: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增</span></span><br><span class="line">    - configMap:</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-clusters-as-service</span><br><span class="line">        name: grafana-dashboard-k8s-etcd-clusters-as-service</span><br><span class="line">      - configMap:</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-cluster-as-pod</span><br><span class="line">        name: grafana-dashboard-k8s-etcd-cluster-as-pod</span><br><span class="line">      - configMap:</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-server</span><br><span class="line">        name: grafana-dashboard-k8s-etcd-server</span><br><span class="line">      - configMap:</span><br><span class="line">          name: grafana-dashboard-k8s-traefik-ingress</span><br><span class="line">        name: grafana-dashboard-k8s-traefik-ingress</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上述新增值需要吧dashbord的模版倒入grafana-dashboardDefinitions.yaml文件里面，格式可以参考里面的格式，记住数据库需要修改，否则无法链接数据库，dashbord无法显示。</p><h4 id="查看service、endpoints"><a href="#查看service、endpoints" class="headerlink" title="查看service、endpoints"></a>查看service、endpoints</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc,endpoints -n kube-system</span></span><br><span class="line">NAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">service/etcd                      ClusterIP   None             &lt;none&gt;        2379/TCP                 3m41s</span><br><span class="line">service/kube-controller-manager   ClusterIP   None             &lt;none&gt;        10252/TCP                16h</span><br><span class="line">service/kube-dns                  ClusterIP   10.254.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   7d16h</span><br><span class="line">service/kube-proxy                ClusterIP   None             &lt;none&gt;        10249/TCP                37m</span><br><span class="line">service/kube-scheduler            ClusterIP   None             &lt;none&gt;        10251/TCP                18h</span><br><span class="line">service/kubelet                   ClusterIP   None             &lt;none&gt;        10250/TCP                40h</span><br><span class="line">service/kubernetes-dashboard      NodePort    10.254.139.196   &lt;none&gt;        443:31417/TCP            6d18h</span><br><span class="line">service/metrics-server            ClusterIP   10.254.196.151   &lt;none&gt;        443/TCP                  2d23h</span><br><span class="line"></span><br><span class="line">NAME                                ENDPOINTS                                                                 AGE</span><br><span class="line">endpoints/etcd                      172.21.16.110:2379,172.21.17.30:2379,172.21.17.31:2379                    3m41s</span><br><span class="line">endpoints/kube-controller-manager   172.21.16.110:10252,172.21.17.30:10252,172.21.17.31:10252                 16h</span><br><span class="line">endpoints/kube-dns                  10.244.1.46:53,10.244.4.36:53,10.244.1.46:53 + 3 more...                  7d16h</span><br><span class="line">endpoints/kube-proxy                172.21.16.204:10249,172.21.16.231:10249,172.21.17.34:10249 + 3 more...    37m</span><br><span class="line">endpoints/kube-scheduler            172.21.16.110:10251,172.21.17.30:10251,172.21.17.31:10251                 7d16h</span><br><span class="line">endpoints/kubelet                   172.21.16.204:10255,172.21.16.231:10255,172.21.17.34:10255 + 15 more...   40h</span><br><span class="line">endpoints/kubernetes-dashboard      10.244.6.27:8443                                                          6d18h</span><br><span class="line">endpoints/metrics-server            172.21.17.34:4443                                                         2d23h</span><br></pre></td></tr></table></figure><h4 id="查看接口信息"><a href="#查看接口信息" class="headerlink" title="查看接口信息"></a>查看接口信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions| grep monitoring</span></span><br><span class="line">monitoring.coreos.com/v1</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get --raw "/apis/monitoring.coreos.com/v1"|jq .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get --raw "/apis/monitoring.coreos.com/v1/servicemonitors"|jq .</span></span><br></pre></td></tr></table></figure><h3 id="查看验证"><a href="#查看验证" class="headerlink" title="查看验证"></a>查看验证</h3><h4 id="Prometheus-的Targets监控"><a href="#Prometheus-的Targets监控" class="headerlink" title="Prometheus 的Targets监控"></a>Prometheus 的Targets监控</h4><p><img src="https://img.xxlaila.cn/1575513127483.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513184822.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513219480.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575517225144.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575519980419.jpg" alt="img"></p><h4 id="granfa-查看"><a href="#granfa-查看" class="headerlink" title="granfa 查看"></a>granfa 查看</h4><p><img src="https://img.xxlaila.cn/1575513263070.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513304800.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513339328.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kube-prometheus是读取Metrcs、etcd、api的其中数据。
    
    </summary>
    
      <category term="监控" scheme="https://www.xxlaila.cn/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="prometheus" scheme="https://www.xxlaila.cn/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>centos 7 升级内核</title>
    <link href="https://www.xxlaila.cn/2019/12/03/centos-7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"/>
    <id>https://www.xxlaila.cn/2019/12/03/centos-7-升级内核/</id>
    <published>2019-12-03T09:01:03.000Z</published>
    <updated>2019-12-12T06:29:22.159Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="centos-7-升级内核版本"><a href="#centos-7-升级内核版本" class="headerlink" title="centos 7 升级内核版本"></a>centos 7 升级内核版本</h3><h4 id="查看当前内核版本"><a href="#查看当前内核版本" class="headerlink" title="查看当前内核版本"></a>查看当前内核版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">3.10.0-693.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">Linux k8s-master-01-3.kxl 3.10.0-693.el7.x86_64 <span class="comment">#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="更新yum源仓库和插件"><a href="#更新yum源仓库和插件" class="headerlink" title="更新yum源仓库和插件"></a>更新yum源仓库和插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y update</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h3 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h3><h4 id="导入ELRepo仓库的公共密钥"><a href="#导入ELRepo仓库的公共密钥" class="headerlink" title="导入ELRepo仓库的公共密钥"></a>导入ELRepo仓库的公共密钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br></pre></td></tr></table></figure><h4 id="安装ELRepo仓库的yum源"><a href="#安装ELRepo仓库的yum源" class="headerlink" title="安装ELRepo仓库的yum源"></a>安装ELRepo仓库的yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm</span></span><br></pre></td></tr></table></figure><h4 id="查看可用的系统内核包"><a href="#查看可用的系统内核包" class="headerlink" title="查看可用的系统内核包"></a>查看可用的系统内核包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum --disablerepo="*" --enablerepo="elrepo-kernel" list available</span></span><br><span class="line">elrepo-kernel                                                                                                                                                                      | 2.9 kB  00:00:00     </span><br><span class="line">elrepo-kernel/primary_db                                                                                                                                                           | 1.8 MB  00:00:00     </span><br><span class="line">Available Packages</span><br><span class="line">kernel-lt.x86_64                                                                                     4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-devel.x86_64                                                                               4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-doc.noarch                                                                                 4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-headers.x86_64                                                                             4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools.x86_64                                                                               4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs.x86_64                                                                          4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs-devel.x86_64                                                                    4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel-ml.x86_64                                                                                     5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-devel.x86_64                                                                               5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-doc.noarch                                                                                 5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-headers.x86_64                                                                             5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools.x86_64                                                                               5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs.x86_64                                                                          5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs-devel.x86_64                                                                    5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">perf.x86_64                                                                                          5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">python-perf.x86_64                                                                                   5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结果为长期维护版本lt为4.4，最新主线稳定版ml为5.4，这里安装的是4.4</p><h4 id="安装kernel"><a href="#安装kernel" class="headerlink" title="安装kernel"></a>安装kernel</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y --enablerepo=elrepo-kernel install kernel-lt-4.4.205-1.el7.elrepo kernel-lt-devel-4.4.205-1.el7.elrepo</span></span><br></pre></td></tr></table></figure><h3 id="设置-grub2"><a href="#设置-grub2" class="headerlink" title="设置 grub2"></a>设置 grub2</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内核安装好后，需要设置为默认启动选项并重启后才会生效</p><h4 id="查看系统上的所有可用内核"><a href="#查看系统上的所有可用内核" class="headerlink" title="查看系统上的所有可用内核"></a>查看系统上的所有可用内核</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># awk -F\' '$1=="menuentry " &#123;print i++ " : " $2&#125;' /etc/grub2.cfg</span></span><br><span class="line">0 : CentOS Linux (4.4.205-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">1 : CentOS Linux (3.10.0-957.12.1.el7.x86_64) 7 (Core)</span><br><span class="line">2 : CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)</span><br><span class="line">3 : CentOS Linux (0-rescue-d1f142097d497f24c021d7de9b81cab4) 7 (Core)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器上存在4 个内核，我们要使用 4.4 这个版本，可以通过 grub2-set-default 0 命令或编辑 /etc/default/grub 文件来设置</p><h4 id="设置新的内核为grub2的默认版本"><a href="#设置新的内核为grub2的默认版本" class="headerlink" title="设置新的内核为grub2的默认版本"></a>设置新的内核为grub2的默认版本</h4><ul><li><p>方法1<br>通过 grub2-set-default 0 命令设置，其中 0 是上面查询出来的可用内核</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grub2-set-default 0</span></span><br></pre></td></tr></table></figure></li><li><p>方法2<br>编辑 /etc/default/grub 文件，设置 GRUB_DEFAULT=0，通过上面查询显示的编号为 0 的内核作为默认内核。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/default/grub</span></span><br><span class="line">GRUB_TIMEOUT=1</span><br><span class="line">GRUB_DISTRIBUTOR=<span class="string">"<span class="variable">$(sed 's, release .*$,,g' /etc/system-release)</span>"</span></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_DISABLE_SUBMENU=<span class="literal">true</span></span><br><span class="line">GRUB_TERMINAL=<span class="string">"serial console"</span></span><br><span class="line">GRUB_SERIAL_COMMAND=<span class="string">"serial --speed=115200"</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">"console=tty0 crashkernel=auto console=ttyS0,115200"</span></span><br><span class="line">GRUB_DISABLE_RECOVERY=<span class="string">"true"</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="生成-grub-配置文件并重启"><a href="#生成-grub-配置文件并重启" class="headerlink" title="生成 grub 配置文件并重启"></a>生成 grub 配置文件并重启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grub2-mkconfig -o /boot/grub2/grub.cfg</span></span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-4.4.205-1.el7.elrepo.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-957.12.1.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-957.12.1.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-0-rescue-d1f142097d497f24c021d7de9b81cab4</span><br><span class="line">Found initrd image: /boot/initramfs-0-rescue-d1f142097d497f24c021d7de9b81cab4.img</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">4.4.205-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><h3 id="删除旧内核"><a href="#删除旧内核" class="headerlink" title="删除旧内核"></a>删除旧内核</h3><h4 id="查看系统中全部的内核"><a href="#查看系统中全部的内核" class="headerlink" title="查看系统中全部的内核"></a>查看系统中全部的内核</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa | grep kernel</span></span><br><span class="line">kernel<span class="_">-lt</span>-devel-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">kernel-3.10.0-693.el7.x86_64</span><br><span class="line">kernel-3.10.0-957.12.1.el7.x86_64</span><br><span class="line">kernel<span class="_">-lt</span>-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">kernel-tools-libs-3.10.0-1062.4.3.el7.x86_64</span><br><span class="line">kernel-3.10.0-1062.4.3.el7.x86_64</span><br><span class="line">kernel-tools-3.10.0-1062.4.3.el7.x86_64</span><br></pre></td></tr></table></figure><h4 id="yum-remove-删除旧内核的-RPM-包"><a href="#yum-remove-删除旧内核的-RPM-包" class="headerlink" title="yum remove 删除旧内核的 RPM 包"></a>yum remove 删除旧内核的 RPM 包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum remove kernel-3.10.0-693.el7.x86_64 kernel-3.10.0-957.12.1.el7.x86_64 kernel-tools-libs-3.10.0-1062.4.3.el7.x86_64 kernel-3.10.0-1062.4.3.el7.x86_64 kernel-tools-3.10.0-1062.4.3.el7.x86_64</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;centos-7-升级内核版本&quot;&gt;&lt;a href=&quot;#centos-7-升级内核版本&quot; class=&quot;headerlink&quot; title=&quot;centos 7 升级内核版本&quot;&gt;&lt;/a&gt;centos 7 升级内核版本&lt;/h3&gt;&lt;h4 id=&quot;查看当前内核版本&quot;&gt;&lt;a href=&quot;#查看当前内核版本&quot; class=&quot;headerlink&quot; title=&quot;查看当前内核版本&quot;&gt;&lt;/a&gt;查看当前内核版本&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# uname -r&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.10.0-693.el7.x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# uname -a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux k8s-master-01-3.kxl 3.10.0-693.el7.x86_64 &lt;span class=&quot;comment&quot;&gt;#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="centos" scheme="https://www.xxlaila.cn/categories/centos/"/>
    
    
      <category term="kernel" scheme="https://www.xxlaila.cn/tags/kernel/"/>
    
  </entry>
  
  <entry>
    <title>flannel cni容器部署</title>
    <link href="https://www.xxlaila.cn/2019/11/29/flannel-cni%E5%AE%B9%E5%99%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/29/flannel-cni容器部署/</id>
    <published>2019-11-29T03:50:55.000Z</published>
    <updated>2019-11-29T06:38:18.272Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="flannel-cni-配置"><a href="#flannel-cni-配置" class="headerlink" title="flannel cni 配置"></a>flannel cni 配置</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除原有的网络组件，采用容器方式进行部署。</p><h3 id="kube-controller-manager修改"><a href="#kube-controller-manager修改" class="headerlink" title="kube-controller-manager修改"></a>kube-controller-manager修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动参数增加如下两项<a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--allocate-node-cidrs=<span class="literal">true</span></span><br><span class="line">--cluster-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><p><strong>参数</strong>:</p><ul><li>1.是否应在云提供商上分配和设置Pod的CIDR</li><li>2.集群中Pod的CIDR范围。要求–allocate-node-cidrs为true</li></ul><p>kube-controller-manager参数<a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/" target="_blank" rel="noopener">详细说明</a></p><h3 id="kubelet-修改"><a href="#kubelet-修改" class="headerlink" title="kubelet 修改"></a>kubelet 修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kubelet修改两个配置文件，kubelet-config.yaml 文件已更新</p><h4 id="kubelet-service启动文件"><a href="#kubelet-service启动文件" class="headerlink" title="kubelet.service启动文件"></a>kubelet.service启动文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--network-plugin=cni</span><br><span class="line">--cni-conf-dir=/etc/cni/net.d</span><br><span class="line">--cni-bin-dir=/opt/cni/bin</span><br></pre></td></tr></table></figure><p>kubele参数<a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/" target="_blank" rel="noopener">详细说明</a></p><h4 id="kube-proxy-修改子网"><a href="#kube-proxy-修改子网" class="headerlink" title="kube-proxy 修改子网"></a>kube-proxy 修改子网</h4><ul><li>kube-proxy-config.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clusterCIDR: 10.244.0.0/16</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k8s<a href="https://www.xxlaila.cn/2019/09/11/kubernetes-v1-14%E5%AE%89%E8%A3%85/">集群安装文档</a>已经更新，node<a href="https://www.xxlaila.cn/2019/09/16/kubernetes-v1-14-node%E5%AE%89%E8%A3%85/">节点安装文档</a>已经更新。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先停止node 的flananel、 kubelet、kube-proxy。在删除/etc/cni/net.d/、/run/flannel/subnet.env、/var/lib/cni/flannel 的历史文件，重启网卡，除了flannel不启动，其他均启动。全新安装不需要这么操作，flannel证书也不需要复制。<a href="https://github.com/containernetworking/cni" target="_blank" rel="noopener">二进制安装参考</a></p><h3 id="下载cni插件"><a href="#下载cni插件" class="headerlink" title="下载cni插件"></a>下载cni插件</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cni <a href="https://github.com/containernetworking/plugins/releases" target="_blank" rel="noopener">插件下载</a>，解压后，放在各个节点的 /opt/cni/bin 下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ls -l /opt/cni/bin/</span><br><span class="line">total 70144</span><br><span class="line">-rwxr-xr-x 1 root root  4159253 Nov 26 16:32 bandwidth</span><br><span class="line">-rwxr-xr-x 1 root root  4628074 Nov 26 16:32 bridge</span><br><span class="line">-rwxr-xr-x 1 root root 12124236 Nov 26 16:32 dhcp</span><br><span class="line">-rwxr-xr-x 1 root root  5894275 Nov 26 16:32 firewall</span><br><span class="line">-rwxr-xr-x 1 root root  3069556 Nov 26 16:32 flannel</span><br><span class="line">-rwxr-xr-x 1 root root  4113837 Nov 26 16:32 host-device</span><br><span class="line">-rwxr-xr-x 1 root root  3614305 Nov 26 16:32 host-local</span><br><span class="line">-rwxr-xr-x 1 root root  4275320 Nov 26 16:32 ipvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3209373 Nov 26 16:32 loopback</span><br><span class="line">-rwxr-xr-x 1 root root  4346248 Nov 26 16:32 macvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3895553 Nov 26 16:32 portmap</span><br><span class="line">-rwxr-xr-x 1 root root  4546828 Nov 26 16:32 ptp</span><br><span class="line">-rwxr-xr-x 1 root root  3392736 Nov 26 16:32 sbr</span><br><span class="line">-rwxr-xr-x 1 root root  2885430 Nov 26 16:32 static</span><br><span class="line">-rwxr-xr-x 1 root root  3356497 Nov 26 16:32 tuning</span><br><span class="line">-rwxr-xr-x 1 root root  4275168 Nov 26 16:32 vlan</span><br></pre></td></tr></table></figure><h3 id="flannel-部署"><a href="#flannel-部署" class="headerlink" title="flannel 部署"></a>flannel 部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/v0.11.0/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line">kubectl apply -f ./kube-flannel.yml</span><br></pre></td></tr></table></figure><h3 id="查看flannel安装情况"><a href="#查看flannel安装情况" class="headerlink" title="查看flannel安装情况"></a>查看flannel安装情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get po,svc -o wide</span></span><br><span class="line">NAME                 READY   STATUS    RESTARTS   AGE   IP           NODE            NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/nginx-ds-b9wgm   1/1     Running   0          43h   10.244.6.2   172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-dd9mb   1/1     Running   0          43h   10.244.1.3   172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-lcrn5   1/1     Running   0          43h   10.244.4.2   172.21.16.231   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-n52vr   1/1     Running   0          43h   10.244.2.2   172.21.17.40    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-twdxm   1/1     Running   0          43h   10.244.5.2   172.21.16.204   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-z72mx   1/1     Running   0          43h   10.244.3.2   172.21.17.38    &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE   SELECTOR</span><br><span class="line">service/kubernetes   ClusterIP   10.254.0.1      &lt;none&gt;        443/TCP        44h   &lt;none&gt;</span><br><span class="line">service/nginx-ds     NodePort    10.254.230.34   &lt;none&gt;        80:31286/TCP   43h   app=nginx-ds</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get po,svc -o wide -n kube-system</span></span><br><span class="line">NAME                                              READY   STATUS    RESTARTS   AGE     IP              NODE            NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/coredns-5579b8778b-dlk4c                      1/1     Running   4          43h     10.244.1.2      172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-2t8rn                   1/1     Running   0          44h     172.21.17.41    172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-9sb8v                   1/1     Running   0          44h     172.21.16.231   172.21.16.231   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-npl5k                   1/1     Running   0          44h     172.21.17.34    172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-r5n8r                   1/1     Running   0          44h     172.21.16.204   172.21.16.204   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-wpfxw                   1/1     Running   0          44h     172.21.17.40    172.21.17.40    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-x2v8z                   1/1     Running   0          44h     172.21.17.38    172.21.17.38    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kubernetes-dashboard-65dfbf6f4f-sc92h         1/1     Running   0          21h     10.244.6.10     172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/metrics-server-v0.3.4-5cd6d6b55f-psq2z        2/2     Running   0          3h20m   172.21.17.34    172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/traefik-ingress-controller-56b6d5b864-srnmm   1/1     Running   0          155m    172.21.17.41    172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE     SELECTOR</span><br><span class="line">service/kube-dns                  ClusterIP   10.254.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   43h     k8s-app=kube-dns</span><br><span class="line">service/kubernetes-dashboard      NodePort    10.254.139.196   &lt;none&gt;        443:31417/TCP            21h     k8s-app=kubernetes-dashboard</span><br><span class="line">service/metrics-server            ClusterIP   10.254.201.191   &lt;none&gt;        443/TCP                  3h56m   k8s-app=metrics-server</span><br><span class="line">service/traefik-ingress-service   ClusterIP   None             &lt;none&gt;        80/TCP,8080/TCP          154m    k8s-app=traefik-ingress-lb</span><br><span class="line">service/traefik-web-ui            ClusterIP   10.254.78.17     &lt;none&gt;        80/TCP                   23h     k8s-app=traefik-ingress-lb</span><br></pre></td></tr></table></figure><h3 id="查看节点的网络"><a href="#查看节点的网络" class="headerlink" title="查看节点的网络"></a>查看节点的网络</h3><ul><li><p>node-01</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">cni0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.6.1  netmask 255.255.255.0  broadcast 10.244.6.255</span><br><span class="line">        ether 42:56:73:73:c5:69  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 121976  bytes 48185929 (45.9 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 143012  bytes 112170228 (106.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.21.17.41  netmask 255.255.240.0  broadcast 172.21.31.255</span><br><span class="line">        ether fa:16:3e:a0:b1:af  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 1878425  bytes 997129342 (950.9 MiB)</span><br><span class="line">        RX errors 0  dropped 29  overruns 0  frame 0</span><br><span class="line">        TX packets 1014950  bytes 378435170 (360.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.6.0  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        ether 32:83:f7:e6:de:77  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 207502  bytes 36217464 (34.5 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 242424  bytes 246992876 (235.5 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 15889  bytes 7196484 (6.8 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 15889  bytes 7196484 (6.8 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">vethb26f5960: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        ether a6:a8:18:c3:f0:16  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 23  bytes 2075 (2.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 49  bytes 4330 (4.2 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li><li><p>node-02</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">cni0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.4.1  netmask 255.255.255.0  broadcast 10.244.4.255</span><br><span class="line">        ether 82:14:33:5c:b0:b7  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 150228  bytes 747318135 (712.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 214837  bytes 209342880 (199.6 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.21.16.231  netmask 255.255.240.0  broadcast 172.21.31.255</span><br><span class="line">        ether fa:16:3e:d8:23:fe  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 10290258  bytes 3436274673 (3.2 GiB)</span><br><span class="line">        RX errors 0  dropped 19  overruns 0  frame 0</span><br><span class="line">        TX packets 9490095  bytes 3777352983 (3.5 GiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.4.0  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        ether ee:a3:ff:37:3a:61  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 280851  bytes 31096456 (29.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 262931  bytes 968429571 (923.5 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 653134  bytes 200562497 (191.2 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 653134  bytes 200562497 (191.2 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">veth8aa15f82: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        ether fa:23:1e:b0:65:20  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 49191  bytes 4622232 (4.4 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 53647  bytes 19011709 (18.1 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;flannel-cni-配置&quot;&gt;&lt;a href=&quot;#flannel-cni-配置&quot; class=&quot;headerlink&quot; title=&quot;flannel cni 配置&quot;&gt;&lt;/a&gt;flannel cni 配置&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;删除原有的网络组件，采用容器方式进行部署。&lt;/p&gt;&lt;h3 id=&quot;kube-controller-manager修改&quot;&gt;&lt;a href=&quot;#kube-controller-manager修改&quot; class=&quot;headerlink&quot; title=&quot;kube-controller-manager修改&quot;&gt;&lt;/a&gt;kube-controller-manager修改&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;启动参数增加如下两项
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="flannel" scheme="https://www.xxlaila.cn/tags/flannel/"/>
    
  </entry>
  
  <entry>
    <title>k8s-dashboard v2.0.0部署</title>
    <link href="https://www.xxlaila.cn/2019/11/28/k8s-dashboard-v2-0-0%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/28/k8s-dashboard-v2-0-0部署/</id>
    <published>2019-11-28T07:47:19.000Z</published>
    <updated>2019-12-02T07:01:32.306Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Kubernetes Dashboard 从v2.0.0-beta1版本开始，集成了一个metrics-scraper的组件，可以通过 Kubernetes 的 Metrics API 收集一些基础资源的监控信息，并在web页面展示</p><a id="more"></a><h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta6/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure><h3 id="使用-openssl-签发证书"><a href="#使用-openssl-签发证书" class="headerlink" title="使用 openssl 签发证书"></a>使用 openssl 签发证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir certs</span><br><span class="line">openssl req -nodes -newkey rsa:2048 -keyout certs/dashboard.key -out certs/dashboard.csr -subj <span class="string">"/C=/ST=/L=/O=/OU=/CN=kubernetes-dashboard"</span></span><br><span class="line">openssl x509 -req -sha256 -days 10000 -<span class="keyword">in</span> certs/dashboard.csr -signkey certs/dashboard.key -out certs/dashboard.crt</span><br></pre></td></tr></table></figure><h3 id="安装-Dashboard"><a href="#安装-Dashboard" class="headerlink" title="安装 Dashboard"></a>安装 Dashboard</h3><h4 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace kubernetes-dashboard</span><br></pre></td></tr></table></figure><h4 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret generic kubernetes-dashboard-certs --from-file=certs -n kubernetes-dashboard</span><br></pre></td></tr></table></figure><h4 id="修改recommended-yaml"><a href="#修改recommended-yaml" class="headerlink" title="修改recommended.yaml"></a>修改recommended.yaml</h4><ul><li><p>注释namespace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br></pre></td></tr></table></figure></li><li><p>使用自签发的证书<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用自签发的证书,注释掉 kubernetes-dashboard-certs 的 Secret 定义</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-certs</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f recommended.yaml</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用-NodePort-暴露服务"><a href="#使用-NodePort-暴露服务" class="headerlink" title="使用 NodePort 暴露服务"></a>使用 NodePort 暴露服务</h4><ul><li><p>新建 external-https-svc.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;external-https-svc.yaml&lt;&lt;EOF</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-external</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f external-https-svc.yaml</span><br></pre></td></tr></table></figure></li><li><p>查看验证</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># kubectl <span class="keyword">get</span> svc,pods -n kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">NAME                                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">service/dashboard-metrics-scraper       ClusterIP   <span class="number">10.254</span><span class="number">.199</span><span class="number">.169</span>   &lt;none&gt;        <span class="number">8000</span>/TCP        <span class="number">9</span>m50s</span><br><span class="line">service/kubernetes-dashboard            ClusterIP   <span class="number">10.254</span><span class="number">.73</span><span class="number">.119</span>    &lt;none&gt;        <span class="number">443</span>/TCP         <span class="number">9</span>m51s</span><br><span class="line">service/kubernetes-dashboard-<span class="keyword">external</span>   NodePort    <span class="number">10.254</span><span class="number">.169</span><span class="number">.250</span>   &lt;none&gt;        <span class="number">443</span>:<span class="number">32318</span>/TCP   <span class="number">11</span>m</span><br><span class="line"></span><br><span class="line">NAME                                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/dashboard-metrics-scraper<span class="number">-69f</span>cc6d9df<span class="number">-4</span>lctd   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">9</span>m49s</span><br><span class="line">pod/kubernetes-dashboard<span class="number">-77</span>d4694b5f-vkgfz        <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">9</span>m49s</span><br></pre></td></tr></table></figure></li></ul><p>使用之前的密钥认证登录，未出图，查了一下，说的是兼容问题，v1.15.0以上就没问题<br><img src="https://img.xxlaila.cn/1574927727171.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Kubernetes Dashboard 从v2.0.0-beta1版本开始，集成了一个metrics-scraper的组件，可以通过 Kubernetes 的 Metrics API 收集一些基础资源的监控信息，并在web页面展示&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="dashboard v2.0.0" scheme="https://www.xxlaila.cn/tags/dashboard-v2-0-0/"/>
    
  </entry>
  
  <entry>
    <title>logstash详解</title>
    <link href="https://www.xxlaila.cn/2019/11/21/logstash%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.xxlaila.cn/2019/11/21/logstash详解/</id>
    <published>2019-11-21T03:51:23.000Z</published>
    <updated>2019-11-27T01:15:35.606Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前篇文件<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>粗略的完成了部署，但是真正是批量使用的时候发现还是有很多不足，优化的点还是非常的多。<a id="more"></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用ElasticSearch时一般需要自己创建ElasticSearch的索引的Mapping，当索引非常多的时候，可能需要配置一个索引模板Template来对类似的索引做统一配置，让索引模板Template中配置匹配索引的规则，来确定该Template会被应用到哪些索引上。</p><h3 id="Template配置方式"><a href="#Template配置方式" class="headerlink" title="Template配置方式"></a>Template配置方式</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash在整合ElasticSearch的时候，有三种方式可以来进行Template的配置。</p><h4 id="使用ElasticSearch默认自带的索引模板"><a href="#使用ElasticSearch默认自带的索引模板" class="headerlink" title="使用ElasticSearch默认自带的索引模板"></a>使用ElasticSearch默认自带的索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElasticSearch默认自带了一个名字为”logstash”的模板，默认应用于Logstash写入数据到ElasticSearch使用，我们可以在通过es的api接口、或者在kibana dev tools窗口通过GET /_template/来进行查看</p><ul><li><p>api 查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET http://127.0.0.1:9200/_template  -s | python -m json.tool</span><br><span class="line"></span><br><span class="line">$ curl -XGET http://127.0.0.1:9200/_template?pretty</span><br></pre></td></tr></table></figure></li><li><p>kibana 查看<br><img src="https://img.xxlaila.cn/1574314182454.jpg" alt="img"></p></li><li><p>优点: 最简单，无须任何配置</p></li><li><p>缺点: 无法自定义一些配置，例如：分词方式</p></li></ul><h4 id="在Logstash-Indexer端自定义配置索引模板"><a href="#在Logstash-Indexer端自定义配置索引模板" class="headerlink" title="在Logstash Indexer端自定义配置索引模板"></a>在Logstash Indexer端自定义配置索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash的output插件中使用template指定本机器上的一个模板json文件路径，可以在json文件中设置对应的Template模板信息。前面的章节就使用的这种方式。</p><ul><li>优点：配置简单</li><li>缺点：因为分散在Logstash Indexer机器上，维护起来比较麻烦</li></ul><h4 id="在ElasticSearch服务端自定义配置索引模板"><a href="#在ElasticSearch服务端自定义配置索引模板" class="headerlink" title="在ElasticSearch服务端自定义配置索引模板"></a>在ElasticSearch服务端自定义配置索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由ElasticSearch负责加载模板。这种方式需要在ElasticSearch的集群中的config/templates路径下配置模板json。而且ElasticSearch提供了Restful API接口维护索引模板信息。</p><ul><li>优点：维护比较容易，可动态更改，全局生效。</li><li>缺点：需要注意模板的命名规则，比较容易通过看Template名字就能够确定模板应用到哪些索引</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;三种索引方式都有优缺点；但是使用第三种方式是最好的，就像之前<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>就使用的是第二种方式，然后是在用的时候发现，logstash是多台服务器，维护起来非常非常的麻烦。如果logstash 和ElasticSearch只有一台服务器，可以使用第二种方式，在Logstash Indexer端维护Template文件即可。</p><h3 id="模版类型"><a href="#模版类型" class="headerlink" title="模版类型"></a>模版类型</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElasticSearch的模板类型主要由两种：静态模板和动态模板</p><h4 id="静态模板"><a href="#静态模板" class="headerlink" title="静态模板"></a>静态模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;适合索引字段数据固定的场景，一旦配置完成，不能向里面加入多余的字段，否则会报错</p><ul><li>优点：scheam已知，业务场景明确，不容易出现因字段随便映射从而造成元数据撑爆es内存，从而导致es集群全部宕机</li><li>缺点：字段数多的情况下配置稍繁琐，针对于每个索引可能需要的模板都不同，很有可能需要配置很多个模板</li></ul><h4 id="动态模板"><a href="#动态模板" class="headerlink" title="动态模板"></a>动态模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;适合字段数不明确，大量字段的配置类型相同的场景，可以按照类型规则动态添加新字段，新加字段不会报错。主要需要配置 <code>dynamic_templates</code>。</p><ul><li>优点：可动态添加任意字段，无须改动schema</li><li>缺点：无标准schema导致数据不规则，如果添加的字段非常多，有可能造成ES集群宕机</li></ul><p><strong>注</strong>: 模板在设置生效后，仅对ES集群中新建立的索引生效，而对已存在的索引及时索引名满足模板的匹配规则，也不会生效，因此如果需要改变现有索引的Mapping信息，仍需要在正确的Mapping基础上建立新的索引，并将数据从原索引拷贝至新索引，变更新索引别名为原索引这种方式来实现。</p><h3 id="模板结构"><a href="#模板结构" class="headerlink" title="模板结构"></a>模板结构</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模版的结构如<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>里面所提到的。分四部分</p><ul><li>通用设置: 主要是模板匹配索引的过滤规则，影响该模板对哪些索引生效；</li><li>settings: 配置索引的公共参数，比如索引的replicas，以及分片数shards等参数；</li><li>mappings: 最重要的一部分，在这部分中配置每个type下的每个field的相关属性，比如field类型（string,long,date等等），是否分词，是否在内存中缓存等等属性都在这部分配置；</li><li>aliases: 索引别名，索引别名可用在索引数据迁移等用途上。</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当我们在定制索引模版的时候，这时候我们需要参考研发给的日志标准和需要的日志标准格式，以及日志样本等，给出一些运维的见解。否则做出来的东西不一定满足需求，又要重新来做。着重参考如下:</p><ul><li>是否存储</li><li>是否分词</li><li>以什么来建立索引</li><li>字段类型是什么</li><li>如何排序</li><li>字段数是否固定</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结合这些，我们还可以参考词库的维护，ElasticSearch后期结构的变化调整，如果这些不考虑，在后期量起来以后，改动任何一项都需要去重新建立索引。是非常蛋疼的。</p><h3 id="创建模版"><a href="#创建模版" class="headerlink" title="创建模版"></a>创建模版</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里采用第三种三种方式建立模版，登录kibana，在dev tools栏下面，删除默认的logstash-<em>模版，然后创建一个logstash-</em>的模版，这样当新的索引来了以后，就会加载这个模版。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前篇文件&lt;a href=&quot;http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/&quot;&gt;elk部署&lt;/a&gt;粗略的完成了部署，但是真正是批量使用的时候发现还是有很多不足，优化的点还是非常的多。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="logstash" scheme="https://www.xxlaila.cn/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>logstash监控</title>
    <link href="https://www.xxlaila.cn/2019/11/19/logstash%E7%9B%91%E6%8E%A7/"/>
    <id>https://www.xxlaila.cn/2019/11/19/logstash监控/</id>
    <published>2019-11-19T02:35:56.000Z</published>
    <updated>2019-11-19T07:04:24.071Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="logstash-api-监控"><a href="#logstash-api-监控" class="headerlink" title="logstash api 监控"></a>logstash api 监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash 5.0 开始，提供了输出自身进程的指标和状态监控的 API。这大大降低了我们监控 Logstash 的难度。<a id="more"></a>可以使用Logstash提供的监视API来检索这些指标。默认情况下api可用，不需任何额外的配置，或者可以配置X-Pack监视以将数据发送到监视群集。这个直接在kibana页面进行配置。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash收集的指标包括:</p><ul><li>节点信息: 接口目前支持三种类型：pipeline、os、jvm。</li><li>插件信息: 包括已安装插件的列表。</li><li>节点统计指标: JVM统计信息，进程统计信息，与事件相关的统计信息和管道运行时统计信息。</li><li>热线程统计</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;检索常规信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"build_date"</span> : <span class="string">"2018-08-18T00:25:22Z"</span>,</span><br><span class="line">  <span class="string">"build_sha"</span> : <span class="string">"f8014ac54e6c8ff6c071c0960ca1b00e9735f43a"</span>,</span><br><span class="line">  <span class="string">"build_snapshot"</span> : <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="pipeline-指标"><a href="#pipeline-指标" class="headerlink" title="pipeline 指标"></a>pipeline 指标</h3><h4 id="工作程序数量，批处理大小和批处理延迟"><a href="#工作程序数量，批处理大小和批处理延迟" class="headerlink" title="工作程序数量，批处理大小和批处理延迟"></a>工作程序数量，批处理大小和批处理延迟</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/pipelines?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"pipelines"</span> : &#123;</span><br><span class="line">    <span class="string">"main"</span> : &#123;</span><br><span class="line">      <span class="string">"workers"</span> : 4,</span><br><span class="line">      <span class="string">"batch_size"</span> : 125,</span><br><span class="line">      <span class="string">"batch_delay"</span> : 50,</span><br><span class="line">      <span class="string">"config_reload_automatic"</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"config_reload_interval"</span> : 3000000000,</span><br><span class="line">      <span class="string">"dead_letter_queue_enabled"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="特定管道的信息"><a href="#特定管道的信息" class="headerlink" title="特定管道的信息"></a>特定管道的信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/pipelines/main?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"pipelines"</span> : &#123;</span><br><span class="line">    <span class="string">"main"</span> : &#123;</span><br><span class="line">      <span class="string">"workers"</span> : 4,</span><br><span class="line">      <span class="string">"batch_size"</span> : 125,</span><br><span class="line">      <span class="string">"batch_delay"</span> : 50,</span><br><span class="line">      <span class="string">"config_reload_automatic"</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"config_reload_interval"</span> : 3000000000,</span><br><span class="line">      <span class="string">"dead_letter_queue_enabled"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="OS-信息"><a href="#OS-信息" class="headerlink" title="OS 信息"></a>OS 信息</h3><h4 id="显示了操作系统名称，体系结构，版本和可用处理器"><a href="#显示了操作系统名称，体系结构，版本和可用处理器" class="headerlink" title="显示了操作系统名称，体系结构，版本和可用处理器"></a>显示了操作系统名称，体系结构，版本和可用处理器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/os?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"os"</span> : &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"Linux"</span>,</span><br><span class="line">    <span class="string">"arch"</span> : <span class="string">"amd64"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.10.0-693.11.1.el7.x86_64"</span>,</span><br><span class="line">    <span class="string">"available_processors"</span> : 4</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="jvm-信息"><a href="#jvm-信息" class="headerlink" title="jvm 信息"></a>jvm 信息</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示节点级别的JVM统计信息，例如JVM进程ID，版本，VM信息，内存使用情况以及有关垃圾收集器的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/jvm?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"jvm"</span> : &#123;</span><br><span class="line">    <span class="string">"pid"</span> : 20827,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"1.8.0_144"</span>,</span><br><span class="line">    <span class="string">"vm_version"</span> : <span class="string">"1.8.0_144"</span>,</span><br><span class="line">    <span class="string">"vm_vendor"</span> : <span class="string">"Oracle Corporation"</span>,</span><br><span class="line">    <span class="string">"vm_name"</span> : <span class="string">"Java HotSpot(TM) 64-Bit Server VM"</span>,</span><br><span class="line">    <span class="string">"start_time_in_millis"</span> : 1574066157917,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"heap_init_in_bytes"</span> : 3221225472,</span><br><span class="line">      <span class="string">"heap_max_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"non_heap_init_in_bytes"</span> : 2555904,</span><br><span class="line">      <span class="string">"non_heap_max_in_bytes"</span> : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"gc_collectors"</span> : [ <span class="string">"ParNew"</span>, <span class="string">"ConcurrentMarkSweep"</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插件信息"><a href="#插件信息" class="headerlink" title="插件信息"></a>插件信息</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件信息API获取有关当前安装的所有Logstash插件的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/plugins?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"total"</span> : 98,</span><br><span class="line">  <span class="string">"plugins"</span> : [ &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-cef"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"5.0.3"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-collectd"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.8"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-dots"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.6"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-edn"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.6"</span></span><br><span class="line">  &#125;,……………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="节点统计指表"><a href="#节点统计指表" class="headerlink" title="节点统计指表"></a>节点统计指表</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;节点统计信息API检索有关Logstash的运行时统计信息。</p><h4 id="jvm统计"><a href="#jvm统计" class="headerlink" title="jvm统计"></a>jvm统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/jvm?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"jvm"</span> : &#123;</span><br><span class="line">    <span class="string">"threads"</span> : &#123;</span><br><span class="line">      <span class="string">"count"</span> : 55,</span><br><span class="line">      <span class="string">"peak_count"</span> : 56</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"heap_used_percent"</span> : 10,</span><br><span class="line">      <span class="string">"heap_committed_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"heap_max_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"heap_used_in_bytes"</span> : 348033216,</span><br><span class="line">      <span class="string">"non_heap_used_in_bytes"</span> : 170512848,</span><br><span class="line">      <span class="string">"non_heap_committed_in_bytes"</span> : 201850880,</span><br><span class="line">      <span class="string">"pools"</span> : &#123;</span><br><span class="line">        <span class="string">"survivor"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 1629704,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 34865152</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"old"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 230612312,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 230612312,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 2872311808,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 2872311808,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 2872311808</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"young"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 115791200,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 279183360</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"gc"</span> : &#123;</span><br><span class="line">      <span class="string">"collectors"</span> : &#123;</span><br><span class="line">        <span class="string">"old"</span> : &#123;</span><br><span class="line">          <span class="string">"collection_time_in_millis"</span> : 301,</span><br><span class="line">          <span class="string">"collection_count"</span> : 2</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"young"</span> : &#123;</span><br><span class="line">          <span class="string">"collection_time_in_millis"</span> : 2536,</span><br><span class="line">          <span class="string">"collection_count"</span> : 98</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"uptime_in_millis"</span> : 66149287</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="进程统计"><a href="#进程统计" class="headerlink" title="进程统计"></a>进程统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/process?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"process"</span> : &#123;</span><br><span class="line">    <span class="string">"open_file_descriptors"</span> : 169,</span><br><span class="line">    <span class="string">"peak_open_file_descriptors"</span> : 170,</span><br><span class="line">    <span class="string">"max_file_descriptors"</span> : 16384,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"total_virtual_in_bytes"</span> : 7337734144</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"cpu"</span> : &#123;</span><br><span class="line">      <span class="string">"total_in_millis"</span> : 593350,</span><br><span class="line">      <span class="string">"percent"</span> : 0,</span><br><span class="line">      <span class="string">"load_average"</span> : &#123;</span><br><span class="line">        <span class="string">"1m"</span> : 0.01,</span><br><span class="line">        <span class="string">"5m"</span> : 0.07,</span><br><span class="line">        <span class="string">"15m"</span> : 0.1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="events"><a href="#events" class="headerlink" title="events"></a>events</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s localhost:9600/_node/stats/events?pretty=<span class="literal">true</span></span><br><span class="line">&#123; </span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"events"</span> : &#123;</span><br><span class="line">    <span class="string">"in"</span> : 103628,</span><br><span class="line">    <span class="string">"filtered"</span> : 103628,</span><br><span class="line">    <span class="string">"out"</span> : 103628,</span><br><span class="line">    <span class="string">"duration_in_millis"</span> : 96810,</span><br><span class="line">    <span class="string">"queue_push_duration_in_millis"</span> : 5104</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="管道统计"><a href="#管道统计" class="headerlink" title="管道统计"></a>管道统计</h3><ul><li>每个管道输入，过滤或输出的事件数</li><li>每个已配置的滤波器或输出级的统计信息</li><li>有关配置重新加载成功和失败的信息（启用配置重新加载时）</li><li>关于持久性队列信息（当 永久队列被启用）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/pipelines?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过包含管道ID来查看特定管道的统计信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/pipelines/main?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="刷新统计"><a href="#刷新统计" class="headerlink" title="刷新统计"></a>刷新统计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示有关配置重新加载成功和失败的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/reloads?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"reloads"</span> : &#123;</span><br><span class="line">    <span class="string">"successes"</span> : 0,</span><br><span class="line">    <span class="string">"failures"</span> : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="os-统计"><a href="#os-统计" class="headerlink" title="os 统计"></a>os 统计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当Logstash在容器中运行时，请求将返回一个包含cgroup信息的JSON文档，提供CPU负载的更准确视图，包括是否对容器进行了限制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/os?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"os"</span> : &#123;</span><br><span class="line">    <span class="string">"cgroup"</span> : &#123;</span><br><span class="line">      <span class="string">"cpuacct"</span> : &#123;</span><br><span class="line">        <span class="string">"usage_nanos"</span> : 20928023701495776,</span><br><span class="line">        <span class="string">"control_group"</span> : <span class="string">"/"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"cpu"</span> : &#123;</span><br><span class="line">        <span class="string">"cfs_quota_micros"</span> : -1,</span><br><span class="line">        <span class="string">"control_group"</span> : <span class="string">"/"</span>,</span><br><span class="line">        <span class="string">"stat"</span> : &#123;</span><br><span class="line">          <span class="string">"number_of_times_throttled"</span> : 0,</span><br><span class="line">          <span class="string">"time_throttled_nanos"</span> : 0,</span><br><span class="line">          <span class="string">"number_of_elapsed_periods"</span> : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"cfs_period_micros"</span> : 100000</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="热线程api"><a href="#热线程api" class="headerlink" title="热线程api"></a>热线程api</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;热线程API获取Logstash的当前热线程。热线程是Java线程，具有很高的CPU使用率，并且执行时间比正常时间长。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/hot_threads?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"hot_threads"</span> : &#123;</span><br><span class="line">    <span class="string">"time"</span> : <span class="string">"2019-11-19T11:07:05+08:00"</span>,</span><br><span class="line">    <span class="string">"busiest_threads"</span> : 3,</span><br><span class="line">    <span class="string">"threads"</span> : [ &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-23@[main]&gt;worker1"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 42,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.1,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-24@[main]&gt;worker2"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 43,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.06,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-22@[main]&gt;worker0"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 41,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.06,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可执行的参数:</p><ul><li>threads: 返回的热线程数。预设值为10。</li><li>stacktrace_size: 要为每个线程报告的堆栈跟踪的深度。默认值为50。</li><li>human: 如果为true，则返回纯文本而不是JSON格式。默认为false。</li><li>ignore_idle_threads: 如果为true，则不返回空闲线程。默认值为true。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/hot_threads?human=true'</span></span><br><span class="line">Hot threads at 2019-11-19T11:07:43+08:00, busiestThreads=3:</span><br><span class="line">================================================================================</span><br><span class="line">0.1 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-23@[main]&gt;worker1'</span>, thread id: 42</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0.06 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-24@[main]&gt;worker2'</span>, thread id: 43</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0.06 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-22@[main]&gt;worker0'</span>, thread id: 41</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的一些api监控，可以写成脚本的形式，使用zabbix来进行监控。除了使用zabbix来监控logstash外，我们还可以使用自带的x-pack来进行监控，<a href="https://www.elastic.co/guide/en/logstash/6.6/logstash-monitoring-overview.html" target="_blank" rel="noopener">介绍可以参考官方</a>。</p><h3 id="X-Pack监视概述"><a href="#X-Pack监视概述" class="headerlink" title="X-Pack监视概述"></a>X-Pack监视概述</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修改logstash.yml配置文件，在配置文件里面只需要修改两个参数即可 <code>xpack.monitoring.enabled</code> 、<code>xpack.monitoring.elasticsearch.url</code>。监控Elasticsearch的是启用 <code>xpack.monitoring.collection.enabled</code></p><h4 id="修改logstash-yml"><a href="#修改logstash-yml" class="headerlink" title="修改logstash.yml"></a>修改logstash.yml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat logstash.yml</span><br><span class="line">xpack.monitoring.enabled: <span class="literal">true</span></span><br><span class="line">xpack.monitoring.elasticsearch.url: [<span class="string">"http://es1:9200"</span>,<span class="string">"http://es2:9200"</span>,<span class="string">"http://es3:9200"</span>]</span><br></pre></td></tr></table></figure><h4 id="重启logstash"><a href="#重启logstash" class="headerlink" title="重启logstash"></a>重启logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo  systemctl  restart logstash</span><br></pre></td></tr></table></figure><h4 id="kibana-查看"><a href="#kibana-查看" class="headerlink" title="kibana 查看"></a>kibana 查看</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录kibana进行查看<br><img src="https://img.xxlaila.cn/1574146864906.jpg" alt="img"></p><p>点击node查看<br><img src="https://img.xxlaila.cn/1574146937095.jpg" alt="img"></p><p>这里顺道点考kibana<br><img src="https://img.xxlaila.cn/1574147026997.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;logstash-api-监控&quot;&gt;&lt;a href=&quot;#logstash-api-监控&quot; class=&quot;headerlink&quot; title=&quot;logstash api 监控&quot;&gt;&lt;/a&gt;logstash api 监控&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Logstash 5.0 开始，提供了输出自身进程的指标和状态监控的 API。这大大降低了我们监控 Logstash 的难度。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="logstash" scheme="https://www.xxlaila.cn/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>elk部署</title>
    <link href="https://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/15/elk部署/</id>
    <published>2019-11-15T07:46:03.000Z</published>
    <updated>2019-11-21T09:21:53.487Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;公司重新设定了日志的标准格式，日志打印格式均为json格式，之前是用filebeat进行收集的，没任何问题，但是这次的这个标准日志推的时候出现了，在日志显示和多行收集的时候出现了问题。<a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;java应用在报错的时候一般会提示一个很长的错误信息，如果在日志标准里面加入堆内存的错误，那信息就更长，一条日志就更大了，所以这里就得考量这个堆内存错误要打印多少问题。在显示的时候也遇到一个问题就是内容没有被索引，google一下查询是<code>not_analyzed</code>字符串默认设置导致的。查询得知对超过ignore_above的字符串，analyzer 不会进行处理。所以就不会索引，导致的结果就是最终搜索引擎搜索不到。这个选项主要对 not_analyzed 字段有用，这些字段通常用来进行过滤、聚合和排序。而且这些字段都是结构化的，所以一般不会允许在这些字段中索引过长的项。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;针对这些问题，和研发达成如协议，研发限制一条日志的message输出的长度，日志格式采用json，里面的字段不管。与似乎就要重置一下filebeat的参数，以及需要单独的建立自定义es模版，在logstash建立索引的时候需要用我们自定义的模版来建立索引。</p><h3 id="filebeat"><a href="#filebeat" class="headerlink" title="filebeat"></a>filebeat</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filebeat安装不阐述</p><h4 id="filebeat配置文件"><a href="#filebeat配置文件" class="headerlink" title="filebeat配置文件"></a>filebeat配置文件</h4><ul><li>filebeat.yml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat filebeat.yml </span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">  - <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    paths:</span><br><span class="line">      - /opt/logs/*/*.<span class="built_in">log</span></span><br><span class="line">  tags: [<span class="string">"system"</span>]</span><br><span class="line">  exclude_files: [<span class="string">'.gz$'</span>]</span><br><span class="line">  fields:</span><br><span class="line">    env: dev</span><br><span class="line">    logtype: system-java</span><br><span class="line">  queue_size: 3000</span><br><span class="line">  multiline.pattern: <span class="string">'^[[:space:]]'</span></span><br><span class="line">  multiline.negate: <span class="literal">false</span></span><br><span class="line">  multiline.match: after</span><br><span class="line">  multiline.max_lines: 500</span><br><span class="line">  multiline.timeout: 5s</span><br><span class="line">  registry_file: /var/lib/filebeat/registry</span><br><span class="line">  harvester_buffer_sizeedit: 16384</span><br><span class="line">  max_bytes: 10485760</span><br><span class="line">  max_message_bytes: 1000000</span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">false</span></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">"logstash:5555"</span>,<span class="string">"logstash:5556"</span>]</span><br><span class="line">  loadbalance: <span class="literal">true</span></span><br><span class="line">  worker: 1</span><br></pre></td></tr></table></figure></li></ul><h5 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h5><ul><li>input.type: 默认log，从日志文件读取每一行。stdin，从标准输入读取</li><li>paths: 日志文件路径列表，可用通配符，不递归</li><li>tags: 标记tag，可用于分组</li><li>exclude_files: 排除文件，后接一个正则表达式的列表，默认无</li><li>fields: 添加附件字段，可以使values，arrays，dictionaries或者任何嵌套数据<ul><li>env: 设置环境环境</li><li>logtype: 设置类别，在logstash里面判断，可用于建设不通的索引或者到不通的es集群里面</li></ul></li><li>queue_size: 处理管道中单个事件内的队列大小，默认1000</li><li>multiline.pattern: 多行匹配模式，后接正则表达式，默认无</li><li>multiline.negate: 多行匹配模式后配置的模式是否取反，默认false</li><li>multiline.match: 定义多行内容被添加到模式匹配行之后还是之前，默认无，可以被设置为after或者before</li><li>multiline.max_lines: 单一多行匹配聚合的最大行数，超过定义行数后的行会被丢弃，默认500</li><li>multiline.timeout: 多行匹配超时时间，超过超时时间后的当前多行匹配事件将停止并发送，然后开始一个新的多行匹配事件，默认5秒</li><li>registry_file: 指定 注册表文件，用于记录上次读取的位置，默认位于filebeat下的data目录</li><li>harvester_buffer_sizeedit: 每个采集器在获取文件时使用的缓冲区的大小（以字节为单位）。默认是16384</li><li>max_bytes: 单个日志消息可以拥有的最大字节数。之后的所有字节max_bytes被丢弃并且不被发送。此设置对于可能变大的多行日志消息特别有用。默认值是10MB（10485760）</li><li>max_message_bytes: 允许的最大json消息大小，默认为1000000，超出的会被丢弃，应该小于broker的  message.max.bytes（broker能接收消息的最大字节数）</li><li>output.logstash: 输出到logstash，从节点列表中选取不同的节点发送数据，达到 Round-Robin 负载均衡的效果。<ul><li>worker: 配置每个主机发布事件的worker数量。在负载均衡模式下最好启用。</li></ul></li></ul><h3 id="logstash-部署"><a href="#logstash-部署" class="headerlink" title="logstash 部署"></a>logstash 部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装不阐述，这里使用的自定义elasticsearch模版，可参考</p><h4 id="elasticsearch-模版"><a href="#elasticsearch-模版" class="headerlink" title="elasticsearch 模版"></a>elasticsearch 模版</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Json日志文件中的KEY的位置不固定、或字段数不明确时使用动态映射模板。这里创建一个动态模版，模版是拷贝默认的 <code>logstash-*</code>模版来进行稍加修改的，<code>index_patterns</code> 该模版参数指定任意索引名称，并且指定允许添加新字段，匹配所有string类型的新字段会创建一个raw的嵌套字段，raw嵌套字段类型text，使用 <code>ignore_above</code>改变默认的长度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">$ cat dev-java-template.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"order"</span>: 5,</span><br><span class="line">  <span class="string">"index_patterns"</span>: [</span><br><span class="line">    <span class="string">"*"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"settings"</span>: &#123;</span><br><span class="line">    <span class="string">"index"</span>: &#123;</span><br><span class="line">      <span class="string">"number_of_shards"</span>: <span class="string">"5"</span>,</span><br><span class="line">      <span class="string">"number_of_replicas"</span>: <span class="string">"1"</span>,</span><br><span class="line">      <span class="string">"refresh_interval"</span>: <span class="string">"10s"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"mappings"</span>: &#123;</span><br><span class="line">    <span class="string">"_default_"</span>: &#123;</span><br><span class="line">      <span class="string">"dynamic_templates"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"message_field"</span>: &#123;</span><br><span class="line">            <span class="string">"match"</span>: <span class="string">"message"</span>,</span><br><span class="line">            <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"mapping"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">              <span class="string">"norms"</span> : <span class="literal">false</span>,</span><br><span class="line">              <span class="string">"fields"</span>: &#123;</span><br><span class="line">                <span class="string">"raw"</span>: &#123;</span><br><span class="line">                  <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                  <span class="string">"ignore_above"</span>: 10922</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"strings_fields"</span>: &#123;</span><br><span class="line">            <span class="string">"match"</span>: <span class="string">"*"</span>,</span><br><span class="line">            <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"mapping"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">              <span class="string">"norms"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="string">"fields"</span>: &#123;</span><br><span class="line">                <span class="string">"raw"</span>: &#123;</span><br><span class="line">                  <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                  <span class="string">"ignore_above"</span>: 10922</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"properties"</span>:&#123;</span><br><span class="line">        <span class="string">"@timestamp"</span>: &#123;</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"date"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"@version"</span>: &#123;</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"geoip"</span>: &#123;</span><br><span class="line">          <span class="string">"dynamic"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="string">"properties"</span>: &#123;</span><br><span class="line">            <span class="string">"ip"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"ip"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"location"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"geo_point"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"latitude"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"longitude"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aliases"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注</strong>:</p><ul><li>dynamic_templates: 配置具体的动态模板匹配项</li><li>match_mapping_type: “string” 是匹配固定的类型</li><li>match: message 匹配字段名为message的数据</li><li>mapping: 将匹配的数据项映射为定义的数据类型</li></ul><h4 id="logstash-配置文件"><a href="#logstash-配置文件" class="headerlink" title="logstash 配置文件"></a>logstash 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">$ cat java.conf</span><br><span class="line">input  &#123;</span><br><span class="line">        beats &#123;</span><br><span class="line">                port =&gt; 5555</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">        <span class="comment"># application system logs</span></span><br><span class="line">        <span class="keyword">if</span> [fields][logtype] == <span class="string">"system-java"</span> &#123;</span><br><span class="line">                json &#123;</span><br><span class="line">                    <span class="built_in">source</span> =&gt; <span class="string">"message"</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># application business logs</span></span><br><span class="line">        <span class="keyword">if</span> [fileds][logtype] == <span class="string">"business-java"</span> &#123;</span><br><span class="line">json &#123;</span><br><span class="line"><span class="built_in">source</span> =&gt; <span class="string">"message"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">        <span class="comment"># application system logs</span></span><br><span class="line">        <span class="keyword">if</span> [fields][logtype] == <span class="string">"system-java"</span> &#123;</span><br><span class="line">                elasticsearch &#123;</span><br><span class="line">codec =&gt; <span class="string">"json"</span></span><br><span class="line">                        hosts =&gt; [<span class="string">"es1:9200"</span>,<span class="string">"es2:9200"</span>,<span class="string">"es3:9200"</span>]</span><br><span class="line">                        index =&gt; <span class="string">"%&#123;[fields][kxlenv]&#125;-%&#123;[projectName]&#125;-%&#123;[logType]&#125;-%&#123;+YYYY-MM&#125;"</span></span><br><span class="line">                        template_overwrite =&gt; <span class="literal">true</span></span><br><span class="line">                        template_name =&gt; <span class="string">"system-java"</span></span><br><span class="line">                        template =&gt; <span class="string">"/opt/templates/java.template"</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># applicatio business logs</span></span><br><span class="line"><span class="keyword">if</span> [fields][logtype] == <span class="string">"business-java"</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">                        action =&gt; <span class="string">"index"</span></span><br><span class="line">hosts =&gt; [<span class="string">"es1:9200"</span>,<span class="string">"es2:9200"</span>,<span class="string">"es3:9200"</span>]</span><br><span class="line">index =&gt; <span class="string">"%&#123;[fields][kxlenv]&#125;-%&#123;[projectName]&#125;-%&#123;[logType]&#125;-%&#123;+YYYY-MM&#125;"</span></span><br><span class="line">template_overwrite =&gt; <span class="literal">true</span></span><br><span class="line">                        template =&gt; <span class="string">"/opt/templates/dev-java-template.json"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>** 注 **:</p><ul><li>template : 指定template模板文件</li><li>template_overwrite : 是否覆盖ES中的template，默认是false</li><li>index: 是提取变量来进行创建索引，对应动态模版的里面 <code>index_patterns</code></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><h4 id="重启logstash"><a href="#重启logstash" class="headerlink" title="重启logstash"></a>重启logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart logstash</span><br></pre></td></tr></table></figure><h4 id="重启filebeat"><a href="#重启filebeat" class="headerlink" title="重启filebeat"></a>重启filebeat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart filebeat</span><br></pre></td></tr></table></figure><h4 id="打开kibana验证"><a href="#打开kibana验证" class="headerlink" title="打开kibana验证"></a>打开kibana验证</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里我们打开kibana进行验证，看看自动创建的索引是否引用了自定义模版</p><ul><li><p>自定义模版<br><img src="https://img.xxlaila.cn/1574308152194.jpg" alt="img"></p></li><li><p>默认模版<br><img src="https://img.xxlaila.cn/1574308234494.jpg" alt="img"></p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;公司重新设定了日志的标准格式，日志打印格式均为json格式，之前是用filebeat进行收集的，没任何问题，但是这次的这个标准日志推的时候出现了，在日志显示和多行收集的时候出现了问题。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="elk" scheme="https://www.xxlaila.cn/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>mongodb语法实践</title>
    <link href="https://www.xxlaila.cn/2019/11/14/mongodb%E8%AF%AD%E6%B3%95%E5%AE%9E%E8%B7%B5/"/>
    <id>https://www.xxlaila.cn/2019/11/14/mongodb语法实践/</id>
    <published>2019-11-14T01:12:09.000Z</published>
    <updated>2019-11-19T07:19:43.652Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="Days-11-14"><a href="#Days-11-14" class="headerlink" title="Days(11.14)"></a>Days(11.14)</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mongodb之前都是负责搭建、维护、备份、监控等操作。闲时来总结一下语法。<a id="more"></a></p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><h4 id="根据条件查询数据量"><a href="#根据条件查询数据量" class="headerlink" title="根据条件查询数据量"></a>根据条件查询数据量</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录数据库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.getCollection(<span class="string">'Tables'</span>).find(&#123;<span class="string">"字段"</span>:<span class="string">"条件"</span>,<span class="string">"字段"</span>:<span class="string">"条件"</span>&#125;).count();</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看数据库表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; show collections</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看mongodb的连接数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.serverStatus().connections</span><br></pre></td></tr></table></figure><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><h4 id="创建用户、数据库"><a href="#创建用户、数据库" class="headerlink" title="创建用户、数据库"></a>创建用户、数据库</h4><ul><li><p>创建数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; use xxx</span><br></pre></td></tr></table></figure></li><li><p>创建一个用户，拥有基本的读写权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createUser(&#123;user:<span class="string">"xxx"</span>,<span class="built_in">pwd</span>:<span class="string">"xxx"</span>,roles:[&#123;role:<span class="string">"readWrite"</span>,db:<span class="string">"xxx"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure></li><li><p>创建用户需要赋予dbAdmin权限</p></li></ul><p><strong>dbAdmin</strong>: 允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createUser(&#123;user:<span class="string">"demo"</span>,<span class="built_in">pwd</span>:<span class="string">"demo"</span>,roles:[&#123;role:<span class="string">"readWrite"</span>,db:<span class="string">"kxlChannel"</span>&#125;,&#123;role:<span class="string">"dbAdmin"</span>,db:<span class="string">"kxlChannel"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure><p><strong>注</strong>: role 权限要是readWrite,不能赋予dbadmin，否则不能操作数据库</p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><h4 id="删除账户和数据库"><a href="#删除账户和数据库" class="headerlink" title="删除账户和数据库"></a>删除账户和数据库</h4><ul><li><p>删除账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropUser(<span class="string">"xxx"</span>)</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropDatabase(<span class="string">"xxx"</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.ensureIndex(&#123;<span class="string">"字段"</span>:1&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br><span class="line">&gt; db.表.ensureIndex(&#123;<span class="string">"字段"</span>:1&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><h4 id="查看索引"><a href="#查看索引" class="headerlink" title="查看索引"></a>查看索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.getIndexes()</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看表数据是否引用了索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.find(&#123;<span class="string">"字段"</span>:<span class="string">"值"</span>&#125;).explain()</span><br></pre></td></tr></table></figure><h4 id="删除指定索引"><a href="#删除指定索引" class="headerlink" title="删除指定索引"></a>删除指定索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.dropIndex(<span class="string">"索引"</span>)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除表全部索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.dropIndexes()</span><br></pre></td></tr></table></figure><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><h4 id="根据条件导出部分数据"><a href="#根据条件导出部分数据" class="headerlink" title="根据条件导出部分数据"></a>根据条件导出部分数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  mongoexport --db=数据库 --collection=表 --username=账户 --password=密码 --authenticationDatabase=认证的数据库  --query=<span class="string">'&#123;"条件","条件"&#125;'</span> --fields=<span class="string">"导出的字段"</span> --<span class="built_in">type</span>=csv --out=/home/ll</span><br></pre></td></tr></table></figure><ul><li>参数介绍:<br>–db: 数据库<br>–collection: 表<br>–username: 账户<br>–password: 密码<br>–authenticationDatabase: 需要认证的数据库<br>–query: 条件<br>–fields: 导出的字段<br>–type: 导出的格式，默认是json，这里导出为csv，支持两种json和csv格式<br>–out: 导出路径文件</li></ul><p>更多参数参考 –help</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">general options:</span><br><span class="line">      --<span class="built_in">help</span>                                      <span class="built_in">print</span> usage</span><br><span class="line">      --version                                   <span class="built_in">print</span> the tool version and <span class="built_in">exit</span></span><br><span class="line">verbosity options:</span><br><span class="line">  -v, --verbose=&lt;level&gt;                           more detailed <span class="built_in">log</span> output (include multiple <span class="built_in">times</span> <span class="keyword">for</span> more verbosity, e.g. -vvvvv, or specify a numeric value, e.g. --verbose=N)</span><br><span class="line">      --quiet                                     hide all <span class="built_in">log</span> output</span><br><span class="line">connection options:</span><br><span class="line">  -h, --host=&lt;hostname&gt;                           mongodb host to connect to (setname/host1,host2 <span class="keyword">for</span> replica sets)</span><br><span class="line">      --port=&lt;port&gt;                               server port (can also use --host hostname:port)</span><br><span class="line">kerberos options:</span><br><span class="line">      --gssapiServiceName=&lt;service-name&gt;          service name to use when authenticating using GSSAPI/Kerberos (<span class="string">'mongodb'</span> by default)</span><br><span class="line">      --gssapiHostName=&lt;host-name&gt;                hostname to use when authenticating using GSSAPI/Kerberos (remote server<span class="string">'s address by default)</span></span><br><span class="line"><span class="string">ssl options:</span></span><br><span class="line"><span class="string">      --ssl                                       connect to a mongod or mongos that has ssl enabled</span></span><br><span class="line"><span class="string">      --sslCAFile=&lt;filename&gt;                      the .pem file containing the root certificate chain from the certificate authority</span></span><br><span class="line"><span class="string">      --sslPEMKeyFile=&lt;filename&gt;                  the .pem file containing the certificate and key</span></span><br><span class="line"><span class="string">      --sslPEMKeyPassword=&lt;password&gt;              the password to decrypt the sslPEMKeyFile, if necessary</span></span><br><span class="line"><span class="string">      --sslCRLFile=&lt;filename&gt;                     the .pem file containing the certificate revocation list</span></span><br><span class="line"><span class="string">      --sslAllowInvalidCertificates               bypass the validation for server certificates</span></span><br><span class="line"><span class="string">      --sslAllowInvalidHostnames                  bypass the validation for server name</span></span><br><span class="line"><span class="string">      --sslFIPSMode                               use FIPS mode of the installed openssl library</span></span><br><span class="line"><span class="string">authentication options:</span></span><br><span class="line"><span class="string">  -u, --username=&lt;username&gt;                       username for authentication</span></span><br><span class="line"><span class="string">  -p, --password=&lt;password&gt;                       password for authentication</span></span><br><span class="line"><span class="string">      --authenticationDatabase=&lt;database-name&gt;    database that holds the user'</span>s credentials</span><br><span class="line">      --authenticationMechanism=&lt;mechanism&gt;       authentication mechanism to use</span><br><span class="line">namespace options:</span><br><span class="line">  -d, --db=&lt;database-name&gt;                        database to use</span><br><span class="line">  -c, --collection=&lt;collection-name&gt;              collection to use</span><br><span class="line">uri options:</span><br><span class="line">      --uri=mongodb-uri                           mongodb uri connection string</span><br><span class="line">output options:</span><br><span class="line">  -f, --fields=&lt;field&gt;[,&lt;field&gt;]*                 comma separated list of field names (required <span class="keyword">for</span> exporting CSV) e.g. -f <span class="string">"name,age"</span></span><br><span class="line">      --fieldFile=&lt;filename&gt;                      file with field names - 1 per line</span><br><span class="line">      --<span class="built_in">type</span>=&lt;<span class="built_in">type</span>&gt;                               the output format, either json or csv (defaults to <span class="string">'json'</span>) (default: json)</span><br><span class="line">  -o, --out=&lt;filename&gt;                            output file; <span class="keyword">if</span> not specified, stdout is used</span><br><span class="line">      --jsonArray                                 output to a JSON array rather than one object per line</span><br><span class="line">      --pretty                                    output JSON formatted to be human-readable</span><br><span class="line">      --noHeaderLine                              <span class="built_in">export</span> CSV data without a list of field names at the first line</span><br><span class="line">querying options:</span><br><span class="line">  -q, --query=&lt;json&gt;                              query filter, as a JSON string, e.g., <span class="string">'&#123;x:&#123;$gt:1&#125;&#125;'</span></span><br><span class="line">      --queryFile=&lt;filename&gt;                      path to a file containing a query filter (JSON)</span><br><span class="line">  -k, --slaveOk                                   allow secondary reads <span class="keyword">if</span> available (default <span class="literal">true</span>) (default: <span class="literal">false</span>)</span><br><span class="line">      --readPreference=&lt;string&gt;|&lt;json&gt;            specify either a preference name or a preference json object</span><br><span class="line">      --forceTableScan                            force a table scan (<span class="keyword">do</span> not use <span class="variable">$snapshot</span>)</span><br><span class="line">      --skip=&lt;count&gt;                              number of documents to skip</span><br><span class="line">      --<span class="built_in">limit</span>=&lt;count&gt;                             <span class="built_in">limit</span> the number of documents to <span class="built_in">export</span></span><br><span class="line">      --sort=&lt;json&gt;                               sort order, as a JSON string, e.g. <span class="string">'&#123;x:1&#125;'</span></span><br><span class="line">      --assertExists                              <span class="keyword">if</span> specified, <span class="built_in">export</span> fails <span class="keyword">if</span> the collection does not exist (default: <span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>mongodb 备份脚本可以<a href="https://github.com/xxlaila/backup-monitoring/tree/master/backup" target="_blank" rel="noopener">参考</a>本人写的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;Days-11-14&quot;&gt;&lt;a href=&quot;#Days-11-14&quot; class=&quot;headerlink&quot; title=&quot;Days(11.14)&quot;&gt;&lt;/a&gt;Days(11.14)&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mongodb之前都是负责搭建、维护、备份、监控等操作。闲时来总结一下语法。
    
    </summary>
    
      <category term="数据库" scheme="https://www.xxlaila.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mongodb" scheme="https://www.xxlaila.cn/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>mysql8.0 错误</title>
    <link href="https://www.xxlaila.cn/2019/11/07/mysql8.0%E9%94%99%E8%AF%AF/"/>
    <id>https://www.xxlaila.cn/2019/11/07/mysql8.0错误/</id>
    <published>2019-11-07T01:36:43.000Z</published>
    <updated>2019-11-15T06:24:23.442Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h4 id="mysql-8-0-倒入数据报错"><a href="#mysql-8-0-倒入数据报错" class="headerlink" title="mysql 8.0 倒入数据报错"></a>mysql 8.0 倒入数据报错</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天数据库从5.6切换到8.0测试的时候，倒入数据到8.0版本报错，错误提示：2006 mysql server has gone away。<a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经过查询得知，导入SQL数据库结构+数据时，如果sql操作时间过长；或者是传送的数据太大（咧如使用insert…values的语句过长）；就会报这个错误。登录服务器查看了数据库连接超时的时间默认是8小时，问题应该不是出现在这里。登录老版本数据查看该数据库表的数据，发现该表存放是json的数据格式数据，而且很大，很长。根据这点消息，可以简单的知道问题</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种情况可以通过修改max_allowed_packed的配置参数来避免，修改my.cnf加大max_allowed_packet的值即可。</p><ul><li>解决办法<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;找到mysql目录下的my.ini配置文件，加入以下配置或者修改以下配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max_allowed_packet=300M</span><br></pre></td></tr></table></figure></li></ul><h4 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h4><ul><li><strong>max_allowed_packet</strong>: mysql根据配置文件会限制server接受的数据包大小。如果一次插入数据库中的数据太大的话就会失败，<a href="https://dev.mysql.com/doc/refman/8.0/en/packet-too-large.html" target="_blank" rel="noopener">官方介绍</a>，<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里我刚开始修改的是200M，还是出现这个错误，然后我看了一下sql文件大小是在260多M，索性我就把这个参数调整为300M，在执行倒入数据ok。这个参数调大不会影响服务器的性能，可以参考官方说明。</li></ul><h4 id="mysql-1067-Invalid-default-value-for"><a href="#mysql-1067-Invalid-default-value-for" class="headerlink" title="mysql 1067 - Invalid default value for"></a>mysql 1067 - Invalid default value for</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql 8.0 在倒入数据的时候提示: 1067 - Invalid default value for ‘xxx_date’。查询结果得知跨版本升级引起的默认值不兼容问题，登录老服务器查看该字段是一个时间字段，是一个datetime类型，而且默认是0，然后看了一下导出的数据数据格式居然是0000-00-00，该类型可能是默认值被限制了，查看 sql_mode。</p><h5 id="查看-sql-mode"><a href="#查看-sql-mode" class="headerlink" title="查看 sql_mode"></a>查看 sql_mode</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'sql_mode'</span>;</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Variable_name | Value                                                                                                                 |</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| sql_mode      | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION |</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.02 sec)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NO_ZERO_IN_DATE,NO_ZERO_DATE这两个参数限制时间不能为0</p><h5 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> session sql_mode=<span class="string">'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><p>这个我操作了，没成功，我用的永久修改成功导入的。不知道为啥，可能是姿势不对</p><h5 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改"></a>永久修改</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以直接修改my.cnf文件，在[mysqld]下面添加如下列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_mode=ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h4 id=&quot;mysql-8-0-倒入数据报错&quot;&gt;&lt;a href=&quot;#mysql-8-0-倒入数据报错&quot; class=&quot;headerlink&quot; title=&quot;mysql 8.0 倒入数据报错&quot;&gt;&lt;/a&gt;mysql 8.0 倒入数据报错&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天数据库从5.6切换到8.0测试的时候，倒入数据到8.0版本报错，错误提示：2006 mysql server has gone away。
    
    </summary>
    
      <category term="数据库" scheme="https://www.xxlaila.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="https://www.xxlaila.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>istio部署</title>
    <link href="https://www.xxlaila.cn/2019/10/29/istio%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/10/29/istio部署/</id>
    <published>2019-10-29T08:21:08.000Z</published>
    <updated>2019-12-13T09:16:04.899Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:39 GMT+0800 (China Standard Time) --><h3 id="Istio介绍"><a href="#Istio介绍" class="headerlink" title="Istio介绍"></a>Istio介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio代表的是Service Mesh的方案实现，Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。提供一种简单的方式来为已部署的服务建立网络，且提供具有负载均衡、服务间认证、监控、流量管理等功能。</p><a id="more"></a><h3 id="服务网格（Service-Mesh）"><a href="#服务网格（Service-Mesh）" class="headerlink" title="服务网格（Service Mesh）"></a>服务网格（Service Mesh）</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务网格（Service Mesh）用于描述构成这些应用程序的微服务网络以及应用之间的交互。随着规模和复杂性的增长，服务网格越来越难以理解和管理。它的需求包括服务发现、负载均衡、故障恢复、指标收集和监控以及通常更加复杂的运维需求，例如 A/B 测试、金丝雀发布、限流、访问控制和端到端认证等。而istio刚好提供了一套完整的解决方案，通过控制整个服务器网格提供行为洞察和操作控制来满足微服务应用的多样化</p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 服务网格逻辑上分为数据平面和控制平面。</p><ul><li>数据平面由一组以 sidecar 方式部署的智能代理（Envoy）组成。这些代理可以调节和控制微服务及 Mixer 之间所有的网络通信。</li><li>控制平面负责管理和配置代理来路由流量。此外控制平面配置 Mixer 以实施策略和收集遥测数据。</li></ul><p>构成每个面板的不同组件:<br><img src="https://img.xxlaila.cn/1567136153850.jpg" alt="img"></p><h4 id="istio-组件"><a href="#istio-组件" class="headerlink" title="istio 组件"></a>istio 组件</h4><ul><li>Envoy: Istio 使用 Envoy 代理的扩展版本，用于调解服务网格中所有服务的所有入站和出站流量，属于数据层面。Istio利用Envoy的内置功能实现如下指标:<ul><li>动态服务发现</li><li>负载均衡</li><li>TLS终止</li><li>HTTP/2和gRPC代理</li><li>断路器</li><li>健康检查</li><li>分阶段推出，按百分比分配流量</li><li>故障注入</li><li>丰富的指标</li></ul></li><li>Mixer: 是一个独立于平台的组件，负责在服务网格上执行访问控制和使用策略，并从 Envoy 代理和其他服务收集遥测数据</li><li>Pilot: 为 Envoy sidecar 提供服务发现功能，为智能路由（例如 A/B 测试、金丝雀部署等）和弹性（超时、重试、熔断器等）提供流量管理功能</li><li>Citadel: 通过内置身份和凭证管理赋能强大的服务间和最终用户身份验证。可用于升级服务网格中未加密的流量，并为运维人员提供基于服务标识而不是网络控制的强制执行策略的能力</li><li>Galley: 代表其他的 Istio 控制平面组件，用来验证用户编写的 Istio API 配置。随着时间的推移，Galley 将接管 Istio 获取配置、 处理和分配组件的顶级责任</li></ul><h3 id="Istion-安装"><a href="#Istion-安装" class="headerlink" title="Istion 安装"></a>Istion 安装</h3><h4 id="下载istio包"><a href="#下载istio包" class="headerlink" title="下载istio包"></a>下载istio包</h4><p>执行下载和自动解压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.4.0 sh -</span></span><br><span class="line"><span class="comment"># cd istio-1.4.0/bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cp istioctl /usr/bin/</span></span><br></pre></td></tr></table></figure><p>安装目录中包含：</p><ul><li><code>在 install/</code>: 目录中包含了 Kubernetes 安装所需的 .yaml 文件</li><li><code>samples/</code>: 目录中是示例应用</li><li><code>istioctl</code>: istioctl客户端二进制文件。手动将Envoy作为Sidecar代理注入并创建路由规则和策略时，将使用此工具。</li><li><code>istio.VERSION</code>: 配置文件</li></ul><h3 id="在kubernetes-集群中安装"><a href="#在kubernetes-集群中安装" class="headerlink" title="在kubernetes 集群中安装"></a>在kubernetes 集群中安装</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 会被安装到自己的 istio-system 命名空间，并且能够对所有其他命名空间的服务进行管理。这里采用helm进行安装，<a href="https://xxlaila.github.io/2019/09/04/k8s-helm/" target="_blank" rel="noopener">helm安装参考</a>，我们需要为Kiali设置身份验证凭据（监视）。用于后面的登录认证</p><h4 id="设置用户名和密码的环境变量"><a href="#设置用户名和密码的环境变量" class="headerlink" title="设置用户名和密码的环境变量"></a>设置用户名和密码的环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># KIALI_USERNAME=$(read -p 'Kiali Username: ' uval &amp;&amp; echo -n $uval | base64)</span></span><br><span class="line"><span class="comment"># KIALI_PASSPHRASE=$(read -sp 'Kiali Passphrase: ' pval &amp;&amp; echo -n $pval | base64)</span></span><br></pre></td></tr></table></figure><h4 id="创建命名空间"><a href="#创建命名空间" class="headerlink" title="创建命名空间"></a>创建命名空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NAMESPACE=istio-system</span></span><br><span class="line"><span class="comment"># kubectl create namespace $NAMESPACE</span></span><br></pre></td></tr></table></figure><ul><li>创建用于存储上面设置的用户名/密码的机密<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: kiali</span><br><span class="line">  namespace: <span class="variable">$NAMESPACE</span></span><br><span class="line">  labels:</span><br><span class="line">    app: kiali</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">data:</span><br><span class="line">  username: <span class="variable">$KIALI_USERNAME</span></span><br><span class="line">  passphrase: <span class="variable">$KIALI_PASSPHRASE</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用helm安装istio-CRD"><a href="#使用helm安装istio-CRD" class="headerlink" title="使用helm安装istio CRD"></a>使用helm安装istio CRD</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm install install/kubernetes/helm/istio-init --name istio-init --namespace istio-system</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl -n istio-system wait --for=condition=complete job --all</span></span><br><span class="line">job.batch/istio-init-crd-10-1.4.0 condition met</span><br><span class="line">job.batch/istio-init-crd-11-1.4.0 condition met</span><br><span class="line">job.batch/istio-init-crd-14-1.4.0 condition met</span><br></pre></td></tr></table></figure><h5 id="查看安装的CRD和pod"><a href="#查看安装的CRD和pod" class="headerlink" title="查看安装的CRD和pod"></a>查看安装的CRD和pod</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上述安装会把istio的23个crd都提交给kubernetes api 服务器。如果启用了证书管理，crd计数器为28个。我这里未启用证书管理，只有23个。还生成三个pod</p><ul><li><p>CRD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get CustomResourceDefinition</span></span><br><span class="line">NAME                                   CREATED AT</span><br><span class="line">adapters.config.istio.io               2019-10-29T08:41:31Z</span><br><span class="line">attributemanifests.config.istio.io     2019-10-29T08:41:30Z</span><br><span class="line">authorizationpolicies.rbac.istio.io    2019-10-29T08:41:36Z</span><br><span class="line">certificates.certmanager.k8s.io        2019-10-29T08:41:38Z</span><br><span class="line">challenges.certmanager.k8s.io          2019-10-29T08:41:40Z</span><br><span class="line">clusterissuers.certmanager.k8s.io      2019-10-29T08:41:37Z</span><br><span class="line">clusterrbacconfigs.rbac.istio.io       2019-10-29T08:41:26Z</span><br><span class="line">destinationrules.networking.istio.io   2019-10-29T08:41:25Z</span><br><span class="line">envoyfilters.networking.istio.io       2019-10-29T08:41:26Z</span><br><span class="line">gateways.networking.istio.io           2019-10-29T08:41:26Z</span><br><span class="line">handlers.config.istio.io               2019-10-29T08:41:33Z</span><br><span class="line">httpapispecbindings.config.istio.io    2019-10-29T08:41:27Z</span><br><span class="line">httpapispecs.config.istio.io           2019-10-29T08:41:28Z</span><br><span class="line">instances.config.istio.io              2019-10-29T08:41:32Z</span><br><span class="line">issuers.certmanager.k8s.io             2019-10-29T08:41:37Z</span><br><span class="line">meshpolicies.authentication.istio.io   2019-10-29T08:41:27Z</span><br><span class="line">orders.certmanager.k8s.io              2019-10-29T08:41:40Z</span><br><span class="line">policies.authentication.istio.io       2019-10-29T08:41:27Z</span><br><span class="line">quotaspecbindings.config.istio.io      2019-10-29T08:41:28Z</span><br><span class="line">quotaspecs.config.istio.io             2019-10-29T08:41:29Z</span><br><span class="line">rbacconfigs.rbac.istio.io              2019-10-29T08:41:31Z</span><br><span class="line">rules.config.istio.io                  2019-10-29T08:41:30Z</span><br><span class="line">serviceentries.networking.istio.io     2019-10-29T08:41:25Z</span><br><span class="line">servicerolebindings.rbac.istio.io      2019-10-29T08:41:31Z</span><br><span class="line">serviceroles.rbac.istio.io             2019-10-29T08:41:31Z</span><br><span class="line">sidecars.networking.istio.io           2019-10-29T08:41:34Z</span><br><span class="line">templates.config.istio.io              2019-10-29T08:41:32Z</span><br><span class="line">virtualservices.networking.istio.io    2019-10-29T08:41:25Z</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get crds | grep 'istio.io\|certmanager.k8s.io' | wc -l</span></span><br><span class="line">23</span><br></pre></td></tr></table></figure></li><li><p>pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods -n istio-system</span></span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">NAME                            READY   STATUS      RESTARTS   AGE</span><br><span class="line">istio-init-crd-10-1.4.0-pbtb8   0/1     Completed   0          47s</span><br><span class="line">istio-init-crd-11-1.4.0-shx6q   0/1     Completed   0          47s</span><br><span class="line">istio-init-crd-12-1.4.0-zmh2w   0/1     Completed   0          47s</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用helm安装各个组件"><a href="#使用helm安装各个组件" class="headerlink" title="使用helm安装各个组件"></a>使用helm安装各个组件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">helm install install/kubernetes/helm/istio --<span class="built_in">wait</span> \</span><br><span class="line">    --name istio \</span><br><span class="line">    --namespace istio-system \</span><br><span class="line">    --<span class="built_in">set</span> global.mtls.enabled=<span class="literal">false</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> servicegraph.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.gatewayName=ingressgateway \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.createDemoSecret=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.contextPath=/ \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.jaegerURL=http://jaeger-query:16686"</span> \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.grafanaURL=http://grafana:3000"</span> \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-ingressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-egressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> sidecarInjectorWebhook.enabled=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;验证文件里面的服务是否都部署在kubernetes 服务中。确保部署的pod 在对应的kubernetes namespace 里面，并正常启动。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这期间将创建所需的RBAC权限，并部署Istio-Pilot，Istio-Mixer，Istio-Ingress，Istio-Egress和Istio-CA（证书颁发机构）。</p><h5 id="服务器验证"><a href="#服务器验证" class="headerlink" title="服务器验证"></a>服务器验证</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确保部署了以下Kubernetes服务：istio-pilot，istio-mixer，istio-ingress。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n istio-system</span></span><br><span class="line">NAME                     TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                                                                                                                                      AGE</span><br><span class="line">grafana                  ClusterIP   10.254.113.150   &lt;none&gt;        3000/TCP                                                                                                                                     3h22m</span><br><span class="line">istio-citadel            ClusterIP   10.254.27.143    &lt;none&gt;        8060/TCP,15014/TCP                                                                                                                           3h22m</span><br><span class="line">istio-galley             ClusterIP   10.254.155.177   &lt;none&gt;        443/TCP,15014/TCP,9901/TCP                                                                                                                   3h22m</span><br><span class="line">istio-ingressgateway     NodePort    10.254.170.109   &lt;none&gt;        15020:31952/TCP,80:31380/TCP,443:31390/TCP,31400:31400/TCP,15029:32532/TCP,15030:31518/TCP,15031:31525/TCP,15032:30404/TCP,15443:30309/TCP   3h22m</span><br><span class="line">istio-pilot              ClusterIP   10.254.228.182   &lt;none&gt;        15010/TCP,15011/TCP,8080/TCP,15014/TCP                                                                                                       3h22m</span><br><span class="line">istio-policy             ClusterIP   10.254.13.184    &lt;none&gt;        9091/TCP,15004/TCP,15014/TCP                                                                                                                 3h22m</span><br><span class="line">istio-sidecar-injector   ClusterIP   10.254.154.169   &lt;none&gt;        443/TCP                                                                                                                                      3h22m</span><br><span class="line">istio-telemetry          ClusterIP   10.254.71.72     &lt;none&gt;        9091/TCP,15004/TCP,15014/TCP,42422/TCP                                                                                                       3h22m</span><br><span class="line">jaeger-agent             ClusterIP   None             &lt;none&gt;        5775/UDP,6831/UDP,6832/UDP                                                                                                                   3h22m</span><br><span class="line">jaeger-collector         ClusterIP   10.254.100.29    &lt;none&gt;        14267/TCP,14268/TCP                                                                                                                          3h22m</span><br><span class="line">jaeger-query             ClusterIP   10.254.18.117    &lt;none&gt;        16686/TCP                                                                                                                                    3h22m</span><br><span class="line">kiali                    ClusterIP   10.254.156.117   &lt;none&gt;        20001/TCP                                                                                                                                    3h22m</span><br><span class="line">prometheus               ClusterIP   10.254.145.181   &lt;none&gt;        9090/TCP                                                                                                                                     3h22m</span><br><span class="line">tracing                  ClusterIP   10.254.87.72     &lt;none&gt;        80/TCP                                                                                                                                       3h22m</span><br><span class="line">zipkin                   ClusterIP   10.254.39.22     &lt;none&gt;        9411/TCP                                                                                                                                     3h22m</span><br></pre></td></tr></table></figure><h5 id="pod-验证"><a href="#pod-验证" class="headerlink" title="pod 验证"></a>pod 验证</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确保已部署相应的Kubernetes Pod，并且所有容器都已启动并正在运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods -n istio-system</span></span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">grafana-6fb9f8c5c7-n2plk                  1/1     Running     0          3h19m</span><br><span class="line">istio-citadel-7c9b84ddb6-n5h2n            1/1     Running     0          3h19m</span><br><span class="line">istio-galley-64f7d8cc97-zdbb6             1/1     Running     0          3h19m</span><br><span class="line">istio-grafana-post-install-1.2.8-98grv    0/1     Completed   0          3h19m</span><br><span class="line">istio-ingressgateway-65c7498b78-dfmfp     1/1     Running     0          3h19m</span><br><span class="line">istio-init-crd-10-1.2.8-wxxjn             0/1     Completed   0          3h20m</span><br><span class="line">istio-init-crd-11-1.2.8-brjhh             0/1     Completed   0          3h20m</span><br><span class="line">istio-init-crd-12-1.2.8-w8wnc             0/1     Completed   0          3h20m</span><br><span class="line">istio-pilot-569499d666-vhgn5              2/2     Running     0          3h19m</span><br><span class="line">istio-policy-5dbbc56db5-dmr4p             2/2     Running     3          3h19m</span><br><span class="line">istio-sidecar-injector-747cf74498-99drh   1/1     Running     0          3h19m</span><br><span class="line">istio-telemetry-7db5dd4c57-zngq7          2/2     Running     4          3h19m</span><br><span class="line">istio-tracing-5d8f57c8ff-vt2kn            1/1     Running     0          3h19m</span><br><span class="line">kiali-7d749f9dcb-68tlt                    1/1     Running     0          3h19m</span><br><span class="line">prometheus-776fdf7479-zbrxl               1/1     Running     0          3h19m</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 以一个项目的形式部署到 Kubernetes 集群中。我们可以看到，部署好的 pods 中，除了有 istio-citadel、、istio-ingressgateway、istio-pilot 等 Istio 本身的功能组件，还集成了微服务相关的监控工具，，如：grafana、jaeger-query、kiali、prometheus。这些功能丰富且强大的监控工具，帮助 Istio实现了微服务的可视化管理。</p><h3 id="部署BookInfo用程序"><a href="#部署BookInfo用程序" class="headerlink" title="部署BookInfo用程序"></a>部署BookInfo用程序</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在开始部署 Bookinfo 示例程序。部署Bookinfo条件是集群中至少有4个节点，而且每个节点的内存不得低于4G。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以部署安装随附的示例应用程序之一-BookInfo。这是一个简单的模拟书店应用程序，由四个服务组成，这些服务提供一个Web产品页面，书籍详细信息，评论（带有多个版本的评论服务）和评分-所有这些都使用Istio进行管理。</p><ul><li><p>BookInfo应用程序分为四个单独的微服务:</p><ul><li>productpage ：productpage 微服务会调用 details 和 reviews 两个微服务，用来生成页面。</li><li>details ：这个微服务包含了书籍的信息。</li><li>reviews ：这个微服务包含了书籍相关的评论。它还会调用 ratings 微服务。</li><li>ratings ：ratings 微服务中包含了由书籍评价组成的评级信息。</li></ul></li><li><p>reviews 微服务有 3 个版本：</p><ul><li>v1 版本不会调用 ratings 服务.</li><li>v2 版本会调用 ratings 服务，并使用 1 到 5 个黑色星形图标来显示评分信息</li><li>v3 版本会调用 ratings 服务，并使用 1 到 5 个红色星形图标来显示评分信息</li></ul></li><li><p>下图展示了这个应用的端到端架构<br><img src="https://img.xxlaila.cn/1572576628250.jpg" alt="img"></p></li></ul><h4 id="打标签"><a href="#打标签" class="headerlink" title="打标签"></a>打标签</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为 default 命名空间打上标签 istio-injection=enabled，实现 Sidecar 自动注入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl label namespace default istio-injection=enabled</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get namespace --show-labels</span></span><br><span class="line">NAME              STATUS   AGE   LABELS</span><br><span class="line">default           Active   43d   istio-injection=enabled</span><br><span class="line">istio-system      Active   29m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   43d   &lt;none&gt;</span><br><span class="line">kube-public       Active   43d   &lt;none&gt;</span><br><span class="line">kube-system       Active   43d   &lt;none&gt;</span><br><span class="line">monitoring        Active   35d   &lt;none&gt;</span><br><span class="line">weave             Active   35d   &lt;none&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>注意:</strong> 此步骤先不执行，如果这这个执行了，在后面部署Bookinfo的时候会提示如下错误<code>Error creating: Internal error occurred: failed calling webhook &quot;sidecar-injector.istio.io&quot;: Post https://istio-sidecar-injector.istio-system.svc:443/inject?timeout=30s: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</code>这一步有执行的可以执行以下命令进行删除。该错误已解决，<a href="https://www.xxlaila.cn/2019/12/13/istio%E9%83%A8%E7%BD%B2%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/">详情参考</a></li></ul><ul><li>删除ns的label<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get ns --show-labels</span></span><br><span class="line">NAME              STATUS   AGE    LABELS</span><br><span class="line">default           Active   2d4h   istio-injection=enabled</span><br><span class="line">istio-system      Active   174m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-public       Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-system       Active   2d4h   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl label namespace default istio-injection-</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get ns --show-labels</span></span><br><span class="line">NAME              STATUS   AGE    LABELS</span><br><span class="line">default           Active   2d4h   &lt;none&gt;</span><br><span class="line">istio-system      Active   175m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-public       Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-system       Active   2d4h   &lt;none&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="部署Bookinfo"><a href="#部署Bookinfo" class="headerlink" title="部署Bookinfo"></a>部署Bookinfo</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;直接使用kubectl create其常规的YAML部署文件来部署我们的应用程序。将使用istioctl将Envoy容器注入到应用程序容器中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl create -f &lt;(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)</span></span><br><span class="line">service/details created</span><br><span class="line">serviceaccount/bookinfo-details created</span><br><span class="line">deployment.apps/details-v1 created</span><br><span class="line">service/ratings created</span><br><span class="line">serviceaccount/bookinfo-ratings created</span><br><span class="line">deployment.apps/ratings-v1 created</span><br><span class="line">service/reviews created</span><br><span class="line">serviceaccount/bookinfo-reviews created</span><br><span class="line">deployment.apps/reviews-v1 created</span><br><span class="line">deployment.apps/reviews-v2 created</span><br><span class="line">deployment.apps/reviews-v3 created</span><br><span class="line">service/productpage created</span><br><span class="line">serviceaccount/bookinfo-productpage created</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该命令将启动bookinfo应用程序体系结构图中显示的所有四个服务。已启动评论服务的所有3个版本，即v1，v2和v3。而在实际部署中，随着时间的推移会部署新版本的微服务，而不是同时部署所有版本。</p><h4 id="检查部署"><a href="#检查部署" class="headerlink" title="检查部署"></a>检查部署</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确认所有服务和Pod均已正确定义并正在运行。</p><ul><li><p>检查 services</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get services</span></span><br><span class="line">NAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">details       ClusterIP   10.254.61.113    &lt;none&gt;        9080/TCP   2m27s</span><br><span class="line">kubernetes    ClusterIP   10.254.0.1       &lt;none&gt;        443/TCP    43d</span><br><span class="line">productpage   ClusterIP   10.254.130.5     &lt;none&gt;        9080/TCP   2m23s</span><br><span class="line">ratings       ClusterIP   10.254.186.181   &lt;none&gt;        9080/TCP   2m26s</span><br><span class="line">reviews       ClusterIP   10.254.200.107   &lt;none&gt;        9080/TCP   2m25s</span><br></pre></td></tr></table></figure></li><li><p>检查 pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                              READY   STATUS    RESTARTS   AGE</span><br><span class="line">details-v1-c5b5f496d-lphgd        1/1     Running   0          15h</span><br><span class="line">load-generator-7fbcc7489f-vbpnx   1/1     Running   2          20d</span><br><span class="line">nginx-deploy-d494b9564-vx97s      1/1     Running   1          20d</span><br><span class="line">productpage-v1-c7765c886-97spj    1/1     Running   0          15h</span><br><span class="line">ratings-v1-f745cf57b-mdgxr        1/1     Running   0          15h</span><br><span class="line">reviews-v1-75b979578c-ghqqm       1/1     Running   0          15h</span><br><span class="line">reviews-v2-597bf96c8f-r659w       1/1     Running   0          15h</span><br><span class="line">reviews-v3-54c6c64795-tvsmq       1/1     Running   0          15h</span><br></pre></td></tr></table></figure></li><li><p>确认Bookinfo应用程序正在运行，请通过curl某个pod中的命令向其发送请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl exec -it $(kubectl get pod -l app=ratings -o jsonpath='&#123;.items[0].metadata.name&#125;') -c ratings -- curl productpage:9080/productpage | grep -o "&lt;title&gt;.*&lt;/title&gt;"</span></span><br><span class="line">&lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在每个服务旁边都注入了Envoy，架构将如下<br><img src="https://img.xxlaila.cn/1572577460804.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bookinfo服务已启动并正在运行，您需要使该应用程序可以从Kubernetes集群外部访问，例如，从浏览器访问。Istio网关用于此目的。但是我在部署 bookinfo-gateway 的时候出现错误，错误如下；然后看了一下 bookinfo-gateway就是提供一个web访问的程序，既然是提供的一个web访问，我就使用了Traefix来提供这个服务。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">Error</span> <span class="keyword">from</span><span class="built_in"> server </span>(Timeout): <span class="builtin-name">error</span> when creating <span class="string">"samples/bookinfo/networking/bookinfo-gateway.yaml"</span>: Timeout: request did <span class="keyword">not</span> complete within requested timeout 30s</span><br><span class="line"><span class="builtin-name">Error</span> <span class="keyword">from</span><span class="built_in"> server </span>(Timeout): <span class="builtin-name">error</span> when creating <span class="string">"samples/bookinfo/networking/bookinfo-gateway.yaml"</span>: Timeout: request did <span class="keyword">not</span> complete within requested timeout 30s</span><br></pre></td></tr></table></figure><h4 id="创建-bookinfo-gateway"><a href="#创建-bookinfo-gateway" class="headerlink" title="创建 bookinfo-gateway"></a>创建 bookinfo-gateway</h4><ul><li>istio-Ingress.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: istio-web-ui</span><br><span class="line">  namespace: </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: productpage</span><br><span class="line">          servicePort: 9080</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器输入<code>http://istio.xxlaila.cn</code> 来访问。用 productpage以查看BookInfo网页。如果您多次刷新页面，您应该会看到产品页面上显示的评论版本不同，并以循环方式显示（红色星星，黑色星星，无星星），因为我们尚未使用Istio来控制版本路由<br><img src="https://img.xxlaila.cn/1572578398765.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1572578189667.jpg" alt="img"></p><p>基本道这里，动态更改请求路由学习中，😂😂😂</p><h3 id="监控方式"><a href="#监控方式" class="headerlink" title="监控方式"></a>监控方式</h3><h4 id="生成服务图"><a href="#生成服务图" class="headerlink" title="生成服务图"></a>生成服务图</h4><p>要验证Kiali是否在您的集群中运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n istio-system get svc kiali</span></span><br><span class="line">NAME    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)     AGE</span><br><span class="line">kiali   ClusterIP   10.254.156.117   &lt;none&gt;        20001/TCP   4h38m</span><br></pre></td></tr></table></figure><p>流量发送到网格，有三种选择:<br>1.在网络浏览器中访问<a href="http://istio.xxlaila.cn/productpage" target="_blank" rel="noopener">http://istio.xxlaila.cn/productpage</a><br>2.多次使用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl http://istio.xxlaila.cn/productpage</span></span><br></pre></td></tr></table></figure><p>3.使用以下watch命令连续发送请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># watch -n 1 curl -o /dev/null -s -w %&#123;http_code&#125; http://istio.xxlaila.cn/productpage</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里需要配置Kiali UI，我们同样适用Traefix来进行配置</p><ul><li>kiali–Ingress.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; kiali--Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: kiali-web-ui</span><br><span class="line">  namespace: istio-system </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: istio-kiali.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: kiali</span><br><span class="line">          servicePort: 20001</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://istio-kiali.xxlaila.cn" target="_blank" rel="noopener">http://istio-kiali.xxlaila.cn</a> ， 要登录Kiali UI，请转到Kiali登录屏幕，然后输入存储在Kiali机密中的用户名和密码。账户密码是前面我们设置的</p><h4 id="1-网格概述"><a href="#1-网格概述" class="headerlink" title="1.网格概述"></a>1.网格概述</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录后立即显示的“概述”页面中查看网格的概述。“概述”页面显示了网格中具有服务的所有名称空间。以下屏幕截图显示了类似的页面<br><img src="https://img.xxlaila.cn/1572578943386.jpg" alt="img"></p><h4 id="2-空间图"><a href="#2-空间图" class="headerlink" title="2.空间图"></a>2.空间图</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要查看名称空间图，请在bookinfoBookinfo名称空间卡中单击图图标。图形图标位于名称空间卡的左下方，看起来像是一组相连的圈子。该页面类似于<br><img src="https://img.xxlaila.cn/1572579048298.jpg" alt="img"></p><h3 id="分布式跟踪系统"><a href="#分布式跟踪系统" class="headerlink" title="分布式跟踪系统"></a>分布式跟踪系统</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启用Istio的应用程序可以配置为使用流行的Jaeger分布式跟踪系统来收集跟踪范围。分布式跟踪使您可以查看用户在系统中发出的请求流，而Istio的模型则允许这样做，而与构建应用程序所使用的语言/框架/平台无关。使用Traefix来提供这个服务。</p><ul><li><p>Jaeger-Ingress.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; Jaeger-Ingress.yaml  &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: jaeger-web-ui</span><br><span class="line">  namespace: istio-system </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: jaeger.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: jaeger-query</span><br><span class="line">          servicePort: 16686</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f Jaeger-Ingress.yaml </span></span><br><span class="line">ingress.extensions/jaeger-web-ui unchanged</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://jaeger.xxlaila.cn" target="_blank" rel="noopener">http://jaeger.xxlaila.cn</a> ， 使用Bookinfo示例生成跟踪，要查看跟踪数据，必须将请求发送到服务。请求数量取决于Istio的采样率。您在安装Istio时设置此速率。默认采样率为1％。您需要至少发送100个请求，才能显示第一条跟踪。要将100个请求发送到productpage服务，请使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for i in `seq 1 100`; do curl -s -o /dev/null http://istio.xxlaila.cn/productpage; done</span></span><br></pre></td></tr></table></figure><ul><li><p>在仪表板的左侧窗格中，从“服务”下拉列表中选择productpage.default，然后单击“查找跟踪”<br><img src="https://img.xxlaila.cn/1572592255728.jpg" alt="img"></p></li><li><p>单击顶部的最新跟踪以查看与对/ productpage的最新请求相对应的详细信息<br><img src="https://img.xxlaila.cn/1572592385675.jpg" alt="img"></p></li></ul><h3 id="监视Istio"><a href="#监视Istio" class="headerlink" title="监视Istio"></a>监视Istio</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如何设置和使用Istio仪表板监视网格流量。作为监控的一部分，需要将安装Grafana Istio插件，并使用基于Web的界面查看服务网格流量数据。Grafana将用于可视化普罗米修斯数据。在执行部署的时候也部署了这两个服务。</p><h4 id="创建grafana-Ingress"><a href="#创建grafana-Ingress" class="headerlink" title="创建grafana Ingress"></a>创建grafana Ingress</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;grafana-istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-istio-web-ui</span><br><span class="line">  namespace: istio-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: grafana-istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: grafana</span><br><span class="line">          servicePort: 3000</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>执行创建，这里我们可以在以前的grafana里面添加数据库源，就不用在新起一个域名来进行访问<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再次加载Bookinfo应用程序（<a href="http://istio.xxlaila.cn/productpage）" target="_blank" rel="noopener">http://istio.xxlaila.cn/productpage）</a> ， 刷新页面几次（或发送命令几次）以产生少量流量。再次查看Istio仪表板。它应该反映所产生的流量。<br><img src="https://img.xxlaila.cn/1572593852626.jpg" alt="img"></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio 还提供了网格的全局视图以及网格中的服务和工作负载。您可以通过导航到特定的仪表板来获取有关服务和工作负载的更多详细信息。<br><img src="https://img.xxlaila.cn/1572594150893.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;提供了有关服务指标的详细信息，然后是该服务的客户端工作负载（正在调用此服务的工作负载）和服务工作负载（正在提供该服务的工作负载）。<br><img src="https://img.xxlaila.cn/1572594261333.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 在grafana 提供了很多的监控指标，可以分别点击看看<br><img src="https://img.xxlaila.cn/1572594330246.jpg" alt="img"></p><h3 id="查询Istio指标"><a href="#查询Istio指标" class="headerlink" title="查询Istio指标"></a>查询Istio指标</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio的数据是存储在prometheus里面的，这里我们通过prometheus进行直接数据的查询</p><h4 id="查看prometheus服务"><a href="#查看prometheus服务" class="headerlink" title="查看prometheus服务"></a>查看prometheus服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n istio-system get svc prometheus</span></span><br><span class="line">NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">prometheus   ClusterIP   10.254.145.181   &lt;none&gt;        9090/TCP   5h35m</span><br></pre></td></tr></table></figure><h4 id="prometheus-traefix"><a href="#prometheus-traefix" class="headerlink" title="prometheus traefix"></a>prometheus traefix</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过traefix 来代理prometheus，然后我们将流量发送到网格。</p><ul><li><p>prometheus-istio.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-istio-web-ui</span><br><span class="line">  namespace: istio-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: prometheus-istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: prometheus</span><br><span class="line">          servicePort: 9090</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-istio-Ingress.yaml </span></span><br><span class="line">ingress.extensions/prometheus-istio-web-ui created</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://prometheus-istio.xxlaila.cn" target="_blank" rel="noopener">http://prometheus-istio.xxlaila.cn</a> ，可以在输入框里面输入表达式来获取指，输入文本：istio_requests_total<br><img src="https://img.xxlaila.cn/1572594888435.jpg" alt="img"></p><ul><li><p>其他查询尝试：</p><ul><li><p>对productpage服务的所有请求总数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istio_requests_total&#123;destination_service=<span class="string">"productpage.default.svc.cluster.local"</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>对v3版本的评论服务的所有请求总数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istio_requests_total&#123;destination_service=<span class="string">"reviews.default.svc.cluster.local"</span>, destination_version=<span class="string">"v3"</span>&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>该查询将所有请求的当前总数返回到评论服务的v3。</p><ul><li>过去5分钟内对productpage服务所有实例的请求率：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rate(istio_requests_total&#123;destination_service=~<span class="string">"productpage.*"</span>, response_code=<span class="string">"200"</span>&#125;[5m])</span><br></pre></td></tr></table></figure></li></ul></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:39 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;Istio介绍&quot;&gt;&lt;a href=&quot;#Istio介绍&quot; class=&quot;headerlink&quot; title=&quot;Istio介绍&quot;&gt;&lt;/a&gt;Istio介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;istio代表的是Service Mesh的方案实现，Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。提供一种简单的方式来为已部署的服务建立网络，且提供具有负载均衡、服务间认证、监控、流量管理等功能。&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="istio" scheme="https://www.xxlaila.cn/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>pipeline核心高级篇</title>
    <link href="https://www.xxlaila.cn/2019/10/26/pipeline%E9%AB%98%E7%BA%A7%E7%AF%87/"/>
    <id>https://www.xxlaila.cn/2019/10/26/pipeline高级篇/</id>
    <published>2019-10-26T01:59:01.000Z</published>
    <updated>2019-10-28T02:40:59.762Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前面的两篇文章介绍了pipeline的基本使用和一些实际使用的例子，看似很不错，但是在实际应用也会出现很多的不足和问题，随之系统的庞大、服务的增加、人员的参差不齐会导致很多的问题。<a id="more"></a>届时会带来很大的维护成本和一些改动，所以我们在做事情之前就要考虑进去，一些意外事件的发生、或者是在将来即将会发生和需要改变的事情我们都要想到或者是预留口子，这样才在今后扩展、修改、引入都能有很好可塑性。</p><h3 id="jenkins-job介绍"><a href="#jenkins-job介绍" class="headerlink" title="jenkins job介绍"></a>jenkins job介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大多数情况下我们都是使用jenkins的普通job，普通的job好处是配置简单，结构化可以复杂，也可以单一。在使用jenkins job的时候我们分为两种：一种是单一job，一种是具有耦合性的。下面对两种情况进行对比和比较。</p><h4 id="jenkins-单一job"><a href="#jenkins-单一job" class="headerlink" title="jenkins 单一job"></a>jenkins 单一job</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在jenkins的传统模式下，单一的的job可以让维护人员可以很好的查看里面的逻辑步骤，job里面所有的任务都在这个所属的空间里面执行，它里面包含了：代码pull、编译、打包、复制包、发布包（使用内置的shell模块来写shell，这种应该不存在）。种单一job服务算得上是服务周到，不影响其他人，自己管理好自己的一亩三分地。好处是当出错以后影响范围小，容易控制。如下图：<br><img src="https://img.xxlaila.cn/1572064519037.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这中模式下，维护人员前期用看似比较轻松的工作建立起了整个发布流程。但是到了后期就不行了。之前我在的这家公司前期也是这么这么做的。开发完成后提交git，然后自动触发、构建、制品库、发布，在一个job里面就完成了。后来我们准备推行更好的devops方案的时候；发现以前的这个job建立有问题，一想到几百个微服务，几百个job需要去进行改造。顿时我们运维脸线一黑，虽然我们自己写了一个快速在jenkins上建立job，但是一想到几百个还是不好。为了解决这个问题，我们使用了job之间的任务关联，然后通过参数传递完成整个流程服务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种模式下的弊端就如上面所说的一样，但什么时候好的服务呢？好的服务又是什么样子的呢？这里也可以嵌套一些微服务的概念理论。如果我们要做到什么时候好的服务，我们得了解了解一下: 低耦合和高内聚。了解这个东西有助于我们在接下来的pipeline 流水线的设计，包括在后期devops的设计以及撸码都有很大的帮助。</p><h3 id="耦合性"><a href="#耦合性" class="headerlink" title="耦合性"></a>耦合性</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先我们来了解这一概念: “高内聚低耦合”。在软件设计中通常用耦合度和内聚度作为衡量模块独立程度的标准。划分模块的一个准则是高内聚低耦合。从模块粒度来看，高内聚：尽可能类的每个成员方法只完成一件事（最大限度的聚合）；低耦合：减少类内部，一个成员方法调用另一个成员方法。从类角度来看，高内聚低耦合：减少类内部，对其他类的调用；从功能块来看，高内聚低耦合：减少模块之间的交互复杂度（接口数量，参数数据）即横向：类与类之间、模块与模块之间；纵向：层次之间；尽可能，内容内聚，数据耦合。</p><h4 id="低耦合"><a href="#低耦合" class="headerlink" title="低耦合"></a>低耦合</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不同模块相互依赖多少？模块应尽可能独立于其他模块，以使对模块的更改不会严重影响其他模块。</p><h4 id="高耦合"><a href="#高耦合" class="headerlink" title="高耦合"></a>高耦合</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;高耦合将意味着您的模块对其他模块的内部运作了解太多。对其他模块了解太多的模块会使更改难以协调，并使模块能力变弱。如果模块A对模块B的了解过多，则对模块B内部的更改可能会破坏模块A的功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过实现低耦合，可以轻松更改模块内部，不必担心它们对系统中其他模块的影响。低耦合还使我们的模块彼此之间不相互依赖，因此更易于设计，编写和测试代码。我们还获得了易于重用和可组合的模块的优势。问题也被隔离到小的，独立的代码单元中。</p><p><strong>好处:</strong></p><ul><li>可维护性: 更改限制在一个模块中</li><li>可测试性: 单元测试中涉及的模块可以限制在最低限度</li><li>可读性: 需要分析的类减少</li></ul><h4 id="高内聚"><a href="#高内聚" class="headerlink" title="高内聚"></a>高内聚</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内聚性通常是指模块的元素如何相互组合。相关代码应彼此接近，以使其具有高度的凝聚力。易于维护的代码通常具有很高的内聚性。模块中的元素与该模块要提供的功能直接相关。如果需要修改一个功能，最好是在一个地方进行修改，然后可以尽快的发布。如果很多不同的地方要进行修改，就有可能需要发布多个微服务才能交互这个功能。在很多地方进行修改，不仅修改速度很慢，同时部署多个微服务也提高了风险。所以在找到问题域的边界域后可以确保相关的行为能放在同一个地方，并且它们会和其它边界以尽量低耦合的形式进行通信。</p><p><strong>好处:</strong></p><ul><li>可读性: 功能包含在单个模块中</li><li>可维护性: 调试往往包含在单个模块中</li><li>可重用性: 具有集中功能不会被无用的干扰</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内聚性低意味着组成某些功能的代码会散布在您的整个代码库中。不仅很难发现与您的模块相关的代码，而且很难在不同的模块之间跳转并跟踪的所有代码。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通俗的来讲，内聚是从功能角度来度量模块内的联系，好的内聚模块应恰好做一件事。描述的是模块内的功能联系。耦合是软件结构中各模块之间相互连接的一种度量，耦合强弱取决于模块间接口的复杂程度、进入或访问一个模块点以及通过接口的数据。</p><h4 id="可维护的代码"><a href="#可维护的代码" class="headerlink" title="可维护的代码"></a>可维护的代码</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般在编写可维护的代码有助于提高开发人员的生产力。具有高度可维护的代码使设计新功能和编写代码变得更加容易。模块化，基于组件的分层代码可提高生产率并降低进行更改时的风险。通过使代码保持松散耦合，可以在一个模块内编写代码，而不会影响其他模块。通过保持代码的内聚性，我们可以更轻松地编写易于使用的DRY代码。</p><p><strong>问题</strong>: 当我们遇到问题时，请评估修复、修改程序的程度。是更改一个模块，还是更改分散在整个系统中？在进行更改时，它是否可以解决所有的问题，还是会产生其他一些不可预知的问题？</p><p>在编写和使用代码库时:</p><ul><li>我要修复和创建的此功能模块是多少？</li><li>此更改是要在几个不同的地方进行？</li><li>我能否独立测试代码，测试整个代码有多难？</li><li>我们是否可以使代码更松散地耦合来改善？可以使用高内聚来改善我们的代码吗？</li></ul><h3 id="Jenkins-设计"><a href="#Jenkins-设计" class="headerlink" title="Jenkins 设计"></a>Jenkins 设计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有了上面的的理论与概念。根据这里理论和概念我们就可以设计出一套更好的devops流程。本文将kubernetes平台上来做这一套设计，并在实际的环境中应用。涉及的功能如下: 服务 Job、Code Job、Release、Notice四个功能任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每一个环境有错误，就会执行告警任务模块，告警目前使用的是<a href="https://github.com/xxlaila/jenkins-wechat-notice" target="_blank" rel="noopener">企业微信</a>。job之间需要传递JOB_NAME，env，version三个参数。在之前的devops设计里面整个job的调用设计还要多。形成了一个通用体系。在这个设计里面，当还需要增加一个任务流程，我们只需要修改pipeline，然后增加一个job，在下次构建的时候就会把我们新增加的流程给加进去，非常的方便。设计图如下：<br><img src="https://img.xxlaila.cn/1572081425995.jpg" alt="img"></p><h4 id="Project-Name"><a href="#Project-Name" class="headerlink" title="Project Name"></a>Project Name</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此job一般就是服务，job名称以服务的名称进行命名。里面包含了四个功能.</p><ul><li>Clone Code: clone 代码。</li><li>Build Code: 就是对开发提交的代码进行编译。</li><li>Env Version: 获取本次提交的hash，以hash为版本，结合环境来做一个版本记录，这里需要进行判断。uat/prod环境不需要env前缀。</li><li>Build Docker: 把编译完成后的二进制文件，打包成一个docker镜像。</li></ul><h4 id="Code-Test"><a href="#Code-Test" class="headerlink" title="Code Test"></a>Code Test</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用于测试进行对代码的自动化测试；自动化流程、性能等测试</p><h4 id="Release"><a href="#Release" class="headerlink" title="Release"></a>Release</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;主要是进行发布服务。当接受到上游job传递来的参数信息后，结合参数信息来进行对应的发布到kubernetes中namespace中，主要包含了以下功能</p><ul><li>Push Docker: 把前面打包的docker镜像推送到harbor</li><li>Edit Files: 修改发布的脚本</li><li>Release: 执行<code>kubectl</code>进行发布<ul><li>当发布到kubernetes中，kubernetes 会执行<a href="https://xxlaila.github.io/2019/09/27/k8s-pod%E5%81%A5%E5%BA%B7%E6%A3%80%E6%B5%8B/" target="_blank" rel="noopener">health检测</a>，如果启动失败，会进行通知</li></ul></li></ul><h4 id="Notice"><a href="#Notice" class="headerlink" title="Notice"></a>Notice</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此job主要用于通知。当接受到规则的告警通知以后，就会进行触发通知相关的人员。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前面的两篇文章介绍了pipeline的基本使用和一些实际使用的例子，看似很不错，但是在实际应用也会出现很多的不足和问题，随之系统的庞大、服务的增加、人员的参差不齐会导致很多的问题。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>pipeline多分支gitlab触发</title>
    <link href="https://www.xxlaila.cn/2019/10/25/pipeline%E5%A4%9A%E5%88%86%E6%94%AFgitlab%E8%A7%A6%E5%8F%91/"/>
    <id>https://www.xxlaila.cn/2019/10/25/pipeline多分支gitlab触发/</id>
    <published>2019-10-25T09:20:15.000Z</published>
    <updated>2019-10-28T08:42:04.528Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="enter password to read." />    <label for="hbePass">enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="7b7cd28a1e89ffd9113fef56a5683f9e917adbea95f84b4d992ac07ed8c393df">d69a90776b8106231e3f5503e1ddcc13e425256ba72465b9651376c97c9b0d3cae6570f4bd142ac527a5eca07b0c3ffc8d77619d7f31c28b72780633e0abcc9dfb0570c7e2e1605fa9b1321afef468b01bb0689d107c7a315920bf2ad35bb0a3725d395f015ce4e148e7430adf2bb4b75ecc71897c06fb48488ab6aefb25d7f399eb4bb08f91302fde3c394001e53cd03bf5e302f266d7c11376b8c4eacb2200b67098c5355d30a01c26121675f1b0492354e45952c23398ff834e5e9d286de0036d462507fcccb11d2ef4f168984dacbe667d11b663ce9b48877015557ef30af4d118e4fda072ebf9f4651cf76586cf621220dff597007244f963d1583b894ae121933f4f2bb3997d88f7a982f37d6e3598ac8bd07044d2b45523eb21a8c2ee0febf862bff351e895f4afb05d450c1882b6161519ffe884af442a7d6d950c456fe223eca0d0f787c466056677765faf867db97993c282b876feb0066824768b0990216fa89ab0b516c85ad1a75fc83dd38f600048b29c5f52c5ed4ca4ca293bc9339b2ebed759578e3874f28bb0e329a1cd2087533f45da5adca33d54441c7235af2bfa90bb30c06e91828b470e35c87ad235b6c2b91e96a324a157426a55c8fb9fed4a4d1beb0c74cdb192630f8403e79eaf0933c06b78e421117a732eacaf0796eafeedee4b8eb6830b72dd5ec9d3757f4e9bc9be9256f7a9ade867604974ee697211a64debae92b912d2197759c16fcc6dc18a051d1c5ed634f3cd43235bd86a84d5514af323b41742404735ed6e85a7c473a3efdac89204191d49ac4e5de4108c7fb1198d8278fa71d6acbfc658cb332a11f0cf9be1803e26ba69336904894cc3d22aa811dfbbeb9de99cdd6dffeaa6abbf385afcdaa6f4807f3a23fa80ecb44b9d8772abebf5f72f1d2ae2c11894ac52ff3138786d89740a9dc1688193ee5cdc7323474c8d36226434b0967ecf7d1a0f713230dd8f5cc134d17da0bf19029bbaa0d1f1d6ccbfb011d0e10bb6d9a028a726664526fe723b6179b68f63a6197462e3158b6ce569370d979b939fbd2361599f5f7cfed695d06a93c5a87a84bd82966c8988b92993fca459060dc01d9ceb7d57ec42d563997a0e4e907cbab7c6a3eeca56b22e109e0b61e8b07810b555e890b70d164a3ef062f16fe38f1bc9bb5bed7e9a4b4c76377ea3a3768cb5b328f653028d188ccae879b921d8892b80932cc91036d97dbcac959d8a6df3edbb44830dbe57d104b24ad84f05fad5a3859b1e219815265fc7310efdb68b3b3eda4be1ebc42a8fd4dcd0c5eeb015493efc106d746bd21707c16c8b97a55cae1a92a0b18d6027c58567a1fa6fe3b561a2ee4885c8499552d7bafd07643d63054718e59843c5344c59617ef087fe0560ed8d4e219a0451f3b1554f56184364be71f004fca869be9a382096574c3cf078a0af7c3a652d9850c8752c3d61b4fa4a5cff9b726b3bc8cf3ab14cec83ac7ad4e989ec256e6d2ff09e67d1baef9677ba65a6c0291cb10db553a6ad8b49d02acdb8177e855d96ca8b3191046a93641d22b223f20cb6c8c88c67c4344029f9d5a9917870aff0a7a14d0e1f91fba61578bc2a4826ee26f151fced6b3faa5652ff0eca73942d8e2ea589ebc68687f33f8bab006dddb73ac58a4a9e26bc4c39c911c4916b39cc39276da2ae51eb9714d8bf88ba439108a476a929c0b9cd67eef0d9bfc70a24b3051854e8cd9f91184b60991dfcbea54532024daea6f16d8cfd77862e6d88f2b7624a529be8f6f915d91ea36365b4dfa7de46630fe4e8f8b9d74c8b3c93a063f816220bb96d19a606c285e146b3d40237afb3abe4d79457dfc6840adb92e85417fc21fe8a7825dfef405904d6b1a1c126b2c7d5282f0f79af24dce41b801203cb0020365bd6b38b0489a01131657d0fb383e92601ea3b7cf49c44407e44cb3de71f0227fee6d9477d26ca3f0344e0ea507f5bf6a23b3698be8edec47ca01c518608cf1e06f4f71fa19f6e4195ed03aa321b10bee0f1809961e6b90eb1638d745054b2462de72c349472e0807bcadc6a9627ff605146bd1e7ceb9c9d3a5bbcd690b8d8a3c8711bdee64c0c3450cdfeb70896cc06a3ecb039e2e419784c23f139cfc8691bb365134bca841be82f4c60c69cc3319ce20c01c55cc24c02e1d36123d235713d6224925c364bbeb2892382b2f5817af6efc7ef0091328a21aed9cdc472a7a068e5c7bce1469d0fff21f60e0c58fdb1ff827f56c754de66201fb587138b722b806f71455494c7ecd3fe1c3d11d6a318f8b1b902911f34424bc6dc868fa19ae11b78d2eb9bd6677daf6ad40ff4c42d46d26765efc9ce835f3353c657926f1495460c057dc47a8a0d18c3a707597d8c3b959e0e76fbed615d051ebc195654a3c4f6a09d5348b504b99bfa97d9e8948dec8b5e7e7c9c40eb1e9b670296eec44e4203b4a34811cfdf4f8f053cba0178d64539804e85a345bf6ebd0a8f1161a6e2dfd853d97779934b8b4d5e548f43396d864e9c364084c142804e3d233b16b6735d0ec5502ca4ef23b40e7b62426b4f2b4d9432fd9fb940be45a793b1b6edbd8d1be7769cf054d4b72c103ec3b1bbc44576354ed0d8c287be81cf7d19cc1a3054e3a9c5e0052b41cfd3bee138e227eb8232f054d1669262f28da7644a43f85db5c79b7c7876a6d8e3fb62a6c593a207512db92e04e2b2a74df0b23c576e2711026b9f0c2588e7e44ac5effe624d53bbc5bdc1473b1919bd027a1a6ed36121e508bb7cb9d4901e5e44bef02efbe76a5adb205c7bb46f89c3465da031ea98471c82c5132ec5bcb95077d1e61ef862c6f11fed619e4e364753740430779453749c454408ffbcd2a8288a2a6a741c4c0efa7a5689d44f02b6c5469b3e7cb35b39eabed4d07c8a71bac385f6a3606f0b3c0e8a0edf5abbd5d6586fed7afda4e1eb3fa28fc13c31f5b97f8b64fff32ab41f57d2ed7a0c736f85b465faab683097b46b3a36cdda07b56a493758dafbbfa99efa50327c97a41a5f7b091746c9ae92ed892f5da285745184261e838605894ff47e42634d66c7d1be275a8fd2e99ed4277a34356fd0d0a39f9bffde8c7307de9136d1023b283c70adf574d718b86a7e120a0b60577d49de54ef1873a2b85382a9e249f8aa3413195b9a839e1419cd421729b02f359df38f2f3e02f1996ca0aecb5e3eca34d4cf8a6047f3f2bf6310539f506d7ad3d80c08aacde0bf14f3a049abe32245bcf5f334504543dc963e60e12d04c4e88dc672d7fe5daff0af8b27f18ed1eb487537cd8eae9b05f2006ffcdbc5fe96b7821223f3d3b821d049c5d4771cc5a3efc35d77cca1f055fb53b46a17eb71f4ff0142d63cacb98b4994cd47956c4dae966b5fbfb45ae00e0c7f1a87243a6347f30c4263ccd2cc68b265d1eacfe3188345a0a4058a9326254050f618b71b564af82c6fac2ca5a659a813288cb52a2a2aee4a804a5c240ad92b473950b61a03dab8c0dd298c6e8d109bc42ed0fc611b25df013b8240c3b2ca40bcc4ae2fafa7372b62b6f0bbebf8210b8f250361d87fb139a79a86a2e0fdcf46744b976bcddeef9069e6332bf2b40f4aad3d541e3e6d8cf81742bac0bb0af7d5e9f974c47a893a9f591ef46152be170f491753bc30fec54ad42fa13b70690476098c1dd1e00f44a29ed9b15123d5f09e333d6841fa5d5e463290b6fba5bd496343324f019786bee7669530d4004d86b89a04e9ab88f7227ed3e220984269e4e567d91e89956829f370dd6dd0f3649020be5dd2d16071dd01c08fb673a374683db1cf902edba9e5e1d4324a10a48344f9224af2bafb98d75feba710dbbb469bf595f02ddaf5cf0d293f60f06fa3cb645b45250379456b53bbf0da0f2e2029b7531d9e61b39e4750dad7ec8d853e8d929e780f9ceb5e4bbc0c0389ac5cea29e43e7e4b185065245d826b527676fe1ab4352a0ae3143e3bbf93afdb777f9419956840dedf2b35567f69a5c628f097aa936ae60f8d07f8176a0a8120e3044f6e9bee1871482d399c0abf1ef9329fef1e90d0f479d8659879ed02857a6040a1481973b0c8573c198fc3eb940f1acee32b25a2a4b0b0462ebcf3863d865e2c55c9e09bbf0c7340a33058c3ac60590f4a10043186f99579ab775b360d9da7418b892f146033f054c1bd5047728be5ececbe3c2c6a0787323c1515c7dcdf0c854d28472878342cd96654e84e052e1851a9c30006381d592aa89ab8842841d360e559b3fb95a2be6e95b8d211aa67ed840a800e17eb909d6726b6082c516e2f8b71d68745db599b5a3fcb0f64e56a3a4fd3d11830415365741d48c21ad3ee38b89c989c61478f571befc251a740a830dfa06aba2e0c68237bd734b4aa42872bf1d5719c3d18bc7fa27b73ffd090fcfbf38bf969d35990736b37ff1b0c10f958f9df6497c532d7285cce0a27fb0379a76637ca00873f57ee384cf0bdbb39e245145f544843713e9bddaf90e925b96d1b464715d08decf86d527226687caf26b7b46e2f0320cb5e2446882f042e2e2baa0fa5e0d988107cf9931ab2af026e35544c538774d0ba2ad38a44af45a12e7f069dd6cb6f89f6c70a405a49ba9aabf9d74e9c3c7dd9437ed0dd3eb9b7fa6ddb96e71b1c503a63049258d53017a88716230bb6b62f6241cfd5e022f315f0539639f4dbef03e03b4cf636e1277c5244ae19d7596131fdbc922e36b148b84ded67128b0dbc9a457e5fdb45be4f5d7815a97e4d0b70128801843f03790bdace39a1be63cd6118c038b77d4ec341bce5c363233461f8dc6ecd01ec62a66840b3392842fc46034d06882cce0c7d00ed412f2515a5d2bb9d9e34748e697a1fd66ed7526a0085ef9bae7d7de0873f9e1827063e20c9f8ea13c9ad779f9915e75300380e9d23c5107bc410c8649f635811494654b63e60108c87cc5af0f039529c16df1e1163fab90db8305e01417e6d7f2d80e059c154c1788fb9dd57a53ac7ddb814ea1a3b8f30979d9808dc961e872096a0d570eaad4c2484866ed30a0bde26466d7cebd141b7201406a5b288eb46037cd4b207dbd18cd01f11d0d574a6dfd9946f173825c083b0aab7d9ce4b1f08d97d4b040152721a9d91979ccee95923529590fc2ff342d5c55d312198c9ac2abebb5dd8cabafc75c346df0c52aadf601986491eafdedfa1beeb34e9a08a6221c68dcac887979c77f2297c6739f47d60cd578ce8d92cd006c785bafbded9841daf83d86c9e1c446412c3978d1e382143d7a00a3aeb0ba4d7f3e32839c3e8f6c30adc52644741d9f92ffb870c86bb02f00aeb6c47af2f087e3dbb82c4dca76aaa8039401623a7ab22bc72e64c74a834b532d186647b6edb727585164fb68e644bb53db169a1d8c9dfd7c13a21eefc294656b5d8ed0de000a91b9dc99c1f54d4bfc0190d4111c1d33d2ec7d0e816d5610f47602db8586deea37670a59fce4318b9322e959e5fe4bc24b53c0855d657cef44de5b69a92e883feccda23a33cb28cc27c51866042b216266aa5ea295ca092d49099ce91bfc91d6c4d0990557ded7ed3f9f2b6c6227a580e9043ef95fc7140c9b8d588318dc90ea61c941effa49ef1938912e9eece93f0046f885fad3e037266295b7dc785deba04006a032192ebcd23e9fca5cf36c3392a55b73dc062b1578aca6189b58f4fed588204554c4001f64a74e87c5a511e5724a5a52e4432ebd78bd796018e81daef32429e18507437decb03235e3cb0b8236100fd9aecfecac6a0c906462bee7f47ffec8f1a2a2c8b913336bdb568023622fc9ca30aa46c22285129a9b141dd54a5d66d73439cf23b87cedef34a642e813cd4e03c610ea0d8ada1c6da6daeb8684d5c9ce346bb83c7fa02580e6747ed799e0b39a395a84b64bda418b78e5d021fbe53a825736c85b9a8f2f27bdad036ccdf7d346c779953f7e12d887add9da8b6685350ad128a0eed09e7845d66749be6cf4c3f5aee881f1589b07f90927931bd4ec3034548b7353aef11ccd31cc23e6014ae2d566e1bc6dbc5b4447ea35d9787c9eefdc6e2b361581d684c0df16b276c54a4d47fd5458e6ee74ee0f3e554323b85bf6461888bb38298b35cc82ab51778d6ba9b5d70fe3e17158c2a8a38ab55fe6151020c10ca3f94efbebc93638248b4116a13a2117bc88c34d68f6e35739bbf658712fa3aac784e68cbbcdcf634872082d7a10d3f0141a1633419d015daff20f23cc5c91eb16c04ba22d838fde9953a78a4682a321dcdc7c9c68ce91bf067e50080dd7e43f48861e36d5b6041227ff1cec4bcb23bd71f84f45eca53668620f401e70b16f87fb9651af72095ba6a836535675abff5acff23485fcb0d07b32649d19a30ee3e67f957f8db1da8789975bc350432cda6ce06a77676e713ae87918b4abe178853744b80d1399ebed8d95988f5fec52f5f9c1b987baf27af0dafb63b9a26f3170b0c412ff543e498e6bd81d119994245357f7b87bb8468a571baa230e037355320b3a25c25019804edd9535aea0b1cf951b4f7ebdb8ac21246463dd4fb4df70f6a9b0d690cda9148c3022dad4db1ec65a104b77e01029d1f1f84ce9858a072ddc6d8ad91884366d93d4e5a1fac75ddce596e62c582faf05ed14faab2c5d6f3ba45fe57b2327a952333897826cc12fb671b15b0e69ba3f0cef485048c55b20584a3368027f8fb29a06f684b755a58e7ef95748c83a83951bfffb812f204b63cd9f7eced0d1e946b2ce261747c4e87b3c12842c5193418c56e339b6dd86e0646c039f46d4b6e66697ebc5d2b70eaea4abb6dd8b9e4574aeed2bcdcb31cf993ee997df6b815bb861c7a0ae47cbdede729ca66d88cad983eb25422e01bf7b2a2ca48af5ec6492223758098929cc32658c04954d6ba8b71c34e3f2c901b9db267741a92f876bf6549cc3eafbc9cc19260cd93ef8fdca36c7adaf5fe2725f4a7f5c009c6cecc9365d243c99c872efd52e723e79f15bc575bf88c2dfe060f76e13802f9d7697f65ec6ed8973204b69708522a15104032b93676cb7490e9c7e14a48da24e171e4fcd4135f8098861075a1c7ac94e8443a510334ed45f45bdb4f16f070594e6801087dfc1807878ea8028e08a55d3713532773760b78ac43232439af194e7ad5f60dac7e4757d66365039223aaf560a4bdd09927f2c20e6e998dd435e707222d112f29bf0e2714964f373b9cdb4183b8993668d637c119060194fdf22c50f310fbde6a1f8693b0ea7012b832509f35538f1bb09338f8d79e3a3f55ca1426b71b28de08d36e2d19132a16f26e890c2cfdbdf8bac5b0f4cff8595f0f0a845559b831552d6365b5693935fe9f5cb64609a65dc3014e1967dc918a8929392d86f74c5b0b5c2e1d6f02793275f57fe3fa212b343b87858022d168bbe7a5317ad6f13a20ee0c3febb4e3c0a7ec7dd2718f1e8560001986ec3fa646e345f645e43337005f4780583842f4aa567fb8dfb7054109bd7298d44cfb09c0741ce44408cd48efe9fe0751f2b434f2e1716bf0afe23f707d37be0b0622908920408126822754a3399aff92328b2abc1a03b5144ddf1c04e29822090ce365ade6f666ecda580abe1bdb2d711e0bf631e28a962b64624e1edd4e899854bb883605ed2ce98e33e579ac87c1d8da32111d70f8e9adb36976beef87ba2d66f43aeb77fb47337635653c71a397cacb9857412aca6cdfbd1415f51e6a5f579f15d88fc5a50d1ac8c81426ff1f868c0f3a7470a7475a4075143ae6fa8d4e08fb05a458bb4ab524f56db185c8c89ee32a4c9976123e7d4862cb3997960eb5d76f5e630cec38b13045c7cf9ff9ec564ade46c1d20f2d14d63f915ce70d89b5744e1db47e47c0141a58aa8e0c33ed787c46e4196c92d35a3b77f70fd4b9724717677402ceb78ad398cd0f69eb41285caf62c8d8e82a477a264d85aa4eb653f34ec8b65530a11abae92d42a21598293e348b753ef12b9d0881638a8bd7bf91672e637f784f62f4d81320f059b23c1734b773796246aa03e5f740b57989125975ddb5e9f06a66d2b7285f3e2be797c4be50ddb3c7b314598797b37f4d1a0fb116c7d9a03a3af9b4e7cda16faef550f3cd9859e45dc6552aec9df84c90f231ee382bd0b7361e303189c8e1f7f2541bdc203af229728e90980134a87d930ac85b5759d8936a6731dc6edae4df7685253af0bed37d51779f7c33ad5e67e41faf8d3212e3127efd11faa64688fb92004858991736f1c5cf81a4a855ac86ef87fbbed7decdc66b9a9b764939923ede78277b7d19884054b3225c97d6e29445d71c66e353b637c1fd21494beff328bcf4d82c05d6c8565397ac03251f118b95f75da05a3520a666e9eacd6f48c0072266706788d15c1f42610ab766c6cf928c672f1173f73b0dfcc89c94bc4f722710c2274b4d59ae96a564a7d7716a7498318532b53bfb9e75085ec542e0d1d63e73f5702694e4d3e95b8fc1c7050437eb652b64d0fddec05b6893daf3a137c507f3faa895016164585fc1a19dad41c4f26bebc5b71e61c853f46c4b885a6e7fc1387aeb0b8743a5c011c99c4f323d741a9d71060f2da4ba09a8cce4184c80f0934195c1788c1bcf8782881840b1887598c8abd0dddec280f89b1433dd95f81d7e5bf6c9ebfc0ce1c6204f15be328672f9c72c1fe13273392333d6f349e1ef9bb5ce4e04b98c718d6b7e1f275105236bdfe24bcc8e2b69b979a4545451c922ba7479f942cb2b53809f30add817e5a0413b8bb96f9767c7bdaa56016e97d8964ab8072d5910598b861a9a5294ba142f6fba01f05fba8d4b8e9acffb60780699146f7b16a24c0835ea1b18928b12996f5bd5cdf84089ea676be49b5ae06d77e84877f61d7e8a417f75e834c8c5028753d41538f28ac7ed99f8b755b639fd18cc1a72f27200804d3acf298cc0aafe4f1aa7a0476175d7fb12636b97e56d745e857bc1a62ea4f84fbda7c3a5bb51d4b788f3da0c45346fc5f10557c0d8c65902bbe4baec89e9cb93ba745d07231b904e4f5d144cbc6e3b126291b2d7f94a00edcfe78a2a8ab43d38101d30c932962dcc1d3bd933e480f5e612e17614c2b0dd93413d5114efea48f753d75fef28715547f60521977baab92650de04aa3a9c5a8d3cf5517d8ebe5055cad44fc39ba7267899e2ae48245261747a2b30e5e8c72066df9d9e84e99bf4a553b42de67f834e56130c4de0d3446fa3c0d43b01d68aacf3de42ed5374b3c40654487a75f35715099f7b6a0145e7fbfa66757dad6a7f4f9b40b0feb92c7c90334ad80fad35f34e10e46443c730174ff34ec5e153b9136f1fe3c2b62ad5dba7c14692d4b38d710ab1e385467cbac44b380f8384eefc01f1127ca544644a326477405a8d3938088d83954d8d29a62700b483c3a208359888452e0060a4d27ef59d9bfff5f6463f24906743c24d052c8792cda97c33a373644cbf128bed7a47b39c4d0cf6309f6604ed6e6f0a2b219b9931c143b9fbe78fb02195d6d35b8ccb71799631270ca9a069c61716f2bfb2decc26e1d8746d6f133589b04811171bd572aef1128270f84cf9400a3ef57f5303a21d3416a1877279a4ef690372cac5a007471551c5281b1f3ec81d4bf6bd1473a22494431ddcc72c9c13b0f4e965fff33e3f5de60536bd9223eba28fb562b81d880715a7d8f6184056e1c0e6f80a32fce9811cfae9023937fd6ab0f6ac03527f47c90e35b9d0bcf9717bcb02ec27c6a9447e198f74a8b22bfbbf5a8268d3fc75d9432a2667da3edce328c53b5ac67ed5942dceeea633fefa88fd1c5c8bfe806ba0fb5dfa1446967b8082193d37b37d4bd314ba51ecbdb64a81ebb15195a9a7ed9af22f7f0762e2b47ad9b925e8f114b626d01b26f47c1026ce19439d21b854cf8e759441b8284ec0c669aab1fe6fdf6956b145bedda876198638ebe4d3d883668852bc10c0a6bc5775d737fec82687eb7bf1b765881f9a7eeb85e53d6cac2643652a78a1d60ff3518501b69a8d6c1abf6d7dbefe56c4f95af17a5c0cb7106a6d2e8265ba9fb8be3b8aa8e9f1bf5abceebb584e219f74c0b50cbba14966475ab8d4ac7f02a114d00a2e4ec2b2e21fce0ed7ef98ecc8fb1e4a6eb68cf85516c9916f24f0e6c3f173466918f5155bd958ff5df5e83d02912f470dd1a13ebdfc58ac3258f893b73a42ded8f4422fccceb5d9799b986706aff05dc1a130f33d7898243e23073216f4c48256344c5baa2fcc6382bc24ad1f62353e9a70d73705f5e9f42a65e99223521c5a87effd8c43051ba9f60ca7e973001c8455477de41b56a82234ce76edf342ac1ffb211c0ae1eb4c6f267453be66522e0b6a3b3b5139414f65a467d631a3d263fbbee71a3432f9ce42c2f085f6d7af8afab8d5261d9b8589418cf71fb6cd5b7f7b059ac429384404187c6130ec74b922145d00c96700353b384e8ba7062059449c668db1f524344dd9de7121646b1dbc92838068b4c46441a3c353bed07ea77639073d5c3fc223928f4d1bca27bc3f0e356ef501a58c69a94d128dfd8be5ab4b3f59ef7a2938c7047daddb022e11c54a7fa6f457956afce6cc5f231a261b93d21e7226dda2176a18900c079452426c7bdecafbce7642948f81b82e20f147c75366716078f0d7c298ba572267d87c4a120813d81415fcb7703d293cd4f846580fd29b3eec9aa4e8065aefc270382dd1739692eba50509d64238baec3eeb929bb5fed5ccfcb85aa9341811504634d25516df66ea02f09fcd117147ab95330e82bc6bb04f8cd47b946ef73c5091342be983575ae8861b309663d451d831afd5afc865cbda9c1481914c437fff2d207da0b5537802aa9f84c812352fcb4a815e15ac816a78a16cad426de2289d238345b39406f91cefb4d05b3fc561f7d246a1763886ed0ffdc826b60e5ed3566d7da7ecf040be9a04af12531ae7728fa460bdbe77f8a4d85750105298b6110bb2002123da971cb3cf4e031cf7cf0ea807c300471652d79e55452f88d9c15456a3a66ed4861ba781f28b35bdbbc9448b9391dafc44a7b42d5c874eb1d650269c73f374da515209d44831dedef56b21c23dfd124176762329e03b11a984f5f100be623052d014b3e48c63caf06331832235a5007a197f02f91c67131b6ecb6edacccf952075dd34c725059731c7ff27e2a9801b9805822c5214a016e7f9b248de34d9f67155b0ebfebc5dd13e06fabaa507a267c8f0089936eb9837c7ace47cdc19f329d514e824d051a246ef8811888d451b5f966f1e794680726890835c4358b35e98ab9a8da67770fa7142473fb7a8a10174e603adf1ce9465067c6fca16148b6744ea55c2a7c2ce09bd45989ff8a208ee0ff900f49c8b1ccd56c772e9aed454a629f0674f822e3612f5e77922da95b116c8ae4bc74216cf0a66d28ca996db9d74969c17a074549c5ae9d0b2ec9f8be416436d2e04573fbacb47cc0140155297433d7c44b2e3e26d345e498593a73e96fa0766c8bab3f05daf76635320203a9033b1dd66ee0dc9e4a3ea6be1bab04efdd3524e6efb99a9a70a79fff0a313539aae4b5838e82a6f0190985b241def6e349c1174380c34a41dab23eacf03f5fedb77503bf71c42138096e5b6cfd4ac19dc4bca7b427c67b98e14b5a67412a632659823516dbe70b1085cffc0d63a9b1db7dda6536dbc7097dec12c4622dba600f829a97d7356cf21738d8c4f893435875d297663976c652de196606648642a90ef2d9418bd54a52911bd74b06ff4d43c84dbb8826b00aa17a93532b22817e8761f709b217e8a277b164040266fe4e8876ed5abe596ddb18c10cd5e8fed763bc3481a5f6fe0c667716edd8a9282a245957560ddc221d1bf2492af72b0d73a690a72e422f808be4f1b668d9a496c482dd30b7b2e6bdaabf3aff121b61c48e859df4e9ca61b02bbfb0d8b389e3392be86239fb5c51b6091f2a7760cb41a2ab759101613f9004128e80f69f11640ece7929d3d70a42979444f5b599de37133f195eada4b6e770de049bfb0748abfa569126a8c19fb0cdbb8f37a27a7e9ee49910d3123a5e37ffde482a411b9e64ca229898fab80cb6b28e2beaef7e9b60f54249061fed220122dffa8dd8eb7b8d851b53e13f655404798aec737f21d4d34555f1bb8af77360c30d63f23dd58ce612f6bec03897037965edb9a4fb3eb1c0dcd5e12d11a0f9f97ad5258bae08a51d7bd602339ca7402424221dc16a64a7446f00508eaee80e30b3514a265af7e1071483c993082b0cb757924c26c816af8361a60c2b7eb194b7d565134c5d754d2c928e96f2b044795052f04f779c9d6e01ddd04d71403e5dfe4492e509d3c7c3490de7e809f59b5f6d918abb802ce6b6047d94b836696b94ddb28bd2084fc81345976a08be8f2c9ddbe065a58309cba93fd3967d61ed176ddd75e4f96203ae37b953bd809be84b7c87b52dce993c8f897d21bf723a7bf4d227e2dd0d8a7db4f08d3f323e5404f68fe75fc9f2f793a24613db41d0d6267f5ce79158a50c73998a2346bbc63f72276467900131cab98b0cdd48b678566fd894a55604d61cf862bd693d9596574a39cf622a486b5971e7b377ce969d74ef9ffb4e65dc257484e9674900f84f022acd9583aa8618b9baa5e116f032dc2ea58d93d953a30dd6142f4f0905a81cb5ceb889bb3c5bb6f92e5aa226f98dde8740e5117de79f33c461084daaf4a6bd66f94d642f10093f084290062e51a0b9158ffbdc03e0d090baa8fffd6a78cfa90d229c47faaa3f3880ff4404821aa6f3a20af460952e74875ffa019170acf6116f04ed889bf885f02422f14d6cc53c61219cc00ca6810954ddd469e6e75859f6062c9b84d4aaca7fe8205748c1f74a08ddc44a71b1809e2be37f962b50531deb96f86b13abde05b17d7d25564e5e5564e8f7896bfb4e4867c162705fe19298f683d4623140a422a02de8d84aa794f7e92dd35cf3483e24ebeb8cccc520f3ccbb94dfe891d645c7f508b62ce2f3ae6528535a6e419ff0b979dcd15b4c04015a68b9a27144008624fe9dad8cf83583d0ce099398b06bd94ae8016a36a7c48150ef3d42708d7bd9c76f2f33e0865e18e1e77f83fe8c4ead62663501c1be9f769b9e35471b1413fc0e104cb523ca05377549997bb7b420eef4539a749a22411844a0261da19b1ca23530a805025a449166c9eef466a03290e0d07949839a3df42f7fbee9b36e82f83e05516ece062b1538e45ea778f5baea67ce1fda009ae6e2245f9aa09f0e468ef12a50a514bd0c22815a9fa82a4fa72713d583d6c1a1d3a18935d76987e3484889857cf23abc24a3c4ddd40c4eedfe077f7677e0001ab9973db837c3eed5faaf7c13829fd4e613962feff5c5363503e5d04ee95200612d639ba3f9a138ba06a8b83e85ee855184e9c1db02cbc5c69aafb05751c67b5293fa894f6c6e399df148c6c752e3a54f11706e4cf23c377f38150372f6034048245de687ae7a4a00ec97f6bdc7610f38a4d0a8a28a563279a849d3fcd1535071669658ebd433ebe05d07883d15be1ec20d37bccc72916df8bd443a2dc46a467f2353dd5ebf48f990bed27adec868f7a4ef48f5c5fd7edbf55e5444ee48d4c5c354ad9de001c56299cdc3cc303a09e90b89c7a05e358ae119b24da1a825031c70fc4614afc777d2f8994328dde1a0e43f9d8395cdb2c481770ec1ee03f1784e3c7b65602857aae5bcf5da57224745b208cffa27065cfbe980479163d439845fb4e21f36aa2e0d335e0271e766bb4a95354cececa8e5f91616f2ae7d8ee181f2bdcd08a75af44afd1b51e41c506f4eb6ee883aeb2d1270e218dce5a0d1d4e56be1b7dc6d8f95d6d125a4de1cbe4e25036388c9e34fa4e184c3ea054dad2930beb13976b32b46ec62bdec39e5853b7892fe0a40edbbaeb7a0e836bd5072d50ca5ea5d3a97df78125690c87fe52394b5022187334981fe4e467dace08a7522fff238fa7bde02e8b67ae0bc05554c10e0b36eaadc6d727200bb8f51b56b8ff08be269adc53aad98a4dca99385d7f4b3868b97aa8b248fda2e17f2499010fc209c195b67240a702e1980988208f0b039e50d3d52a744fb4f26f82f9ce440c5954ed6fb45e573f8f965950556d9f3c87d8ef683a2e3bfe2ed1582d3cf1bfed272ca0af9f16d3af7f9173fdf7bd055ee6381f21c0c627f7d5409be0b329e0068b445e4968c9a99ab21bd34bfb9151fe565f9ba876b5a40cb9fb6dfc29db754848208740e6a38a61b02144105ca8566061c9a88ff4228c82c8437196a9ecabfa87fd90fb4ba1eb048acd98f4e552cdcb8afa3b16f263d973db5d0125e49d6717be1460e47d3e95494cde3d2c368aa36de7c6e7e99126435d80b803f6d2f5b085424078408f14ad1561f1306a4f8640e67f9e2b83ab98527668d9ad91e88b078be9558aea6801dd47c92a98f3071d2b1d0cce0c99fedca98033df5d5ae6dfa618c13cfa95ccdbdf5072c32479df36be01e3bdc7bb39c140fc5f42e1a5d1e6df7b8ec1513e172078fc754a408a791c4c7a2a684efdf63e64097b6d8def0916c8e27b921c1e37a019139e52efcd647fe2947f9beee6e02cea9b6ea3e7ab8c260a6efa3d46fd8cc72c37a6db0fd46dfcfefd38f0758acb5730e42253036e2073e37f287f01cf03568a1c066a1155923cdd7a7a451547e3c313c061798a7e6bb4c271d80f046060ce3ce7c3cb30b2095601f5c642cbfc5f46095520ee30e7208456dcb54ade3cd05568bd6c6944f3c26d73d6a191fdb3c2248cce336516dfe467121891c610c0672008c8a6f5a1975f1d05d6c784a841097d0dfab91e66fc3d17682a6b4d06472516c2e70e7290933c3f3fb4d91b605b1dc61ec16030f924e7b8fbeb705f663cf630001f66247e12ce9118de0cef0d6df71f8f33af6f60b87452e5db3865c15b2cb00e4e121953fa623ad7f7b2cd9efe72f08a61c199c1384ddf7af655c2a5de53e70f16b370d86c81d39de0e3e698cf3680f08d2d96b2ee484617c4aadbdcbc0582f30ce960f3c1fe3f9feb4534df9c9a47181d92e79a0bd9327d56ae8b78279b9c9400f63d33d5f98c5affe56fc099f8593f6a81f4581a2d311e2dde92215a5e9b89b6be152062cb3b6efe4dd815af8c2faf0661933e01b162537af302ec9d7e207464be70a0e50bce98f4335f2cd0d3e478cc427b61fea21cc2498469edb490fec027629d8f441eb24474c8b6fc387e56d46dc7920cc578a436f81950946d3361ad686fe49df1fc84c9c71761e68ce2e4fb04d986f48da6dfae601c82b3f40a7f95397b092104b53ef689b422786b61049303617c52d27fefc7d660e4a24befae73872159876fc6b6893032c24c761fd2b9ca27a1efbddc4a89645fe1099b5da5bb43cc87a5cd2c03ff71af4137c834b5f204718719a74f2a156977884571f2e5798e5afddb6218046f1a9339797e7d68f5c6d2a31bec86b30bd9755ce67a29f2d2a27e4be981c64d0e3faf91aecdb26967856a14f5006f2211d532bae138e18ea86ad766db39bf030bef261f57c0eae2bd5e788ab0378d167d8e429b301514a7638cfb1cc1c4dcf0b86b93cb83f8af9c718a6fde3db39bf5ff7ad645559ddf3d1bcdba2f0d0eb16ea804aee18ec54173296597092711243b31c0d0d226fca90b8580d20825f2b529758311b7b8ae7b69980e0dbd4ea35a44a25ec02847c80a06f4b76b6d82ae73eed46f1b1daa0f47dfc7d13359c300e8e2bee0a710453c505aa24a54a646ff8fff6fc068179376ab1ec70cbe7c941c12827d4f95b58670f7a1ee8af790b72984d6b1fa1f94c72ff2b2e4d98df0cf59e38297308a7ec705da97d9dfdbfcb628e8a11164e9ae701ae092c755ca8417d3f761833d560e55af6c5411e87e267670e09178d8e4e31b93255bef84deea57118e20a0c426b104ae443cd3618ea776ce57bc8672e70add555f7cc416fd6df6420acce896e6b274a0bbbe541e2556f6e781d339a7d2f7b1e3c5c39c07b88bf75966892bfc12ef10abf1a0d2048199964159e61bb0128dd02aac5f51de349ebab9ae79753d294c1df9b445183a43ed118adc37a955142a3ccd488c5fc94dc198c971f312ae3814a1cb0804d134978ef7eeeb7a03546f273d919eb78e6f45c17fd19d71b66a66aebdfc58afed68d579d307e5b1a731862cf4eb762f708f28fdc1b915d60da7f74b2280f71faba9ad6c20df43a7cfe7ef997d1913d4474f7c8738d5294f274c158e8c5abd50f8fe563b4affcc6e058c425a6a4166de48bbc3952eae55076f5f9144dcce5fcc191a687f994d5103faf0ca3eea892608ffbb1d77142f6af55595858a139b9900837fb0076227ab4030b592e13ed649e9a0a3ad43125a84de74a2b4b971d29543b49003f9415c381003268f1c34d5cb93658a19cce37fb821ac5a515b15e10468733f096e2ccc50c3ed9dae6c4c3b07c544942b0030d167909d8bf16248e81a1df4165b9ba0800751caf9ba9c9436c8afb71d6edb0d642866307d880e2c09d67196b2218e46bf85730fa43d3ef64532f1e9338e22813dd2a66db7f1d2eb6fd96821fadd9593ea9c0674792023a8c73f45cc8aa489365befe3f21c9deb0a056920825c68287677baa3bc5021a6976a499add0762944e86b55078ec1fffe928e4d615eeefba3f11976b5419ff00b4203539a20d0401dfb32603cc2b8e021bda202f07d5e3bffa8fd3743979af9ccfc1a611dc0ae2b0d7d55892ed652483aabba3569b82051a65014aa1bb2db7c78b202ec74fdb2538ea30d4b3706bd80f86ecde083e508bd905db367ad7abead57177889efcc0a91980e3737b15ff60e1890287037592f3bcd9533ad51d64c6cfc61002a2fe6eeed5a98ecc8737b1257f150519f01d231f691df1396b097421b07087bc769427475d08dd8f7a846215d926223eb80588411c506c4b7f07438a62aa7e23225010af5e566194af56f096218b9b2b8579e47aebb38bda50a499a3ab732da8f99c760294d5cbf571c9cc25a7db378f4c65dc2cb9d98465af1676b40fdbe3003b26c00d1bf36adc681984b679cfe6b2d25ca89bb33bf72b16416f5ea0232791025d28297ee278c0151fa2b464e6764647474eafe13d52a22a649f02cc7e36d2d64d6dfce458dd907bc10f2fc87964b5c5dad24c30b009ccd7752b770ec7f53fde2e7889a1c2112af55572c9de7976bda7ce7ef6cee374ab0df0f4c0593acc8fb70d8d9a9d450505e7d4252bb563c43d32accfcb5fee534456056e6b83c06c0fdacaab5df13777f88dbb32806e5480ae36e1b27eb542c892deec60214208cd27ef793a10da22fbca7fcf515400f9783dbac3f7008c5210b092b2cea5bdf440d28245684f99e38c6c9ccbb7a2a4051edb137c7ce6eb9ac50e3cc855cf0542c642ac8581c7b254b2a35b36001a1263fc334865ba744d3116381125691f84310eed29fd8886c784cb4f884dfe3f0400a937f8d92c82c034c1abfe5fb51e619981994cb5b2542837e5ae92cd5865b8737997ea428c210612fac62cb0be60fd307ae6ccaad1b1aee8d08036fb3495f0dd5b1438164fe5eecf855b6dd9768234e9f07e8b02d69c9d19e91ae7ca08fdc7308482626efaa890223bdd4224eb527f161826d3b0949c2c8cd14cc87072bd70c742b311656eb3dce281001ca863add5fbe9f87c7793b3d84aac42fdd2b78b8961f441bc92257ec0351e67127799ef70315f7902c1b9e10152b4a686ce6b03c82e66fc450f2414198f7a76011ddbe825a5d981eca43d7190ad1547c745fcdefc2a01e04e7c50f6a0fb05cdd30d883ff9930ed92023e27f08ac7552a00357d9f415bec1bc580959af912e72dbd4bea7eb798fe0b5a14cb23fc3ed89f1b510ed426b38fdbde10a45b1c0cdadb90668d86d4bbadce792d6ce04d43ebaa0312094cb73d89e31dafc0cfc88456d8bd6325be9aae2950404149cdf2899aed3bd4133bc96c44343647da4eb4638123f6380c51303ce97621e815307e0d2eb30582c7b7c4cf757c8cca6077c6407fdb03edc261799a4b3fcd580e923bf7979404eb0153f85c16d4d621b4239cf5cf873a4490a57015ba799411bd68e78f924ed6bdaf71d23421527108b1edf437eece9ed48a36926518f29c069b3fcdb5395f1af97ae44019298d0023bad95f8b7dcc56309fbca05e5b71047028b9206114bd38f4de08cc221ad19c7e5d48df71e3d130c6833cdb20b71590056933c36fa76fe80aabc23e65391d780b7035b4a2f677208eff9498feba0f8f1de2db8bb73c29e5c856f9ced13fe6e5ef047caa4e11a8ccd62ecdc0879da7630605c6a4f509d09e864143ce9cb750823eb3c0720ea7cf0602936a6b0a8a7a5be4a3df5e0dd003ac8bf7309e538c499fe90f1a26fa11d4e9ecb04f85f95732704a7dd5bb9755fea806d62bb49b8b299d6ee8bb63d7c1de556fe6a639a430bbdc5e4407110efa0234b76f550b283d634f5ca9157c0459fa9f17742384e67f2512134f3c5ea818053d754e2f3dda7503e877575465675eca29551f2e8984fe6f162d028006793b56280eea5b2ac755038e813dc4b6321d4fb24883586bccf119acc4cfdff0043d5f298976f578eed7cf6abb15e2dd6e718ee1fe42bc7fe6c37e68cfaa046f88ab635eaaf3552be225bab56404223e1b4b5b3e559af2357743bf1bb786efe3dab12226fff172c41108555ca76faad60ce51c4d1491694a9eb2de8b6ec2050f97a9bfb5a128a31163020fff5fcf2a279c5f10d1e3e693e94f8200ad8ec626ea2e5a118684f00cbe0725f25488530c585f69b2f3bf1f48da84121613f312787ea8dcb2d75a2feb79aabaa2f04b26d5b6b055413c76b7cbff8cfa2cefef7d05aaa2ec67f1be63319a2366acf336bc29ae8e5a18cf981d88bbe1d137700128c3bca3d41cc8852d6ae1b2e4d8bc652c94e989e022ba612d4a8cda9faff844785f4cb2783463a2f6b605a2145a866a2eae4a4d0670d23896cfba9b4f11b6d18043db92a6d1004cd3c1fc7734d009e267ae7d32450a2f81c05af27673f4235122fe81416ddbc55c0e31dcd5f94b1a53f896cc8e481bd764d88aabad612aec286c0602257285d293d6751f4f00187386c66fc961bda366f9ce8de557aa4232b7eab2b3e802e13cdb1af2aed93cc0d9ee24e619643f14de925f1361fd48c8ce5a58bbebcd49c6f75dad550e8cf446bee8db19b2b0d3fe151df1cecc48fd72368142d5d56449940a6108ee3c45159f4a12a6bd2285ead91dfcedef2a1becb885c1f8460028d45824799d5f090fece62c1275bfd34316ca37cfdf30e6039e66420ebbc73ac8c7a2bf03a22d7120c6be598a511d51c1b953ce33de2fe166a6beb72c19e1024409a752ebaac2bc13e00708428295ff88de9c9a9b5432137bfe7007806433bd7f080f1cf2b564656911838d3b8b46f774739dfdc0e0fe82c42df6d5cac7af5d797620267d1df2389d0c0c558e657d49e1465f14eeaf3c518cd8629ac53ad44daf5e08aeab38848498c8c4b1edbd8905f23955e4d4d043e454d471b46759a368780dd3cc6a39e149cc985725517bf60e0d148e4406857380c726e1b6c2355a4997f9d88d53a1d9ae770b8265a879b51e7fbcec2f737834503b89ad4e3375dbda63eb6fad621ab8c31fd68324dedf527548ad9431b2964f2381cc2dd079a2ad07c95416da55e6fef81b762a1621f5ece551c76a42d94bb9113c62ac47214b560091983dd40ca8d22efcf89f43ac422ba6f650eeca97ea8179baf368c2b84cff4ddb7f9fcf488f8362e0e4d943cea06a648e52972e19ecb92afcf8d9f9bce070d284ef6d2b972df4057b717ca7b6914d8c44af6495ede90afb67dfe7f7b8f754e96f8d1207abdfc14ba781c0e59451f120c3b11f6c6cd4524988ecfe38d4eccfabaec4b56437b51600268c2a7665caeb6bde300bc43bc97bd20341ee458499d0dddeb020836a893f163967e2a78cf5b7771cc859f96571dbf6022fa6e3449fd325359b8b016625c731071290236686b2518186eac89abca50073eee3126d1a86e0e6a41cfa6b36c1c832891c346f2b6f71c49cfd91b572ed6c599ae3a72efe7bc3e7c5190575290b5d7f7b730dcbcbb57b76ee76d28422761b342b80c426297b5ffcf66b9eff4c8be00c7a8e9d04abd0ebeb4a48ea5f06dbe95026390ac102a257e8908c2f1a20603d9852843f03b9e68a3dd06994edcbf5bd5cb3db855a5c713158f67ae6d9be48cf33ceb823353e83fb8cd9fb521b3db7e6451e53a151eafdeb5771855e81c541d778d1852d7c5d0b1b4687d4381fd5bcf59cb150c1ee4abcbb989151899bec2c8f716c6429e18bbe8a12bfc8cd73ea1bcad10c4bafd8aec0db347dfaf83b13149c2edbfbcccc4a5f90dd6f668b4572272bc4e903a20d9769bbc6320dfd2bbb189aee1d6088c75084b69ed453c1482732562b6b607e91d6073ceeaaddc1a3fef6311812737018f8946da91925d06c2305626c0fb87f738fa55589cb4faa37cd06d21355feaa5b6d4ed19a0c62447342f85c9f51eb7d625848ac1fbd89cd2062c9f268293d6356b4c60db384ce71d8fb1a04caf44b93698d7711699a39e09098c82dad6f15a0bbd88835b871fc9afbf6502206d145a67277633e59438af0ec822bcea89b59fa8f9703596336ba03859383d890a0587fb5377f0b0be45e750be2ca7d14679061e0b7d6648a03a2fa94687da61ff806831a2c10a38aa9250a78b43053b5baa1ba8fc80144410a0adff0333f9c35171d963279331d79b07a38c26697cf882772d1959c7d6d86d72fc9ff8b2e36a6aec43637ac2d7cfbeafd647782a234ddc19ba67c2e39fe021558c37e9942279b9b1b0b165759862da2c1cdb6db57ac9241bae6e0a8c7084118c9640eb2c7d7ef2c23d04ec9a4889b3f22947cd51cf8650f8f008d6047d40009d2fa6dbc4b5d5af993e819b46814aa8223dbcc9cd4ca167a7b106341c3b24e6db20b66b07b86e3f99683fbdfbe0f37d905c6b1e3eab8acdfb454de92cf610c9af4396d577668684099a67b0eac901412f6222ca64d71f4cf6520df76776d64c2d649a90cc79ab4b3467afbee50b4b547291b5754f11b397a2042e4865f5bb83d5d1e92d64239c041fbdff80a35aac927f9ef675e543e3a5d6b89f23a4d6968ba3089161742e2658367197773bd657cbb8b52fdd4e9e46b61d0aa398971865337ad976969bb44573f80c9aa353d0c08711390545dd7cb200ac07e6cf55c1e10534f726dd715a77929000ce31becddedd57526e442c4ed7b2d1665acf625ef8dabc38aa57c37e42bb36c2bc9bff359c91f26f82d153fcf95efe1668f98753e7bfaf7abaf8a5cc16ab572b2e1a559c2520d7c5b68e804252aec29f773bbce159d85d2cdbddd391e5eeaa0e291b838839d6e24ef2aa3d7201b56b345be373deee2c5772ca4206481a61b4a1cb480bd0e1dbb5d23580a5f768b34e1e44cb51f5d3861d29ad5cbbb33d91b9c43c3c9e39ed1cc0d996f46c757ef26b307093ffd548e00d010de4837fc94589da816559e7cd47ff24cc205260a40e629649c46937c397f84cef25218049034b53ac6196eec49e2cec708644698cd9c2a3183796b736d64fb9a7f9f3f3f7eccd404cc55074cec02fe741497907c16ea4b721c7c1411c4328fef7e15a394bc68cdc1120c25b4f1dd76b74e96e12c4449ed86cfcd7fc8855416d47962526ecd75b5e367b3e760348c595c632e2109fd1ec0a1ae2a06b23b99e9cdbd7ebb7644a19a20b65dd6ca0baf2f40a253c749b888e803c6b3e8803def9b17941359bb96bb4e392d16ee91a15090bd42e915bf9bd28721505aff4f2f55f80e7d6868d7c1340374bb4f33aef6995904f641ae8d0f0be61dcc336b514bc24368966795530648ec14e277b7f3058edf440c944f618e8efb5b41c96071e11d32306aa80492eafed7750dcb92307349de5bb691589bd85df795fe673aaff615f526ebb875bc515eb3f28ffa50ab3166bfbd277004f37c6b24a0d784075864f51c099f7e6c03face6067f6bc1f7c159abf48863a604a8a2d242c9ff66c9754c46b7984b9b27ac027f0ea7eae7bf373f44b59609353084bffc351a885e48e347398784c90766a6c24cb3b3226fa49a87e4871f44ec1e306533292de85c6badb1bdfb90fee0bed895e01a58c8d0f8ea4fefa1ed56363eb54c39a4ec37ad12598dd0474fa4fccd7d2b2d746d9ec59670721380fd350a57d0ab208d61f0cc67cde414ba09cbd739ed39c1cb911cdeffec83aa81dad9680cd06f5da50c037a8e4593ab7cb8822047fa07080673b36d1fbb96cc95355d9665b7247e652ff05c70be0beef914c850334fdac8bd36790eda55cc3a626c41214869c18af4837309b88857264dcdfe5d6c01532df12d23a909ba09deef703e22006dbae42f4e5f2879d6a8b198307985d61fc9ed04d615b86bbb206c4ccf68792f3026864e11a9d9e7e3b81e0457efe8f9903ae14503f0b1aa5bdff070a9c96e844c98c163f4a39834c6210d9f8b429d0eab9baa4c9c52d91bfd639f874bc91efe4831d1000309ecdacfcfc9df27450a4651a8583bd02f6684e0545f443372df196d3bddea852009fa7d1edbb16b18f284c241555808645c8d4956809a02c93c01dfe3ed14c68c7d103c3239fa0175cb05602e1bb8fbae6f9a272a5f13122390f6030ab395bb23ffca50eeef111836786b7adedc8e6badef21f01ac74324bbebdaf1a2868325367176580afdb4184c52a138c3d30bc9d388706e7ea813029883ac99e9a01bcc01969ee661355c881294d46cbdedf039fdb70499a04e250fd2ccc0fa5578b05ff55e55de768ef348499dbf42456a0ce5914a9546de89202ee192442076ca92c3d206b131fb91a713afea1974c83d7aac2dfdc69940c86b7288acf7e11f3e31a3f8a5db611cecd4eac63ead6605c3f688b451d5d9e45ed81bdab960a8523960823d07dd0ed254eab1a105a33bff355f476843c3da499b7a30f3a8cddf1aead6039baee75ee7097bb9ad5669f7f18c2efe114fdf805ad29a21e0ec8d61e0e9976dd2ffcd4504faaf0feb3bda6cce4fe9659324e48b33fcae4da453fd69e9293721409ba55bb05306f4c679fc08d7aefb973f9b4c4bf469dfdd37c3b42629ef511120dd9be98f6aabfc689f22f84caab2b177f49a8bf237e9be3845604a3b08117df52aae8ef7551d5d237602b8f072b02ad1278936c98b784ae018e9fb3d3538a276fd93bb6ed222ca5067da0a4874997ccbc867a7f0d68a74b58840830a8d6d6005664a532d1e109a79afdd459c4748a93139b368e2d6745d4b630a5ebcecc100121975adbf268cc63424f0a147710f1d9a951e8c5191f55c61493111711af77460bab18a84cbf3f00628c08802088cb15a198f24056d5c67d95f66b492511050b65a4ed163f136b846c322d4bf8c2fa201aa4b0cc6a6875089b8aab592c82ab23460c1f4199d21b664904fd13d878fe1bab75cfdbab4918b0b2910d785ca52b8b0c7bfe820407ac185cbbf1ef8229aa3993c1ed4f1bd11e649cf0c85af2eddbfaf3b5496de5b6cf0860fd0315adb4605d73aebea6446fb50ce720cad6196c62d73dcaf95a718bdd18c32c61b1019f6d026473c5eefef551b0d23966bcc8e59768442d91352536d33781c651389649821c2a756b64abc57b9d8a9f81d8ecdc1f2ada9defadcdbbd8e447942ffc3e98111b81807cfc2a5cd27e22150e02d556ce04ab4c5263af6b90963cc3d979ab17a5a77c37a9feafe3e7d88de2a71430df57a03aa49eb88c56ff6f2b43a583ab64665b418fb485ac4fbe648f4f1b3aa872f0a52797aacf6053be31e350c9f5620f474b51b586f693a5caf1e2961719e34db2e729c41593815bc21a3ec81cca3b650cffaf5dad4ac42f7c44ec20d73a732f561181bacb5438d3d5cbb4c02c0a433983c72953ea62814173b1939d9ed342c9408424be65a1ad98061327a5fa97cb5d0f255ad873a6708cc011b7fe987716d8b0c5fd9d32d375696b894b7340c03b5368c3c12783477989df7ae743f5fcb90a18d008060cbd97e4e8ca71c240ec5ab58d913409f32583f5b11b6b51074aedcbcbe5e902a48284fbd1195b2a01ef87d91754559b5e73f720286bc74ea0823a0ea71bcf144de2cef6005f1c83f26a079fa21cb5d72b841ec4abb0fd477a6588dd5121f4c4770765a94f526e9b4fdc5e4d32000b928b441343b7f0bde34af6a0b36e7f2d1bef149c6582d685e5abb4bbc8487384c7030bc0bca293603cd603d1c5c08953fefed0b75d48d954c20b269b93a21b54c2e59e1fe2ed59e783556ae3b7f767f4df9de3495ef2a38c98019c2da6f1e786516dbdd02772f5438eb6801b5df49672922de6198591e35e6ea59cf5e43c693f828edb149e9d8e81c1e762e8c93d03dbb7cbe6252df09136169f6f94ae203594e71221150adde24a5e6ee4548b6e55126299e5c50f5f5e09312d2ef0e3ab3f67671c29e80663ac436a1ed7424d22f96f0c04ccffe0e81fca1b97bc283a08941a141b35b8c0d84ca571bcf9ae330a8b5f6838185d53517d3d14110bf55f63251694957a42a628e9f6416f2880e9baaeecfd623f4d8664333977acdc31638bc7099586f00f741d8ea63cd9247315705e9b714970f37dad762aefa5a31c1d5009ebebd494ec206934b1d5bb8f728c8a3fe5eda577df7084a335a47d0b95832e80d85eca853e46de16d3cf3b10a03a3646f52462b61473bad38fc38cad8a9d5d4bba1800bea868ad6b24a4308d4ccd8556123012a6a9c24dc542e5eb984e9ce8d34026fdd5d6dd11e722199b54973cbce048759bfc4f5613108781542494a8b9a21118da8d6f6c6b97fab2b8f0fc3c015085a2216f6e1fe6b6437e809641946e7816886d31afe2558818cd085da9fe3943bdd7e1921b9ad91bb3442c6eb0d00d9daec6c3bd08a2c3e4afc0cc8251e751a8c31f7b54f164416a136b25b1f8766eae1f6ea885b1678d23a4ebe01a67511002684eedc4a2e82aaf9b69e772c0b92a281b38ac92072299061801c93d0d94fda36ce54744d77e05280e4571739f68e60b53e0a49c7079db95763a9fb79b2b33f99bd8b44c89ff3d2ecbb2b5c809384ad9f864b628889d7a5c0909a7fac65976b8dd788a65015d885f30f98a4357452e62b47cf6bc2c0ef8be017507e0688c43598ab7ec224b1e704556200322dc081e30a77de3272e2bf3e5715434a2b19ef71f5dfdde5b936c59aa412a63258cf35cdf3bc4a8ff172588554fb948ebb0f27811ed213e44c89bc28d03110024133b55865000aa496de043a263362c4600cdf6fcfcdc054e056484b23632f6661e4a6ce141a3c1bdaa7eca81b64631c8d0578a272fd59a0d7397377022e59a557b18dd6250340faee288b6918439bcabc4731a7942203a96d6fcacf9edb1b87113cbd1d415771d5b33ae638821ee7e4a5aaf05a0f6c052d7a1681bd2c9aa07c9994112840b44d8b830a80f86529c4458466e356de3cc059140350441061502de8f15d87021477d121bcb1a63f51092c365fcf021342a30a855e860497bb14d929e0dce3d75aed4769851fe6ba7c9877f3327873e00ab1a0d87d12d244422057fc882a91ce7af65d5af98ed82f79bed25270f8022b24a5822fd16da3dd2d391ff9ef95b1ab436a04d3a8b8dc92e43cd5344f81dffc35b3ed0e460dfd3e6b27cba20dae58feb79a3ad3b6e4c5cfd90a0e8d86439846ee6e86eb3381765fc7d836e119d29abb50c9ead2e48a14dfbd61dd947078beaff1e5777fd5a7395ef115452b343b71c151f6f36c0724426352a39d0fcc9c8f3cce331a873de61351adcb8566361dd91114e7923c46b49059ba02a1ac1386bfd8e6af561c193effae156bcf6a1a0250ed5ec5d94d146c4e33aaf372c28bb2798cb7ba2d4870d075dc65974db5596e2cd8b055f2b06caf302dabd49c11fa8ac702e184055827c8d64fddcf6d4fce0b94096621c3ab4092d3d0daa9c83393ecab976e820d076463d7c6e9d66bfa4182bd62641f119a183d51009d064f708f122cb7b37e698fb0f74d66cd8352fbaf5d328a8a44d9b2746604720dd6285af8a4c29f97849235c752467a5a2c202106559a7ea228af2d36d5ba2a065549fe99ca2775ba6e2485992d36de55126212b7cfa5b626d8aa59a905fe3f35323bf6e5ed414eb4eff80246c1472bbe1a420794caf111e6db8324b295200b15da4c0cfd3f67c904c575111745935657f1af6297f8b785d9251aa89b39fd38a40f02ad02f89d3ff86c8b26603182fb90f5b28e514600f9c68aa2d923b869485d818a56896d5d50557c84a4d74b10b17a517fb17501a8271ed3e93d59cd387b17e0504b4ce848a9c84dc467ea3ff666793e7c1a3bdfa6c623c93c59130b130c3e4a5454bee5c58828863cadd53a9ab812687109e626b82cfcf8335e7f7e70b9ae433c35836ae32b072c33310008281b6b20c9f0785eb24c0fa076bc8a01e75be5868387bfe673f833f0edb954b5f214fc744aa8155fa25cd31ab07dd62dbc388276b7478779139f7b35e8e04559b1c860b6f205b99a7d91d965b4d66c37af0a654047fd08ab74b78d87ed50aa2484842b241eccb762eb11d6530d1cda44b44b404cd3dac7dd7a349d5900e097a6a595497a9cb63d7909ccfdf8143981e5200aca0cfeb540972a571c6d52e3b687ae1888491594e76423ce3220243d5f203494017697aaf2581671974a476db5eccca368f06573349add7dc07e66e7d0f387a3357b62461f0b0c117eb1c5399315a5fe97c56b55247f7d9ac6acde9680fabf982d204905ef5506000d36170426bce5ac112f19e62955a4988aed7ae2ecfd683b9d1a0556055f4fb1552c6730270fbc271d9516e18eec7b16d08726ca82cde0f245ba6be59e271ad7863f601a68db18f3ea94d2922aa5d93cd83dc01fadf6034200f9adf9218a6c3aa7c6fb88be14a96b0a3a0e00e35c280d76d4b2a8c03c1054c4c5c0e66b8997450abc6d55b97c27fa29f59a1ba67881e6006bd4223b2433d108fc439c4d255b8dcb321fee7da54308387f1c9e47211aeca460bd346c5b13b9c1d73d672eff147b4ebd014960d842039d1fa1a4b05d2d52d6b0026c346962702d58adf70d7572b0219f2e2ec1d2bfa5e71da0b5fd0b328b43b2851fc93284d81c52978d41722f4c3137fb06b7140b687d87ae878e2e72962a58eea2f5976727682dd04f2b77b2fa950e83bf9e71cc9b50f3b2f705bd72e0643773ba66dd82c9f7804001f178b204f894b7116d763308e4d32a24507b646b5e1e59e24f16d96f341a21a5b607b7b8554790ac8fadc502822657ef79c247fe09c06d5d697c0df32b60517b9142edfe124714ab5f9c507d383d9daa9c89e625e759b7fc3bde9b9a34fe9d8b11d26074c83165921c85e60ae759434fe0bdd33b582628b9a8155963653b09a8801293793c62cee031179d1f7025983154cb95440030abb3eb7704bb4df6c06efdc5e18dcef0a9eebd46dae3c79ca0d832298209f7e46ef4af5c86ab92974816855fddea3713e609be6d135af28143d79579614248809ca2e03760377f5fe9b24fa2995f1de7f2bf0f3587e3f17037c84b14b9a8a8288589fb353dffe4dbf483d8dd2bb9e29c248321f832febd6a0316e40b7bf5f19d9cf769ad6e30dcfaa4c2e18e507bbe356065bc460a4c96cb0ee369761aaa0ceb24ead25c70f82fa9648391c08198184ad43d0be87ac8d8d559f179aaa8455e33a1ae651a2c64da1ba838f73ce237773cd9855bffbf9ea021ad46ced1ef594994ab3418391bc9299beda779963a2347513f5c9800d6ce9933dac20887c3b77664c320970615dede478a41ad21568ddb92542481ca4f30a5be522f28a99ed511dd19ba4da04940f1413a6be7d17ae31233e41bd71dcc5109cd9c9372676faf6667192eef7160ab3664f16e705ea17e12a0447ff480902b2e789847498f6ffe419436c92fcead6eb2d18f4d24128195a7d4aa1cf561d0c91de0f5be8cab08831735cb25de2a96563a3d265f3e75fe8ab28483c210ebd1223a39170649dce9b27cb56aa935408f231dbeca838495999b31b572c922e4f7c71e04a645fb4eac3baa8a476cfc28351a893f5d75fe4901d395168591a60d090903606310f49f879c4f1063574399fb3afc7bd804946a78008d4cc11d55f56b5bc2cb339462e1bcce0297637cc38883edcc9230c2222ca8ab3f9014cc4544bab628198f63a2fbfaf049808293d78b7be283b4071ee3919190dc09dab8f10dc4e427994c8bf2d897fed0a03b614a2debcfed562ceb5f721075214279758651a9914065307bc81c1d680edbf2938678074cdcfca166a4cf83dfe7e7aeceb9b276dda43ff166cce77b2670fe7960c6e2ccb9c6e067a91d8612142b9d38425d6edc18466f1a660923bcf19f6c6882846cbcf6366ae045dd3063e5f4a4779278382ed5f88c825f193b2744e63457b44ebe2ce9e73144a684a08007ecb1b642981bdf36c09a6627a57c50fa2583445007867f4215079bab4afbdb103ba703a1009b99b024f0d6303c2f690f5e7ca24cc4593d6e4156f7079ca08a3a56a9b1c47173adb41d0bd2622dddc4d1fceace9954eb90477e85f3b0ff499721d149f879569dfe86b6ef06b04adfeae72d1fa16fe0d0da6cc183c2f316dc417510fbace939929b904e607de924ec4f4f748b2227847dffdd01856e9939c71e652070f3deb54cd9d3e768c225775ea383a150e39314267a95e957b4082cdac40d73eabd9f879226909e6da635c8aebd402a87237b3aa5e879a6b3d7ae7f9c8472bee56d6ab82f1877cb5db994829ff3c7a6ce4f0e4ecd2ccba3f7f033f418f198ada52b955e96543e0dbf66c7c6d5a6825d6fe0167e39d6cb1fc91680e7167d10492bc17fa6309bc0a1a28e9904bab2bb9beb8acaf4803a01fdaacf09b47ce3c58351ae6e451f759cf520be6b83aa055462e05e15b81c87c215405610a9f224448319fab71577e00fbf3b1ccbfb7c0556c0c4a370edf6782fc96271750842eddbd1511baec92a5efad7fd92bbfd37515e6a098bb8431366a32cc3c5f0469cbaeb324611e310f94d5b559d3abd7c67d24346c2b2d1ed4e052c6d0ce0c6db10d839007c953553057e8641703f6fee866c10e4ea56a143b671f2b147eb2a82fb8fea6649175aed8cc5c421418627f0ab0c893be092eec3908bd0e4e8b899d7ee781692b91eafbb00aa8e0b63640d7c4b72560f203b3153e39f6dfeb05dd2abf3ecec04d77210d1547071d85450f06c64831492a74e13e43918d240f7faccfa4e4541144142758a10cdcc82171bc9666f26a374cd9af7f936f00fb94176c0aee5fff26aef589aa9dc87e74ca3a7c01b490fd11b177e560c2311fdbeced8d13fd20958d06938044fee9ea48253ad5e50c26cf58795aa6f3e89cf909d4c543c129df6983a6735dcf0a875b05e12fe7c2b941dee699b84c0fcaf10f8ac72ac3b04d198ea3396edb45f383f35068676343520c09bd226c3ea579103edb9889f06312a72a645c32ba5ac37dd42e05ff378be20948147b5daa37aa0b296fac9578f8fc29010b72d714704caf6e474af8078f73bd7a68d601edac0f9b4c6e1160a52041498b05cccbb7add0696b3b82b1af38abab21e2cdca4dfa1fb7f6eb0379d9391be40e3630d4ba992f050e3bcdbb2ce75352087b2e7274d37bc8132c44b03a18669fb51733413935df2e9bd2e9235990c166dae819328f2d5227de313c67dd1468305dba2f868e7fbedacb9c2c35a7ca2774aad04096a34a3dc486e268d52c2bec76aa94e6126bc3aada916ec2fb0fcb9909d9879cec34cd94034e12ec216636802863b29d80fb18049131cdf250a4586b24598fe9f53756d09b3dda2686dbb47154fed0e3ad52cea3d671df8a34944615de40c2d2e04a5c8a2fc53205ed6f805a5135aa5eb640b41fd54de91fb4da3a6a22e949ce9a4bc8c31e614bb153d328436159e69e06bc52be5c73f21cb1eab8b5729708f15fd6c58fb59b33b2ecda0930f6fb957d0ceda5dcf75cf19f41ed2b2ad1128dd3339587f7962e2bcce074334e9316e0ea3082f00cbd8cf3148a3593c2d6dae05c5b66cd36ba1a17f5a5e0a491b597ff20d3c4590d888f89f335fc514ef35730f2558b209eead2106e000286f318e6060f9e934d7cad798dec275294a46278d805096368c098638dd3e6afc0ea78a111066704c854a4ef43252c8faf9a8392292fe8d323584eb33cccdc43575b6dab36bdc36a62b63a3a4f91165e60f1caacf1da0a59c44ae932378f96326f2a74948932c0c35fe0700df1598bc109ee7a3cb78d2c8a3874a0202ee2540b665c535a765d1f8d449db4979912a0a14d1fcee023291b70a90b2a77356f866d65f0d8fa3a0b4c0175a7c462f7ea411a78ee4b010e406d54d0cfadbd40c967b4de8d6eae40db5d933e3a8511cdadb48dff12729ce03dec501d0817fe637510569d7dfb1a2335c1a63ed5a3e2262e58788afca6035c6a9789ce9be24d16d524798f349456f5b14b2ceb32c1c87d0ee8c62ff57862cebccc19f471107dd43395f1926838e0e1becd82a04c0ef865576a992cc8a23546cb8239134c884a3ebc8bee85e5bfda9834084da171b28573e359cd8ecc5d8fe4c5ecd9e3402506c417df58e67f964541d88585fbfbcf4c605c38f48a171637f3024437bb368db52b9177ab64a914e2b042c1ea7ec5c6d4bf052cf204044db949280bc5a5980d12cb86f802c1a2100086194e3a511c8942cb59e952ca89d80e6ff98ae280136c48be2084f299b2fc56945310b40ee6ffcc7c3c99e2693966a8c66eb5af858f9887bc2c1ffb2663940614ec136c3b79f7ca17288da44d593f286ea27c26ed0ee32e94ab7e36be5fdfc8a49de814c0cc5b328954a336e3ad8ee320156641cac5a3222fb90b3922e2f27dd56554ca8946977278f0f3d56985abffe7f0debf03b2123dadb96f2c89d1f4b90dec358c70cf7fb736fbb86b4370319a82a2e16d1a23d1124284e5f76c34f64626151db4586edccdb7a677aea3eda03de4ab8753b516e19ba663663bc205286fff732a4ff95d6203bcdd0ea0434ec306afb30e0d4fb93c439908a42ca9bb02c6f09dc113892e02900c2301f8e1a8dca992452de6b2a3ae86059250a1faa1ea5704d0336dc39055a00d55fe2d40bc7f5204d76d8772067781ad9651ec584ff7a97549f87edf8beb1be01b08f85df7aebb50fd722ac29c144bfc3da0efef1f1a1f59ef7c1eb7c3444ceb47db19e01f12af7ecae857badf36b134ffffdf5436fd7f3cb4c2d08f31f4538a63a477cc32038ab79ff92b2420dbea3b177b85489f6782f981d7e48346fa4bacc39ecf7d7efb9b26ee726ab4a9cb6a7a3b1100c2c0e5701dc9a9ad5bac9ae1dc38732ded63aa5f12f04fce25b83aac412482a3b1839d204cdd3a0259545b6e9070266069814c1749de7969cfd7f1a366e2423979dac5f47d4db2ff3ae332071b5c26683d7b81505929c7749660414cec62840bc4a07b8d1b0fe3eeee4fc7f2f1ac2a7b5353517c7bf7800c7a7fa0bad655c72f7ab8a9174e0f478ba25b196e08811bd50b446e1b7ee986b61ecc3b88419cac4be924cd7caae4725e78a9a00d28b8e0edc1abdf7bb9a825a97bbccd82b6a37c5e90f7c9741d20b81a6072e05f2b9492d873a0c17aad60499f92645fe07fe00d285f64798399f9a4859c55f09993b27cf10b05a86326431861e09a3adccef73ddb418735a350b099e75d5846f5ee3398c96c49a2806a8ad89cee4fb3ede93e64bbbf826b72ab5d54a9548e288752e6f4089e17e924e127345668174900ce44dcb6dfaf9fc4503d0bf73f74d503bdf7a116378177254558860dc1b58a53ffcd508715c26d792a13c4aac0a07b0870862d745b3d904ceee664870900064d2e543efc8b72588329e8b92785500f8d6fb357947450ee6ab89889aabc2a422efae33923f8be76abe2a6cede62ac05a30c1db292c4eccf8dd067424fee949c3544393ed55966e9b3114b4661c5c79f1ec32df484ff41e96ef2b160e3b7eb46941d81c252440fb6d28d55568812853dd96f4d31fee83b3508a0070d3412f0d5b9d0ecf345bd6a292a7e07e156f2cb51b26e04e31365a1cf1e33af9b9b25852e6dbd6733bab719608c1ff0e60ccca5ec84d990c9c2339f32a53dd3bb0c68e503394c3578a6c2586dee7428783c1f76fde245e6bc4f8ee8365c5e62a8ead2b5245dd30587d21bb98a9eec6bb74e595bc7db8da0f3d2b1116aac44d919694be6db4c2508273f53e79bba6ae602ce3f4023f6c4b3f6e1d5e130979affe21fd5a2fad35225b5dc8012fcb07f9c3eabc40ff53ad2aeae0f5f419fad47077fb0e1479b39d83bbd235881616a0bdd6488977f0395b5cf40007d32d33723bb4723bbfd15336d14caa8396960a070fd0dcafa0d9c0c73a03a3dec057c837057e99ea1aab36edff65c26687d5170e7acdcc3a2386dec21e044c81ac89fc40a245b159770eb9e881966ac6d7a6672f3bad57deafac1e58e43d90a18d5d10b50185c75c9af64977ec6a88da13900337a70a0d1e0bc02c9a8e9493d455151351d4cf4b4ae37f8adc49bb2a9458aaf5631e8d7c55606793bc697203dce05caa07239ef16aa03d3990c9fd8a3f8de68320c6a68d9624562952d5d76132da7b0fee584289ab7c35b360f034c46de41bf2894cc5e7feef73c83492b6c18ba9375a14117c105cf39d41e22e44bb97802917c32e7db52b49cd3ac94e98e8e9e4778162ac1b5f8bc82d967c3e156b2a0e19f6d963d09c1c4b87faae5baf305777b2de6225520e80dce84aa2508bc952e4f0c1f1cc5cf7d7de8b8d5c96541ed55e855c02f6320b050db4b20c5c748dfa4a1c335804a878fa818b03b62c38e88227db238b81b0ba94eed676d8e57a14ec62e6306d8e5262e9882d1e3b17f3433f08a75c7f9018c0ee4b83a28dfe4427e3aa918cdc530acda97aa8b690676b711d2ed13fc0ab2e1d5ce1054bdc463d635bc5d10425b3d4c49be25c8dcd2ffb9847242776b294bf08da1a2b96a0ba08696bad5ee6bfe3edcb1e5685014c4a3da9f688c2f5dddc61cb8004d37edd709861b5b5e4412d24a2d511c037db58eea0132c63c1ce819d80df64d2bf73fa66b70c36d2651c1f6e30fa699fbec1e4451cc3487c846078e21c355c9af54fc77a6b8b0f9c6c5c5ad4c7569e1a6bf6187a5393f8892285fbb8bf148097faedccec218d92d6ab2e2b19856af241d2a2dc932f30492916836231a2a165e38f9aeb62b55c3a44f731000dcea635a038ca9687b099ad4386890ccde7098a30b72a3ac27cfe288d386d6d1fa546b7748625771d904682827e25aae8debb13cbf811aab59805394802f5680cc0cfd7f551c15f293167fda275eca77b4f50795ae17c182a272a39203937b6e8022905022553e663431ba5703b6e24e259c6778d3548b4ee120c235aa9a5e7bc2c065c62519e7cc05e5cbafec6d6d2e0f5529a7516bd77e5b28d2971ca10d301565a3f7f2b2dec9c657ac6439cfc9585833f7bb089d107058290f1787d2c9d29d7f14a27ed39e951f0735a5c4e2ef37216c203150d15268c2682f9e646618bd85339055ce1043bd4da03abe4a4f4456d55d1a04ff0ab0c73729b01b1b54ea4d5cd001d8d65b556a54e9d1caaeceb844818389cc6aba40acf102babd0d7c3bdda21bff222e404736ae9d942a76dc81a0d42dd8f8feb3415e3e7b54bcf89b1075e21ad7adbd800d504ecfced0ec78b0a4ede64175c13d8a0ee8d94629c14d420902473b7494ca6616beb1ef37159766010a9b4bc47110ef19f681001fa2d2d89b7f9149d8d19684a2ec82cdf7cc97152fa79bc683cf3cd2ccc087152cba9def119b3dd03640f87c176ccc298ca152984d46a949ada452336e95986ab6db5fd99d548d3da1c4b3b39b4828723da5c7028964f62e8dcb329abc3b75eb663beacd9039dda9ced24044550059351b78bfe79f677ea7e71a52e58cbda39f15c3e5e4eb67b207c2f9e9fbfb326adf63e7a032f90e1ae5eeab33e2f6a49ce25ea891e0073786277708ff7ac303df369c4a9336497e876d1d4cc4f4563b50ca2127c168ddfddd25f405099175814826791b701da04cc54f5d38145cef9153a272cb62dc7a56c45bcb333ad173898b4be814d3377645e187798ec750c596f8265be88c9c6bbacffa2a36e0bff40213103f1d5d0df863cb5400b7998c145a7526efd1edce53503c6f7c3defbf7734757eefb71cf4fd0900cc596597220e12525972808397056dd6f7734a99167bbec704d58454d049748a1658c61c4aa84b6b478a45584db1766d4d1a0cafe1cd4fa4381c1c16fd6c44ca10bc3652cd35e899a3be8109c7d809561c8cd21e491caae4f78c645038324dd45cc4344d78c48ca2e22f4022a26336158f6e3c713fb1f38d98a08de41b061301b9bf947bc1e31837186b1b5eb68a1ddaf7938d3a475d36f6ca18f0e6268666d8c39382b58b3293cf1db9db736422e7d222a4404c327551e21ad075b404d0dc00d2d1b14fe0f5f83a16445d8b8d6eb478b08272b3544cbf636e6eeec3a3cb41381f3e05cfc5a7d911ad96a5f734feeaa24f0a268c22cf88472583e1c890f0d70b453e7e9bb2194007207f30d25bc984a24650710f5f6ebd8c31274a8e0e03a226387d1801c9164fc33172536c3bf973280fc97c1e3de6a4448ac8254deeb49d122b8ceff8988a12a3d58f72febfa569a755e201cbe951b5c3152e83fb232a9d1d1cb1daeffa3aac65d96f4fc639c234ce8aae8edb91bd3040a46f182602b4c9b87bb559056dbc0d2a897ad56996fc9ea4e89862c262e877c92168a0da80cbe941917d35fa2102231e04bd4b2e032340e87f1321f2edd04ecd0d5f9af889b0e0b7a4055fca2f76b4e1bb6803cbfadf6a8f698c9fe074c6f8bd8ae32dbc7193e7017e2375fe4bbb818fd6888576add45b9004057addd3f43eac2d3b16408cf4ba898616e543040dbe4a9abcc33dfba13dea56ec0afd45fc72a3d083de05ba3b29357edc2b4e01410edd58c8c2bb28f04f898a406e35103ec5e6951b8436fb2fb96ca6bde085a5441f53a22e9a37952b3fdf5b5725d3449cf4d74cd2ae5e153bcf38fdb4d0bde02e25e2420d6059dc6e93ae870bf765803b92a778820711b537180eaaa8f3212d31bfc5b5c463b8b353060a2c973cda5e7895305f8b4b555af1d9ac450e9c10338472b686277154c2b189adf5c1e025a06b95699312b1a521670495a4190666183c12b46931c6383de3c9a2187d6376bab99ca7d98174b222fab25d581abd4648bf5096636a40748207bad3ab9517d834d030869c80c295b7ffc8e9fd2ec794b7c7b9c3dafa9ac0bb425920b5314bde0904716e272831c34cfc1518a6e03778cc484fac13a8fbc332f8417c71b64cbd60024444248f9cd099c00986534daa3ea937db0a68275216b2f300307d1cce76add44ed2e8f2be48741cdf8a5e5c32ac7fc14b1ae3b4b5acf0c2d4997f70f75eb7e81761e9955c574153305aaecc9d0ef1fe42d73c3195d491c29d1d0e6864f4a0ca7d6e650fa366eb0a52e14dcaca941c12283ecfbb546259a6d55dbfb93f4fffba43c3c9f1253e3cc0caea0d87637282069fb1ed02a5a3f0f6cf612201c9b17e923772973f5d9ea40aefd209ab64378d90c4eba9a757d513ca62ff20c8ceaca4d270d23eb42d5f4aa42a6eea660fa17c82577fb9a704735422cffa5460d0ee5a8c201662950a52ba4f2306bc31be82c444c0eee1e9b821b84ff66a39557ad0b4ba8cf1e3ae80b2abfd0cc8d5f69a295b3e5547958396d975fda3ac5c4d6f51645f47ab07e2dd98e4fba2081997b65acca5e889c1d1dc67e65f37699c7ec8710cb40a3844ee867157f8b3276def7c10231b1e5bda5ecd7bda7bb072fa0db5060f095ff8ceae6d655b1d4b6a1707d4f6857c2212e1060baa5f75b074e6798476bcdeb5316c00189a0751104d25ea4516398fa48997e0385307fd8860df55bef4834d4afccaa9f52c0ebb0b6de237b88eaf382713a718791160266e6ebaadebbbd5e88427cb7f2733960ff4b45cf2f1fff93f17786acb5840006c566d880e12e3acafdd13559c1103b651771ad56def5f71166fb07ce3ff131d5e56258ffb711174dc7cabc7845f8f74b7b72f89a133d760ef1fff2bd6e249a1dc86d9f3ba1b584b0eea26ba135ccfee0958929cb43458ef282d7e8b02140bb7f3fd540e551fff5975aee833352fb61317762a223cf787b9678cfc5c34e1c6bbf5b551c1e23f535af021ceb9c5cad56ac27f366768a4f4a08089c1dc7b437ed83a357d7e9a6a95627320cd3daa283061e0693b7ab0a7482dc5515658e107d79a8f57e3eeb6de172138414a34bacf48307bda7008e1d7e4fdddcbb626382a9dfa9992888aa8e62109c4c7cf35494730551e8c081101d8233e010a6868ee4574d09e4141cf2fb55bfbce8f39c6c7054575ead1fc9e205de5ea95d554213976344d3bfa647f669243ddb6bad25ab84513f14d65c584b10cd96c08c46f9ac03d7b52437088f68b494f2a6bcdb94d9ad89e26935b5401e388b440b2e443049abfcb4a494e6b28b925d2168211f31071878118c4daf0ed2a5ccaffb056556d1a2e977221991d8524fe0d5421977ea78e8ee93b75f1c7c9a1b39c43e40ada02932d06e8c7bd6a2401aec7c87b730f1610c6bcadb15644cf08c3a47af1c7f98ccb4c5194beb778597bb895ce3a2b61a0e97866e73e0b5e7cdf157e17e4057bdefb3c07b092add52097c0d8a64f0bba413c384a63f20ec17124a98e8cb80d353b4ac17dfc37139a3c366c63cbd5360284d8b560f7cfef0770ebde3c479bd2ac535972529a874b93855004c6da04ca76bfd14004c723f867246cd3daf3a005856da8123f61aa65c6627b13533b0a0858d766123403808a784eb9afa4cde4bb5339dccda99ddc294debcf99050c0fdc99d79f6c6dfcbf541a561195df95c937f608637d31064e72685ce06c55b23607acd80f20b6231bc846252044c6f3d2b68d3aa202cc7b90e7643adc2d32dedf733ea93c18241defd420c34a7645e140d96d81669c48e05c3703186eefcec9f81b3679946f2c84394117f48ed8f6c5154edc1feb67cdc846fd228ac4b2fd3630a193b812300c29451149cdfc2073f0d693b33f6f52f177727ad71f5f13525b5d36adfea99c4d20995a3690bbe145984b58f14203f16eee650f2c6183c9a7d0a4dd286667abe541497e90ae6bf606e8b1495bc99e2650e50630bbe47ba0fbdc67d7166139499acc79269456235fe1bb474a20231f2f8d83283843ec8575e30aa70779bc7d1d73c3437d8304fca4db1365edf24060e6bfdc9a97cc602d9f30b4a43d803f8daf15f9ef8c0070d7ebc61a3b35787f3539313486dde886f97b51d9e9e0e5be62fb33d1945a9db48ba68b8797ef04c7f7b235ec750333390c2d4150e24f8cb8630ce75a66cbbeb085fccc06c1b4f0f2174820f8de3bbad66dd21fe85fcd956906afddad40fa84c62fa5de046d30b3dbeadb9a9d7d12a67c52a6763760c9ae6371b71a2f80483c4beb788e830cf792c82cd8d2f2b2615d995b8abf023822a87abd95b75b9594130da2cb0faa82e491a29d5ab2da9be1c57f99af5607773deea8b9d02cc59a2934c543a2fb83f36ea01abd4afa5fa2c5ae6ec62c91c3e7ac0ba2f605b320c86d7e24abdea1ebef2a0aa04c46b690c0bf4150dbcaca401338e1d724e06905d8908a14a809c2f9db55fbee9cbde5642ef8f3eb83e0bc8614eb3c69d1a46c2692cb95e29da65ffd71350c0ad894a8dea24319fe28ad3649e9e4176dda62e2cabaddcb49e6e860cfa8a254703d6aa451a0003178ec9d302bdbe93a302ea22a80d9fbcaddc9aac570126c538bece0fa953ed92cb2e81e1c38a25078a61b54c8be73bff22d63a70f01bf443da7193732717dcc7abd15fb089f77072277fda6f54f7c910aed806f6197b04d495bab9c392d1fe4c5feff87116327ea577bfae7f30fdc991ef405cf970ea15747ce02180be586bd8155c804f61f02cde013b77f7f035e725e80cc71c309adb25d534de959114d2ce0b42b32dd74c194da3fdc8a83a41139cdec51378457cba56d4faea7545d53075aad2de25328f69be603640b4ebb46f5b8ff54c9b50e31af67d3382bb8d8ecb48f2b2c6087df3c2f372fdafe129113fff7dd376519656d0dbbd0c46ba98a1612421c1207eb6f1367d0143b6472d157acbe8471a3c726479a23eb55117416de9d666bf190a25fe84165ee6ca67f3973f640ba53a735326a3aaa1b85415ccc333a10c88a00695339bb07ca11e0d71d44268ba5e8da91a2a44666abd8ce191e36f25a70c13628045a6010e41b58f5a875e2e325a22642cac6f7efa9c5b4b5dcacd557a37ea84d1b6e371e75224e2a45b79bfc1ee89039b0f31d0b82d8c2cb48f0dd9d237e57f7935efcb6e41b72ec615e7a9dd9d5e3fe8607338aa2cf585bc45f0d7f6e40300e6dbc11f776117a99128bce2796cbd80811eb1b7f424c756c20d1227469d687c2ef6696e7d3858d05c7c6bb8e960f9d23c29a4412303f181476ff14f8b5fab39ba21c97d9f935d6606264dbc0eeb21ea2c72e7c36b087df2ce463916ce63db11f25646c674016ad3e9a29c5ceb758578414379b134ad33bbf408d4c64006b8a8180824b1abcba0fab614be1c1a91a938bdfaae00c1682f1a2264210a5a566416fdcccdb25649d9a0c37e778be9a1f603fd0425a634e8052e8dfa37556a974fcbadb6e44ab5bb23cf8bd13542c30738d192d09af5f0f20d00ee5bad204b39045926adc1cac05f66c37cbb6a77e2da5ee5a857d12259abd78f1d057162812b4c45eada6d2bb689f3100bc26b4a388bfd6698dc1238d262bd7802b49d6b63cc374a872582ab614cb5944267e4e2d33b48e2fb3c0304d7f3a5676e58da3a8fce798a38fb2df099a402dbbc5a2082c12d1be1596ef25939f4d0c489013cc8834e6cb931ce0d46ee1c1f2dfa22eb76625bad8ba7ac6aa49b182587c5a3aca5c0dfdc21ca4f04a5b626f2f4d9352f038ede958c8c46f4ab8ad7d63b1d00ab1d4d40bd8c9f234d8a2ff2c4282b168302b1b894672a0e81d52c2d08bec0a7ae1e66b457fdce24ca26e006d3ee643c559371e9040e20f4556112f46d7d3e546d253fa5b152368dad8dd5e4a160dd1e2d5cdb3f7a4a3961b6cad28c5a8173531f20d3aff537fb5ac96e4c02c90b8609367a31bb653348c09b696bec98d1536ee866cff13a5db43459720562c4df7b537f36cd72f7b982fd2fa3807fe0e44e83b99d795f0be45f98db9af0c1585ed21c62450535939f931f512f023e41dc4e425dab05df7e83a05117f53cd5370725bf432e2d379cb5ae069f90939c778f66bcc50cc7026df8e040b95d563525a9703a90d3689dcb46c0270aa11ac7388ffd489a8983eb7fa9e044ce096eabdb379ffc13476787d8e8b5ec17e2ef32a21f26900e2dc06a5d98e6478bf85c6cf8accd5b8d428a9f04070305c94749cafa5ab885cb8e9a6d872d4da1e86325174867d6a8f764b1280e0c5792a22a8b5a12b24d738e8bc32b0e89684425c953e2b4422feb0fe7fadcc277c503a3d79ed66454b9e0f930123dd3ff3c61bd1cf2bad77cb39aa76c71b38b67a7fc4d4528d1cd7386a78e43d847366b29306be870c98a6cb34bbeb08177ccb20770b05ea251ea506b546476c0c80062037cad13d954851e96404466a53e180817b15e09a81eb60ef7c0c622ca2b8f435da52f900f9534f0008712a9ad93ba27a6f1ff92035fa732cfba627e78e09655472a68f4f7f841ceb2e5e8a2c60e1c285f78358ed36a95d431dd470af6801c9e2059b3929a38bfcb0a534a2a8ca274ff6aedb68aa9c1c0354c6121b2e16af897d3720630693e960a50e09267acf57aa9150ab3f7e54d3a00a5cb74d1ebe79c386c4f7fcb8c183fe12b8b5ad59ebaa16f00fc6a11873a93a1a936936e5f99d5af250ef3e4c7382d7bdefb40615a3261ddd87a6e338fc82628efccee85b51d2faacbf6b8cd8ea287bc96ca75510d5b234e1395ddab69857f54ffd26c2a661a78729747e130c57366c141ce0b90c97da129bda9b54b50f728e700a1e15fd4e5f4760478fc305f3762c5f0f1bd3ce71312fa8db881454277482c0ad02876afd348492d5a3f950317ef311948567d615dcc346b79a21019920dedfbc9427a723fef47d3ca1af922945d2bd5bc113dc3a6405b18653b53441b41113a4bee11fb5770c587b895117e19a90daeaec9e18b07248f9641bf8038acce1650bbc9b9de51d4f127ba65b66faa96eadd68c4d420b1069703b36e230ddeba6ded0a664e36cab0acd870b10ebc85dba1e02ebc88674e9ab26c24e96efae0dc925c96c19cae62ca447c4752f108ed577ee05aee9232dc9334e41b1a67d856e3f416c20fb2bc7f91dd3f3c9ab7a16e5db34c3590ec8d2cc7bcf4d114d325227d09cd3fbfd1c40e3e5b267b140152e391f54a477424384462f705ab4ebd007506fe75e3881d40ef54010ca1e3abc9707ed837e0fb7d42c144842daaf7b1fb5802264d0120df04108bc3b75dab0b6f6ea7d72a8162cef03025c031b4442490ccac986fa9679de70958df5332d61a743506d3cc3e9a4ae7eab3d9c13c97a30b55c4cf47f75eb669fa14b22eb1b384e2d5bafb0088c7c5d5e2e9c06a544e85ee4a1ead49513a4c4f6079206b15de74e49fa3ccca317a42d9b7d32118c32d5643df1939910432e13800df70bf1c217bf9f32a6eff601aead4afff6aaa164922f279ca06ddffde8a95051434bf0e1e8190089119c9fcb91f1907eb09bf2f4e45be5261e645a1e266d90d12549a109d33cc8777ef374b5bf9583d65618dbcfbfee1c1c59817f2fe5d1788a3c75e80bf660f1655d287f9d3a3a54b912ec594100775ee6271f10ead7593a66245a5cf1f6f7babd2d53afdc87f0e24ad3614121905a8c9c8e5642472bf7577086fa807dc1fa762ca2434482202eda94e0b20f6884a4ebd96fa7fec4d77a44a435c17bf844e4eb2438e918452935452ad6be601fc5bc3c55560e0d0b505afebca569256730187a17bbf2299c42613b8b339ffae7820929ec6c6cdd52f511f290d19a4db35c93e31ef32abd189239d93e0500681a09576fd72f454533e24374268f9e2aed6361714844392c832169ed04b6ee17997c18d3bd701535042c16a6689840d2175bb0938bf216e6af6de8a6a20c31b817175d9fec6597cb7101bca572640b05175d941779dec6497de13ecedcca38ef5ae185ba98814c7d9e93d54416b185a0d10ee214f91ca25131a47ad70d38574d8165db5dddbc86ca35ec86f6e31265a0dd9635aa9d8920ef0b6a84c803e3a08c1b73916eb3c124ca69ab84abfacbe1c6c42168dad59141a090ee8b7f21eaf54d9e69e326a622a3a7c519cf99dac967a85c6dbf4421395cc1b9be2c8196434b1c1f978e7ffb8ad5bd223d7ef1bcc382be804b25f9f3b4bea75b04a488d2ed7f13378115fa29431e3317a213255a98b30877333fd0645659028080449aeea3a91563eca4ff9ecb95a47bef6767453468527b6350c9ef1fb5817642ccce63af69c49d0014f8194eb94c8035519c3fe871678432be8df66021a19dbadc154d98878f8ca3ecf090bfb23236f6e37d3a341246364ba88c7fd601989a3cb0bf704c52ee2b17af393de86348cece83327dc806743ed231093e9e0504a0f27ae6d7c6ad95b59c3ab38a351a02b95adaa5d3431c8ac15692f70c980f87e7d070086d8be4fa6820367ced23c4a3b1d11456c91d38ca7e48048c339573a2adb2031aaea9cefbc89c7e3432393143e724295ff93e83853e945dc862eaba1be616ebb63094e84ccd81d51acd05d3118bd4f881ac395d298febf856b3cc86067ac73d84771bf2018923a2abb8b76f2a588a16c31a8943cc032a0d064078a8f911f6db67cc4c051b8bf3ddb2241195725300244cfceabcdf4bb04536ee200ed43d3f8892601edc33bb401dacba2b62f8aba301fc660678b6372f06fd6b6b6e20f1743b7e5650f716d06c113fefe1436d32f34c32f420087c5157e8cebb3ff4d1156f1b0650c373097ac39bf877ca725fcba1352527b3cb82df076d44d5c761f846066c65aeed4d52fd0bb6a31f8df054ad4f72ca20be76af370d20668101d8b9fb52bd036d498810c0a6152f0d4aa1097fc3ce136d9ce269622e85875292721123f863d1c21d19642c7be2a17cc8e1a81458d3a55a142b0a2ba6aa2daab5c4f2b011655609ccc506945f524bc46bd73bc4a49ba7381af9055f54596df6131809e624ee51fb6133cd0c13af5085c3a7b356b322c2afd9b9dccfe86e6f5895bf15470b8b86e01d31610b151927c268417db3f3658836c3cc5715fcf22bf8330cc7e2d437bef975a0fdb73f67b50e2ea9fa09fc86ed6faeee372ba40c2b3bcfb17c9a2624ae0abc7cb9de387e4913ff6aa21364130dc480526fd40a40ec123001f052a6c6aee2593745cb5fa438c6e363960632246150bde003e462995b3120b79ca2c4c8449d55de673b16eda5fcadd487084fa098b88960a3c560e506e161a409a54a1ad88aec4a6d08a12b8316b4fb0f3ea7a5d5fbe7308f7384a1f5b812ba1ed569507d3f66309ee702b2d64cce768635fda5293b54103e9c2e846ac28d0b459c67dca830f24c842d464f62ea2b2d2e6d723c25b77f0b1824483446bc47ceaa3114d37d27c59615980752c14b84796b2ef9c7d58ab00bd742456f1e8943541e3290a88dcc6508f6dad3d97c371f0aee0c8e0cd09dda8338b6c3d9472d45a8a8d5aa679cf7a7a4ee267568fde22279b001a51d3ae4ee59dd432d2431e838b6d6e2b7a4758e25ad990cf7efbf2f18488291d61a1b0cf530f1752d22cc677753fc6b3dde6f7e5b1dba6c3d847f42bb56dd1cf4bf53eccfd44db64d9de91adf609d79411cdf48900081f8adda773badf7fbf2819b332a331c834e4636b2d0fa63ff44648bdc3ac21319789f06d04a974b79cd96a0d8f8f191c85c616267d402f30e74be31634d46bef274f5301200e719677c58461ebdf21130e39a75e8c62e1ae9e873725a1043ffb99eb494a259abfbb84da98ba6ae48f6c2546e91a6e81b9fdf86a0b94a6add164f34eb9d9930015b1bf274e99eb6f8963a7c86e396480f6c014fe51a5c6ac2392d9421f962fce2ccf97b038fbc04c85e1209d736e14d1ca67a0eae2deaab3e66a7e6a2aebb7b6dc9ada15c20f05f0a0ccc7953db6ffe2ee621040dd88b8266a86aabe74f5433778bee13c5e136a3e0ac9b3a380f7d699390d1967b640031265faf67871384d8ad6a2f01aab71c46e5470ce1a6e9d635c75daf8ae68f7629a38c661f5053dc956d87228f3eacffb403da04e6ce14a80fce0506ef2bb897d5402e2146fdf090902acfe6ddd9a1a33f37154459b6613dd32365f08d1f69adefa87b6fc2a613f2b4083da6241a5af64ce3aedc637738e75cf6adfcaf219706e012f17a4a3b854cfc9ad8a573948f31128bb17d617cdaff18ce1bc3ac07d474297f6735d8272ce873549e2b5947fc4ad1567311dcfacdb3500088096a5a532ebf202bd1d2fdd5f3391abd77b913a434877d21dd281d09c27939c82e2c3fc658ab13de37935f325fb2068948a148b071c6103f7ce643f1489ba27aa636b6319c9052e0d0b44b456b33d1f9472f2f568a63e8fe94a3e532743b86fc5502bfb812ffe68e834c3f71bc3b38835f6c84faf997b2346d3e57b437ba95081f4a28a995ca6875f5b2e7d830ec2a01420586d6134f5da22f4c0f07254db15f95135ca604caf514c5a95892ee026a97c3463fac73cc8d2d6f3cd1b79e980f5d0129fd02b134ca900aabfdfa811c554ba5fd05aec7ff34eaa715505353c8d07aad11a820808dcbfaaf616f43223f3397a628f45ab21ef0ecdd2faa146911e9a0c9555619463ec3d5c7cb46895af33cb619e4dca702c394a8477eb2889659f6ded8bf491ce8ef6269fc3282e9fd34193a6ae9ee3889abd94b7ce58e2b0c5c3fcfd4c10d628a1c075b8feccf823a70f4ab652335f6741d29524d1af666ebdc1016de51b04b380e82ec3c5156ffeede22ef5fabd4198f7cca3249689aceb2c99b68fb7dca8474db2ba28ea442e68b02b1c5e2ad390957d23ccae385582b54bee6c6ad9e034cb046e1b3286f236cbe30873dcb7044cf5cd35f1538e150517676230f80808bd4af7cf3cb8d8a90f1457c4dac3451fe547bdf4af03db3a53d17f2ea3e9ab91590d9c6c337c54d08204decdfff10834ccf9d5a2991e883aa870af75aed76a84fce3a2793e5a9c13433884fd7703c578124a583b39c0cb9762a673f81759318148d071102fa92b642fa7b5c8c31689d34b5bb22a1b2dd0ad8382f4a5cac7e0c7ea4ca2f91c4c8f35a94649a5794df61f397e9b20b1d89a67266b904f12839c2a3dd404f7a89c3c5e58774dcef440dc0500fc7f61b8047ca8f065b739578d8e1417fc8781bc7e45e96b6a6fc7f076494321841a5bdf7acad97d53efdd7270b81cd77c5ecea57edf3877fa92a91de143b7aa875d44160dea02bd1a82244b449e8acbd633d84c723f7f860b112e401f8ec7df279bdc06e4b2917314f2b17020872b62fda63d5fe3ac138e1944a8d564fccde30cf9f44db78bb51cfbce7c3afa62b04e1fc15f6dd19d5c82bad30d3055edbeaa4885e42b700a5588c79e4d141a8ea42a04c3419ab793db3918b3f5f04d35b79b7a0538186f431d56fbe4af8d2a554d8b1d790167f6d7cd52086ca4cbd8f55633b6aeb5553d87cb718e5ff6a4518498a9dfc8cee40cc95cfee06dbd0a4c1518c6aa415ef84924432d33a5907d8c7b609b3e335842e8e8a85de4b5e1acc3956ef88874e8d361177b2a5bcb41be8c53d3315e92bdf960cf29ca23a58aab73242e73795cec51a598d565dc544feb0a1e69a9292e369b313c9f6886128055711b810205be0177fd0e23090d587e7d815c66902843eea9aebebf3730fb0334894614f0eb117583b4e566edc9c2355b9b07e87de1603f88131c32862e3c7d38371d410588960f21e7aa5117b049f6dd8f8cc935ad34918afcddb44df6a7f2efd8861ce584a71d0c0bf25158a49d768c1d613460fc663996d7730d902b9db09c46f199a018f9d129f91e24606f52b1d40d6227b44088a061f2c1f3a8f333b32724b6adc3f98f0899b98aa300f0d27d702210a9c76f79f7d0c8ccb7568a0866077dca476501265ca7e9d1fc1285bce6ec459e1ead3f31a9438da64dde20b9797f94ae194fa7455a610c3ea1a091af8dfb61dc5b225e4f1ffad13df1d3d5b1d0ee057b35bbfd167f11e6d2b77a3f81b8acc96e293034ce737bf3d18f40c6aa38fc9cf9583951346fa71367a0977619e9e59b61adea5185649957fdfeecabad770483d5d282acec471103095e62ddc94b966489b4d647095168aec950b8c2ed764b6ee7a2626e2bbaf5dab4683b7ff904f06ded0d564f9149a79d572f103948890d4ed38a22325d386a3c1ce387f4ff4cf8ece23dfbb6c94df3ccc804b3a2af5f7426d2ff13ea01b51ef751b2066a76a94d110a94c22febfb439326e0d553a69d007d8d0011edf8ecca85f7022c21b6c4cfeafa4859581001faf5657d6f0f0c5b7b5158fc8da12be46e276a2c7c77137baa0d7dd212c742fbe258b384535733a29b522b8bd0c7739ab4ad79d22fa6c5af955eb2088e707eb6458a5ab6fcbb4414f6a919ecb6a11525f16848466f1911eaf9de8b9ddc8293367f46d065ba55e0f53ad45dde01245496c286d7ea77c8268452502f3a68befdf946179e70f65e289fae8c7d4c3b27e25c008223e1f3d8a6407db7d2edb4a1ca5a7eb2fa0e21fbdd1424087392f9a5c15567ef2269e582df4a1b93ac2a5d41b72f6d92ef83663f9e9b9c671d2568d7ad17800ac053909ba443ed97894d3ac0e696791ab959a772c739af709173b84b24fbf31f7eac85c53bddb8269c84d62770b2bb80c0cd33ebf26b1a5030a791f533cbdf124cb5124a1bde2dc8d546428005c238590f71648ac0cae28d647b1c7359bf821e0fc52982f6aac4576fb2010b440a3b14426b075a96409f2e220f670704cd7c3e174c472c90e812ce1d9357d0743855bfe14a84c899cec5291d309fd733bc93b942bb2feb8a47286131a338bcb00f260e9d8d221d8845d88674f0746e075345ec4e3ae888b5c292e7ebef1f68d5c9e1d863e4d819fcfea5292fdfbbde7ada67425fe208f14a2e8e8141fa473d9c58aba29fdfcd36f8958ff45ba3ad4e266156b229e264a77e865e6ecc2bb718393a222002258ba24315a9fae5faf25304109c38c76fd8bc7ecd90836f4338c4758b1fb6831a57111080d18fd1f0bbeb9bb7b6e281952f7ef5fa9ad89fc79c33f03932d92c0ba47f322d1e371391d576d0585e93145b3a17772df5625cb541c1360c034a43690d02e6da1fa0b6d2092fceb2fa9c261fe57423210945429ef715b7992a42813d00a8a02813c5bb1006e58aa501260ea839bf88c7a1aabd44fc058a21012359634a8e418ac53e2757f3e3bad79b5ec978cb7ae6275b3a6b0099daa820c30b3ca140268c595e9f9ca94fe9e8d51bfb23fffbe2f6aaafeacf03122b059a864982dbdcba479d475e37afa04b07e882edc2a72672422d357c6d7bfca91cb8b86248c759079249c8e35235804607dfb23458ae563489554182ed3108ec8e3e4b5bdc26a28bfdf3486006c7f50aeea60259f3e7288a266aac424dd49a860b86a56382ddbc503b4b0c5070a78f0f438dfcefa8479a3f04f7f0135e2cfbf960a4f76c5a57d9f254e4d7dbb551a106c4f532135c8ec1eca9a4cb953c6f9c5b8647acc0562971f878e662e714777e1ee4437ed004699ac9c0b7e045257d6d2ee668d4bee51a2306b1c27244ba416b758d6de138c8b83ee6b763cc443d6ebb7598285fd34e5cc947c932723db2b52ce63c459d714d4294e0d073aebab68d1101c7e42857ee82fcc7043dc2bb4d01c69c1b4bec35679e9b948169f50fb828a225235d29311b844706f57e3d481138e762a2a16491910734ad684173f601818871ee710519da3fed695af40d493f9be50670ef1d5e723127808da160739154e994cbcf62d6c44b6dce6a9a78bbd1488543d4126c24734e431dbb0f6dd37b80028c732a02e11e81581397e3505d27532fbe9ee8d5e92bb2ee5f93515754bfcc6768deb615febe218cf536425d0c6edb05f2f0bdc8590d47cd1850d6681f9772edc06e002b59cadc53e379961fc7c53b763f55d4662fc5f431ce0e3c291a85f9881f21dad079569ea44ecad8416f828ee46f4feb67f758548b50d61fa28fe0efc886748a37ba42e9c59029673553428d6a07177872bb3ba767cd9f1d66087ca031569d3cf8a37c8078e341443b2988634a07edc5c83c93a5f177825428e0b710821ca31cd184e24ae7c5aa13279ec54bcede01e89fabfb1ca6468170fda89588aa96fbb11ffe4b730102ddde4081c57e48fc36f0fffaf394f5c3ec5ce9e617f9473ae50ff09e52ac55983fa80be531472bdd298f8aabae8dc49f04d922871b1a03db69580161f9403e0abcde3e9ed734b3b1494fc821514eb297eb305582394b697574903d64392e72f98a2ea46b12528dfee0b8e3727269b27b6e49d2c65d579715ebd97ae748a3f30d67e4827839c59cfc3d1cc93b9e760ab388ee7a84ff054a8465089f2fd13ac58030acb7ef4f911c0069d8a7e56411aed5309019407200863351d36d3c15830ae5e0e0ff2c42b0469e7598f6104fdfcc415a8bc3a5155b452c3dc969fa9e13e4dd4aa4a272176d5c18ab3ab6e62d28fa348d4c68e9bc226d8a2044574fda65b4c2706ec4da7bc437b31d6a5aeee8a9aa9467b851f73f984cedaadca095c0582a96ffce9ba33436a34fc31396d58d07e1447773578d0b486790aced84a256ba082fd286968d5db6615341c0e19a8927abaf464322a4482f8f2f8ef7a3a2d954ac714d24b1d17307b698d18b956b567755013f47c64bbb61d174329154c66bad8070db29c25853a675ba1ac3760a358a5fbb550e832853f33a9c715eacc4b885b77616451eed25f264b168245db557eb3adb46ec7ece6e4db3c1266d8bd6e9c7063813b9777db4ebc093dde06ac8bf317db34646847a254cb3e57cfa92f752235f3a99af0c831ee81494ef81a662c0e102f0596174d9ebaf706df4a82715024ea1e2ef87a1f2cb2756745abb1b8cf2d0c9f8888e5802effaeaa71d75d0619e427054eafd505bd4e917c1f2037fd73620cfb3a18abf6c0f4592b5658d9b862e0ffdc9c95d20e866de2c96ab136e9c6c2f0e28a58aa34332899713ccb33117d9709d4ee22b486db72f13351d0df0ab9e46838357ca774bad37668491b2691571668a72b2488ade2432b22bb45ac274ec4ec65db5e42f30e32a74ccfd9a49046733754899e74fe841e74fe08f70ca646693a69c1b52707f586c61af885a3b6b6b98b7f02b9be3f889928d99f043a0c54352ecedc905d98ca2ee96e6b4eb4919c9599578f4cbf858246eb5fb1c4041cc40780826c2f89d07a72adf73158b8fc709b13aa11c491cff9f34e62e438096e8b59b8d534682ea4a6b9239a12a4eeae120067e3f4e0026ee4267a302848d78a43f60f4850e64272bda7443af73468dc4d87b81214e36a7d2c271e17a3771f2c0c8417f5f8f65003d9ee0332803aa7f13fb97cba1396203410d7b6664b4503e7bbb55a78d45b157c7540d7c8287124e10bbe7765c431e4860d8a33a147883ff58e27a5a93bd8f7bfe01eb8cb73fb601d52615fcd89da8241e2ebc85606c40aeee391ad841d695cf12d6a299e03f0eb07b517c8f54ee862beaf8c7325f9ace5ddceaf68b1ed2f1abd8de36fd9493ced717ba2f71bd9e6bac9270fcdacb6fd378dbd08a14e6eca73818d8cd5c0ffc4c4320ec55fa1bcc8796a0e961d2ee4e4a0a7ecf482b99adc1fcac11a6f793f547bbadcef0f0a4f98c548ca7851a6d8a9587bf72e4551593c15639d618d96c007371f166dda63749b3e920261657006bd8abf733eade3e08ebc2ed97d224b2eb4f1cff04463f6e77f5a8b2252155c5b037c44fbd44451afcae93c667dbf908d32a64b4f40838adc9a2fd5a77b697782453b6815a334a4077c5d7c6978f06d39441feca9f494718c27f260f716f584a9949efdbcd8e8d4332097a1399285807badf4b555a5599429f64c8fd5d0645892a4b51b43d2b55e428dc881230e4e1b4ddf01f70087cd5bc3325273e04e5976f3a567c61c4c752eef329879dd86ce97ee8d8cec703ea6c9869369b844e02a9736ba005a07beaf9459309e3e1f362b31cd610d6e00d5f6bb2a825d064c7652f1b1684d3cd53e0847e702cb41bfaa04cae9ddb140230e8582eb2af4592ef5a3b84d868213a2e9d08002ea19def743610d16154660b665aeedf7d12acbe0533a34f6b7a6798f06c5f4b4d1ddf95012f66e5aff433a86cf98e851c31e170714521055f4b8b89cb5152b9760676e07c4eaec4cf30992048bccce5ba0ab742dd5ea01ceee908fa227854b3eb984666b589d4e6ba9e4237ca0f2d61d9f77551ee237518f865a1f5d0f05e74e416578c5ebdcb676908ff71a7b6f88b702421f5ad1860319693843db1056e298e71c78434b174d7ef31f88f9ea49cdfbd034d74d230f226d304a51a44f1799017a86e63e8b6174e1bd8603967179f978424bcbc1b23ed601ce07485f5cd169405506795e4de3cb831684abc58222918ad5ba4d816990281787a09ab62ae7708c7b103b20e53cb953702d96862cfd28786cac86d0bf1a74999263ae03fbebe7356a5add5f6444d75f27f492610e63f31686c16b7400c4553dddb4f2120ecb7c6a3f512f149ee6973a754d77a8661f510605bff1ef88b10ffc4d13f6c6d963b2b538f9a0845568daf87dc8a0b1d40b9e1abcbaf15c46a4ae06fe6b026e77162001154f2b3a8f7d42eb1bb618e4a121cb6aa59bae4ec3a639f4aa70b482ec055d873cf1b13ca6ec597658a390268d390cb35a14163d549d7db2d59f4deda6989cf32042d0fd59e2c4959332b87d3f112b85f0e92ea40c4ec00fdc9e4153310bd71b5f85ab41512d2f35a2f51e3d9f80872e1b30ab53a6be8ba980705adb00472751da6d32f34c1760cdbb1d079961d53309e9262a09b34f19ddf3b0a7746d0a2699e648dabfcd8ff9dafcbc2fabf9956c9547e865ca72bc92c608fa01e7021b10d1698fadda34a2aa89c7e022e978dc116b70fb1f4a42e74a419f060550e834a32326ee9e28a7e6be2718f393d71042b0e3de6bb6aea391c9fdc1442e78ea51de7e0d070efb310766e4a89db4945c3e1ce701bbebde8c66fe8a94af30880bf2df9912e8450ce8aca591200409f25b2d49e695e3e4cd9818dcecbafd0327b54ba274f5ad42aca29e0383fa53d7eab011e4d7efc398b04ad86611ddaab348e67152fd8361c47efc0f157a3b629f5e37f1e8b1cd89465bb41fc0efbe1d89347b51be72797c9033d131ab56d4d9a0cbd8ba04503575523cc26b5b07be119767a9ad5113aa0dd6c6eb35776283e0eb4d493b099026613df549e13c739af99be86414428e0eaba7516c4fe7b47543acbc0fd872e7322029da444e098b7e786c84fc03671c8a1429044883085c47a3b3c44786b5b4c7bce3fd6add5cfd7044bcefa5c8637cfa8336b07054a0c47370aadb03aaa7e7fa6d4bad9ab823fa0a7bda179186e0bfd70a36671ab572c54040b21350982361243d3d387492159a618f705ca254ef800bb74f6829115227d8f27b89c6ed38417021571311e6ee56bb57b3d2463282053e0a6df972c14b4c476b9defe7c3743de15c5067f6e6a944faef05135e4e475a77906b5009d9e6994de0b15d6a3c67c731a12c0c1c8e1dff7d57aa4f59612e94663a50df0e8f53ae8c7886ff30387b3273c502656d86d7cada07e61a7d2eed650bd590242cc244aa91dd4b9832d686b07ff502759d603322d1d86f4f6c84adba11d4210a401d7165694a0b5b4a5d7a395d52c1ae42a5872c11c5a7b1dceb4f67df60b800fbd8c072f56f877804d8892e3e80a9f878e6638420a47f43aca0061d4599acbae2efad1935d7a31f091fa161675d9158a4041792861b21b9c9b6accf412f2664458a0c1acd1cde000f492f143f2add51d02db2bd27da6a83d6915bddcd6de52cfe7a5febe75eb2b983175152e01b2a7875d12f8c80e8325b812d864d7b853771a467a930124446a57c1be7d1b6a8d8880539f9d33f1fe90d65d6c3483116e8c29ee74785574b64e4d718aea1a947e7fc878b07c1f929a75a5d66256cdd847609f1fced5812baa456d4d5709742911e223f262bdc3d16e273855d0e5f60530bc2a6160b797ac6768e00ccb6a9ab7667e698220757eeeb8cbf5394946ec63812b103b5442b82ec87b5b950331fe59848b7e090e39f5c811abaed6e99b7c8272e76cbabb239d39d9ca583f1afddfab519f3c86a06da8905a25f1836f587a71011e451dc79818b332b5e01d48e1341f810cf8f66c841461b75ec99952df31ef5bba632331169c8bacc3532b12c0d9bd2d5734236c65fb8443568d38fb86b5b7587cd6cea2c3567537fc2257a636780d25af0b6fecfe009b61cbf3891f5d910d707c2da640f549ed8a1f371ad442867bdb35cdf6dd6e9598b9b5bae0a95f8e31772573fb0d3df0e44e6b499937c1d8a0a18e4ce736e22c689d9765d03e1aca19eccf30be7f3d478c2169e64c09ac83a9f230599f8f50a29a2b7bb4aad7aae7b7be7cf4510ffcf2da8f0db8c2376a58ffb5fa563d4674ad0d9dd3f3b0a5320cf1b2872d2e2f730e0d7959b1df1a6726834aa3825d3d0b8a4e820f0059a60733df2b44ba5ceddff45d35d7e274f194e4501e801e20fe75bc5e63a890f9a754419102d269296e2f72a57a6928280c97e42877736d2cec0bab2820a9a11949deaff69b434aa4668a786a22cf2a89a2b95d1c7e03dcb233df7b9c00c2f978babc3aa5d48d8cf8610e8aabfd507b908ccebb87c12087c99b38ddbe46d31ad35789a0709518573d3384ba0225433341af7db7b0422b090ffadeb9ed46bc162908f6a7b570ebc8db2a3694a1d4231fbe518e35e4cb60ca3ecd708753a075c22a246ae4bc6a99ae5ef11ad868794a7648fb4f3f678d7bd29228793207525536459dcebaded1dbbaf9c1e7af4b3184a484a656c257bf819120efda1dc01c3da0505d781a29eb32fe1862b379c9d221220ec425be4653d41072c9b82eb94c8e19352cf23d2be264bcdd7347c7b5d0cd0069c6bcdf85ab7f28ba4eb3cde39ee71b50c0aa9526dc8e096922dd60a176eb9a8a7425e6e1ad435ca25da504fbcb1debcf6efaa1b77d91fd4b2fe4988ccd9c871609ad8bbf8c90e110a4c191658603ba9f4aa884e1d9a6157918b4e9fb3535ab71ea94abff654b77b64d3ea9421371d62683909e55e8124668e047512956c8bc8e561f33c9f0da0bed4e6e1a829027f99f0e9d8f20abe3ea384d8391e221befc2187929d0732b659bc79f66e0007326cf9d767cb5ad9f1718725ab54db46ca8305d6c28a649d09907b4701afa113d30602992e2cbdb1c0b476c3e0f821cfed0cb6a97aef9303a15dab6d8fb61a7d2d4ccb2262c121f522ecc5f5dac792d567146368d516e2e9b9f0eb734c4e1cd15f5138a751eac119ce836d061a2e0ae3de424e34e09fc49d02389184332ce9cc54f1e2fb6e1c76f9c94bcd014641cfcc95bbd2b226bd314212f4c5d7eba01d4866d9f05dbab2b2370b4c289e92fd5b23506d229d65f040393fceac7ebad2e1a07ba7499b98e3e5847d0ce3ed18e7bef24b851fb09d5541126e8b19a99fe7d0cac5bad44eb9bf9023f4ea8c56d43c0ffd0427b3ac9569eab2b0508db5cf9aa05a097d021d416d006c36eb93dd446b07f4094fad3afc9f55699772413874b2526560a2dbc609ed19df91c2dcd725d2f92d95f17fe96dc0aea05ada814a8f9e827b8f889cd25ccca0da047c62c73bfc8e0031eb0d5dd58771ba8e7e762658eba193fd54172b4c93e2bb5d42928cab7e61c7d33ad396b80a4f110440e82d095e147609f18b0179ce0cd4f92b0e4172987151fd783e99f1004d8ee0735ef4b37061b691fddc28b11a41cb9ffe7eed8e2fd9917e6438f0bc78a0aaa9856342036580d49937c6179b8d0cf971636c04303f4b7702dfa74f2954f69409761d935e33c39192cc31eef73aa902ced1b99be76c0916a731c9c89da27ca3b1128c754bbd3dbdf14cf3912c93ac5cc5ea1b3f704a4314fd050923a5ca34347d2c14c07eeaea42d5745b217467176a7b6a7074977809b3d53eb40901f9d4c33a020ba1f6a41b50e1b2449a8088b767e383417cfff058aed98889d86b602f2971ba7edd94e72a6e128d5b0aff73b7df969525865feece8009caeef26cce0b25b44672795b45b1166831af0dfb418138603879127af561067cd6f7473ff283cbc632f0abe57229f3be6c23ec67eb35e027d850de66d9267f6ace9061221f359fb37a6ed5874d62f72987b32b988a3e7c76488aced18282b51db13e106e35bad5c0893f035b0862106ef8cf86ec1ef792a4a5d453250701e2c34e0e824dd2545152bd967465d1d80d3d77ed5ee2f1d1b144bc38d4e0f11e57cd8808465d6e3888d4eafa841b459eceec99b9365fa088b81146a83c1a57e6d1b4b43ab134f0d59201a63aec4268596d3236062858793c22b8cbf4787154aabc1237ae63cf830f3828f9f7d5b16b7a554ff4df26fa585c45935ea3f8d67aebb1fd75360f7eb08e4ce03c10f1cd6b1d0afd86c4a85cada26b7e1b598e0b0a8f8db405ef77aadfa0eecbce11825d8f076ca50399876c98b74579ea34a67733b22cb101c94917821663a59fc5ea8bc98a6c9a80b399bfe56abca3cd076f8c73e16550480ead6e4ad8b1d1c2ee38af8e5ea7beba31515dd6f1432b5c19de8b53d7bf0442ce44ce4e57b8917cae8332fb1d61af486e4329ca156094245b4e6a8540b21682abea3aaa47cba7939afdcc4d4603301249aa894c541ce57f111510fec6f011a0c76635cf3ba60c5022d0943cc356411c5b1d19fc055056cade3c201fcbbccf65e9d1f8af27f562619c7ee3f53063537b8a6b4c524bee53da815d886ff7d2066fd04a043787fffe779e57c07e73e84411a7abd4808c268aaa72b14c59b7702919f551ac7b25a3cb0ec9a872e9497c05645f0600de5a9347f0c0b723433e4b105ca547e21f595cc13a305d21dea80773d4305faa7e8e3b3fbca2fb6c38f0befb4f3980e453d4f832b465f053d551bdfebd9d2f3ba06e6dadb56bd7fd777b79835bf8ca535354b6e7795aaaff5ae3b4e639cb44e3ab025482e79877a1353622d9e508947daac1d907a1adf2acaae213c3e44731d1e9aa2954504a70f78e508ef6cc0fb8882a324ebef801e6edf408cfc76af086dce76597cd9da70fa73c425fe490c6329d28df2de08a2be9e0c24f1fffaae9db1e9e3b82d75206d9705caba0d5a2095a5e0f10eed4823dd01d08914a45b7e9ffe0b04481ecb0082d5d65f6c102f6da59995bda7335903293c86fcaffa9676242a277c027c0777317999733772624d6538b662630ac520981a9dffb036d5d0df7d0899f41e85da0a90fbba2c85fde00dd640d82ae5dd591627ddb717e179e637703a6532fba8654d986ba476477c772f6baab83c3b468315c4ce38ac0f4a5eb5396987d1501bc1083219276e0073a70808456311a2b39a4d1126fe941606368dc6bb6d6565d7a35b1001a192b7b43ba8c0d1b65f52ed5c7155255f8d51452e50dd447ccf2675cc2ee9ee8d3e957dfa625adc32c03b9df470e49d6696cfff664d2b47c8dd64ecc385929ca3bbf02208eda423754d2f4dabf6e824f3e020933d5f7ba575b40058efb01e762e5f6efae7de6eeefc29f1de31f4ed17592bd144a959c6182a7ad5fe808694db16c7ba20ceccc1f17372669d5f7347a729a9febd7e9aeca216f6c71853ba0db6a8a9e5852c26e34ac4fb25b8dc2ce6e34930148d2be0a2106a267fb34aff300f4e382ac82ed762cf138574c17b1d0f34d2f5e5abfd22e192f0fee11438101e0ca5cc93b02aeae8aecacc79bd674169041af8d9a67d9771079a92c2dcbbb2b1045c540c9df82d22239feb63af3bbb18a2521b8915dd818bb17a0c8e63ae364c274cdfeb324c641e55432e93fd1156ca13c4c9bdd2708fa705cb99fddbc64a5c94cc5ed73feb1f9d7bbecadb6df23fea0be3e2767c5e5bbd4392535ca5d879bd1b0590574843c40ff3dccf88e59bf432ec03a7ac815f02fee0bc2687bf1bf9be6f2a8d6f7267244eea7607395030b94e49802d32b2451835bac2e6aa4dcefd76b4f8fddc8daa8584e613604913122423e7dd014888863d961945645ee9f76dae0252eacb62bf6429e3ea714c5c8314eb7281579d9b61be2a5f39a3ec555633ffa13aa1026c8c82464cd75b323ddd903abf9f97ee44cae2cfd69a40da4f54cf479a6a426ec794d5d7533b5c6ca7b05f027f2a23c8dbb96b6881a6a00336a3ebd255504a0ff019ae7e038489fc9526febb190c95f83d21ccf46a2ee7201cde4bff1c8a0eb060948f411161c957dc68ce674ca506ea44ece7b8257c63594989d4052c510947c78ff0e5ef4146943498c33bb14e8a35fd6ca77020f71273e1e87e3c3ece314f502e3cbfc6c3ae52a4a83ac7eb3ede023266e6ccf47c480d7e7ff017e489f932698bf35f5d06f1e78d21ef86d919ee5658f3782ce0c2cd9e3316b370a62b9ff33ca356882435918a13d549d5e65d3aa858ddf7661c3d86ba7555ae7259a26507795d1fea11fa4c7052a202939a5947a265ad66556dd13cb7f71b8fe1bae0ac25a81c37514fc98ef991fb4a3e360cee29a61350e8b513d487070b5399e0b8219035897869a917d96057d9a9958bdadb61c16aeceaf13914d212d7e249319e1b32aff42818748c48481a175550831f00b683fee0565ab727f3aaa833c0d9f478d0d2adef1d3550fcb7b9770d66464a8f7a49cbfa18f3d2fc683bebd52bc089961daecc42bb33609ef321cf97dd22b1056f48e4ef8bf3ae00aecb4d2273317ff5f72543f12559fd0c773b4c147c0f7a5b3923ae3ce52ae3855ae6c32b2a2af51e03968a05bc77313a26875c0a0356e2813c04c6d9bf33eeac5d0c5b1b78199e6e953cdacbd3dad4318ea76c1765b34207222a255d9f8c7d52745b1789c0ced8a467ad310b9f4b95c1d05957fefb6c3337cf8b20720ddcc41e47444f812daaf0790468ce2171bfd7d4212d1b4a69f1c4d0d2b4a0200aa2f59fab6271fcd842ce76ea65be4a497273b50129e6bf3bd044ae71795dc68336499b60fb8c83052d86b507f90b5a3092ef7a7cd594d5c91de73242d346bbb7f6bc5c6463505fda5f414cda1adf934c05d1f7876fdda02d4e9b6ff784b56103fdf61370d16d84f2dfc2c0507c1709657ebf809684f34698a0052fd149b44902bbf89fe71291049d9f6dcd5f9c2e4339caf548b6c23f17983048a46871f0bd9ab970ceaea4fc0b0c77ea4e40b8b58c4a059307f77b0a2a86cdb09df253b7ff57c689b5c8c9eaee010b97a718c64078b20ed8e430a482c6ed84eb6414f646ca4f0b493b05c194b2f394b8b951d7c1d11fca051f3aa5fd0a65b82fa315823def86b82924468c15f0d324010f12e597a222d80e02ccc442c3c52fb7d905799f06e9852c6af424628d61aacc8c36852b3b248d8d5bd1d186e4bae66ec501022730e822f88ecb3facb68f80b95b51e7f900347a740a553e49e835c3babc92bdc1d6c9ef7533196b6ca0208ed2a5e69b734247ba5c5b84af46993ef55b1907054b08393538c3d3cc2162197814b0a8eab787998e47c7710cdacc3d3b8b6103cc74a21e775a31f5f39b2657f287b452dd29523854faceaec5b018f9e156e076cd9b7143a1bd668d2dc782fea1b05c198b8dffc7b7773124b5fbb5331b22be4046181a4a0d26fa14b5264bb1d61790105431369f5e26eec049c10674ed852613eeabe7000ddfe4f10967a525eab0b706395f26bd3c0d58ca044800f9bea7877054b4c049733ba3b9d33f945affb274a54af6d31f1a7b706c68136eed719486548dba60e6e58a4faf888bf41a65b41170af828fb1e3dca44465ab332f7f750fd9c8edb4da7ed4015e82674b73bc3dd96f8beb8a98e6bbfcaae68db728e14e815c4511dee8a96ac13fe241e4d940a2a5cb51585f4e2c7648056826ef8008fe1235596296f272a89a20e8c42339ae1f8ac3e273e2b502360669d96add67b2b5688c2c1e1a4b551b72d2e1b82dedc5d617abb8db28b64709bff0b2ee48849d7f6b35e187553f60b486f6953fab5dd3222a6fc04e295bff4ef6c887759534d74976cea2bce54115c5a0c1f73bb95153bb439132b6cb213e11df205d07fa557c820197a7522a77e180c0a75d06354a70e93ec349ff2f93e78c385a709c511d071e760b7a17eefff9b314a4fa646b12b90398e5e255f53d25678d780179f7138db9794cae7adf8f17674ca976531bcf973b0bf4192b9b3b98a7d5a02fb763c7979ba0b0e2b3b2a3a1760e2e2267f4366bc38ce2d48adf07914cfc9665c2a6975d041e56e20be173e2cda0a826ae883a43cadd7b87b1dbb2e02c48330744ebde62aed18edd6cda4661e347e4b099ef89e362070f3d82ad6a02225121d1319245aa4b3a1cb98f30f761bab9bb67eaa072302bb9c417e75229d4f3fc8b1d852628952372f907dd274e3e7d40c815451b7b0800f9487ba5e57b2dbe19957dc6b71716f7fe1e988a8c63f70f262e1c5e49cd2cd39ccc23c4a58fc8c890aa998fba8a691aa85727b4844aaec83781533aa028af297284e7f8ba4b7dd8121aa4de8df9faaf6d0500be2fba4ff0f5292a1d403e113fd42d6468ceaa8450b3171e2e4dc68c6446f55b4511f3eccf157d4b4fa82bc43deb96f5862180eda2b666908dd046245a98ed37985ca5f9d9c9c6cc778e9716fdb09751e77e9009296a60feae35ee99fb2fcd8d2019d84ee0251845d6482a08f5abfc26066128334f66f510ebace57f6fadbd18885356782d1f542b042ae0f2843f45b9ce9d1a710ee7d51d017c6e759c0e07d8ec4c97c35ceb9652e2c9c5b1bcc8bcc7e18a66551a0f0572e5c1df058aeb6175ab0fa1e21aebd129351acfab2aaac43465644b3d672f4e0e98ff34589c9d8bcc01416ac53f47e3b07307ad7bb91d985f8b6dc5e2079533d77c4b96ecfc8084bd6ed0dec12f7a7362962f090bd437ced2db8819230b2754f44ae62a9ece6620d05633df92fead3aa4c0ca56c6775be90032c9b5acaeae1db7fb9a45022d81eb77f9a8d958081f6d39612051fedff61ee1d2784a6515da8f91a23ab1a60516b6dc58a5dda428585e674fdb7ff4cc876a2acd38a099bb6d348aa3810439b153e6eeef9a62e1b5578060d4cf64a3cc751325d406ed810e65de5c2bb8fbe75fd2b23ba43ab65867d1a23292d293c002da74aed6e4d053ca9b4a54e8e83b3da1e2e67b67dc00571946f9fd80e3529d3b48ac69ee45422b491685a5243e3594faa6afed559c813d921f4077db6245dcf8036afa98bdfa8442359a8654215582bee929b3a2bb059c1ebbed213a096fccb4048ce4bf68717069f18e207b9c6281eae38e8aa2fdc953d5f11add9d134c262aea51a6f0cedb6f6df0b6f416fe269076012be5b294c07a2623b3564ed6d4d70f0cc3862bcf34370cb6620f196d4e5ba9ea2240748d9967ed8c653d4c09f76256113276aeb56a702777b35bbcab333cb74cb8d8081174277bec6fa10a97e0d9d1a7626747f9c2d50f44866d03d54d15470d13369906e451bbf40bfe40628f5c2b7bfcec14a3179b69b8813e2de8563617920aa89b249cba6b98c0794172841c98df88d8ca8c996edae3ef3833831435960faef43a1a49f6f0321660e301611a409e26464b21d721207a734febd3084743216047066058e0ac83cfc2e1153d45c978a2bf2f6b93c64a44ff4ffcf67123490049b9e2fa853fdb9e979c9fafa111ea91b69f338d4816045bb509cdd5a513718c47fb5b94ffc0bc30507cc29ab588438487175a39b5f6694f09a5b3f80bc9d9ff64a85fac56e050059f8751426df01788ccecc885d0e77f31e5fcf6e9ecdfdde542f630ca9ac621b25bd9ec0fef5a6655ceb2bb8576230165dc042ecd32ae725b95fbcf6323e9af2cc422707fb782bb85ff98f0cb84bf42aabf7fabe58de396d782b8dfec8aec0000d5b76f6e9995af58e6c5e9a60f873c2efaf417ecdde51d5dcb24f0c8c2cf8725971cba47e80a5b678578d142cff6dcbb58148b81d9cd46504fe49301c8a6a00d8fdb2d0cb62a8a47005caa3e21c67ee488ede04b0598b1ee59f33e916707e5337c4e85da4c1f588f83d998b97f4df917a70701d92047c7d0d5a28209bbcf47983098449e07d277df25b6c1e91c726a2600c61e9273681b20dc2e9840e8f7710079a82c16b742e43587e69960fbed9831e441aed617bdeb99b1b40ff7bbae288d71b96a3be003aa2e699ef00d474f8d21b78935010f1dbe518311a37b30b41a725f66be6672d9f577e08c3f3e3d6bec766a7888e67acbcf1daaf1f628ba183ca82fc420e626a17027ce8cf3a14d4978f6477d06b24317417e2886585f6ea59003d7f67912fdae6f34f3de54248926e45c779e8facf73f90a200e3f73aeef8f1b691ac9ca62a0d5d277592604f25ec0eb6ace4345ef6d2d2b55c3c3700c6c18eb9d6b503f7490288eea310e76d8c012598e7ab41a172059705b2fd4880481e71ba55026d1c321a8cd517f7787d1c84a282ca1fbfbe84a7ebbfd97a915dcfbd9fb8d8e5a8faffa661048125f20a6abc7152a3b434077cedc7487ba82c38068c529f6f82d773fc757496fee7ebd89b2fd68188a17c1374303b1f6cd08ece6e2a6e6985c93889016c2c90f33d0e571bc6d340e3172efceb888aec6d507c6a816ce0d5dc55719639a5c6ab622044e4b1c2e86cdcd5dddbf17a43feee4d9420f038e328c85c4ece65f3e44ab8f857447af44bfa9ac0b5b533a6912881471f43e53563529b6887d40ec8746d038cc28d09474aafde7a091d36932348f2ccac990ea134a0b126e8b0242285ab96ca2e129cd7d589ae19efca9449883ac3b2372b2f6e8de6335620dcc7d68c9aa6314b1b91f3ecb6bfa5ee66ea1df6e778cbca81c6ecd57ad6e55f4f09231fecbc68f14cb80cfcdd21f49b0a52c19dcb789b32bc4785cb709639bb6f80b9f1faa0f0f4181f8c7ae013c90bccd200e7b0e7de0f7cfdb4dc0a6b95047fce3dc7c32cf1168760f10c4f7d192c3812735c3c56437063c04ae14c7e5feff24280c4144657557671870a2df4b78112d2ee4a68a0557423d97673bce89f2d8c614f2b97a4b81d51c4d057e5a2ac393b488baf82e591e68fecb21cd7eb8fceee973a6800d00d7ba0c6033ab541fdc5a0e9776cd52fc031b43fa207c99af401e140a0001babaa05abf36d24a352e122e5c7b082fcd073479343b59a38f573d8c419a4a4ced66a4def0bd2af2e3b9c2eb67697f60a20cde22f8ab7e981d81bd31fe6b38f824d27295c2e6179e316aab960769bc92b31ca4f891e5969c2cdc6301ccc48a077273150293ef6703875eed556e80a65c39841481a898b7cfd689a70f3ef3b88874fb3990a6b3cbbe43f5d3ed201ea479df513b9a44195890592c5782990529dde014bc395e25c4611e1ec0b993f933de8fb15521caa8adb481752590ea57508fff6c776e6bd4a8f3a02333e10b161db47ef13375b501da72f85b77e9a377a8c2c2474c464bfffa326bf753dcddd1606036e8a70069c4136a1cbaf8ffa01c0387ffcd481a9b7aa012dcf0a41b02c30b3bcf9ba48f7e6181449536849c6882940983a1fe789a68bc247d16594005f68902816e437ce7d1a485a04a2adfe2d0ea49bde1654215952193212b7ce161126166c2dda5bb28b1a8befd1f404fcf49c9e4dbbda193f5f29d6bd09a00ffbeee34d611e77d9717bc7c56e97d6544cc5787cb461f7b3598586ae2fe9cf93545d2cb1ba74a4a78942a70effa085f8af28ad7775dad2bbf8ef8186195def8584b2b2c709b58f5cd58e880a779e87e239615a3882c3ffaa2677c95cf113d858c745344ccd8a4fd1a6fe536a9eec472375b9838bb77b5c0d55cf8df213da7a115cc64b648bbe8da7760c861286c53a3c2a1475541ff630cdc301d5f66c76910cdf47647b2b08041659bf33d68dac1504729488f0825eb8bed2b17a207126d0aa0d8d1b5b350817cbed8be248f49bc3bca57025824e914aa82d45b1709eace4e9ba4c4ce49f41760841ecf2fb9aef8fb0554f46c045edd020f3ecc6f92f7bb11df88c44cd2e189b0f1f3a1600aa43dfbdfd704b874465b6a0a4fa8da89d0f871ebd01db139f3aa89b8ccb725dd3f0d90b944638d614f5a2983115af64a884ef06b2462c22480bd7e614978183bc50d2bbb9cb117185f8a25338ca8f26928799a7e8e5965314b2f850b1df68e7915474f226d1173fa553979508b4ea57a54f5c5e5106e1db92d3405b75848fbc98d61c916e3d5d979cb1c990cabbb02a66ae9c1e8d23a5c494069a414e3a2bdf45cf7a32a3b0226b476fe34cf4aa9a55fa14d17d55727a1a72b49582462686b4ff7379223d37a1fd60d8e751c3a6a5de5e1591ba54271b0707b826b30ef0f0d684745e5f0e83399dd8e8685feb6d8a60f810f75a32c6771b88f1db4424c7d03da583acf1a078d1e2e05991502034830caef7c112cb11122d55843a7c9916b504644728d1ae5885279ede65fe45e897386a584eaf7d6b542d98969546b827ebfcc4d36169afc85c63e8031de9e27e36a62ac7adf6195e99a45ebc62ca1ea4854cde7ee8fd47dbd329dcc47b825eb4ba8abeddd99f261c0fd662acceb0265ac2d782e02f3d8d8bd776eda57cd15ee30ac2bfc7e471c348e54130e835bc1b352f4a11b525dab1e3d28c8c03281aa75dde258518bfeaba92efacbd603c59fb193969fd192b9fb49aa66b8dff5612fb8a83b46268346906db756c8bdbfb24db5001eac81aa19b61c528d61fd0e77f1c07ab77196d434a7d16026b0d4f4dd19faa6b0b6cbfcabedce7517cad7097bd941be23decbd67fcc4840b23227585fa255a2183ee7fce512b87870e12905dbf11f92715acb32623dbc780dc38037fbc681eccf14e12c983983f967730c32f85ba327e3644bfeecf6d70c8e1169a4fc210b7941a3db79bb132a6637534e539ac5bbc7a65b90680019526a0de9d2c031c77925eb10af649b9a5019afbd80cc077fd6a02ecad67cf9231ca0667be330c494da2d8436272ea671cb62bd0cb2a1c3418dbf2c62d8bcb5edfdfafacf0688cb5b49ad926025e25096ca2cceeb1eef8c66245f93996a965d1f05f5b18c136d2b65526e4ca0db8013c30f2d0d068d34e7b39542c1afaa3d65ca43cdbca3cc6162267b3f9fd505df7d2348a32f6f0325ee03ec9f2fb2b857fa6976eb21650a0473d76b4d2bce22c3db2045f8119e226aa7f46e0b89a5a9b9fba559b06bdf907dc9ecf8f3493d8964bd9e9ee1bdc05ce21a2d4a357caee1ba88065baa655bc31011177be52ffdd46fce982976783c4b4520bfaf5370dda97403fb3569627cfd3814060eff8337a06e97884d6f157449e646ad270e3feeb1480925c44e27f0eb53d830181d9b20a0fe833896c65a20b6187f0c62a467087efe8a042bf9a197b91e61c0c8d1a9bb4e97e05e92c9d7b8b7e303c713a63352fb28a9aeac3fd725c4ec4c3af8eb6284621d40479e43f46f2a7aca4955adabc837c04a6af8b3ad56c6cbb71681674d8529efda26ebaa59fb4d3c1360934b5a02d900cbbe7334a1e1f6001bcff5541ff18356280760be820c233df38e0ffb76aec366bc9bba2c17e4caf94387e7d91b97cdfc73e6d002590113b7e7b9669353df519acc8df8b6147e490d1c26e072394dbc7ba7aaf46e08a26d707914d287fd8de1feb5fd3a04f19d4ff4cc9c387bfcadad9668ccf233e881f8553a53592822795d3414ddbfec5593b922defde0d826ef7c8d98c68d7e086ce8735f858c97ad631bdb700e000c16b0660f7f86fee945898e8b0e68e67176d8741640205c2525a8fdfb8292d9274ec2f51ed512f5b8d5199ee10ed201a6ecb79ffd99a2e357401189f2885337bbd78bcd7afbc41752ee9bb5419038c124e276cbca4fb137593917affafbb5dd5714347886a00350a364d5ecda7a10cb0bde72f3bdbf25127021b17875ff80c247f9e878e8f8c9d91499490b363b3589dbef228bda1e4679d03ee120a77c2be624adacdadbd7a35fa438df7b46be60db7871192341a343c12a8724085f558f62681462775d17e07080271891b0524b2ade1b2bf2c72c26ba85a9d49382a39c3c97268d73c0e292759e62ac8503e1593c852c9b61b858a86d498949339d32e585481f9f5df1e167912904292b01bab3adb4740c9264ea0511d37ccf387e096a45229687e58a962a384c21c42a8731071870538627f5b48511bb1c043e5f3e14172db3ad7cabc9f8936b804245c9a542b6e691a79d40aa829bd31191497d5ac84265232477671fa7df3de6951132fcb309fb0e40db5471429625ef82cad06dd58369bee89e5efcfd16e01d0127586ec6d373e443894d971c2337671df23db9af2becd0470811a8ccde512c04594fc94aa089bda575b82929a473981668ab2c53766522c90fb9fc9ad783a9776f8e42e2e51cbb83d218d72c386d4ea4998e2c21eb99671d8ce7fd90ed049469ff37a1f07316fd18c38e44c202bf9538c96c84c6a3fff9e090363c9076a9ccf7a7c798db759f830fa31bb3b4deb94a50b60c26a3dadb7fc09e074cb465a03ea2fc5acddceeb263f844437055e6da217ed355433bf40d717aca76c6648932d8dd5c4fe8b650c64843ddcc4dc219bb777e8277100602430b5593169abaa348ba548a975011fb2172ddcaf4f33ce9bc2b091dbc86ba929e6ec137f8152bdef91ae5a40f78803509732a99310602fc1afb0ab5d5de06546104712f88672ada99f1a326d8f1f2a2b1ff7c6ec44803f8e36ebde71f899f895a4aef39f45b72d79ae056eebf9624d30b1c33302a568c5773cdc544675ff4880af7c79a08b989620799c06b1e88d6240b489b60184d2b329810d96f36458518a3d420acb8cf4f4dc9504802be893d466a5f756dc9994a9dd6357bbd7c8e07bf945b423a9a3b27700916ad0ce573964fee7a36835ea843858fbb0a5082c7e178952584858ad41341dbc3e9a8f5caaa9b307bc80b4d4ce5b4382067c144848834ee71d935fdd390d53fc9cc0045828340c7a4d9c050ac056c73afa83ccb4a51e355318fb6f2249889b639f5a6becf67148f55eb6a45c80bb568987c19bc06e4c4a3717bdeb5b07bf581d3c7ef7157d99cc6db154ba5339e1d9598d0b37cf97839011eeb4b5f54f9fb176bf2cbc68ef6d163551fd94eb32b6e46cb84741d1daf514f77d4d8ef3b842066862851734e2f6f9c8bffa924b523da959e66647e7ec445db4d145a23e93af193c5100c291375054a5da1594eae07c2ce1ffcaf42766a333a6ffa5b6204a540e1090539c1d1750caa464abbba46d3b04474c69635ff38e637e2400f6b657b6a4d68dba415728b776e24bf9c9a1f57f69473db6a0e68d5d2769e3389909b395f78d1e50546cf693926aa8a0554f903dfb78ae6e372d29646b29e6818ac7b9a7b85b4c653787287f71931bd42cf2d34bd1dd53f7acd78fa25d4beeb88a79ca87cb11583956eb2d82552bb508aa6f70cdf00ff493c01f1c6ecba50c3ce85a12c8e5878532de47b2caf1d4e5eedbf4996fc0cd358a889b7c0949ff4a4c19a4a2518ca47664570cb3d17508561c3f34aed203b5efcfce47d4d6f64c31fd5b33988556b2b513faa65d8448160f38f8c277d3374d4b190d8f4adefec59f6ca44b95a5e43f58e3e2394ca8618d824daac3b5566b1a6b8d9e4915d6ebbd728e338b02b23c962dda722128ed4dcfcfca11b90b5f9048e6e84457f5bb5e78131731ba389b4e55bee8ed88d3c5b65b7831307140e12d79a36280e4dee8cb828101c5e82de763f69d29340e75ddbbe066b9ab8280e437e3f34a9c9c4211585fe0a7e07c6ff4dac4833351b1f4ef239392217676bf58784c56ebbd3359d5a41e718a839255e6f6f2b90ab2ed38ff143840d92e895ac50dad3825565f567290b1e0c2ff554650ad443d11205142762a07b4ddf7c727ca757da661c83eec35f65cbd111c3313cfb2e94a16bb6514f6baa947c64efb7471a6fbda6ce29d6b0e85fe16b565449eafa2156e5e67da90fb83c81d5365c5fce271387e97913612d7e3e7ad8b1e77b80a160c3e8e7982a55f78aa875f2af08b0b8a534526147969f5562e88243122abdba26aca01e34eb79c3baf3e3496bfb67a6509083a4627d2b83229c8f68bb495a4378d43e383770119ae32d6fcf01ad814235d1ec9928f616409a87b7706b6f72920594444a72f78621aa6f8a837b10123bb2d1152cf8522a74e2fc1dbe0a763f0e8852a122c6930b6a3dfe81a4a0c4f2501ab9f63ed1688e7d8ba304d0daca78f767a829fd8809ee969f3c9b7f756eece24634e2ccb787680738f729e32ea821706f999dd93fda222de36f6910755c5b61b19c1f735968e8c7990f6c34e720f771f95c5a2d88e31d5da9728f1d3d2464d6a388076d8e77ba488f2843fdc491edc7f44b1fd1a141123f89c55e6f9c1c2cde1ab61095006a623583eb50bdc51a661496c920e0bc708aab5733be6c1fa5f297c519de58b3d7f7d6f417c0f58d02aac76c404cd2e9ccd197aaa2ed887709d61d707dc351a73cc2edea4bd1f8d63c86c4c24093b9fcfa444cf1020701781927be96f0fecd58410fd399dc6ce6c44a87cb3b658971d3f22029d2f42ca7eff32b21efc2ad50e7212ac3178077d7c02256d7a28875dd14d16ac0882fc43d85e41f2ad4c5e17776842335bbff22ab04dc34a3c580f77f469c3f7ab731ecae677a32299f84d83bfb30793484a714ba8ddf876b4b7f9e716bb24647e0c54d139626f00fbb93f644d90dabb945a5dca5b491167c5c623e7675ac321e878cb0a068ffafe399f6a8f2f76c220adbb0e2824f1f1fc9b7a188121e0bd19bb3b749b9e3af98fbddab1ba7b89470a54e040913f8e25e6b0cd954920f094c0953d0fa791ad94f643ffe478ea854e4aba4255a20c624f03833bf5422cd5a832fa24dca71e441e1f4dad7a120c121b6166bd7c910365b8111b83e2d7d7bcba6209e971340a999394feedd2d99057537f6336fe312480ea27b42aa182254d704bc55132b466fb36d651487849e04ba16e3b962ef18bf98bd691709171fe8012b69823a9ed15d0e71ca59dadee50e7a1570beefb25c0c0dedfc6ebfd00547c69d628c12f61beda0ed0de4d57d4051da77f17ba7e4591324c846a00c035d389064a37e42764033ae81ffbcd3af8272c195b155e7073f14ffb85c4a84aba586e2de513b1f453b570dd881260645ffa3cbf7247717cd815c7bfc1522d3d8e5f8d11f4d0cd5d4fd56898a2afec3f9444787755eb5347e2042ed82d789c31baf9c747a113f614d40ee021bfd98930be170d55a1aff139bc0a8677cae671f7abc04a16f432c05568730075d0daa17e28d506e2cbaf96ddedcf5b6799b4fb10e5d0dbcb1beab0d6ce0225569a5c65e82be245c38af1467bae0596d20eb0abf0297dce1d90f1bf27183928995a8c6c38f2edf2b0ee76c1f887184925af18053d849c1350d974114e11e470e7b601a2bb2a18a5fd5c436765365d8ba8e61f33d9c2e645034d287af6a3a55aadaa87c27ae5ceda976879aaa64072c68604dab95edb77dab60a0ae35696daa9000c20a8a4831cee74156833307cf9b6cea5b1ded6a13bd01a1df4cb951caefdbe7dbd08e52ee677f5a8888f36a05cd777daf5611455b26269ec0b04d7a4f53f20f07e978cf43daed28c3422307176c0eccf023de5ce59907c466d14214a7b1f5df4e83fb9a2384726d8971ba61cf76e042072c2481a7e460e60402d41d5303470b6961600c58bf94db20d5171502ec32fc68e50cd167f0aa0db42f9d2415146b9ea56500a43014468d71138c09826b3a5d78282004dad613226664e0a8d372a8eb1ac0154d0255811b027afa7bb86ee68d6b8bedc7039f48a4fe7b5cba0346b8f5542ce3a306fa698eb0e40d90f077dff834131e9abebb3ec0bfe18e2fb3f5a0cdc11749d6f68133f01a9b7c1fb10793937819a8a92c70db9b53558e63d3fd367034b62cc182f9ddc65c04f340cfec7c7a9ccd92a65f0322054313010f544a1a3dc1ca9bb3f3c93527f5eeafacdd03ed5587ebe7e6d6c36122aeb296776e6df7442e43833478cd709b5ffa78f21c87548446b94f57fa389201fc75ca8b423faebcb8c63da82a4d4af725008524c0721c71002b89a498079d864699cb344cf5582cd3e7cfc62bcbe72b571f89df126dad23ec62306314320480cbd8954a3e1a07ccd666d23dc577e715ba1cfb1ff0721a87f48a98b3443e11bb90a30fa943f88f67790e460b5962f2fcc82ee15620dbb3ae15010e8335036e841d52c994c2eddf6e4ada7c32732ba4b8dfaf5714ee952cbab84b32060f89c0bc40250b55f6d2998eb933478a157f5e83ef41f3d9956216d8efbac7cb9aa5b913348133b53c0705c92ba246ae1df479ea0f3e6f5506ff1fd932392c52437024b50bc64a8d18250864090fe02e339c9eedc9ad818c2ff9d7b3dd77cfc1712d0f26f024b0c4b1172c4abc34eb7081925c07256e096a90744acf639c6829c428c57cd94a82366a353449f59c1ccebd143f593b8521de08e86020ac9552ac58c5d577e2fb75e376f47c57a1e4e9ef317021a26d77bc2d5b9941c126b7baaf7f971eacf0962216219dddb02898ae1a365c28957bfa892219744848b99446da01703e173306783ca5ba32ac0ca89124f29ea34d3bf2e267b93661d3fcc4ae1dc645b67965bdec30e173fa0ceae9e466987cf08a495df3cccb5dcd1a496efb9b013cf84194f036ea47f2c22ee9e157ce2b07b88974239a413b2c02077d9e5c66d3d94ea5ee2350125fee92049784975a131502ea53f9f5aef3a9da73479f71d103103585b5f50147a766b383132e875fe033676d7f99453772ffce5a13bdba2d5b041af0b138d98056349b4221c430810e6a270073632ba67766ae0ccfc335691223f99b51f16079523fa2fc78cb83efd00593b931696200cbd813e5c031e72f4bdccad9b8d028230653d0cd3a8a2267c63c92f567578fe94d3246fe4339c04de1be24e6df1fbff7f796a67f0ee9e7ecf79b65d74b972e1c972a9b5d1bad756e661069c716eb4651df1299265beb77b0810df0d4294722c0cc79cc52726548055157e7eb2805246b6dc22c911b2ffbf6a2a6be2f0e0f3365c77ec6d7d1df3e3fcfeffed98dff8e112c8704e36a83d66c25205bfe9b3d19bac016e444a601e75e1d53c3dc665b0d9b2fdf71490b5112e5f354e85c1da806aea430d1e06ac172216fc14d8e86b15eb5e0fd857988255032272a7bb3727f63a362cb713f4b398fe2d019cc7b577e06632ab45f1c94ec426169956c95bab7b4897346c16945c82280597054c37f525fe9cc4a35a4910d7d51768e423d38ce47d13f9c920c49643ec669c48d9b7069dc2f7d677f7b98ad012398f0559b7369a0b71face7d4de9ac2561bc2d0b3eed2fd997ec283f170b158082d0dd41f6ec6a302749b621db874653f5107c6f1a62630775ee03bd1bc72c641c7e28cf7e2de4da9038b830bf97741c3a11333543f4d8b8ac03e55917087588acc81f9c9e2ec885fd8dd4971ad4731ff96c2c73ff0517ae14606d5a84a5b53963b72590bc30b43bacf583478a4e0a14b9bdd83f83804951ccf254fbd867a9f0003b325bc470bd754922c5da4c635737e64f7eae8fdd982062b5b42a3ec6cdd44ad84e8fe985ed742b36f265d5d4eb0472b77379d465f0adadde999a2a49d4710c6271712e383498d228a20646531350207788cf534f766a762459fa2cab174bb5f8fc63aaf4976f3d1f4a105fc686a35863bdafea8d86e2facc67876f1d47516c55747b2793e86fb5f168b3683e58b8470ecf659d5c9ad0b246ba5c71834743f9a870683b42a88984c4ec202cae8888f220c92d6a678adf64cfbab0b3d2a3e789fc4fb6428fe7f91807b8891aeb0bdc451d9a8b755fbd50670965158812dea2e2ff6d528e94c01cb2171ee19feff237692961a066f20014037360965ddec5533cadc90709714c3328b78005eaac3536eeafcd7effef7abf841ed486526feb3e1681cb52f197125affbdf7fd11faae75c3b44df58621f68fd30e27a4a5bf59de812b1b65781f32e11718b8870bcf854b7ac4dd732b63b4a716a768220dce42acb046d0d7167d8e9d4def5c27f013dee5fb7bdb497a09d0fdbeb3148d56ab14a2791e590a6f84f66bcc717985e1ef2aa6f9aa3b321f5c6e9775275f2384d76afdc5ffe07aa5628d6fde1ad59bf7fccee706cfcb3e613317298f484b796821eecba7c4e89a2aa413dd98f15b50d5364b0772b1222d0756bd388eb6168aa75bade3aaf08cfc4ab3011d62c67062f22fade51fe2c8f5cd5af698c031f40d020cb6f704c9ae4b4bc81604f4995743fd689b8ba67fb5a01ffcb03186fe7a4010617d638a0f0d1f2ebbe137b0ddab53bed100e15410d0c14ef16cd7f186f9583d85450bc36cc23096c0dc9fa82e4f9bc5a4bd4de0f5b40ab17aa0267156f9d9b98a4430a6d5f400e6e1b73d456997d0d35605f2de0d917fe18354175e15e0a2b06e40fd74ebb729e3a5bef3ecb403708849dcc27ed559b9d32d8fefea2f71fa604e75c0a91b0272b6d1b9da57cb251468d1b2d630eb35ee95cbc28c78f1b71caa1910fe366740b340a55e1c2be9bde8b6c3be5f3b61285ae55376fecaa9154328a57858300f4dbf1f799a4656ce09835019e1c531d00a9312da86f91a12839f3b8997b04388801ee79c92187083bbe2fae019749e6f4d583df1098122feabfa9010a59f07a601375c8daef9cd563e0eb3556ecb67473954016ccf986770c76a5d083a6757f899ad347fc3695c0d3c350e059254f24551caf490baf66f5955afb3557d7c75ce10babd0b87828ca7062f290a81c94c16204f29f28690ec6327fe8d6f9a109ed5737dabdc2dc724125af07480dde74f3e3baa313b70dadbf891e5f0d747e4b485829f6c7b207eb06183cde1fcc6997d308fc80dd08d548931d579703cb1554395cb6f6afec2ff38e6a19ae00f06d4df96ee67183e930574f4b7a563dc9b1a6f7723dd94ce066a5c472815a28cadc803533a1d2fdebbbae5f43fa44efda9a17c1f73a5a40f95f8453a8749c9397df654f1e63d6cb7e65ad7931429b91b07162ac9582dca60772a731eaac9a5b5edca1a7bb356da22da78b404591d885ce7667647620ff8ee043a990a1927818a286169d0c3c857a151c61a91e1c95ef0cedad423d7a46c4e94fe8719066b80253037cab5a91722762d5908636cf44e3315d313c80583c6fd78056f1dd9c7cd896598cdf6f89377379b8b3b7628e6db88d9b1522d44e3931ae07e4123bfda04b5bff3d365354291d2c160f5a20500988de3aba47d3cbb65d04a636ab3de40a9aafa8fbf286b6c088c6966e3ee086bab0d8f5d2cf4cfb85e7914b805df8425f8fd633836434ab0d93462bf2ec8e0c14c5cddcabd35b587e424e213a8e3d2f44998d5de02904a145bdb570b23c7b64bb64d96df44b5f74a738735e5ca2a8a0f1d5fb1f78223ab063a0e8c7aefead6ca2934aa6e526c7fb716189f0d77a88a58b0ab6e7745ddfb95caf705060bde01c637db0c47086ccac055af5303b50d3eca9be10066e207304c389cea5c6d94586ff11ecef7732494abb2f8b44ef262a9a90184d43a9e8ef8398982d0ce88a2d85076d1dc546b8caeccfc8073221fade6681720a941d4689e5cf90385bc9c5933b8663ade0fe302ae3327b60dc2758201a718f3413241ca148f73e04baf19c3a502e3b46d150a0b17f8e2c819b710dabcb8e01117460c1f2e7fd65c7577d82a39fb2fd2c5b4f785e7dcfacf9c088232950d1c580e8198bd3943de9245d54829910a507918405ad1c57ee96eef7ecf04641acdc6032c415f6eb88abbf0e38e8d4448dd07cc6b7f5b61e5f3450ca002606f33d61e6e0775c73df97200a7bd524fded41d86d16440eae190b61bee698066242bdcba80790e76d4be7908df165164019f4d2b3b7f12814c73d797aca1edc947441e0f4471ae22ac934d9f7ef10c12fdc2a259277fd4a5a77c835233fce3906f502500aa5b76f9bad815b74006a7b42cbbd920289964b2c6b1438bbaedb7da44b4af852c32d5ba9631f19ba3e16e171f9686c666c6677fc9c72218c7af3f6b112f77d216a65e9713c05d00f569d4eefb922dec175e007ae778e8aa0bdf2d9d01977d748df940e5a20d340abc203add3588aefd30bbf3e678f6f0d272c74404e1c47d0473079abeaf60596b74021874b784681a5052393b5feacd3bc5b18d8f3396477662af49132a65ee06c404ec33d2a8825d3a9e26bf622e03dae07b58416ea214ce87cc8e6c3bca62f90ac799f9ae7f56b60afd03524f6ffd717b4fc00a5e4341518ac4c7fde4d5e3771ec41ba6890596f99fa77f2a6130be6d82aef97e66c61c6e3b094a18992566847430fc445711fc38c7249739499d71b10cde6dfce2c7bf13abfd1294650e45ca8713e047a482c0d05a5ef2397fe7a8a71f8e910026a963c7d1c7c9c995dd57893b2caa57fa8ed17199e9799830ce85d03f82f5b8d5d0c78cc076f05a7c91e4fa8862035a64f7c489e8940fd203df111f0399718543ca55170a1437fe2fe33aff8a72eb6e7cb3385f25115c094641fe1f156ea4e787ce62839a358eb5f0159ff16c015b8b19fe6c153a7d5a09a9337b45e76472b6383238ad6466d84535fff0d76650cc33120434f573bc793eb5c6a81bd2a3109b8f9cc2010df174e84bc8adf003e6b22500cb8e6ac8075e1df3d8e7e5b83d99bf473d77b25bf25f02bd6ecaef53595a7144c3ee62e7db18650b98d425de8ee1ad06007b83d711ab0d90b6caf02bf348301c5fa7b930f10a869cec86fc43ca02f2915ef642e265a2419a500e68d2b0ed66e539a88ee656f685c2f9e089258503a0c512f0fdc6443e5ef87ba6ea5af0677c3f000047c9e0ac990ed2a33783dbeea199998f0396011b933c7d9d5237e6703a50198a571936f44e2f893152bb71de2eac2bab028b2a70340bff945f106b5b30330d418b55384d872e2e7cb187447e6a25559329163a37e1a714cf5d438729bfa11f027de412f9683da0babd2b6842ccc9c04886f0a4a89adb424272352643186489a5929511b4ad237a07fded404ea42dd03d795e09b8424b50a45c76098efd9abf08e9ff11496360758d5639d6e8e9d2f6f733694e7a680d4caa1d612f35fb0de2f1f8f19e41866a60ea69a91f1ea8f820c42dfe7e69195cab490c3388f587eb448f66b8ccb6d187167f083bfe5952a30e587443a788f6d11cdb9eff9ccc5c99ca01c963e81017c0146dd31af2cd10d3878981abf393a50892089c34cc23ef8b85ddf0ba4e38b341c27dc6c2490fba2220b070635810736589299042ad844d8e0f86ff06dccdc11a4519be406b8ddbd10d9837ab911ee9a8a6218eb100f6246d496a8d5030e7a71e5543950d7317aafd0c91c2a27298de0a4b6336ec75eddfbc425da5c5e2b296d61cb856a7390d7bfff6b4e7fdd219ecbfa9bfc98d0b426846737d1fd843895f17b4ef6fbb18ef47253b58ed6e1b5d0e9ee31a9ff8a772fb9036ab7ebf3cb841b1940e90471db22fbb7a966ed44d1735558f98a35695e96009be9eaaa249674e3d478f7dbdf057cc1552f36d1c2fe2547c3df7d3cba6a38be40bdaa76131e96a89817b8e76df286601278c0da93ec055f14f49b7e8079d33ead3b058eb2e693c343ecc3b20a44c678deda05f02c9fa1fba70db2a11970fd2a9d2523c5072764b0fa6188da7965436cf29dc92e796298a8f7fb22e2206b5191ce1794467c2573a39653cd1bd1bd1243896e9f09710ed40a6a98261a2d9d76df94a00ae779e620a74d18e47be7bab7473b5bc06d90ec9239e3557b231e3a61a784f6177215b3d1c3db01121ad59306cc34907f34b9eb1bdf6bb699d2cf118be267e7cd8e61afd4c07963dda76e5ab58892e6f9b12c8b62b7585b458e4e99b8c5b27b1cfdc4e49e22794bac800b3b101d0b633213fb4046e48c78f004c5a26082782009d37c9faff77843b764f2102cec56139ea8c1ab2aa74a757bb392b1c4429808d41d4aba7c1f1caea66c9a27da310e3342111e24d17bf5b936244ac8832bde4f86e08aab11cfb5a7b656556b9183e24f51533f84d5900e8d737f8c93a4fb30e31014cf4c344aeeee74ea97c8231e20be11ff5583d34c1b5ae2f0774c8338502c420ec26dcc8ae6dce88e8dbfb15c76dc60f1144e0868ac8789b58a49b73e68ed0afa4d767f8051f3a5408d55b8d0e14d2ad61c8e7beed10cce3d90c45d7702ae209ba63e2ad016488a32b191ed0c862e398844a877e7a708693488c6b05cb37c3ff6f73644c7fd78aa1be6c2faab395be0eabae41b2261fbbd2209ad73f9020b4466a1df5d393f82c706dc6eb06817d7e1e1f894410156561ab96828d50a349b0ead858c9017f890ed3c35bb65fa1c05a6f8edf3afd72a63b7f9e9dc748efc3a3a6d2cae14a6462a909f668cc4fbff3089f52256e6c048823535a75aac983878db113b841906797338216e01d085339e1c79f91266e2194b5d44481ca1151ffb09d85054efa672a98f6c34764e4ce573a575c1e2bfbf1a40164276a7976b26cc0b76914cad1a77528370604e9f53125231bd5f80f1ed9ba356a36028fa76ee0679f8e70ded45c9215aefa6c52603877fa6c270ad40645bab1547ef721669cdd41d26d86335434a40b6122bd254a164ef7820a59bbd8d165ea124f76dc7d9982cb3bfa32d5a4a4f739f74c9b5be61d1eb3851c3e7ba781d00d5ff7896f8762f12eb32ca4d223070d9a810e97d82c80861e4c6a6b077a7545c56c480911321e3e5ac8d80a08c82c7bcf433911cfe0b44c680fa89125137cfeec3e43c030104056ec41687ef7e2736f7461ee81a42b26e05a7e029dbb1e4758d1eef60687988aab0b64bc1413f8b4a255b34104356f577702d73c77dc52398ae3e901d1cda67f4e52a1bd494c520f2d0fadd5ff1bea2816227571b482aa9e91f47d193d97c343d3d34bc64d0d1d62f914ace299a33b4a32eec320d94b7520276bd5fa75d8cdaf669968ac61b76464ed89eda27a6f668f8748c60a6371a6aa84eb566aea72e0f618b2809d60de679e90f7ce4e44c86ee2216021c0838b71a065844f15e33108bf0eeb2a6eece95a9ab492282fd707eca360fc003201861dce92b81f4183354e5b45c7cfc07302059fee6cae8811cd434b1266ed525061627b0117db0a08c8fdf9c1a70d7f93c1a20929407f1e5ec05ba5cd95cc4918fd6febb7b5a5f2170e0e9fcb661e13199770010be9e0bb2d57bd2b4012d9b1ac8414c2f60b7d1ff4f3748ee504bd7858eac22c2a6867fff8f01ff0a729cd8f4ff47b32242f816da2fd32eebd3d4693daec9dbf225ab1878c30364f4e76383fba7fffbf63f11cee0eb2add76d10d0632486853e8514757ef8db303dccd2d881737855a7831038e558a18abc537985770cdf6d1af7d1e316c3e8850d70b501995a8f511bc843ad68c14000670bae629413d96b2fc9758063d049973a776a5cab4356c6253db13397254d14bfe24365ec8e429273523a4559ddf262a79fe1a3d989b81db02a165ea32064b04440dff2882610ffd0d2640f617f35ade56a3ad42585407504005af67c14f8285676b2f26269b49d51c181b259ee9217f36e5b7051e58d5e2cb72b7e13bed65d06237a230f22119acaaf180d761845979b19df3302cbca21fcd2d02482980d3860ccbd79e6869757cc05aab43c85e74b7fcc49d4bbc6e02c2b6b488b91ed26acc607918ae0e2734187fb7c43cdf1b5779fa4d25c999d664c4c3604a8a84afc9c18d96c63a774e61c330c4e6471a4bc545b08fe4a66ab7fe28a908babe29010bfd9622520d79a1963bd7443defd773d8dacdc720f5beb849ed8d0b44afb94d5d38b9ce78627125c2c10647ef084a6c799d223c725e0ae62e62bd91af389637af6717a4ef3b0e8a68f3cb6fe3bfbc938f6a9e65bf775bde36a50990b7d722fa147258d21ac7a7a8140a22e7f17fdf27bfc541df5ee42e49467f288781ab7214db0d7c0e238169309b467417c4361b997b9787d962bf6c5650485ff665acabd039d64d1c8c3c11eb658ac6db5334b8bedd960cf08e2a58dbe03f99c6e027db3049cdc9b7294df58fbcc70c8791b483ae0973d3e60d8ca34d0fed39cf7b3eb9fa97a51118a1651f5ceec603abeafc29afca3cacce08f740bb36cf42b5c4d800842b78b084d4c990ac30f2b502aa48ed13bbc08f3a466464042e55e6786e858fd72a64bcfffeb1ab6887f581d0eff4bb896169e8aee280b6a331141c4fd99bd030b217b8fa4df9030db2a24888529d49cc9d6081ec87564e5b0230e87a8c4a1e5660acbae1a23ffa78295149468f70ad4027550f690b5a61f89ad1a1486f2038d3fb3676fbe4aaa9ce9967ba15b795b2b3beec6ce3cab38a6ed6aee8f1ddb46b1e2a1cca72336f1cedb8859b654baf25bf4a125aea021071121287b1c7fbedc8cae5bd7cb8c2d23974ae53cb6a931601f8d5916019a610cc94ff33f7b7936f65d9b534c48a32f92912bb62ae55eb2ac79d667eb47dc3eded582db32a387fa2e3e466624121af0f5844d316a02c9940aa277e0df8fba038b366aa6b3cb4662b83f1795ecfa286b3c2ca57a73e91e14925c7bca64adc083835de4fbb4a0c0a3b5813d4e8934472b9806c61108d959f90e13af785fe67a3e6371a676b96f62efe94d986302945790b2b5782b548dfb2cbf426497c08bb075dc247f1f4d193bfe7ca6a5d84057310b08c725a63fda3ee028be23555cd19adca114f4b8716f97da4098fe2bb6488e4b9e445574f0020beaa728454a5047a747dece9482ecbe1a683835296946f3e61ec9d508540a51f3c25f0b084e4c7f97e4cbce74909425e04858707692a0c641915c9e34f044b385356864b9d29cdc649a44ffa90798e73dfe411988dbeb9cb4dc31e3eb6bd16bc5a743ecf31b70d69fbccb376d15df6448e57b7ab6bc24db72a1b45074ec2cc06a9d4008faa3280345a00fc8f14e42fac7ed330b2e1558d0ac5f48c8e75982e704bf44678a69790ebafc5c8a48cedec383c01b35022a7bebaa1889d0c90c95b7b36e1daf7b6079080a1c86762792553457e35190939e7d7a7463b93b3b83a3b2e2799a34ee0e655aaf5e538ee9ab0b400e622ede20153d8c53c08936be27a900bc5e13f6ec3dc93c95c7c688b2f5744cb96bca15651f51bff651aeae0d7edb5ff77e5cc2c2315b4e9ed05f1b327dd4c9135b787b528a9c963469ee7dddea21f332b52d20c916a1e034cc5410ccd92b32001fa02d874ec3d875ed69d1f431a7d01b7ef71bcb7746782850881ca8404cea07d15fe1aea5b00aeeb089d9dc7ceafc753199a73a28ce4d508e03838ca3211517e568b4483cd9694860f6ab5c04d6887641b6d9f3e7a9464618dced81c03a07a6062b9e9205d93f742dd4f0e6555f6c405fbe41c05a218e83ae190b6d5fcb9f8413a9448f2ca150028eb5275c356494f73109a9ff94a589ba80a4bb18a3bec3f62288a189c4cc7b4a2ce046c5686e4ebc88bfaf1fe8f8b16f1688bd133f96e226560156d26262f7b5545c2a25361de37a17667182fe48d4cd5918cbbddb8ecacc15b700f179a08e6a460b0b13136c34bb7a824e5fbb399e6d21162f4310ad246ae15455f0ad64d23f990423fddcdafb2923e4b1d7fc654a5f5965008e4419b52d49a62dc7afd06ea5b4da080db3dc67c1d0bdbceb178b4219916d220066a30b7d347c5c2e44f6b8ae68b54a5b413c85a3968fdc8bc7b49e46e5d452f512e73cad182f2606dba080005be045c13d29b3cea2e4520a67eeef60780e1f1bda4d2caa25d491ba818904a17cc81f4d0ff74df29b2e5aea58af652382cccb8c631c486f97703c3f1fda5a3d31acfaae8b857ae36f19d12524d79448e12c5b9510889b80f257ae84c7f48c7bc367bb92a42266865f1c1235c9dafa59702bd2275883f117fe42aee9cb661fe371b1403ddab22ab59cf6eb4db7f1a8215b1ba76fb6d0f3ec0d6a9d626ac71407fcb37b3ec6196da2db977e62e85d2629e6b9f38dc81ed6410c75b628c863c296f26f81f3b04d04a8efc58f3be3e5a9ab40e975cf391ee13073a9a3d54f8cb0b1744774660c6054c8b6295a71826ad80ccc57d7a30423f0482773c69f9982a7b5a42a2f762508fbdad38c328e0abcb3abf62e0873a1b6fda31aa545893cd4232cd7c5698fff9ceb2d3919f7e95a55f2da8f70fbec6d5d08d5ebb2e7694e756ce5ad4267c5a718fb7462be9459fefdcfe69e06922bc5f3e90bd244653d29300cb2f92d623b5add6798b6fe1f6193a7cb5631b8592e35753eb49b741f4e5254e717309fae06dc54f90266d7bb64bedd01de3c956b4924cabeab2cb1f2121b8b7566a07441fc39d53988eca888c3f8c4414b82a8e08ec7aa02be2e9f11ac21bd14441fac10350bde08e89de9062e34b1a123ab0d74a5fb97f4b32caa8a63f4966f46d7af943dc169eab3d0c8c38aa6614663cfe7868b4d6d2564aaa34144cf2b7f2ef229592314d5c6e514322521adc878f75d470c3cd5cc3e0d24aea32bcd4094f59315e66cae903cbc517ffe3cadcb890a3f6f0cf14cac6513a9180d6c0476668cf94c61c86204deafaf9d3f1555f918675f1672fdeda1b916414d4f625f48207961d2c44c26a26c32982c7d71b38bd2b29850921535fffd00f264c569f112193634994ab2a45d2d4fd5bc7b49bde26986d5632868563c1b81827c162f21b4026aeeac2c61a6e2956b38a5c427b1b34e8e4df5afe9c55b41a33e38f0ecd6d6768bbfe9fa620e57aa6f866bfa9556b208498a4e6db354987c5e47bc1f2269abe09d79fc3986d941cd114be75676aeba5b92159035c6751fa6138dc7bd97f4163cf2ec22bbe2b99c0b76938b7e219f079cbabbeeaf0fee64fef8488705aa09e4f4eb4af97fc6ce5d70f81ee85efe9de66e55571aa86c9b417f77138522c7e509ea8fa140ec4091b3b6a0321e8d77fb9f3cd1641b76d290e363ca8819d4624387da9882ab58e2e0282f54b9e804e723efdd88facf33e2bd709c1708b15cce4920be9e0a75435fb92eaf8d60c9cd3b9715493c814099914b6faedebbfaf6cbffacbd9c91ab8ed441aa12db18053e4441361368f7658abd0ee04136a6555e7d23a4e72089e89b421ce03497f32061999db2393a1744c344c86f58aff75f89bf5453c54363c3f17e3f9d3a193b22d683e193028a60e8ee9f37d103e263b2cba967ea97337e03e56bdfce179c219a96632d4d38b28b400c5f105c0006eb413388691d6f886cbc2250e3eaf74acdb3a74342acd7f3c2a345d338a49dccdbcd5f36776b924eb475e898946b901487359e487576e2f3ee357fd93db407109ba9a733c5a8f41b7e42b991d75c8a3debf2b521bfb8f24e1b325d7dc2a70e5c3198fda55b6ed70d888e53ad0aefee0c40cb96f6bdb7289c55025c5790d9a7343c08c54c157952fe566ab9d53acf1a1dd50fde345e1d3d478876d026f9fadfcc55748f42237c246cc14cb98b550a3769e29ac7f0f2b321642a9d66b2e3616a9c5bd13b6ab1ba3c15873fe1d86b40373cf54ede87b033504e057cb977f8af30abb37d46198f5a7b27568468d3f880620aeae8a6656fc457b1394f5660b8fc176c5ce5a2086d3a4b712c99053f8b27c48bf9e00ae424653cce156cec598a0180e652f3b26cd00415f225ad15e6fa31d15984049178e5945e739bfd699fe35468a87c8d6de579493ed843128ae10fa21cf342f52996181ecea1c026af86fd184cc984761d27ebe143557eb7548c6a511fedff4cc61859be6f10ad3a02fe95701943561a44dd13cc98e2eb0db85e247e1f63a42a5ab07237f38d09d2c4e23b11ec162415238c6de931f03b93e68b4480cc27308bb0487bc266a089240fa07b746c01611419149434904f5e3eea22a5d0412caf287e850a037717cfe695729a5eb7cfdc471d71eea5b62358112ac27f009fead51e9110a3714a68a715b5472eaad3e8d547439ac90829fa0898a00815ba37d13676d6fb0688862015ff30523c6dd0d5b7932df243f17d50ee5fa85d9bdb5e30503d200f751165f31157ab4fcb3d64d802209963d4d57b60f6222f2c26bb294d0f190a3df1ffac97cadb640c18ac2731e897436f3ab2289626f7dd9c92da6472567e79c6223a78d93d246d626c0cc1b84f68f55a1dad06f6b0067e6359612e858b5ee26dbebfa997a6b3a389b360a7ee84bc6151a97887dc28ec742156bd0587fa1a6e2bea167e47d03ba70d06d8c4a60bd8e7f771a737ae0269dbb6012f36f3e876d22af7355875083021fefd28110ad4e5a4012b1b849979a17d49d397c1ec6c43f50a328af65a5c12a131d78b54f627fef7041b333bf3c27eed414e293100ca14f26de78925af8c0dc625e9dc398cc797df10f442225d93a36a94e0f908f3c33de9afa3cd3483f8dd0e41c3e1bdb4428256383bd0c3108ea2871f6604867c20dfeb216da7ac783b021646470d68df323e7b21ef93a5f762132f50d5e7820a6a88418b6c5d1efd5bb49429501408dadcbed45436ed8dc1b0a72473e71f6d0c655d4fc85c2516eadb33de2b0ab9b294be8dea259b79fbb78737a79d33cbfb9087e3cedb260bb07adcb45504f78314fe358e58eee4fe272eb30b8d83cb9a9637426ed14b14a0d907c10029593b06ad861518573677b21a2817407fcdd008bd92fc2fe5e1c51bfd9e0513a07b72a02dc5f579a50e56a92e6e7d4c627a4cd0637a79c1e6b010045de0c553e269fea5a0cc8ae8156edefd97cbf4034a3ff312b48f78fefa2a90347c96baa88ef3206096982204619ce54227806b25c8967031b9984477eaa16dafefc2f3329c46528ba3854829b9ba2d514d7bb3ad5984d0543edb5c046b9ed66c1e6a2035142ceb4bf57ada7811a4d55c025f56cda146e8256b3d3fe585eedb56e0ad2aac5889f92dda9d7b8e618d67818c8643d2da2c36cd6f9ace290d80518e4880ac3ddf53d21081f2763b97b2d5eee6d421440e87d59539475911528ffb01f22cbda40f23c2741ecd9acbdca5f39dd7240c6936cb235494be48614a64510203ecd1f64dc636663daccf428ccaaf95baff6eba469b4f619ff582b5d426ee2cdd444743b2a86b6efb06041311947f0637eef5ffec62550afa37e9b3b2ad84773adaaa27b3fd24af7a3bb5f96a0997e9a8ea0f39377b0b0dc3881923a7e5449341555600519c2e33eafb7b6441dbe9bdf9d5bf1540da14462e3ca211eee963658a5e1294ae7b3b72a5f3dfb9589dbb7b243193b8779059248d9d572351ae22e073f86c0ec1795962a03f506a8aa6ee56c84938b7a11655880aa6d0788d7055654f23a192e2d985ac12cc83327906c057d90833b009a2a609f7b78c28bc83c94aeecc641b625a08dfaa6f0c6ccd620e0eb3b06abd93ead33222f5a32b575dd185e2b49cd413df1d2848e16b20ba3fc67763346242c917f0b3900847e47697060d095098676c9b061dc27467410d73ed73ea35d66f9cbccf50b30b7b825f07860e142fd717b570a3795b108039eb315025dcbeb9438377515f8a33b0164c054c1c502b9a0c86b4ec398ce24b09bb67bd5a49c0fae77baa328ef777982cf5993adf91e49192ab0aadac34ec5ad4fc76d05e00760d8793db0dd3bcc3d1bbeb48e8b47ca948a75ed504745e41411ee40a7a42f22f61054dc6ef857efb7757371b2f03275d468b2fb64671f4d5a31e463096672fcbf3425cf6a2a63f3781b65c4b1e02f11212b2265629df7f0ce6b1906a80b6bc6ae38b3af1aed473ca5c2264a77d32f5e986374bcdb3a94713d6782e97c13a16b4fa973ce7bd7e789576207f040940f5a4a717f934aef3cda97a8df0579a058a33a87d7ab24941fdd6f1f9248cffa129390f6c7a4f98ae50fc880f5fc1f1e65e9ccc587199bb26058567341522d663112a4e4a8167fd1265475d47668179fa3adeb7f56b3575b4468c34ace472fdd90f5499720a7144acce9f8b975e714169f8075d4a75f75ca37034de9a847759a030ca76d3a69426434013875bb3fe926c10dc8966742eaea456c66291d0f77231fb7624867bd47108dcd7dfa2d8c40d5ecc4ce5384c5421a1294d5c030b1ed4aa2cce3ec6999d74e3e159e9ea515cde5786b54efe49590454891215517f0285cc60eaf5f4c110e7ba60822d2dd2488cb3f58dd607ad33ca74896679b84c16d57fcf41379da1fb7ae4756fd36004d00b895b8311b19686da4b1036e205fe6feb724e6b2608d7c573b1313dbbbb1d6b5f14c8069ea6406dc69d0f1215c6206754825ce61a5a36dcfc6a48b66e1770dd1ca1cbb286060b4f55df99cea79786a497dc5acb5e30f9c5195f95a7ec74cc738b307dbef918317c4bbb988fdbb22cba656df6b36db29401c995a52ef504252a3f95831639da6a0d293b58aff44a021a4e132385cc28318264e1fa70144c3bfede01ea8cdf953ccd9ca4640128c53f9d646758679d3d945bf8b002529803ab0186b13d6103fcaf15eae8c8deec14001530651e24c5d0c94e13c17e305ed45c8ddfa97d00eda20bb85b6b576cf32d522eedc4383659d0c7e3d4d180bd7d40df1fee76475eef07fa065944af6fee6ab146aaae37d93bd6dab7e8ffa4f302fa515590c1768ca65d95b078d57a1f6585678630a0aa9ecc501b7be9f766b78fd63b904931d03720f621ff91447b4e8e4e7299a69f277343a72cfe6a219e868fc29b292fc5bd79121eb434f2f0bc111edc9a64eb3d4488df22ff975b8dd3b5af7c02aff2504edb5ae7095cf316754aaaf32eb5274fd15212fc9ead8c4cb87a2e6714d8acfbedbf5071dab766ec4ad178ac58c131e8ec6f7a4df7d566439f25069b6467c52166a795d128c4b4aff58f96b3cb34cda802e25d22174f50322ffcfdd17308bbd1a87979d9b626bc5bf5dfc3b241b2e3acc727e0e7616bb361077e50da059b31cb0a96a237a142365a9baaca327167c70788926731b0c419480bcfbd40e3e0475e1fad72458d03142703ff2b17a63cf315fa3ce175e0ff8eda91808fcdf4210d148ddd4d4b22b5d7626e4d807f0290b7f0eef71a084a046c155cabeea9b275fb5214e4ec5f9aea6a4c5a86cdd1172ec8d3962e64510352b4611ccc2836cfbd7033879adbf48001da49f3651eda4b2c5a074a80d8730819c84b019c312dab8c48fafe18c39c147ffd90163befc463167d553255ea6adef88c359bfc8b7e804de032d19cd44850462e5336d2e61c4f65138f3bd7ce2092bf802260ecaa0f1caa34b43a3bc4419d3417b34d362435506f58767eda8e6681d608fedddda356e99a9fb23e423086e97b114b26ef325a1b98bd18dca79f3c94f4683ed19bfd8d4111e11035dcc1077805f05e559f7fcaf970cfa38cac760aacb8ddd69c3603288e96f1cf9f9f6ed51e0a674c425ed09888d4e93cc512b0de13bbc791168b6fba16e474432c77586231a52b8bdfb9b228157969185027795f2478f920f8f865c30d05825bcc3a3c58c4d7e0f40cb7f6d8774ffd95a55cc9e62db84e86ea5a885b23a9769f1ff637394d627362078c01dae1519148f82248f6b697d606c3ea80eb66e68fed05772ede244b5a8f672b0d831e28189e38079976aa87777ec79266dd27a74e28f458f36a30458ecb3a871022d2ad14842cbc5cca16f38eb4f0ce5d5558359d3742143cca0d65e2c1b78ddb194332abcda60c82120db7de055636c608b2dd5c0bd3f8007ff9b84f5b8cbbc65c800c6ca76ae98d62a375704382f690b166088c4c6b219e4312f0607f5fb7c792d61641986c3ee1dab939d0933e0f695a83ce138842ebc1133dd45e955b6cd109cf8f5eaffd476192a2a9c866b5a47d863465c8d365fc2c17f55830b3d6cbcdd00c160aba1864654e2a518c8c36e4cfdc43247c1ddbfac6b747dba75ab83f0c62bf221d755ea8b8e78f3cfe27666810a394b36bfe36021880ad2ffb5a359192949125531204bcdc4e1b039d3deaa03dd342a319e53ef4479fad5a2a0e5ef307f16bc4e591703ebdef6a0b592668093ddd1f344a9c1afc3264e64e193539170379f177212926f5fed9843d755ececc9e88dfbb7beeb09b446476b12453499762ec4b43b533dda186703edf2be3c9745136e4f5b94470067e0cd46b2875bcfc8ede9574e74c92d2a03d8528bd3bb0971a90b3b5a5e187493ab890b8b59076fecb9fa829e1c0db3c4cd209278eaf4185585141104202160b2821db6e21f52434b8ec37c3cb858733f4a6ed5af574d1091bf0370eebb5ddc39dce356c922de43d2df4a678ac35702b7e24dc6e5096f4f27f84123717f78d33a999bf11a866014e82ccd1442c417eb1ce18e12b5da558c6d7edb61a76da4275f06bc42b0af717cbcd4ba5ff3a01643ce5d3b8321282332ee75c23eb3416c8e9569b1f7ea148fa41acd905540101e138123f8ebb25375b28676c39170ef67bcb240ea98319697216a4488ff571a5978d4a7044cf56e02dc9627e5312aaa412885834cb5aeebae693ce63090c0e18bf171227338645138da90c235ee0cb19e77678051d50fbeda3822db0cec951adf83978f262851044603ebd33d8f23cdc3838929bef29745ec10d22606901036eb8cb5cbde05b81b27675f6fff22e94462e0cdb796186659e4efbe7b34983f61e3e8541ec30991106ec23d31cbdec653223adcddf51daa33337a872773fefefb95f5f08a767f60fe7106fecb0ad70b8c6c413c2c3a0d33c5884b28ba8053f78188b000fe159740ea98a62c900bf59afd5ce2742b6765513584fcb0e23d722ed1f1ab8fcc378cf5c0c95263976d04681c92f8d46dd98ad73b036bc8be824935fa6f7e23349e56e3f922aed66ae599e2f32e12b0448d322a3ddba396cd2aacf0e994ca6b60e84abc5f2668dea0a42ad9abb0695df49097f9981a56f596c235b77cffda0b9285826575068bc6af511b3de1aaf9a245d2a42e32d91247bcd5fb2b45392e850311bc1bcee5f813c56165a3fb9422a4f813b9c51e4733a9cdec2996a6b460bf5ff1e1d0de490ca9d7d54be9e4afa2f986514fffddeb08732ce5bbd20e1f366d1c09851f30e282fc8a7c1c70dc1c9dde5c70a36258ad81fdb2be931843c4d999971440b0822dc781848337a9a72c0d12ad6368ee0036b5dcb37222e6c0aa5a4fadf500c5314b5d15a31aa673dcf691ecb5987d17d143bec68544a689469dd3767a9946d97314c2a00ebaf8d4bd547f01572fe00310bcd79a8a562551ec94b4cda4ed18faa1d23e04eb8597bc52aa049e407e36998eb89b7a4d169ed9e1a0783e0d721933be2bbc1279ebe6663790a1de082363e4ef880773ea7b09f8e5276a32a5bfabb393acd76faeb9b65f3b41d14083ce11a7470ae2e52a43a49f89eee1e0e79bdb30b0d1ad192b48fe3b91930bfc157517c3163307eaf2ea25c64288b304626fbade13c7153aebe3cf93b11e6fb5947dff26f6335a2ea9c4fcfebb2f285a71a813e590f990c98e15531cfe55909efe7fd2ce85e6ff3f5e831b9303c1881640e84d3924a9288737ccb789c8c0a7afe3248fd0fffcf002f04d4d6726761816596914a3b741193a22efb0fbda88869b677988659f8f886eaab420b9a51c98b5adee2c7c6774c4cca53010b7799576ba1ae77be698366b6c34ba257b1811bd19d493686cba9643d4d69837ebf2e1b7bc89b40991d08e093609a5550f09350027de4175528833d22570dbe8f3d8889dd700f6f26e9f84b5e669a6003bc40b50dcab774b13eb17a7fcab0fbaad21d48ff7d59546324aee1b3f698d66929c7695ef3d3e15357da92abe4e197cf33ae7c7fa0ccaa817e7fb0ebbd2e30e7df080f3325b6ea33e94be4553d2364bb2bda943105bc34ebbc37dacfed34e95c3e07be986e49b13bc95c40995e0061b371101d1929249a2ee0688e315386dced395231b1fafc0d05f73c1ba2a2661da32afb5a1ab0ee700bbf7598fe0a387c5ce067740b763f3a88789762b02bc69fc2d63c49c981e1776aa0598aaaae9752c1941be8e359708ed158ef026bf5d2fff48fc3acadb4ce3773cde1bdb3734576814b155c38ab91bbef5f1e847601de8899ff50b6177dacb289fee395eb588f9c94b1bea3fa166657f91ba87dfb572c8c81ebccca8de216c50ad73592967b58c262d80e809cb9828b86c4c514a32a0cc24b2c46d6043bb0005d78bd2a852f2b684a60b56f0a51a5b93e8ccc49af45110eaf08ce72ab4f5e4c6b8b3af192c40fe8d54cf3dd11dc1998a0fe99d3d4326c6351c5b362dfbd66dd04bb9e6458d6b4b0850149d6aaf73b65229f3bbb055abdad873a5423d32651e1853c9450430ca9f549c83a9c593b23bcde394289f378ae586ad70152fe6b858e5ca7a1195bc9d8b2a4e3d12e49dd3c45517c5b8d67b01cb48e5f59d579e553aeaa43ffc2bf0a07091b0ca6f501b4e3ad45a5847e64bbbd8343eb98e3d8716a8a84baace266d0db8a7e3fb9fca2776b24482179a8dbd9fd5d77f9fcfdbad09074b8cd764e24261c1a5dd449935339cf3bd2cc55af2fe602c9ca4b0842726ffbe82e885f94dd5cda74f1b31f8fcf539bad4b78688eeae1aba585394e4708c1804a52115f0057b5c99bfc9e1cbe23a701b946b9c834067989f7b3ef76e21c0008f27b9f476eb664445b163f6eeb63fc333505774760d3a500582fcd90722e924eaa3d0f37771593524d6efea9350e567f36fd1c0efb209c2b3cc42418c4715a202e650963d02fd9f8fb5fc80c65a345bef274db18039484669ef531c391d40221b39e62da9db02be26e7e9c49b880fc255d73d25d5b8e52254fee7968c7c27ca4fcf385548a5502a44dc4dae91391894afc0c439f87280185cfa98ac76a6053f7099750e0a69faf5b27cf30bf0c614a82cdebcf90fda21653fbacf62a3831c668fccd6d27658d559a85c4cd1ae08c655b13a6c6fc02edee3aedd9cb7900de97fccbf10097a8b1053b891b1dc3a2922c166478ed2d59f6c143bc18d454f3e98c9ddab23dda9576a4d62c4dd4cad4edf873ef80a04585ec3116a5de30f79d311b42967dc7e84d8984ea00ebdac48227d6eb981ed045de735d962847e0cb471f3e34b2bb12332b83b75f5088a296d5194682c71b8f8c243d6ad5f9c741846a586a5bc00990624f6b3fc6e9a57be7ca5bb79a1b71545f0d1338e8504e5f525a279d4a001d5d5af012db169b20a8442cfadf69b708f07e921873312ac5aaaeb1aa4e52ecf3499761b322a61cfe98c5d79739962b1bd44ba7f20b3f111ee7177179c3a178eb78081e502f10d3b8117daf9546964b20e2590fcc9f526ddf9cb569c78d44ac715d997ee8a650e5d77111a961f9386d26a048f2b8f18b9b9b2620befb40a50e0c86e65bdb717d7315aa0a0714377d8a2edfbf45dc64ebd33c22458d82492b98a3b0184b0ea79552bf0f386b788254f8f79b617d38fad03889c5459983403394c37b6e80dda94849c59a77103cfefa3fa21d6b92b4c12e5bdaa6d26025b6e30f87f6344048a0ee231f36654adf1fe485525ee52c6ce7dfc5182f0609f2ff5b304249301339f90002c3069b4f37492b85aeb652dd7d87af99f353073728a17feb7ca3866f06eacc3272b37e84ad4ae5043f2a950d23623590b0ad13a524e2baad1edbc4c8a4a3e2a74bdb5ba9c1fc796fbd1847710739519aa394669b2669aa50ffadbaa861fdd6abc518d8c7d0129fcfed7c21ed845349b28b84f29aa091d6b7c509a96116821c6c282b0904cdb717671e25f4127e6510f1f470bec0b15fde0575d471c6fdea4b3d7ba3c0ffadec52555af1f932a3f495bb3da1dfe3c329a1fe85443412a85c29aef3de60217172245c98b34e9e1bdca5eca09debd78b992d176e742c3a226963444f7a1d8d1dbf22d15895e2c8c08b928e4396d6d1d8939312f539d71bface281cdeea1a573d85f4dab44e1e502818e2fb2ced8c236ecfa929c3b63144f0eef48f70990b1452f89cfe09d0ec04bbb7b912d4a3c5f231c84cc69572c8453416990d96b5d1faa5014c769dbf1d731c8996deca48515b275d4904758b7da3590ba405af5d5e74eac54a26dbfa0b16846332398787bc00cd158bc787196b44fcd4f1263dab2161a6fcdfa5a25f94b0b95c1e949ecd219af99a029ec43dcec2375ab9cd1e63e53bbb0d544846b6e8b29d9266120f66fdee5de9a160331292933386f312192a0c6794639c0ee5aa86dd6b59b5388705cfba7df13a232e10b40b1b45ba25f594c35aa0768737c8c518c2f987ff55019e83fdd0c4108c86a6152ce6b1ea8ba1bf8fa22b3a9148ebf7b71502ef03190d50883d17fb871c99b446818f4e757f851fd9eb140c306f97e823df102b874a83f4dc1942bf948c3baf8e9784f4f4c00a7397c75fad9df5515738113d94805622de94aa5d8a7f956d26ad6aa255e3135bef9c2e96885a2599445cb55317c66f68c5f580a685ff7172673218ac4965283716df0b7414ac3da80b41bf07821134d85316cb17e7a79b80a8c72ae78d2f58b72b6190be2f958cc203749924ef88ed3a7265b839711a7dba52013a35a1b2473d080da6c02b07b26f7b06f5a2d13e9842fb8325309ef567e5306e50a46e0f946a43bee4de5c36c949a6bb63c600d573c034de4f975a79b0a74d206538e357f8c3d1018fdbf9d8d68128743a42c525e997b7353036118bd08ff44f40cdb1a23a06016272540fac528b0f7244f340da5ce14b776043cf730e0741ced940ef327b87587e55e070fbdfcddf7c96a448fc387123a1dd4fe88a9c796bee8acae403e01d0988911390510b143954f34d6ef8e09e3e6b4de2638723a8172cf304adf2f5b39b426d869e59fd04b2119d0e8db6602277f1fc220d473f8d024baaff646217f179e0c3526e38770a713fcdee66f1626d4a9d664712ddf236df17a4dbd941b3f4fadcec6017d988307ac01a4adc8bd3b82b3783999a188123993e482213f61459cac19150bbd2df0f7e1310e5e70f7c755e432152963200b8941dc6b5684fed755649ab84f21fe0805d92ff6ca16d9e0bac4a0679d0ba8132a145095d3688add58aaa9a01f608896d5379d27e88f4e3888a3556cd58b28d08f054fe398f098804e368268fa66598b37164fa79e5fca288169216c312a7071e75a00816ba7e2fbf1ab531497c467a54bd9101fff796acfcfeaccc64716a626f284825fc3b9fdb62d840557dac63046744d0e830c5627da6dd67630f9661b1cb55ad30a3c3cfc07e5654f57a5467bf214a019aacb1cde1b0967970749f74b99b49893c30a48b6e84ceab8c4ef1e10dc34568955b7fa2ebae65877428505a2d68830bf0983d17243010a7f7ce3edeb65b40244a8803079ed90fb868554638d727d4236f07a554576ad89bb9c8044b0fb650d510f46f077f86b1c5c4dd99436707c88aefc7e58cd726e3df614c72ade91ad97ec2915192ca5a9c6376f244f3f5091be647f0d757521947762e777be12bd18def146fe5b4f76b4dbd7f9005ee1519a168e111f30a53331004568777a95546b1d9613950cf9faf14dcbe35d3ad9774ec9ea2bd87c5d5bbd68c37ad81872b12afd6ec76f5305ae2b92a096368d1a962c2bc0800c0b37ebcb6aa7b11c2577aa0ca10c1b0df4fc23990f7b38145469e67c65a246d3d0cc429100c8254336e82b8003d5ab10f9999fbe40dc4333d25eee3cce3e611600263e92bca5ec6de1413336d9fc5e13facfd1c0b890db79819a1f1b1964e4191098a4ea9c96363af31cefce930cbce6484f3bb8ec71938d8a657272f86a73a015cc5f7cfec19e0492e6ebe9a5106a7a5ac7d062bd15038e73776b1c01732d945893e2cf797ac29bfe2c8a5638f21697b2b23a7694d70753c1d1ba176aec85380a05f755ad4f4593e6478d942f9cfd738d49612da8f0dfeb58f1082af862caa7688323f60dc3bf6dd6b9dda5d585d122581bf56db54cdec3a4a015a8b79dfe973e7a08f130f356eba221bd87a7c1d724b3f5ad63e0c7f33fcee57a6dd3906aa03118cb927244b338d53aaf8d1f7ca953fc83aa8c3847a4ccfd19564abbd3c142318782b5ab45bfc17b5ddd8328a8607beb9010ff9555f8d0a4c601b54649ad0baf6767c8d245fae1483068615e53a1</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇未公开文章。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>jenkins运维篇</title>
    <link href="https://www.xxlaila.cn/2019/10/22/jenkins%E8%BF%90%E7%BB%B4%E7%AF%87/"/>
    <id>https://www.xxlaila.cn/2019/10/22/jenkins运维篇/</id>
    <published>2019-10-22T01:22:52.000Z</published>
    <updated>2019-10-28T13:57:20.321Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --><h3 id="jenkins-可视化构建"><a href="#jenkins-可视化构建" class="headerlink" title="jenkins 可视化构建"></a>jenkins 可视化构建</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在之前遇到过开发提交代码后，完全不管提交的代码是否发布成功，及时后来加入了企业微信的告警机制，但是依然有人不会去关注这个。<a id="more"></a> 只有在测试人员在反馈xxx你的代码提交了没有，这时候研发人员才回去看，有时候一个触发构建失败了，摆在那里很久，如有下一个开发人员要对这个工程修改提交的时候发现过不了，这时候再来解决，成本就有点大。这里可以借助看板的形式让研发人员可以随时关注到自己的提交的工程，结合告警来做，效果还是不错的。</p><h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装Build Monitor View 插件，然后在主页面添加<code>+</code>一个视图<br><img src="https://img.xxlaila.cn/1571707794737.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以根据job的类型或者根据自己的条件进行<a href="https://xxlaila.github.io/2019/08/09/jenkins-job%E7%AE%A1%E7%90%86/" target="_blank" rel="noopener">过滤job</a>来生成看板。</p><ul><li>Build Monitor - View Settings: 根据job的一些状态来进行排序<br><img src="https://img.xxlaila.cn/1571708048469.jpg" alt="img"></li></ul><h3 id="jenkins-监控"><a href="#jenkins-监控" class="headerlink" title="jenkins 监控"></a>jenkins 监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有时候我们没有监控，但是有时候需要看看jenkins的一些监控信息，如：内存、cpu、系统负债、http响应时间、系统进程数、线程数等，有懒得安装监控，这时候我们可以借助jenkins自带的一个插件<code>Monitoring</code>。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件安装完成后，我们可以在系统管理菜单下面看到<code>Monitoring of Jenkins master</code><br><img src="https://img.xxlaila.cn/1571708499625.jpg" alt="img"></p><p>点击进入以后我们可以看到<br><img src="https://img.xxlaila.cn/1571708561404.jpg" alt="img"><br>页面显示乱码，这个可以自己google解决</p><h3 id="Build-Trigger-Badge"><a href="#Build-Trigger-Badge" class="headerlink" title="Build Trigger Badge"></a>Build Trigger Badge</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此插件直接在构建历史记录中显示代表构建原因的图标。它可以让您快速知道是哪个原因触发了构建。如果没有此插件，您有时可能会想知道是什么触发了构建历史中显示的&gt;&gt;特定构建。要知道这一点，您必须单独打开每个链接，这可能很麻烦。<br><img src="https://img.xxlaila.cn/1572059619062.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Mon Dec 23 2019 17:43:38 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;jenkins-可视化构建&quot;&gt;&lt;a href=&quot;#jenkins-可视化构建&quot; class=&quot;headerlink&quot; title=&quot;jenkins 可视化构建&quot;&gt;&lt;/a&gt;jenkins 可视化构建&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在之前遇到过开发提交代码后，完全不管提交的代码是否发布成功，及时后来加入了企业微信的告警机制，但是依然有人不会去关注这个。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/tags/jenkins/"/>
    
  </entry>
  
</feed>
