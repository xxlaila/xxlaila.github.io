<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>懒羊羊</title>
  
  <subtitle>我是不会和普通的羊一般见识的。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.xxlaila.cn/"/>
  <updated>2019-12-13T08:46:13.312Z</updated>
  <id>https://www.xxlaila.cn/</id>
  
  <author>
    <name>xxlaila</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>master加入node节点</title>
    <link href="https://www.xxlaila.cn/2019/12/13/master%E5%8A%A0%E5%85%A5node%E8%8A%82%E7%82%B9/"/>
    <id>https://www.xxlaila.cn/2019/12/13/master加入node节点/</id>
    <published>2019-12-13T08:26:22.000Z</published>
    <updated>2019-12-13T08:46:13.312Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之前一直没有做k8s集群的时候一直没有master加入为node节点。在使用的时候遇到了很多坑，<a id="more"></a>但是都还好，都能及时的解决。这里记录一下吧master加入node行列的好处。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个问题是之前在<a href="https://www.xxlaila.cn/2019/10/29/istio%E9%83%A8%E7%BD%B2/">部署istio</a>的时候遇到的。整了大半个月最终搞定啦。master加入node节点以后解决了哪些问题。istio、metrics-server、heapster的问题都解决了。在部署metrics-server、heapster的时候不需要增加<code>hostNetwork: true</code>参数。</p><h3 id="master加入node"><a href="#master加入node" class="headerlink" title="master加入node"></a>master加入node</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果master加入node节点需要安装kubele、flanneld、docker、kube-proxy，与正常的node安装没有区别。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;但是master成为node节点以后，我们又不想master部署pod来增加master节点的压力。所以需要吧master节点设置为<code>SchedulingDisabled</code>。设置master节点为<code>SchedulingDisabled</code>的命令是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl patch node master-01 -p '&#123;"spec":&#123;"unschedulable":true&#125;&#125;'</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样设置是将Node 脱离调度范围，但是运行在改node节点上pod不会自动的停止。需要手动停止改node上运行的pod。如果需要回复调度是将<code>unschedulable</code>设置为false。执&gt;行kubectl replace或者kubectl patch 命令就能恢复系统对改 Node 的调度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl patch node master-01 -p '&#123;"spec":&#123;"unschedulable":false&#125;&#125;'</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;也可以使用kubectl的子命令cordon和uncordon也用于实现将Node进行隔离和恢复调度的操作。</p><ul><li><p>使用kubectl cordon对某个Node进行隔离调度操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl cordon master-01</span></span><br></pre></td></tr></table></figure></li><li><p>恢复</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl uncordon master-01</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要注意的是即使设置node为<code>SchedulingDisabled</code>，系统还是会调度<code>DaemonSet</code>类型的pod。如果flanneld是pod安装，这个一定要调度过来。否则网络不通。设置<code>DaemonSet</code>类型的pod不调度在<code>SchedulingDisabled</code>的node上，可以吧<code>DaemonSet</code>设置一个<code>nodeSelector</code>的标签。让这类型的pod运行在指定的节点上。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;之前一直没有做k8s集群的时候一直没有master加入为node节点。在使用的时候遇到了很多坑，
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="node" scheme="https://www.xxlaila.cn/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>istio部署错误解决</title>
    <link href="https://www.xxlaila.cn/2019/12/13/istio%E9%83%A8%E7%BD%B2%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/"/>
    <id>https://www.xxlaila.cn/2019/12/13/istio部署错误解决/</id>
    <published>2019-12-13T01:31:46.000Z</published>
    <updated>2019-12-13T09:23:01.021Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在前面的一篇文章中我做了简单的部署，但是在疏忽bookinfo的时候出现了错误。<a id="more"></a>这个错误不解决，没办法进行下一步。后学的路由规则完全没办法学习和测试。</p><h3 id="istio错误解决"><a href="#istio错误解决" class="headerlink" title="istio错误解决"></a>istio错误解决</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; istio的错误查看<a href="https://www.xxlaila.cn/2019/10/29/istio%E9%83%A8%E7%BD%B2/">istio的部署</a>，本次根据这个错误来进行解决。</p><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><h4 id="apiserver日志"><a href="#apiserver日志" class="headerlink" title="apiserver日志"></a>apiserver日志</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这个错误访问k8s的apiserver 问题，应该是超时。我们可以查看apiserver的日志，利用 journalctl 命令来筛选apiserver的日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># journalctl  -u  kube-apiserver  -f</span></span><br><span class="line"></span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 09:59:33.659161   31393 trace.go:81] Trace[40457478]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/istio-system/gateways"</span> (started: 2019-11-08 09:59:03.657132211 +0800 CST m=+328870.679516549) (total time: 30.001964129s):</span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[40457478]: [30.001964129s] [30.001043358s] END</span><br><span class="line">Nov 08 09:59:33 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 09:59:33.659790   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: net/http: request canceled <span class="keyword">while</span> waiting <span class="keyword">for</span> connection (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 09:59:39 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 09:59:39.979543   31393 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.metrics.k8s.io</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 10:00:03.764977   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: context deadline exceeded (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:03.765401   31393 trace.go:81] Trace[1649710078]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/default/destinationrules"</span> (started: 2019-11-08 09:59:33.763211641 +0800 CST m=+328900.785596022) (total time: 30.00209862s):</span><br><span class="line">Nov 08 10:00:03 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[1649710078]: [30.00209862s] [30.001534667s] END</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:33.840606   31393 trace.go:81] Trace[970347589]: <span class="string">"Create /apis/networking.istio.io/v1alpha3/namespaces/weather/virtualservices"</span> (started: 2019-11-08 10:00:03.83792882 +0800 CST m=+328930.860313362) (total time: 30.002612137s):</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[970347589]: [30.002612137s] [30.001075132s] END</span><br><span class="line">Nov 08 10:00:33 k8s-master-01-3.kxl kube-apiserver[31393]: W1108 10:00:33.841663   31393 dispatcher.go:73] Failed calling webhook, failing closed pilot.validation.istio.io: failed calling webhook <span class="string">"pilot.validation.istio.io"</span>: Post https://istio-galley.istio-system.svc:443/admitpilot?timeout=30s: context deadline exceeded (Client.Timeout exceeded <span class="keyword">while</span> awaiting headers)</span><br><span class="line">Nov 08 10:00:38 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:38.260710   31393 trace.go:81] Trace[460935607]: <span class="string">"GuaranteedUpdate etcd3: *v1.Endpoints"</span> (started: 2019-11-08 10:00:37.644096515 +0800 CST m=+328964.666480867) (total time: 616.515599ms):</span><br><span class="line">Nov 08 10:00:38 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[460935607]: [533.664848ms] [449.34458ms] Transaction prepared</span><br><span class="line">Nov 08 10:00:39 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:00:39.986622   31393 controller.go:107] OpenAPI AggregationController: Processing item v1beta1.metrics.k8s.io</span><br><span class="line">Nov 08 10:01:38 k8s-master-01-3.kxl kube-apiserver[31393]: I1108 10:01:38.780611   31393 trace.go:81] Trace[269873276]: <span class="string">"Get /api/v1/namespaces/default"</span> (started: 2019-11-08 10:01:37.631910347 +0800 CST m=+329024.654294682) (total time: 1.148554735s):</span><br><span class="line">Nov 08 10:01:38 k8s-master-01-3.kxl kube-apiserver[31393]: Trace[269873276]: [1.148211464s] [1.148180236s] About to write a response</span><br></pre></td></tr></table></figure><h4 id="istio-pilot日志"><a href="#istio-pilot日志" class="headerlink" title="istio-pilot日志"></a>istio-pilot日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl logs istio-pilot-569499d666-rfjsh  -n istio-system discovery</span></span><br><span class="line">2019-11-08T07:26:14.097765ZinfoHandling event update <span class="keyword">for</span> pod istio-security-post-install-1.2.8-c52np <span class="keyword">in</span> namespace istio-system -&gt; 172.30.112.9</span><br><span class="line">2019-11-08T07:26:27.395268ZinfoHandling event update <span class="keyword">for</span> pod istio-security-post-install-1.2.8-c52np <span class="keyword">in</span> namespace istio-system -&gt; 172.30.112.9</span><br><span class="line">2019-11-08T07:26:38.227484ZinfoClient received GoAway with http2.ErrCodeEnhanceYourCalm.</span><br><span class="line">2019-11-08T07:26:38.227760ZinfopickfirstBalancer: HandleSubConnStateChange: 0xc0001fbaa0, CONNECTING</span><br><span class="line">2019-11-08T07:26:38.228913Zinfotransport: loopyWriter.run returning. connection error: desc = <span class="string">"transport is closing"</span></span><br><span class="line">2019-11-08T07:26:38.230352ZerrormcpError receiving MCP resource: rpc error: code = Unavailable desc = transport is closing</span><br><span class="line">2019-11-08T07:26:38.230387ZerrormcpError receiving MCP response: rpc error: code = Unavailable desc = transport is closing</span><br><span class="line">2019-11-08T07:26:38.235755ZinfopickfirstBalancer: HandleSubConnStateChange: 0xc0001fbaa0, READY</span><br><span class="line">2019-11-08T07:26:39.230701Zinfomcp(re)trying to establish new MCP sink stream</span><br></pre></td></tr></table></figure><h4 id="istio-galley日志"><a href="#istio-galley日志" class="headerlink" title="istio-galley日志"></a>istio-galley日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl logs istio-galley-64f7d8cc97-8nbpc  -n istio-system</span></span><br><span class="line">2019-11-08T07:23:38.860184ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125; ACK collection=istio/rbac/v1alpha1/serviceroles with version=<span class="string">"0"</span> nonce=<span class="string">"16"</span> inc=<span class="literal">false</span></span><br><span class="line">2019-11-08T07:23:38.860197ZinfomcpWatch(): created watch 28 <span class="keyword">for</span> istio/rbac/v1alpha1/serviceroles from group <span class="string">"default"</span>, version <span class="string">"0"</span></span><br><span class="line">2019-11-08T07:23:38.860217ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125; ACK collection=istio/networking/v1alpha3/gateways with version=<span class="string">"0"</span> nonce=<span class="string">"17"</span> inc=<span class="literal">false</span></span><br><span class="line">2019-11-08T07:23:38.860268ZinfomcpWatch(): created watch 29 <span class="keyword">for</span> istio/networking/v1alpha3/gateways from group <span class="string">"default"</span>, version <span class="string">"0"</span></span><br><span class="line">2019-11-08T07:26:38.227268Zinfotransport: Got too many pings from the client, closing the connection.</span><br><span class="line">2019-11-08T07:26:38.227414Zinfotransport: loopyWriter.run returning. Err: transport: Connection closing</span><br><span class="line">2019-11-08T07:26:38.228857Zinfotransport: http2Server.HandleStreams failed to <span class="built_in">read</span> frame: <span class="built_in">read</span> tcp 172.30.104.4:9901-&gt;172.30.104.7:57190: use of closed network connection</span><br><span class="line">2019-11-08T07:26:38.229130ZerrormcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125;: TERMINATED with errors: rpc error: code = Canceled desc = context canceled</span><br><span class="line">2019-11-08T07:26:38.229162ZinfomcpMCP: connection &#123;addr=172.30.104.7:57190 id=3&#125;: CLOSED</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前面其实有一个错误，忘记记录了，是一个tls的证书问题。根据上面的错误在google上找了好久，各种文档都查看了好久。就是安装的时候去验证tls证书，还有什么webhook问题。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>解决办法:</strong> 需要在apiserver里面需要配置 enable-admission-plugins，由于在安装的时候指定了某一个插件，导致这个未启用，如果没有配置该插件，默认其实是启用的。两个插件分别是：ValidatingAdmissionWebhook、MutatingAdmissionWebhook。安装文档里面已经修改，<a href="https://www.xxlaila.cn/2019/09/11/kubernetes-v1-14%E5%AE%89%E8%A3%85/">参考配置</a>。修改以后需要重启kube-apiserver。</p><h4 id="master加入node"><a href="#master加入node" class="headerlink" title="master加入node"></a>master加入node</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果master节点未安装kubele、flanneld、docker、kube-proxy。会导致master节点访问不了集群内部的istio-sidecar-injector服务。就会导致自动注入失败。而且当在部署自动注入的时候就会提示: <code>Error creating: Internal error occurred: failed calling webhook &quot;sidecar-injector.istio.io&quot;: Post https://istio-sidecar-injector.istio-system.svc:443/inject?timeout=30s: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers</code>。<br><img src="https://img.xxlaila.cn/1576201446462.jpg" alt="img"><br>这里有大神总结的<a href="https://mp.weixin.qq.com/s/6TjJQrv_z6AZPKw6eigAcQ" target="_blank" rel="noopener">详细错误</a>，master节点加入node<a href="https://www.xxlaila.cn/2019/12/13/master加入node节点">详细参考</a>说明。</p><h4 id="验证api-resources"><a href="#验证api-resources" class="headerlink" title="验证api-resources"></a>验证api-resources</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl api-resources | grep admissionregistration</span><br><span class="line">mutatingwebhookconfigurations                  admissionregistration.k8s.io   <span class="literal">false</span>        MutatingWebhookConfiguration</span><br><span class="line">validatingwebhookconfigurations                admissionregistration.k8s.io   <span class="literal">false</span>        ValidatingWebhookConfiguration</span><br></pre></td></tr></table></figure><ul><li>启用 admissionregistration.k8s.io/v1alpha1 API<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions | grep admissionregistration.k8s.io</span></span><br><span class="line">admissionregistration.k8s.io/v1beta1</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用上面命令可以检查当前是否以启用，admissionregistration.k8s.io/v1alpha1 API，若不存在则需要在 apiserver 的配置中添加–runtime-config=admissionregistration.k8s.io/v1alpha1。</p><h3 id="重新部署"><a href="#重新部署" class="headerlink" title="重新部署"></a>重新部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;新建一个Values.yaml 配置参数文件。下面是参考一个大神的。</p><ul><li>Values.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  defaultResources:</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 30m</span><br><span class="line">      memory: 50Mi</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 400m</span><br><span class="line">      memory: 600Mi</span><br><span class="line">  proxy:</span><br><span class="line">    includeIPRanges: 10.244.0.0/16,10.254.0.0/16</span><br><span class="line">    <span class="comment"># 是否开启自动注入功能，取值enabled则该pods只要没有被注解为sidecar.istio.io/inject: "false",就会自动注入。如果取值为disabled，则需要为pod设置注解sidecar.istio.io/inject: "true"才会进行注入</span></span><br><span class="line">    autoInject: disabled</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 30m</span><br><span class="line">        memory: 50Mi</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 400m</span><br><span class="line">        memory: 500Mi</span><br><span class="line">  mtls:</span><br><span class="line">    enabled: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">sidecarInjectorWebhook:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 变量为true，就会为所有命名空间开启自动注入功能。如果赋值为false，则只有标签为istio-injection的命名空间才会开启自动注入功能</span></span><br><span class="line">  enableNamespacesByDefault: <span class="literal">false</span></span><br><span class="line">  rewriteAppHTTPProbe: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">mixer:</span><br><span class="line">  policy:</span><br><span class="line">    enabled: <span class="literal">false</span></span><br><span class="line">  telemetry:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 100m</span><br><span class="line">        memory: 300Mi</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 1000m</span><br><span class="line">        memory: 1024Mi</span><br><span class="line"></span><br><span class="line">pilot:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 100m</span><br><span class="line">      memory: 300Mi</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 1000m</span><br><span class="line">      memory: 1024Mi</span><br><span class="line"></span><br><span class="line">gateways:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  istio-ingressgateway:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    <span class="built_in">type</span>: NodePort</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 100m</span><br><span class="line">        memory: 128Mi</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 1000m</span><br><span class="line">        memory: 1024Mi</span><br><span class="line">  istio-egressgateway:</span><br><span class="line">    enabled: <span class="literal">false</span></span><br><span class="line">    <span class="built_in">type</span>: NodePort</span><br><span class="line">    resources:</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 100m</span><br><span class="line">        memory: 128Mi</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 1000m</span><br><span class="line">        memory: 256Mi</span><br><span class="line"></span><br><span class="line">tracing:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  service:</span><br><span class="line">    name: http-query</span><br><span class="line">  provider: jaeger</span><br><span class="line">  jaeger:</span><br><span class="line">    resources:</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 300m</span><br><span class="line">        memory: 900Mi</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 30m</span><br><span class="line">        memory: 100Mi</span><br><span class="line">  zipkin:</span><br><span class="line">    resources:</span><br><span class="line">      limits:</span><br><span class="line">        cpu: 300m</span><br><span class="line">        memory: 900Mi</span><br><span class="line">      requests:</span><br><span class="line">        cpu: 30m</span><br><span class="line">        memory: 100Mi</span><br><span class="line">  contextPath: /</span><br><span class="line">  ingress:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    annotations:</span><br><span class="line">      kubernetes.io/ingress.class: traefik</span><br><span class="line">    hosts:</span><br><span class="line">      - istio-tracing.xxlaila.cn</span><br><span class="line"></span><br><span class="line">kiali:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  resources:</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 300m</span><br><span class="line">      memory: 900Mi</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 30m</span><br><span class="line">      memory: 50Mi</span><br><span class="line">  hub: kiali</span><br><span class="line">  contextPath: /</span><br><span class="line">  ingress:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    annotations: </span><br><span class="line">      kubernetes.io/ingress.class: traefik</span><br><span class="line">    hosts:</span><br><span class="line">      - istio-kiali.xxlaila.cn</span><br><span class="line">  dashboard:</span><br><span class="line">    grafanaURL: http://grafana:3000</span><br><span class="line">    jaegerURL: http://jaeger-query:16686</span><br><span class="line"></span><br><span class="line">grafana:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  persist: <span class="literal">true</span></span><br><span class="line">  storageClassName: xxlaila-nfs-storage</span><br><span class="line">  accessMode: ReadWriteMany</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 30m</span><br><span class="line">      memory: 50Mi</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 300m</span><br><span class="line">      memory: 500Mi</span><br><span class="line">  contextPath: /</span><br><span class="line">  ingress:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    annotations:</span><br><span class="line">      kubernetes.io/ingress.class: traefik</span><br><span class="line">    hosts:</span><br><span class="line">      - istio-grafana.xxlaila.cn</span><br><span class="line"></span><br><span class="line">prometheus:</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      cpu: 30m</span><br><span class="line">      memory: 50Mi</span><br><span class="line">    limits:</span><br><span class="line">      cpu: 500m</span><br><span class="line">      memory: 1024Mi</span><br><span class="line">  retention: 3d</span><br><span class="line">  contextPath: /</span><br><span class="line">  ingress:</span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    annotations:</span><br><span class="line">      kubernetes.io/ingress.class: traefik</span><br><span class="line">    hosts:</span><br><span class="line">      - istio-prometheus.xxlaila.cn</span><br><span class="line"></span><br><span class="line">istio_cni:</span><br><span class="line">  enabled: <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ul><p><a href="https://mp.weixin.qq.com/s/PPTnoyVD2bzeZ6vHRUphzQ" target="_blank" rel="noopener">参考文献</a></p><h4 id="安装-Istio"><a href="#安装-Istio" class="headerlink" title="安装 Istio"></a>安装 Istio</h4><ul><li><p>部署crds</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm install install/kubernetes/helm/istio-init --name istio-init --namespace istio-system</span></span><br></pre></td></tr></table></figure></li><li><p>部署istio</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm install ./install/kubernetes/helm/istio --name istio --namespace istio-system -f Values.yaml  --host=10.254.156.238:44134</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里说一下这个 <code>--host</code>参数。在执行helm安装的时候遇到了 <code>portforward.go:178] lost connection to pod， Error: transport is closing</code>。ip是tiller-deploy的ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n kube-system tiller-deploy</span></span><br><span class="line">NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)     AGE</span><br><span class="line">tiller-deploy   ClusterIP   10.254.156.238   &lt;none&gt;        44134/TCP   10d</span><br></pre></td></tr></table></figure><h4 id="查看验证"><a href="#查看验证" class="headerlink" title="查看验证"></a>查看验证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm list --all</span></span><br><span class="line">NAME      REVISIONUPDATED                 STATUS  CHART           APP VERSIONNAMESPACE   </span><br><span class="line">istio     1       Fri Dec 13 09:23:59 2019DEPLOYEDistio-1.4.0     1.4.0      istio-system</span><br><span class="line">istio-init1       Fri Dec 13 09:22:56 2019DEPLOYEDistio-init-1.4.01.4.0      istio-system</span><br></pre></td></tr></table></figure><h3 id="部署官方的bookinfo"><a href="#部署官方的bookinfo" class="headerlink" title="部署官方的bookinfo"></a>部署官方的bookinfo</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用自动注入。</p><h4 id="部署pods-和服务"><a href="#部署pods-和服务" class="headerlink" title="部署pods 和服务"></a>部署pods 和服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl label namespace default istio-injection=enabled</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get services</span></span><br><span class="line">NAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">details       ClusterIP   10.254.148.138   &lt;none&gt;        9080/TCP   15s</span><br><span class="line">kubernetes    ClusterIP   10.254.0.1       &lt;none&gt;        443/TCP    15d</span><br><span class="line">productpage   ClusterIP   10.254.183.24    &lt;none&gt;        9080/TCP   11s</span><br><span class="line">ratings       ClusterIP   10.254.185.74    &lt;none&gt;        9080/TCP   15s</span><br><span class="line">reviews       ClusterIP   10.254.180.76    &lt;none&gt;        9080/TCP   13s</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                             READY   STATUS              RESTARTS   AGE</span><br><span class="line">details-v1-c5b5f496d-ztml6       1/1     Running             0          18s</span><br><span class="line">productpage-v1-c7765c886-592sd   0/1     ContainerCreating   0          13s</span><br><span class="line">ratings-v1-f745cf57b-8d7h2       1/1     Running             0          18s</span><br><span class="line">reviews-v1-75b979578c-nrj48      1/1     Running             0          15s</span><br><span class="line">reviews-v2-597bf96c8f-tvc5v      1/1     Running             0          16s</span><br><span class="line">reviews-v3-54c6c64795-75qgp      1/1     Running             0          16s</span><br></pre></td></tr></table></figure><h4 id="部署gateway"><a href="#部署gateway" class="headerlink" title="部署gateway"></a>部署gateway</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml</span></span><br><span class="line">gateway.networking.istio.io/bookinfo-gateway created</span><br><span class="line">virtualservice.networking.istio.io/bookinfo created</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get gateway</span></span><br><span class="line">NAME               AGE</span><br><span class="line">bookinfo-gateway   4s</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml</span></span><br><span class="line">destinationrule.networking.istio.io/productpage created</span><br><span class="line">destinationrule.networking.istio.io/reviews created</span><br><span class="line">destinationrule.networking.istio.io/ratings created</span><br><span class="line">destinationrule.networking.istio.io/details created</span><br></pre></td></tr></table></figure><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开任意node的ip，<a href="http://ip:31380/productpage，" target="_blank" rel="noopener">http://ip:31380/productpage，</a> istio部署错误解决完成。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在前面的一篇文章中我做了简单的部署，但是在疏忽bookinfo的时候出现了错误。
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="istio" scheme="https://www.xxlaila.cn/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>alertmanager告警配置</title>
    <link href="https://www.xxlaila.cn/2019/12/06/alertmanager%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.xxlaila.cn/2019/12/06/alertmanager告警配置/</id>
    <published>2019-12-06T08:46:31.000Z</published>
    <updated>2019-12-06T09:57:27.541Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 前篇文章做了kubernetes 的 监控，基于<a href="https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/">prometheus与grafana部署</a>，监控是做好了，但是还缺乏告警机制，没有告警机制监控就白做了，prometheus的告警就是alertmanager来做。<a id="more"></a> 而在部署kube-prometheus的时候，alertmanager也是部署完成，这里只需要稍加修改alertmanager即可实现告警</p><h3 id="配置-alertmanager"><a href="#配置-alertmanager" class="headerlink" title="配置 alertmanager"></a>配置 alertmanager</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打开之前部署<a href="https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/">prometheus与grafana部署</a>，里面有alertmanager的地址<code>http://alertmanager.xxlaila.cn/</code>，打开界面点击 <code>Status</code> 按钮我们可以查看到alertmanager的默认配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line">  http_config: &#123;&#125;</span><br><span class="line">  smtp_hello: localhost</span><br><span class="line">  smtp_require_tls: <span class="literal">true</span></span><br><span class="line">  pagerduty_url: https://events.pagerduty.com/v2/enqueue</span><br><span class="line">  hipchat_api_url: https://api.hipchat.com/</span><br><span class="line">  opsgenie_api_url: https://api.opsgenie.com/</span><br><span class="line">  wechat_api_url: https://qyapi.weixin.qq.com/cgi-bin/</span><br><span class="line">  victorops_api_url: https://alert.victorops.com/integrations/generic/20131114/alert/</span><br><span class="line">route:</span><br><span class="line">  receiver: <span class="string">"null"</span></span><br><span class="line">  group_by:</span><br><span class="line">  - job</span><br><span class="line">  routes:</span><br><span class="line">  - receiver: <span class="string">"null"</span></span><br><span class="line">    match:</span><br><span class="line">      alertname: Watchdog</span><br><span class="line">  group_wait: 30s</span><br><span class="line">  group_interval: 5m</span><br><span class="line">  repeat_interval: 12h</span><br><span class="line">receivers:</span><br><span class="line">- name: <span class="string">"null"</span></span><br><span class="line">templates: []</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个默认配置是alertmanager目录下<code>alertmanager-secret.yaml</code>文件生成的，这个配置文件是通过base64加密过的，可以使用base64解密查看</p><ul><li><p>原alertmanager-secret.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  alertmanager.yaml: Imdsb2JhbCI6CiAgInJlc29sdmVfdGltZW91dCI6ICI1bSIKInJlY2VpdmVycyI6Ci0gIm5hbWUiOiAibnVsbCIKInJvdXRlIjoKICAiZ3JvdXBfYnkiOgogIC0gImpvYiIKICAiZ3JvdXBfaW50ZXJ2YWwiOiAiNW0iCiAgImdyb3VwX3dhaXQiOiAiMzBzIgogICJyZWNlaXZlciI6ICJudWxsIgogICJyZXBlYXRfaW50ZXJ2YWwiOiAiMTJoIgogICJyb3V0ZXMiOgogIC0gIm1hdGNoIjoKICAgICAgImFsZXJ0bmFtZSI6ICJXYXRjaGRvZyIKICAgICJyZWNlaXZlciI6ICJudWxsIg==</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-main</span><br><span class="line">  namespace: monitoring</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br></pre></td></tr></table></figure></li><li><p>解密alertmanager-secret.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># echo "Imdsb2JhbCI6CiAgInJlc29sdmVfdGltZW91dCI6ICI1bSIKInJlY2VpdmVycyI6Ci0gIm5hbWUiOiAibnVsbCIKInJvdXRlIjoKICAiZ3JvdXBfYnkiOgogIC0gImpvYiIKICAiZ3JvdXBfaW50ZXJ2YWwiOiAiNW0iCiAgImdyb3VwX3dhaXQiOiAiMzBzIgogICJyZWNlaXZlciI6ICJudWxsIgogICJyZXBlYXRfaW50ZXJ2YWwiOiAiMTJoIgogICJyb3V0ZXMiOgogIC0gIm1hdGNoIjoKICAgICAgImFsZXJ0bmFtZSI6ICJXYXRjaGRvZyIKICAgICJyZWNlaXZlciI6ICJudWxsIg==" |base64 -d</span></span><br><span class="line"><span class="string">"global"</span>:</span><br><span class="line">  <span class="string">"resolve_timeout"</span>: <span class="string">"5m"</span></span><br><span class="line"><span class="string">"receivers"</span>:</span><br><span class="line">- <span class="string">"name"</span>: <span class="string">"null"</span></span><br><span class="line"><span class="string">"route"</span>:</span><br><span class="line">  <span class="string">"group_by"</span>:</span><br><span class="line">  - <span class="string">"job"</span></span><br><span class="line">  <span class="string">"group_interval"</span>: <span class="string">"5m"</span></span><br><span class="line">  <span class="string">"group_wait"</span>: <span class="string">"30s"</span></span><br><span class="line">  <span class="string">"receiver"</span>: <span class="string">"null"</span></span><br><span class="line">  <span class="string">"repeat_interval"</span>: <span class="string">"12h"</span></span><br><span class="line">  <span class="string">"routes"</span>:</span><br><span class="line">  - <span class="string">"match"</span>:</span><br><span class="line">      <span class="string">"alertname"</span>: <span class="string">"Watchdog"</span></span><br><span class="line">    <span class="string">"receiver"</span>: <span class="string">"null"</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;配置的结构差不多是一致的，内容嘛都是默认的。这里我们要实现自己的通知，就需要改改啦，这里我使用了企业微信来进行告警，<a href="https://www.xxlaila.cn/2019/08/20/zabbix%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E5%91%8A%E8%AD%A6/">企业微信</a>申请参考。这里我们要新建一个alertmanager.yaml 文件，这个文件名不能随便命名，可以看到alertmanager-secret.yaml是这么定义的。也可以在kubernetes的dashbord界面看到alertmanager 的安装参数也是这个。可以进入容器看到这个文件，默认路径在/etc/alertmanager/config/alertmanager.yaml。</p><h4 id="新建alertmanager-yaml"><a href="#新建alertmanager-yaml" class="headerlink" title="新建alertmanager.yaml"></a>新建alertmanager.yaml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line">  smtp_smarthost: <span class="string">'smtp.exmail.qq.com:465'</span></span><br><span class="line">  smtp_from: <span class="string">'admin@admin.com'</span></span><br><span class="line">  smtp_auth_username: <span class="string">'admin@admin.com'</span></span><br><span class="line">  smtp_auth_password: <span class="string">'123456'</span></span><br><span class="line">  smtp_require_tls: <span class="literal">true</span></span><br><span class="line">  hipchat_api_url: <span class="string">'https://hipchat.foobar.org/'</span></span><br><span class="line">  wechat_api_url: <span class="string">'https://qyapi.weixin.qq.com/cgi-bin/'</span> <span class="comment"># 企业微信地址</span></span><br><span class="line">  wechat_api_secret: <span class="string">'KJfj93rijk903240i--234jsnjkhf23sjkfjsfsd'</span> <span class="comment"># 企业微信Secret</span></span><br><span class="line">  wechat_api_corp_id: <span class="string">'wwa98457kdsnfk8'</span> <span class="comment"># 企业微信CorpId</span></span><br><span class="line">templates:</span><br><span class="line">- <span class="string">'*.tmpl'</span></span><br><span class="line">route:</span><br><span class="line">  group_by: [<span class="string">'alertname'</span>]</span><br><span class="line">  group_wait: 30s</span><br><span class="line">  group_interval: 5m</span><br><span class="line">  repeat_interval: 1h</span><br><span class="line">  receiver: default</span><br><span class="line">  routes:</span><br><span class="line">  - receiver: <span class="string">'wechat'</span></span><br><span class="line">    <span class="built_in">continue</span>: <span class="literal">true</span></span><br><span class="line">inhibit_rules:</span><br><span class="line">- source_match:</span><br><span class="line">receivers:</span><br><span class="line">- name: <span class="string">'default'</span></span><br><span class="line">  email_configs:</span><br><span class="line">  - to: <span class="string">'hahah@admin.com'</span></span><br><span class="line">    send_resolved: <span class="literal">true</span></span><br><span class="line">- name: <span class="string">'wechat'</span></span><br><span class="line">  wechat_configs:</span><br><span class="line">  - send_resolved: <span class="literal">true</span></span><br><span class="line">    corp_id: <span class="string">'wwa98457kdsnfk8'</span> <span class="comment"># 企业微信CorpId</span></span><br><span class="line">    to_user: <span class="string">'@all'</span> <span class="comment"># 接受人，都是all</span></span><br><span class="line">    to_party: <span class="string">''</span> <span class="comment"># 接收组的id</span></span><br><span class="line">    message: <span class="string">'&#123;&#123; template "wechat.default.message" . &#125;&#125;'</span> <span class="comment"># 发送消息的模版</span></span><br><span class="line">    agent_id: <span class="string">'1000021'</span> <span class="comment"># 企业微信自定义应用的id</span></span><br></pre></td></tr></table></figure><p><strong>参数</strong>：</p><ul><li>global: 全局配置。定义一些全局的公共参数，如全局的SMTP配置，企业微信，钉钉，这里配置了企业邮箱和企业微信。</li><li>templates: 模版。定义告警通知时的模板，如邮件模板、企业微信告警模版。</li><li>route: 告警路由。根据标签匹配，确定当前告警应该如何处理。</li><li>receivers: 接收人，可以是一个邮箱也可以是企业微信，也可以是一个webhook，这里我配置的企业微信的运维部门。是一个抽象的东西。</li><li>inhibit_rules: 抑制规则。设置合理的抑制规则可以减少垃圾告警的产生</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里要定义一个默认的接受方式<code>- name: &#39;default&#39;</code>，否则会出错误。错误如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">level=error ts=2019-12-06T08:36:25.005Z <span class="built_in">caller</span>=coordinator.go:124 component=configuration msg=<span class="string">"Loading configuration file failed"</span> file=/etc/alertmanager/config/alertmanager.yaml err=<span class="string">"root route must specify a default receiver"</span></span><br></pre></td></tr></table></figure><h4 id="tmpl模板的配置"><a href="#tmpl模板的配置" class="headerlink" title=".tmpl模板的配置"></a>.tmpl模板的配置</h4><ul><li>wechat.default.message.tmpl<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; wechat.default.message.tmpl &lt;&lt;EOF</span></span><br><span class="line">&#123;&#123; define <span class="string">"wechat.default.message"</span> &#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len .Alerts.Firing) 0 -&#125;&#125;</span><br><span class="line">&#123;&#123;- range <span class="variable">$index</span>, <span class="variable">$alert</span> := .Alerts -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> eq <span class="variable">$index</span> 0 -&#125;&#125;</span><br><span class="line">告警类型: &#123;&#123; <span class="variable">$alert</span>.Labels.alertname &#125;&#125;</span><br><span class="line">告警级别: &#123;&#123; <span class="variable">$alert</span>.Labels.severity &#125;&#125;</span><br><span class="line"></span><br><span class="line">=====================</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">===告警详情===</span><br><span class="line">告警详情: &#123;&#123; <span class="variable">$alert</span>.Annotations.message &#125;&#125;</span><br><span class="line">故障时间: &#123;&#123; <span class="variable">$alert</span>.StartsAt.Format <span class="string">"2019-11-06 17:01:01"</span> &#125;&#125;</span><br><span class="line">===参考信息===</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.instance) 0 -&#125;&#125;故障实例ip: &#123;&#123; <span class="variable">$alert</span>.Labels.instance &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.namespace) 0 -&#125;&#125;故障实例所在namespace: &#123;&#123; <span class="variable">$alert</span>.Labels.namespace &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.node) 0 -&#125;&#125;故障物理机ip: &#123;&#123; <span class="variable">$alert</span>.Labels.node &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.pod_name) 0 -&#125;&#125;故障pod名称: &#123;&#123; <span class="variable">$alert</span>.Labels.pod_name &#125;&#125;&#123;&#123;- end &#125;&#125;</span><br><span class="line">=====================</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len .Alerts.Resolved) 0 -&#125;&#125;</span><br><span class="line">&#123;&#123;- range <span class="variable">$index</span>, <span class="variable">$alert</span> := .Alerts -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> eq <span class="variable">$index</span> 0 -&#125;&#125;</span><br><span class="line">告警类型: &#123;&#123; <span class="variable">$alert</span>.Labels.alertname &#125;&#125;</span><br><span class="line">告警级别: &#123;&#123; <span class="variable">$alert</span>.Labels.severity &#125;&#125;</span><br><span class="line"></span><br><span class="line">=====================</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">===告警详情===</span><br><span class="line">告警详情: &#123;&#123; <span class="variable">$alert</span>.Annotations.message &#125;&#125;</span><br><span class="line">故障时间: &#123;&#123; <span class="variable">$alert</span>.StartsAt.Format <span class="string">"2019-11-06 17:01:01"</span> &#125;&#125;</span><br><span class="line">恢复时间: &#123;&#123; <span class="variable">$alert</span>.EndsAt.Format <span class="string">"2019-11-06 17:01:01"</span> &#125;&#125;</span><br><span class="line">===参考信息===</span><br><span class="line">&#123;&#123; <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.instance) 0 -&#125;&#125;故障实例ip: &#123;&#123; <span class="variable">$alert</span>.Labels.instance &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.namespace) 0 -&#125;&#125;故障实例所在namespace: &#123;&#123; <span class="variable">$alert</span>.Labels.namespace &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.node) 0 -&#125;&#125;故障物理机ip: &#123;&#123; <span class="variable">$alert</span>.Labels.node &#125;&#125;;&#123;&#123;- end -&#125;&#125;</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> gt (len <span class="variable">$alert</span>.Labels.pod_name) 0 -&#125;&#125;故障pod名称: &#123;&#123; <span class="variable">$alert</span>.Labels.pod_name &#125;&#125;;&#123;&#123;- end &#125;&#125;</span><br><span class="line">=====================</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><h3 id="建立alertmanager-main"><a href="#建立alertmanager-main" class="headerlink" title="建立alertmanager-main"></a>建立alertmanager-main</h3><h4 id="删除原有的配置项"><a href="#删除原有的配置项" class="headerlink" title="删除原有的配置项"></a>删除原有的配置项</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl delete secret alertmanager-main -n monitoring</span></span><br></pre></td></tr></table></figure><h4 id="部署alertmanager-secret"><a href="#部署alertmanager-secret" class="headerlink" title="部署alertmanager secret"></a>部署alertmanager secret</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;重新部署alertmanager secret有两种方式，第一种是把建立好的alertmanager.yaml 通过base64加密以后覆盖之前文件的base64内容，wechat.default.message.tmpl模版文件也是一样。整体格式如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat alertmanager-secret.yaml </span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  alertmanager.yaml: bash64</span><br><span class="line">  template_1.tmpl: bash64</span><br><span class="line">  template_2.tmpl: bash64</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-main</span><br><span class="line">  namespace: monitoring</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种创建比较麻烦，每次修改文件都要去生成一次。不方便。所以可以使用以下方式，简单快捷。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl create secret generic alertmanager-main --from-file=alertmanager.yaml,wechat.default.message.tmpl -n monitoring</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署完成以后，Secret 对象将会挂载到 AlertManager 对象创建的 AlertManager Pod 中去。等一小会就企业微信就可以收到告警信息</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><h4 id="alertmanager-web界面的config信息会发生变化"><a href="#alertmanager-web界面的config信息会发生变化" class="headerlink" title="alertmanager web界面的config信息会发生变化"></a>alertmanager web界面的config信息会发生变化</h4><p><img src="https://img.xxlaila.cn/1575624600073.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575624706636.jpg" alt="img"></p><h4 id="企业微信"><a href="#企业微信" class="headerlink" title="企业微信"></a>企业微信</h4><p><img src="https://img.xxlaila.cn/1575624815597.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 前篇文章做了kubernetes 的 监控，基于&lt;a href=&quot;https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/&quot;&gt;prometheus与grafana部署&lt;/a&gt;，监控是做好了，但是还缺乏告警机制，没有告警机制监控就白做了，prometheus的告警就是alertmanager来做。
    
    </summary>
    
      <category term="监控" scheme="https://www.xxlaila.cn/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="alertmanager" scheme="https://www.xxlaila.cn/tags/alertmanager/"/>
    
  </entry>
  
  <entry>
    <title>k8s v1.14 prometheus与grafana部署</title>
    <link href="https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus%E4%B8%8Egrafana%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/12/04/k8s-v1-14-prometheus与grafana部署/</id>
    <published>2019-12-04T09:55:44.000Z</published>
    <updated>2019-12-11T05:50:28.208Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-prometheus是读取Metrcs、etcd、api的其中数据。<a id="more"></a></p><h4 id="查看etcd的metrics输出信息"><a href="#查看etcd的metrics输出信息" class="headerlink" title="查看etcd的metrics输出信息"></a>查看etcd的metrics输出信息</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># curl --cacert <span class="regexp">/etc/</span>kubernetes<span class="regexp">/ssl/</span>ca.pem --cert <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span>etcd.pem --key <span class="regexp">/etc/</span>etcd<span class="regexp">/ssl/</span>etcd-key.pem https:<span class="comment">//172.21.17.30:2379/metrics</span></span><br></pre></td></tr></table></figure><h4 id="查看kube-apiserver的metrics信息"><a href="#查看kube-apiserver的metrics信息" class="headerlink" title="查看kube-apiserver的metrics信息"></a>查看kube-apiserver的metrics信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get --raw /metrics</span></span><br></pre></td></tr></table></figure><h4 id="下载官方的yaml文件"><a href="#下载官方的yaml文件" class="headerlink" title="下载官方的yaml文件"></a>下载官方的yaml文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git clone https://github.com/coreos/kube-prometheus</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd kube-prometheus/manifests</span></span><br><span class="line"><span class="comment"># mkdir -p operator node-exporter alertmanager grafana kube-state-metrics prometheus serviceMonitor adapter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mv *-serviceMonitor* serviceMonitor/</span></span><br><span class="line"><span class="comment"># mv grafana-* grafana/</span></span><br><span class="line"><span class="comment"># mv kube-state-metrics-* kube-state-metrics/</span></span><br><span class="line"><span class="comment"># mv alertmanager-* alertmanager/</span></span><br><span class="line"><span class="comment"># mv node-exporter-* node-exporter/</span></span><br><span class="line"><span class="comment"># mv prometheus-adapter* adapter/</span></span><br><span class="line"><span class="comment"># mv prometheus-* prometheus/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd setup/</span></span><br><span class="line"><span class="comment"># mv prometheus-operator* ../operator/</span></span><br><span class="line"><span class="comment"># mv 0namespace-namespace.yaml ../</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cd ..</span></span><br><span class="line"><span class="comment"># ls -ltrh</span></span><br><span class="line">-rw-r--r-- 1 root root   60 Dec  3 17:45 0namespace-namespace.yaml</span><br><span class="line">drwxr-xr-x 2 root root  219 Dec  3 17:46 grafana</span><br><span class="line">drwxr-xr-x 2 root root  305 Dec  3 17:46 kube-state-metrics</span><br><span class="line">drwxr-xr-x 2 root root  200 Dec  3 17:46 node-exporter</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  3 17:47 operator</span><br><span class="line">drwxr-xr-x 2 root root  149 Dec  4 13:40 alertmanager</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 09:56 prometheus</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 10:01 adapter</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Dec  5 11:55 serviceMonitor</span><br></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署前需要修改文件；</p><h4 id="创建监控etcd-secret"><a href="#创建监控etcd-secret" class="headerlink" title="创建监控etcd secret"></a>创建监控etcd secret</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;etcd 监控要用到证书同时需要修改prometheus-prometheus.yaml。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n monitoring create secret generic etcd-certs --from-file=/etc/kubernetes/ssl/ca.pem --from-file=etcd-key.pem --from-file=etcd.pem</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get secret -n monitoring</span></span><br><span class="line">etcd-certs                        Opaque                                3      5d15h</span><br></pre></td></tr></table></figure><h4 id="修改prometheus-prometheus-yaml"><a href="#修改prometheus-prometheus-yaml" class="headerlink" title="修改prometheus-prometheus.yaml"></a>修改prometheus-prometheus.yaml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd prometheus/</span></span><br><span class="line"><span class="comment"># vim prometheus-prometheus.yaml</span></span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: Prometheus</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    prometheus: k8s</span><br><span class="line">  name: k8s</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  alerting:</span><br><span class="line">    alertmanagers:</span><br><span class="line">    - name: alertmanager-main</span><br><span class="line">      namespace: monitoring</span><br><span class="line">      port: web</span><br><span class="line">  baseImage: quay.io/prometheus/prometheus</span><br><span class="line">  nodeSelector:</span><br><span class="line">    kubernetes.io/os: linux</span><br><span class="line">  podMonitorSelector: &#123;&#125;</span><br><span class="line">  replicas: 2</span><br><span class="line">  <span class="comment"># 添加etcd 证书</span></span><br><span class="line">  secrets:</span><br><span class="line">  - etcd-certs</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      memory: 400Mi</span><br><span class="line">  <span class="comment"># 设置数据保留天数</span></span><br><span class="line">  retention: 7d</span><br><span class="line">  <span class="comment"># 创建外部存储pvc</span></span><br><span class="line">  storage:</span><br><span class="line">    volumeClaimTemplate:</span><br><span class="line">      spec:</span><br><span class="line">        accessModes:</span><br><span class="line">        - ReadWriteOnce</span><br><span class="line">        metadata:</span><br><span class="line">          annotations:</span><br><span class="line">            storageclass.kubernetes.io/is-default-class: <span class="literal">true</span></span><br><span class="line">          labels:</span><br><span class="line">            prometheus: prometheus-data-pvc</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            storage: 25Gi</span><br><span class="line">  ruleSelector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      prometheus: k8s</span><br><span class="line">      role: alert-rules</span><br><span class="line">  securityContext:</span><br><span class="line">    fsGroup: 2000</span><br><span class="line">    runAsNonRoot: <span class="literal">true</span></span><br><span class="line">    runAsUser: 1000</span><br><span class="line">  serviceAccountName: prometheus-k8s</span><br><span class="line">  serviceMonitorNamespaceSelector: &#123;&#125;</span><br><span class="line">  serviceMonitorSelector: &#123;&#125;</span><br><span class="line">  version: v2.11.0</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>storageclass.kubernetes.io/is-default-class: true</code> 是设置的默认动态存储，可以参考<a href="https://www.xxlaila.cn/2019/08/12/kube-nfs-%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/">kube-nfs-动态存储</a></p><h4 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部署前吧adapter 目录下面的 <code>prometheus-adapter-apiService.yaml</code> 重命名，因为前面安装了metrics。如果这里在覆盖安装，就会导致<code>metrics.k8s.io</code>报错。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># kubectl apply -f 0namespace-namespace.yaml</span></span><br><span class="line"><span class="keyword">namespace</span>/monitoring created</span><br><span class="line"></span><br><span class="line"><span class="meta"># kubectl apply -f operator/</span></span><br><span class="line"><span class="meta"># kubectl -n monitoring get pod|grep operator</span></span><br><span class="line">prometheus-<span class="keyword">operator</span><span class="number">-548</span>c6dc45c-vz6l6   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">40</span>h</span><br><span class="line"></span><br><span class="line"><span class="meta"># kubectl apply -f adapter/</span></span><br><span class="line"><span class="meta"># kubectl apply -f alertmanager/</span></span><br><span class="line"><span class="meta"># kubectl apply -f node-exporter/</span></span><br><span class="line"><span class="meta"># kubectl apply -f kube-state-metrics/</span></span><br><span class="line"><span class="meta"># kubectl apply -f grafana/</span></span><br><span class="line"><span class="meta"># kubectl apply -f prometheus/</span></span><br><span class="line"><span class="meta"># kubectl apply -f serviceMonitor/</span></span><br></pre></td></tr></table></figure><h4 id="查看部署状态"><a href="#查看部署状态" class="headerlink" title="查看部署状态"></a>查看部署状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get all -n monitoring</span></span><br><span class="line">NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/alertmanager-main-0                    2/2     Running   0          40h</span><br><span class="line">pod/alertmanager-main-1                    2/2     Running   0          40h</span><br><span class="line">pod/alertmanager-main-2                    2/2     Running   0          40h</span><br><span class="line">pod/grafana-5db74b88f4-7mt8c               1/1     Running   0          40h</span><br><span class="line">pod/kube-state-metrics-54f98c4687-mz5lq    3/3     Running   0          18h</span><br><span class="line">pod/node-exporter-hb66c                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-l2s8g                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-sjbmg                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-vw87m                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-zr8fk                    2/2     Running   0          40h</span><br><span class="line">pod/node-exporter-zxcwl                    2/2     Running   0          40h</span><br><span class="line">pod/prometheus-adapter-8667948d79-tcz47    1/1     Running   0          18h</span><br><span class="line">pod/prometheus-k8s-0                       3/3     Running   1          20h</span><br><span class="line">pod/prometheus-k8s-1                       3/3     Running   1          20h</span><br><span class="line">pod/prometheus-operator-548c6dc45c-vz6l6   1/1     Running   0          40h</span><br><span class="line"></span><br><span class="line">NAME                            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE</span><br><span class="line">service/alertmanager-main       ClusterIP   10.254.101.249   &lt;none&gt;        9093/TCP                     40h</span><br><span class="line">service/alertmanager-operated   ClusterIP   None             &lt;none&gt;        9093/TCP,9094/TCP,9094/UDP   40h</span><br><span class="line">service/etcd                    ClusterIP   None             &lt;none&gt;        2379/TCP                     17h</span><br><span class="line">service/grafana                 ClusterIP   10.254.214.6     &lt;none&gt;        3000/TCP                     40h</span><br><span class="line">service/kube-state-metrics      ClusterIP   None             &lt;none&gt;        8443/TCP,9443/TCP            18h</span><br><span class="line">service/node-exporter           ClusterIP   None             &lt;none&gt;        9100/TCP                     40h</span><br><span class="line">service/prometheus-adapter      ClusterIP   10.254.60.49     &lt;none&gt;        443/TCP                      18h</span><br><span class="line">service/prometheus-k8s          ClusterIP   10.254.41.152    &lt;none&gt;        9090/TCP                     40h</span><br><span class="line">service/prometheus-operated     ClusterIP   None             &lt;none&gt;        9090/TCP                     20h</span><br><span class="line">service/prometheus-operator     ClusterIP   None             &lt;none&gt;        8080/TCP                     40h</span><br><span class="line"></span><br><span class="line">NAME                           DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE</span><br><span class="line">daemonset.apps/node-exporter   6         6         6       6            6           kubernetes.io/os=linux   40h</span><br><span class="line"></span><br><span class="line">NAME                                  READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/grafana               1/1     1            1           40h</span><br><span class="line">deployment.apps/kube-state-metrics    1/1     1            1           18h</span><br><span class="line">deployment.apps/prometheus-adapter    1/1     1            1           18h</span><br><span class="line">deployment.apps/prometheus-operator   1/1     1            1           40h</span><br><span class="line"></span><br><span class="line">NAME                                             DESIRED   CURRENT   READY   AGE</span><br><span class="line">replicaset.apps/grafana-5db74b88f4               1         1         1       40h</span><br><span class="line">replicaset.apps/kube-state-metrics-54f98c4687    1         1         1       18h</span><br><span class="line">replicaset.apps/prometheus-adapter-8667948d79    1         1         1       18h</span><br><span class="line">replicaset.apps/prometheus-operator-548c6dc45c   1         1         1       40h</span><br><span class="line"></span><br><span class="line">NAME                                 READY   AGE</span><br><span class="line">statefulset.apps/alertmanager-main   3/3     40h</span><br><span class="line">statefulset.apps/prometheus-k8s      2/2     20h</span><br></pre></td></tr></table></figure><h4 id="配置ingress"><a href="#配置ingress" class="headerlink" title="配置ingress"></a>配置ingress</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;ingress-monitor.yaml &lt;&lt;EOF </span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: prometheus.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: prometheus-k8s</span><br><span class="line">          servicePort: 9090</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: grafana.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: grafana</span><br><span class="line">          servicePort: 3000</span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-web-ui</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: alertmanager.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: alertmanager-main</span><br><span class="line">          servicePort: 9093</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f ingress-monitor.yaml</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在浏览器打开域名即可访问</p><h3 id="常用应用监控"><a href="#常用应用监控" class="headerlink" title="常用应用监控"></a>常用应用监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kubernetes 自身常见的监控有kube-apiserver、kube-scheduler、kube-controller-manager、etcd。node节点常见的有kubelet、kube-proxy。在serviceMonitor目录下面默认的文件只能满足kube-apiserver、kubelet两个，其他的修改单独修改文件才能监控。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 上面阐述的是集群是二进制方式安装，而不是以pod形式进行安装。</p><h4 id="kube-scheduler监控"><a href="#kube-scheduler监控" class="headerlink" title="kube-scheduler监控"></a>kube-scheduler监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-scheduler的service、endpoints不在kubernetes集群内，可以通过<code>kubectl get ep -n kube-system</code> 进行查看，修改 <code>prometheus-serviceMonitorKubeScheduler.yaml</code>，在该文件添加如下内容或者新起一个文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;&gt; prometheus-serviceMonitorKubeScheduler.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-scheduler</span><br><span class="line">  name: kube-scheduler</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10251</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10251</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-scheduler</span><br><span class="line">  name: kube-scheduler</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10251</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorKubeScheduler.yaml</span></span><br></pre></td></tr></table></figure><h4 id="kube-controller-manager-监控"><a href="#kube-controller-manager-监控" class="headerlink" title="kube-controller-manager 监控"></a>kube-controller-manager 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kube-controller-manager修改，因为kubernetes 集群是采用ssl证书安装，默认的kube-controller-manager是没有使用ssl加密的，所以这里需要使用ssl证书，及https，否则不能监控。就会提示什么403、x509、400错误。</p><ul><li><p>prometheus-serviceMonitorKubeControllerManager.yaml 修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat prometheus-serviceMonitorKubeControllerManager.yaml</span></span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">    interval: 30s</span><br><span class="line">    port: https-metrics</span><br><span class="line">    scheme: https</span><br><span class="line">    tlsConfig:</span><br><span class="line">      insecureSkipVerify: <span class="literal">true</span></span><br><span class="line">    metricRelabelings:</span><br><span class="line">    - action: drop</span><br><span class="line">      regex: etcd_(debugging|disk|request|server).*</span><br><span class="line">      sourceLabels:</span><br><span class="line">      - __name__</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-controller-manager</span><br></pre></td></tr></table></figure></li><li><p>新建kube-controller-manager-service.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;kube-controller-manager-service.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 10252</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10252</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-controller-manager</span><br><span class="line">  name: kube-controller-manager</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 10252</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorKubeControllerManager.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f kube-controller-manager-service.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="etcd-监控"><a href="#etcd-监控" class="headerlink" title="etcd 监控"></a>etcd 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; etcd 不在k8s集群内部所以要创建Endpoints、Service</p><ul><li>prometheus-serviceMonitoretcd.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitoretcd.yaml&lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 2379</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 2379</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.17.30</span><br><span class="line">  - ip: 172.21.17.31</span><br><span class="line">  - ip: 172.21.16.110</span><br><span class="line">  ports:</span><br><span class="line">  - name: https-metrics</span><br><span class="line">    port: 2379</span><br><span class="line">    protocol: TCP</span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: etcd</span><br><span class="line">  name: etcd</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - interval: 10s</span><br><span class="line">    port: https-metrics</span><br><span class="line">    scheme: https</span><br><span class="line">    tlsConfig:</span><br><span class="line">      caFile: /etc/prometheus/secrets/etcd-certs/ca.pem</span><br><span class="line">      certFile: /etc/prometheus/secrets/etcd-certs/etcd.pem</span><br><span class="line">      keyFile: /etc/prometheus/secrets/etcd-certs/etcd-key.pem</span><br><span class="line">      insecureSkipVerify: <span class="literal">true</span></span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: etcd</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitoretcd.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="kube-proxy-监控"><a href="#kube-proxy-监控" class="headerlink" title="kube-proxy 监控"></a>kube-proxy 监控</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kube-proxy的metrics收集端口为10249，可以查看kub-proxy的安装文档。使用的是http方式，不需要ssl加密</p><ul><li><p>新建 kube-proxy.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;  kube-proxy.yaml &lt;&lt;EOF</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10249</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 10249</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Endpoints</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: kube-system</span><br><span class="line">subsets:</span><br><span class="line">- addresses:</span><br><span class="line">  - ip: 172.21.16.204</span><br><span class="line">  - ip: 172.21.16.231</span><br><span class="line">  - ip: ……</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 10249</span><br><span class="line">    protocol: TCP</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>新建 prometheus-serviceMonitorProxy.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitorProxy.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-proxy</span><br><span class="line">  name: kube-proxy</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  endpoints:</span><br><span class="line">  - interval: 30s</span><br><span class="line">    port: http-metrics</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-proxy</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorProxy.yaml</span></span><br><span class="line"><span class="comment"># kubectl apply -f kube-proxy.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="traefik-监控"><a href="#traefik-监控" class="headerlink" title="traefik 监控"></a>traefik 监控</h4><ul><li>新建prometheus-serviceMonitorTraefix.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-serviceMonitorTraefix.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: traefik-ingress</span><br><span class="line">  name: traefik-ingress</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  jobLabel: k8s-app</span><br><span class="line">  endpoints:</span><br><span class="line">  - port: admin  <span class="comment">#---设置为traefik 8080端口名称 admin</span></span><br><span class="line">    interval: 30s</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: traefik-ingress</span><br><span class="line">  namespaceSelector:</span><br><span class="line">    matchNames:</span><br><span class="line">    - kube-system</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f prometheus-serviceMonitorTraefix.yaml</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前提是能打开traefix 的metrics页面，跟着我前面的文档安装，默认是开启的。</p><h3 id="grafana-修改"><a href="#grafana-修改" class="headerlink" title="grafana 修改"></a>grafana 修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grafana默认安装后，需要安装插件，否则饼状图无法显示。而且我们还需要倒入官方的一些dashbord 模版，默认grafana安装如果pod 重建之后什么都没有了，这时候我们需要建立一个pvc，吧数据保存到磁盘里面，即使grafana重建之后数据还在。不受任何影响。</p><h4 id="新建grafana-pvc-yaml"><a href="#新建grafana-pvc-yaml" class="headerlink" title="新建grafana-pvc.yaml"></a>新建grafana-pvc.yaml</h4><ul><li>grafana-pvc.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; grafana-pvc.yaml &lt;&lt;EOF</span></span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-pvc</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany</span><br><span class="line">  storageClassName: xxlaila-nfs-storage</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 5Gi</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl apply -f grafana-pvc.yaml</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="修改granfana-deployment-yaml"><a href="#修改granfana-deployment-yaml" class="headerlink" title="修改granfana-deployment.yaml"></a>修改granfana-deployment.yaml</h4><ul><li>granfana-deployment.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改</span></span><br><span class="line">    volumes:</span><br><span class="line">      <span class="comment">#- emptyDir: &#123;&#125;</span></span><br><span class="line">      - name: grafana-storage</span><br><span class="line">        persistentVolumeClaim:</span><br><span class="line">          claimName: grafana-pvc</span><br><span class="line">      - name: grafana-datasources</span><br><span class="line"><span class="comment"># 新增</span></span><br><span class="line">        - mountPath: /grafana-dashboard-definitions/0/grafana-dashboard-k8s-traefik-ingress</span><br><span class="line">          name: grafana-dashboard-k8s-traefik-ingress</span><br><span class="line">          readOnly: <span class="literal">false</span></span><br><span class="line">        - mountPath: /grafana-dashboard-definitions/0/grafana-dashboard-k8s-etcd-clusters-as-service</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-clusters-as-service</span><br><span class="line">          readOnly: <span class="literal">false</span></span><br><span class="line">        - mountPath: /grafana-dashboard-definitions/0/grafana-dashboard-k8s-etcd-cluster-as-pod</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-cluster-as-pod</span><br><span class="line">          readOnly: <span class="literal">false</span></span><br><span class="line">        - mountPath: /grafana-dashboard-definitions/0/grafana-dashboard-k8s-etcd-server</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-server</span><br><span class="line">          readOnly: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增</span></span><br><span class="line">    - configMap:</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-clusters-as-service</span><br><span class="line">        name: grafana-dashboard-k8s-etcd-clusters-as-service</span><br><span class="line">      - configMap:</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-cluster-as-pod</span><br><span class="line">        name: grafana-dashboard-k8s-etcd-cluster-as-pod</span><br><span class="line">      - configMap:</span><br><span class="line">          name: grafana-dashboard-k8s-etcd-server</span><br><span class="line">        name: grafana-dashboard-k8s-etcd-server</span><br><span class="line">      - configMap:</span><br><span class="line">          name: grafana-dashboard-k8s-traefik-ingress</span><br><span class="line">        name: grafana-dashboard-k8s-traefik-ingress</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上述新增值需要吧dashbord的模版倒入grafana-dashboardDefinitions.yaml文件里面，格式可以参考里面的格式，记住数据库需要修改，否则无法链接数据库，dashbord无法显示。</p><h4 id="查看service、endpoints"><a href="#查看service、endpoints" class="headerlink" title="查看service、endpoints"></a>查看service、endpoints</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc,endpoints -n kube-system</span></span><br><span class="line">NAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE</span><br><span class="line">service/etcd                      ClusterIP   None             &lt;none&gt;        2379/TCP                 3m41s</span><br><span class="line">service/kube-controller-manager   ClusterIP   None             &lt;none&gt;        10252/TCP                16h</span><br><span class="line">service/kube-dns                  ClusterIP   10.254.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   7d16h</span><br><span class="line">service/kube-proxy                ClusterIP   None             &lt;none&gt;        10249/TCP                37m</span><br><span class="line">service/kube-scheduler            ClusterIP   None             &lt;none&gt;        10251/TCP                18h</span><br><span class="line">service/kubelet                   ClusterIP   None             &lt;none&gt;        10250/TCP                40h</span><br><span class="line">service/kubernetes-dashboard      NodePort    10.254.139.196   &lt;none&gt;        443:31417/TCP            6d18h</span><br><span class="line">service/metrics-server            ClusterIP   10.254.196.151   &lt;none&gt;        443/TCP                  2d23h</span><br><span class="line"></span><br><span class="line">NAME                                ENDPOINTS                                                                 AGE</span><br><span class="line">endpoints/etcd                      172.21.16.110:2379,172.21.17.30:2379,172.21.17.31:2379                    3m41s</span><br><span class="line">endpoints/kube-controller-manager   172.21.16.110:10252,172.21.17.30:10252,172.21.17.31:10252                 16h</span><br><span class="line">endpoints/kube-dns                  10.244.1.46:53,10.244.4.36:53,10.244.1.46:53 + 3 more...                  7d16h</span><br><span class="line">endpoints/kube-proxy                172.21.16.204:10249,172.21.16.231:10249,172.21.17.34:10249 + 3 more...    37m</span><br><span class="line">endpoints/kube-scheduler            172.21.16.110:10251,172.21.17.30:10251,172.21.17.31:10251                 7d16h</span><br><span class="line">endpoints/kubelet                   172.21.16.204:10255,172.21.16.231:10255,172.21.17.34:10255 + 15 more...   40h</span><br><span class="line">endpoints/kubernetes-dashboard      10.244.6.27:8443                                                          6d18h</span><br><span class="line">endpoints/metrics-server            172.21.17.34:4443                                                         2d23h</span><br></pre></td></tr></table></figure><h4 id="查看接口信息"><a href="#查看接口信息" class="headerlink" title="查看接口信息"></a>查看接口信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl api-versions| grep monitoring</span></span><br><span class="line">monitoring.coreos.com/v1</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get --raw "/apis/monitoring.coreos.com/v1"|jq .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get --raw "/apis/monitoring.coreos.com/v1/servicemonitors"|jq .</span></span><br></pre></td></tr></table></figure><h3 id="查看验证"><a href="#查看验证" class="headerlink" title="查看验证"></a>查看验证</h3><h4 id="Prometheus-的Targets监控"><a href="#Prometheus-的Targets监控" class="headerlink" title="Prometheus 的Targets监控"></a>Prometheus 的Targets监控</h4><p><img src="https://img.xxlaila.cn/1575513127483.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513184822.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513219480.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575517225144.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575519980419.jpg" alt="img"></p><h4 id="granfa-查看"><a href="#granfa-查看" class="headerlink" title="granfa 查看"></a>granfa 查看</h4><p><img src="https://img.xxlaila.cn/1575513263070.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513304800.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1575513339328.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kube-prometheus是读取Metrcs、etcd、api的其中数据。
    
    </summary>
    
      <category term="监控" scheme="https://www.xxlaila.cn/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
      <category term="prometheus" scheme="https://www.xxlaila.cn/tags/prometheus/"/>
    
  </entry>
  
  <entry>
    <title>centos 7 升级内核</title>
    <link href="https://www.xxlaila.cn/2019/12/03/centos-7-%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"/>
    <id>https://www.xxlaila.cn/2019/12/03/centos-7-升级内核/</id>
    <published>2019-12-03T09:01:03.000Z</published>
    <updated>2019-12-12T06:29:22.159Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="centos-7-升级内核版本"><a href="#centos-7-升级内核版本" class="headerlink" title="centos 7 升级内核版本"></a>centos 7 升级内核版本</h3><h4 id="查看当前内核版本"><a href="#查看当前内核版本" class="headerlink" title="查看当前内核版本"></a>查看当前内核版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">3.10.0-693.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># uname -a</span></span><br><span class="line">Linux k8s-master-01-3.kxl 3.10.0-693.el7.x86_64 <span class="comment">#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="更新yum源仓库和插件"><a href="#更新yum源仓库和插件" class="headerlink" title="更新yum源仓库和插件"></a>更新yum源仓库和插件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y update</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h3 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h3><h4 id="导入ELRepo仓库的公共密钥"><a href="#导入ELRepo仓库的公共密钥" class="headerlink" title="导入ELRepo仓库的公共密钥"></a>导入ELRepo仓库的公共密钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br></pre></td></tr></table></figure><h4 id="安装ELRepo仓库的yum源"><a href="#安装ELRepo仓库的yum源" class="headerlink" title="安装ELRepo仓库的yum源"></a>安装ELRepo仓库的yum源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm</span></span><br></pre></td></tr></table></figure><h4 id="查看可用的系统内核包"><a href="#查看可用的系统内核包" class="headerlink" title="查看可用的系统内核包"></a>查看可用的系统内核包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum --disablerepo="*" --enablerepo="elrepo-kernel" list available</span></span><br><span class="line">elrepo-kernel                                                                                                                                                                      | 2.9 kB  00:00:00     </span><br><span class="line">elrepo-kernel/primary_db                                                                                                                                                           | 1.8 MB  00:00:00     </span><br><span class="line">Available Packages</span><br><span class="line">kernel-lt.x86_64                                                                                     4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-devel.x86_64                                                                               4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-doc.noarch                                                                                 4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-headers.x86_64                                                                             4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools.x86_64                                                                               4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs.x86_64                                                                          4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel<span class="_">-lt</span>-tools-libs-devel.x86_64                                                                    4.4.205-1.el7.elrepo                                                                    elrepo-kernel</span><br><span class="line">kernel-ml.x86_64                                                                                     5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-devel.x86_64                                                                               5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-doc.noarch                                                                                 5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-headers.x86_64                                                                             5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools.x86_64                                                                               5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs.x86_64                                                                          5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">kernel-ml-tools-libs-devel.x86_64                                                                    5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">perf.x86_64                                                                                          5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br><span class="line">python-perf.x86_64                                                                                   5.4.1-1.el7.elrepo                                                                      elrepo-kernel</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结果为长期维护版本lt为4.4，最新主线稳定版ml为5.4，这里安装的是4.4</p><h4 id="安装kernel"><a href="#安装kernel" class="headerlink" title="安装kernel"></a>安装kernel</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y --enablerepo=elrepo-kernel install kernel-lt-4.4.205-1.el7.elrepo kernel-lt-devel-4.4.205-1.el7.elrepo</span></span><br></pre></td></tr></table></figure><h3 id="设置-grub2"><a href="#设置-grub2" class="headerlink" title="设置 grub2"></a>设置 grub2</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内核安装好后，需要设置为默认启动选项并重启后才会生效</p><h4 id="查看系统上的所有可用内核"><a href="#查看系统上的所有可用内核" class="headerlink" title="查看系统上的所有可用内核"></a>查看系统上的所有可用内核</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># awk -F\' '$1=="menuentry " &#123;print i++ " : " $2&#125;' /etc/grub2.cfg</span></span><br><span class="line">0 : CentOS Linux (4.4.205-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">1 : CentOS Linux (3.10.0-957.12.1.el7.x86_64) 7 (Core)</span><br><span class="line">2 : CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)</span><br><span class="line">3 : CentOS Linux (0-rescue-d1f142097d497f24c021d7de9b81cab4) 7 (Core)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务器上存在4 个内核，我们要使用 4.4 这个版本，可以通过 grub2-set-default 0 命令或编辑 /etc/default/grub 文件来设置</p><h4 id="设置新的内核为grub2的默认版本"><a href="#设置新的内核为grub2的默认版本" class="headerlink" title="设置新的内核为grub2的默认版本"></a>设置新的内核为grub2的默认版本</h4><ul><li><p>方法1<br>通过 grub2-set-default 0 命令设置，其中 0 是上面查询出来的可用内核</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grub2-set-default 0</span></span><br></pre></td></tr></table></figure></li><li><p>方法2<br>编辑 /etc/default/grub 文件，设置 GRUB_DEFAULT=0，通过上面查询显示的编号为 0 的内核作为默认内核。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/default/grub</span></span><br><span class="line">GRUB_TIMEOUT=1</span><br><span class="line">GRUB_DISTRIBUTOR=<span class="string">"<span class="variable">$(sed 's, release .*$,,g' /etc/system-release)</span>"</span></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_DISABLE_SUBMENU=<span class="literal">true</span></span><br><span class="line">GRUB_TERMINAL=<span class="string">"serial console"</span></span><br><span class="line">GRUB_SERIAL_COMMAND=<span class="string">"serial --speed=115200"</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">"console=tty0 crashkernel=auto console=ttyS0,115200"</span></span><br><span class="line">GRUB_DISABLE_RECOVERY=<span class="string">"true"</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="生成-grub-配置文件并重启"><a href="#生成-grub-配置文件并重启" class="headerlink" title="生成 grub 配置文件并重启"></a>生成 grub 配置文件并重启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># grub2-mkconfig -o /boot/grub2/grub.cfg</span></span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-4.4.205-1.el7.elrepo.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-957.12.1.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-957.12.1.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-693.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-693.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-0-rescue-d1f142097d497f24c021d7de9b81cab4</span><br><span class="line">Found initrd image: /boot/initramfs-0-rescue-d1f142097d497f24c021d7de9b81cab4.img</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># reboot</span></span><br></pre></td></tr></table></figure><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uname -r</span></span><br><span class="line">4.4.205-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><h3 id="删除旧内核"><a href="#删除旧内核" class="headerlink" title="删除旧内核"></a>删除旧内核</h3><h4 id="查看系统中全部的内核"><a href="#查看系统中全部的内核" class="headerlink" title="查看系统中全部的内核"></a>查看系统中全部的内核</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rpm -qa | grep kernel</span></span><br><span class="line">kernel<span class="_">-lt</span>-devel-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">kernel-3.10.0-693.el7.x86_64</span><br><span class="line">kernel-3.10.0-957.12.1.el7.x86_64</span><br><span class="line">kernel<span class="_">-lt</span>-4.4.205-1.el7.elrepo.x86_64</span><br><span class="line">kernel-tools-libs-3.10.0-1062.4.3.el7.x86_64</span><br><span class="line">kernel-3.10.0-1062.4.3.el7.x86_64</span><br><span class="line">kernel-tools-3.10.0-1062.4.3.el7.x86_64</span><br></pre></td></tr></table></figure><h4 id="yum-remove-删除旧内核的-RPM-包"><a href="#yum-remove-删除旧内核的-RPM-包" class="headerlink" title="yum remove 删除旧内核的 RPM 包"></a>yum remove 删除旧内核的 RPM 包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum remove kernel-3.10.0-693.el7.x86_64 kernel-3.10.0-957.12.1.el7.x86_64 kernel-tools-libs-3.10.0-1062.4.3.el7.x86_64 kernel-3.10.0-1062.4.3.el7.x86_64 kernel-tools-3.10.0-1062.4.3.el7.x86_64</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;centos-7-升级内核版本&quot;&gt;&lt;a href=&quot;#centos-7-升级内核版本&quot; class=&quot;headerlink&quot; title=&quot;centos 7 升级内核版本&quot;&gt;&lt;/a&gt;centos 7 升级内核版本&lt;/h3&gt;&lt;h4 id=&quot;查看当前内核版本&quot;&gt;&lt;a href=&quot;#查看当前内核版本&quot; class=&quot;headerlink&quot; title=&quot;查看当前内核版本&quot;&gt;&lt;/a&gt;查看当前内核版本&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# uname -r&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3.10.0-693.el7.x86_64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# uname -a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Linux k8s-master-01-3.kxl 3.10.0-693.el7.x86_64 &lt;span class=&quot;comment&quot;&gt;#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="centos" scheme="https://www.xxlaila.cn/categories/centos/"/>
    
    
      <category term="kernel" scheme="https://www.xxlaila.cn/tags/kernel/"/>
    
  </entry>
  
  <entry>
    <title>flannel cni容器部署</title>
    <link href="https://www.xxlaila.cn/2019/11/29/flannel-cni%E5%AE%B9%E5%99%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/29/flannel-cni容器部署/</id>
    <published>2019-11-29T03:50:55.000Z</published>
    <updated>2019-11-29T06:38:18.272Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="flannel-cni-配置"><a href="#flannel-cni-配置" class="headerlink" title="flannel cni 配置"></a>flannel cni 配置</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除原有的网络组件，采用容器方式进行部署。</p><h3 id="kube-controller-manager修改"><a href="#kube-controller-manager修改" class="headerlink" title="kube-controller-manager修改"></a>kube-controller-manager修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启动参数增加如下两项<a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--allocate-node-cidrs=<span class="literal">true</span></span><br><span class="line">--cluster-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><p><strong>参数</strong>:</p><ul><li>1.是否应在云提供商上分配和设置Pod的CIDR</li><li>2.集群中Pod的CIDR范围。要求–allocate-node-cidrs为true</li></ul><p>kube-controller-manager参数<a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kube-controller-manager/" target="_blank" rel="noopener">详细说明</a></p><h3 id="kubelet-修改"><a href="#kubelet-修改" class="headerlink" title="kubelet 修改"></a>kubelet 修改</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kubelet修改两个配置文件，kubelet-config.yaml 文件已更新</p><h4 id="kubelet-service启动文件"><a href="#kubelet-service启动文件" class="headerlink" title="kubelet.service启动文件"></a>kubelet.service启动文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--network-plugin=cni</span><br><span class="line">--cni-conf-dir=/etc/cni/net.d</span><br><span class="line">--cni-bin-dir=/opt/cni/bin</span><br></pre></td></tr></table></figure><p>kubele参数<a href="https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/" target="_blank" rel="noopener">详细说明</a></p><h4 id="kube-proxy-修改子网"><a href="#kube-proxy-修改子网" class="headerlink" title="kube-proxy 修改子网"></a>kube-proxy 修改子网</h4><ul><li>kube-proxy-config.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clusterCIDR: 10.244.0.0/16</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k8s<a href="https://www.xxlaila.cn/2019/09/11/kubernetes-v1-14%E5%AE%89%E8%A3%85/">集群安装文档</a>已经更新，node<a href="https://www.xxlaila.cn/2019/09/16/kubernetes-v1-14-node%E5%AE%89%E8%A3%85/">节点安装文档</a>已经更新。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先停止node 的flananel、 kubelet、kube-proxy。在删除/etc/cni/net.d/、/run/flannel/subnet.env、/var/lib/cni/flannel 的历史文件，重启网卡，除了flannel不启动，其他均启动。全新安装不需要这么操作，flannel证书也不需要复制。<a href="https://github.com/containernetworking/cni" target="_blank" rel="noopener">二进制安装参考</a></p><h3 id="下载cni插件"><a href="#下载cni插件" class="headerlink" title="下载cni插件"></a>下载cni插件</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cni <a href="https://github.com/containernetworking/plugins/releases" target="_blank" rel="noopener">插件下载</a>，解压后，放在各个节点的 /opt/cni/bin 下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ls -l /opt/cni/bin/</span><br><span class="line">total 70144</span><br><span class="line">-rwxr-xr-x 1 root root  4159253 Nov 26 16:32 bandwidth</span><br><span class="line">-rwxr-xr-x 1 root root  4628074 Nov 26 16:32 bridge</span><br><span class="line">-rwxr-xr-x 1 root root 12124236 Nov 26 16:32 dhcp</span><br><span class="line">-rwxr-xr-x 1 root root  5894275 Nov 26 16:32 firewall</span><br><span class="line">-rwxr-xr-x 1 root root  3069556 Nov 26 16:32 flannel</span><br><span class="line">-rwxr-xr-x 1 root root  4113837 Nov 26 16:32 host-device</span><br><span class="line">-rwxr-xr-x 1 root root  3614305 Nov 26 16:32 host-local</span><br><span class="line">-rwxr-xr-x 1 root root  4275320 Nov 26 16:32 ipvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3209373 Nov 26 16:32 loopback</span><br><span class="line">-rwxr-xr-x 1 root root  4346248 Nov 26 16:32 macvlan</span><br><span class="line">-rwxr-xr-x 1 root root  3895553 Nov 26 16:32 portmap</span><br><span class="line">-rwxr-xr-x 1 root root  4546828 Nov 26 16:32 ptp</span><br><span class="line">-rwxr-xr-x 1 root root  3392736 Nov 26 16:32 sbr</span><br><span class="line">-rwxr-xr-x 1 root root  2885430 Nov 26 16:32 static</span><br><span class="line">-rwxr-xr-x 1 root root  3356497 Nov 26 16:32 tuning</span><br><span class="line">-rwxr-xr-x 1 root root  4275168 Nov 26 16:32 vlan</span><br></pre></td></tr></table></figure><h3 id="flannel-部署"><a href="#flannel-部署" class="headerlink" title="flannel 部署"></a>flannel 部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/v0.11.0/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line">kubectl apply -f ./kube-flannel.yml</span><br></pre></td></tr></table></figure><h3 id="查看flannel安装情况"><a href="#查看flannel安装情况" class="headerlink" title="查看flannel安装情况"></a>查看flannel安装情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get po,svc -o wide</span></span><br><span class="line">NAME                 READY   STATUS    RESTARTS   AGE   IP           NODE            NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/nginx-ds-b9wgm   1/1     Running   0          43h   10.244.6.2   172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-dd9mb   1/1     Running   0          43h   10.244.1.3   172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-lcrn5   1/1     Running   0          43h   10.244.4.2   172.21.16.231   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-n52vr   1/1     Running   0          43h   10.244.2.2   172.21.17.40    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-twdxm   1/1     Running   0          43h   10.244.5.2   172.21.16.204   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/nginx-ds-z72mx   1/1     Running   0          43h   10.244.3.2   172.21.17.38    &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE   SELECTOR</span><br><span class="line">service/kubernetes   ClusterIP   10.254.0.1      &lt;none&gt;        443/TCP        44h   &lt;none&gt;</span><br><span class="line">service/nginx-ds     NodePort    10.254.230.34   &lt;none&gt;        80:31286/TCP   43h   app=nginx-ds</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get po,svc -o wide -n kube-system</span></span><br><span class="line">NAME                                              READY   STATUS    RESTARTS   AGE     IP              NODE            NOMINATED NODE   READINESS GATES</span><br><span class="line">pod/coredns-5579b8778b-dlk4c                      1/1     Running   4          43h     10.244.1.2      172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-2t8rn                   1/1     Running   0          44h     172.21.17.41    172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-9sb8v                   1/1     Running   0          44h     172.21.16.231   172.21.16.231   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-npl5k                   1/1     Running   0          44h     172.21.17.34    172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-r5n8r                   1/1     Running   0          44h     172.21.16.204   172.21.16.204   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-wpfxw                   1/1     Running   0          44h     172.21.17.40    172.21.17.40    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kube-flannel-ds-amd64-x2v8z                   1/1     Running   0          44h     172.21.17.38    172.21.17.38    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/kubernetes-dashboard-65dfbf6f4f-sc92h         1/1     Running   0          21h     10.244.6.10     172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/metrics-server-v0.3.4-5cd6d6b55f-psq2z        2/2     Running   0          3h20m   172.21.17.34    172.21.17.34    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">pod/traefik-ingress-controller-56b6d5b864-srnmm   1/1     Running   0          155m    172.21.17.41    172.21.17.41    &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">NAME                              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                  AGE     SELECTOR</span><br><span class="line">service/kube-dns                  ClusterIP   10.254.0.2       &lt;none&gt;        53/UDP,53/TCP,9153/TCP   43h     k8s-app=kube-dns</span><br><span class="line">service/kubernetes-dashboard      NodePort    10.254.139.196   &lt;none&gt;        443:31417/TCP            21h     k8s-app=kubernetes-dashboard</span><br><span class="line">service/metrics-server            ClusterIP   10.254.201.191   &lt;none&gt;        443/TCP                  3h56m   k8s-app=metrics-server</span><br><span class="line">service/traefik-ingress-service   ClusterIP   None             &lt;none&gt;        80/TCP,8080/TCP          154m    k8s-app=traefik-ingress-lb</span><br><span class="line">service/traefik-web-ui            ClusterIP   10.254.78.17     &lt;none&gt;        80/TCP                   23h     k8s-app=traefik-ingress-lb</span><br></pre></td></tr></table></figure><h3 id="查看节点的网络"><a href="#查看节点的网络" class="headerlink" title="查看节点的网络"></a>查看节点的网络</h3><ul><li><p>node-01</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">cni0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.6.1  netmask 255.255.255.0  broadcast 10.244.6.255</span><br><span class="line">        ether 42:56:73:73:c5:69  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 121976  bytes 48185929 (45.9 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 143012  bytes 112170228 (106.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.21.17.41  netmask 255.255.240.0  broadcast 172.21.31.255</span><br><span class="line">        ether fa:16:3e:a0:b1:af  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 1878425  bytes 997129342 (950.9 MiB)</span><br><span class="line">        RX errors 0  dropped 29  overruns 0  frame 0</span><br><span class="line">        TX packets 1014950  bytes 378435170 (360.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.6.0  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        ether 32:83:f7:e6:de:77  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 207502  bytes 36217464 (34.5 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 242424  bytes 246992876 (235.5 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 15889  bytes 7196484 (6.8 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 15889  bytes 7196484 (6.8 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">vethb26f5960: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        ether a6:a8:18:c3:f0:16  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 23  bytes 2075 (2.0 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 49  bytes 4330 (4.2 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li><li><p>node-02</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ifconfig</span></span><br><span class="line">cni0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.4.1  netmask 255.255.255.0  broadcast 10.244.4.255</span><br><span class="line">        ether 82:14:33:5c:b0:b7  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 150228  bytes 747318135 (712.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 214837  bytes 209342880 (199.6 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.21.16.231  netmask 255.255.240.0  broadcast 172.21.31.255</span><br><span class="line">        ether fa:16:3e:d8:23:fe  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 10290258  bytes 3436274673 (3.2 GiB)</span><br><span class="line">        RX errors 0  dropped 19  overruns 0  frame 0</span><br><span class="line">        TX packets 9490095  bytes 3777352983 (3.5 GiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">flannel.1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        inet 10.244.4.0  netmask 255.255.255.255  broadcast 0.0.0.0</span><br><span class="line">        ether ee:a3:ff:37:3a:61  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 280851  bytes 31096456 (29.6 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 262931  bytes 968429571 (923.5 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 653134  bytes 200562497 (191.2 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 653134  bytes 200562497 (191.2 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">veth8aa15f82: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1450</span><br><span class="line">        ether fa:23:1e:b0:65:20  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 49191  bytes 4622232 (4.4 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 53647  bytes 19011709 (18.1 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;flannel-cni-配置&quot;&gt;&lt;a href=&quot;#flannel-cni-配置&quot; class=&quot;headerlink&quot; title=&quot;flannel cni 配置&quot;&gt;&lt;/a&gt;flannel cni 配置&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;删除原有的网络组件，采用容器方式进行部署。&lt;/p&gt;&lt;h3 id=&quot;kube-controller-manager修改&quot;&gt;&lt;a href=&quot;#kube-controller-manager修改&quot; class=&quot;headerlink&quot; title=&quot;kube-controller-manager修改&quot;&gt;&lt;/a&gt;kube-controller-manager修改&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;启动参数增加如下两项
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="flannel" scheme="https://www.xxlaila.cn/tags/flannel/"/>
    
  </entry>
  
  <entry>
    <title>k8s-dashboard v2.0.0部署</title>
    <link href="https://www.xxlaila.cn/2019/11/28/k8s-dashboard-v2-0-0%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/28/k8s-dashboard-v2-0-0部署/</id>
    <published>2019-11-28T07:47:19.000Z</published>
    <updated>2019-12-02T07:01:32.306Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Kubernetes Dashboard 从v2.0.0-beta1版本开始，集成了一个metrics-scraper的组件，可以通过 Kubernetes 的 Metrics API 收集一些基础资源的监控信息，并在web页面展示</p><a id="more"></a><h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta6/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure><h3 id="使用-openssl-签发证书"><a href="#使用-openssl-签发证书" class="headerlink" title="使用 openssl 签发证书"></a>使用 openssl 签发证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir certs</span><br><span class="line">openssl req -nodes -newkey rsa:2048 -keyout certs/dashboard.key -out certs/dashboard.csr -subj <span class="string">"/C=/ST=/L=/O=/OU=/CN=kubernetes-dashboard"</span></span><br><span class="line">openssl x509 -req -sha256 -days 10000 -<span class="keyword">in</span> certs/dashboard.csr -signkey certs/dashboard.key -out certs/dashboard.crt</span><br></pre></td></tr></table></figure><h3 id="安装-Dashboard"><a href="#安装-Dashboard" class="headerlink" title="安装 Dashboard"></a>安装 Dashboard</h3><h4 id="创建namespace"><a href="#创建namespace" class="headerlink" title="创建namespace"></a>创建namespace</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace kubernetes-dashboard</span><br></pre></td></tr></table></figure><h4 id="导入证书"><a href="#导入证书" class="headerlink" title="导入证书"></a>导入证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret generic kubernetes-dashboard-certs --from-file=certs -n kubernetes-dashboard</span><br></pre></td></tr></table></figure><h4 id="修改recommended-yaml"><a href="#修改recommended-yaml" class="headerlink" title="修改recommended.yaml"></a>修改recommended.yaml</h4><ul><li><p>注释namespace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: kubernetes-dashboard</span><br></pre></td></tr></table></figure></li><li><p>使用自签发的证书<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用自签发的证书,注释掉 kubernetes-dashboard-certs 的 Secret 定义</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-certs</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f recommended.yaml</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用-NodePort-暴露服务"><a href="#使用-NodePort-暴露服务" class="headerlink" title="使用 NodePort 暴露服务"></a>使用 NodePort 暴露服务</h4><ul><li><p>新建 external-https-svc.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;external-https-svc.yaml&lt;&lt;EOF</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard-external</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br></pre></td></tr></table></figure></li><li><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f external-https-svc.yaml</span><br></pre></td></tr></table></figure></li><li><p>查看验证</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># kubectl <span class="keyword">get</span> svc,pods -n kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">NAME                                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">service/dashboard-metrics-scraper       ClusterIP   <span class="number">10.254</span><span class="number">.199</span><span class="number">.169</span>   &lt;none&gt;        <span class="number">8000</span>/TCP        <span class="number">9</span>m50s</span><br><span class="line">service/kubernetes-dashboard            ClusterIP   <span class="number">10.254</span><span class="number">.73</span><span class="number">.119</span>    &lt;none&gt;        <span class="number">443</span>/TCP         <span class="number">9</span>m51s</span><br><span class="line">service/kubernetes-dashboard-<span class="keyword">external</span>   NodePort    <span class="number">10.254</span><span class="number">.169</span><span class="number">.250</span>   &lt;none&gt;        <span class="number">443</span>:<span class="number">32318</span>/TCP   <span class="number">11</span>m</span><br><span class="line"></span><br><span class="line">NAME                                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/dashboard-metrics-scraper<span class="number">-69f</span>cc6d9df<span class="number">-4</span>lctd   <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">9</span>m49s</span><br><span class="line">pod/kubernetes-dashboard<span class="number">-77</span>d4694b5f-vkgfz        <span class="number">1</span>/<span class="number">1</span>     Running   <span class="number">0</span>          <span class="number">9</span>m49s</span><br></pre></td></tr></table></figure></li></ul><p>使用之前的密钥认证登录，未出图，查了一下，说的是兼容问题，v1.15.0以上就没问题<br><img src="https://img.xxlaila.cn/1574927727171.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Kubernetes Dashboard 从v2.0.0-beta1版本开始，集成了一个metrics-scraper的组件，可以通过 Kubernetes 的 Metrics API 收集一些基础资源的监控信息，并在web页面展示&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="dashboard v2.0.0" scheme="https://www.xxlaila.cn/tags/dashboard-v2-0-0/"/>
    
  </entry>
  
  <entry>
    <title>logstash详解</title>
    <link href="https://www.xxlaila.cn/2019/11/21/logstash%E8%AF%A6%E8%A7%A3/"/>
    <id>https://www.xxlaila.cn/2019/11/21/logstash详解/</id>
    <published>2019-11-21T03:51:23.000Z</published>
    <updated>2019-11-27T01:15:35.606Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前篇文件<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>粗略的完成了部署，但是真正是批量使用的时候发现还是有很多不足，优化的点还是非常的多。<a id="more"></a></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;使用ElasticSearch时一般需要自己创建ElasticSearch的索引的Mapping，当索引非常多的时候，可能需要配置一个索引模板Template来对类似的索引做统一配置，让索引模板Template中配置匹配索引的规则，来确定该Template会被应用到哪些索引上。</p><h3 id="Template配置方式"><a href="#Template配置方式" class="headerlink" title="Template配置方式"></a>Template配置方式</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash在整合ElasticSearch的时候，有三种方式可以来进行Template的配置。</p><h4 id="使用ElasticSearch默认自带的索引模板"><a href="#使用ElasticSearch默认自带的索引模板" class="headerlink" title="使用ElasticSearch默认自带的索引模板"></a>使用ElasticSearch默认自带的索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElasticSearch默认自带了一个名字为”logstash”的模板，默认应用于Logstash写入数据到ElasticSearch使用，我们可以在通过es的api接口、或者在kibana dev tools窗口通过GET /_template/来进行查看</p><ul><li><p>api 查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET http://127.0.0.1:9200/_template  -s | python -m json.tool</span><br><span class="line"></span><br><span class="line">$ curl -XGET http://127.0.0.1:9200/_template?pretty</span><br></pre></td></tr></table></figure></li><li><p>kibana 查看<br><img src="https://img.xxlaila.cn/1574314182454.jpg" alt="img"></p></li><li><p>优点: 最简单，无须任何配置</p></li><li><p>缺点: 无法自定义一些配置，例如：分词方式</p></li></ul><h4 id="在Logstash-Indexer端自定义配置索引模板"><a href="#在Logstash-Indexer端自定义配置索引模板" class="headerlink" title="在Logstash Indexer端自定义配置索引模板"></a>在Logstash Indexer端自定义配置索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash的output插件中使用template指定本机器上的一个模板json文件路径，可以在json文件中设置对应的Template模板信息。前面的章节就使用的这种方式。</p><ul><li>优点：配置简单</li><li>缺点：因为分散在Logstash Indexer机器上，维护起来比较麻烦</li></ul><h4 id="在ElasticSearch服务端自定义配置索引模板"><a href="#在ElasticSearch服务端自定义配置索引模板" class="headerlink" title="在ElasticSearch服务端自定义配置索引模板"></a>在ElasticSearch服务端自定义配置索引模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;由ElasticSearch负责加载模板。这种方式需要在ElasticSearch的集群中的config/templates路径下配置模板json。而且ElasticSearch提供了Restful API接口维护索引模板信息。</p><ul><li>优点：维护比较容易，可动态更改，全局生效。</li><li>缺点：需要注意模板的命名规则，比较容易通过看Template名字就能够确定模板应用到哪些索引</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;三种索引方式都有优缺点；但是使用第三种方式是最好的，就像之前<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>就使用的是第二种方式，然后是在用的时候发现，logstash是多台服务器，维护起来非常非常的麻烦。如果logstash 和ElasticSearch只有一台服务器，可以使用第二种方式，在Logstash Indexer端维护Template文件即可。</p><h3 id="模版类型"><a href="#模版类型" class="headerlink" title="模版类型"></a>模版类型</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ElasticSearch的模板类型主要由两种：静态模板和动态模板</p><h4 id="静态模板"><a href="#静态模板" class="headerlink" title="静态模板"></a>静态模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;适合索引字段数据固定的场景，一旦配置完成，不能向里面加入多余的字段，否则会报错</p><ul><li>优点：scheam已知，业务场景明确，不容易出现因字段随便映射从而造成元数据撑爆es内存，从而导致es集群全部宕机</li><li>缺点：字段数多的情况下配置稍繁琐，针对于每个索引可能需要的模板都不同，很有可能需要配置很多个模板</li></ul><h4 id="动态模板"><a href="#动态模板" class="headerlink" title="动态模板"></a>动态模板</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;适合字段数不明确，大量字段的配置类型相同的场景，可以按照类型规则动态添加新字段，新加字段不会报错。主要需要配置 <code>dynamic_templates</code>。</p><ul><li>优点：可动态添加任意字段，无须改动schema</li><li>缺点：无标准schema导致数据不规则，如果添加的字段非常多，有可能造成ES集群宕机</li></ul><p><strong>注</strong>: 模板在设置生效后，仅对ES集群中新建立的索引生效，而对已存在的索引及时索引名满足模板的匹配规则，也不会生效，因此如果需要改变现有索引的Mapping信息，仍需要在正确的Mapping基础上建立新的索引，并将数据从原索引拷贝至新索引，变更新索引别名为原索引这种方式来实现。</p><h3 id="模板结构"><a href="#模板结构" class="headerlink" title="模板结构"></a>模板结构</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;模版的结构如<a href="http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/">elk部署</a>里面所提到的。分四部分</p><ul><li>通用设置: 主要是模板匹配索引的过滤规则，影响该模板对哪些索引生效；</li><li>settings: 配置索引的公共参数，比如索引的replicas，以及分片数shards等参数；</li><li>mappings: 最重要的一部分，在这部分中配置每个type下的每个field的相关属性，比如field类型（string,long,date等等），是否分词，是否在内存中缓存等等属性都在这部分配置；</li><li>aliases: 索引别名，索引别名可用在索引数据迁移等用途上。</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当我们在定制索引模版的时候，这时候我们需要参考研发给的日志标准和需要的日志标准格式，以及日志样本等，给出一些运维的见解。否则做出来的东西不一定满足需求，又要重新来做。着重参考如下:</p><ul><li>是否存储</li><li>是否分词</li><li>以什么来建立索引</li><li>字段类型是什么</li><li>如何排序</li><li>字段数是否固定</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;结合这些，我们还可以参考词库的维护，ElasticSearch后期结构的变化调整，如果这些不考虑，在后期量起来以后，改动任何一项都需要去重新建立索引。是非常蛋疼的。</p><h3 id="创建模版"><a href="#创建模版" class="headerlink" title="创建模版"></a>创建模版</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里采用第三种三种方式建立模版，登录kibana，在dev tools栏下面，删除默认的logstash-<em>模版，然后创建一个logstash-</em>的模版，这样当新的索引来了以后，就会加载这个模版。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前篇文件&lt;a href=&quot;http://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/&quot;&gt;elk部署&lt;/a&gt;粗略的完成了部署，但是真正是批量使用的时候发现还是有很多不足，优化的点还是非常的多。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="logstash" scheme="https://www.xxlaila.cn/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>logstash监控</title>
    <link href="https://www.xxlaila.cn/2019/11/19/logstash%E7%9B%91%E6%8E%A7/"/>
    <id>https://www.xxlaila.cn/2019/11/19/logstash监控/</id>
    <published>2019-11-19T02:35:56.000Z</published>
    <updated>2019-11-19T07:04:24.071Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="logstash-api-监控"><a href="#logstash-api-监控" class="headerlink" title="logstash api 监控"></a>logstash api 监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash 5.0 开始，提供了输出自身进程的指标和状态监控的 API。这大大降低了我们监控 Logstash 的难度。<a id="more"></a>可以使用Logstash提供的监视API来检索这些指标。默认情况下api可用，不需任何额外的配置，或者可以配置X-Pack监视以将数据发送到监视群集。这个直接在kibana页面进行配置。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logstash收集的指标包括:</p><ul><li>节点信息: 接口目前支持三种类型：pipeline、os、jvm。</li><li>插件信息: 包括已安装插件的列表。</li><li>节点统计指标: JVM统计信息，进程统计信息，与事件相关的统计信息和管道运行时统计信息。</li><li>热线程统计</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;检索常规信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"build_date"</span> : <span class="string">"2018-08-18T00:25:22Z"</span>,</span><br><span class="line">  <span class="string">"build_sha"</span> : <span class="string">"f8014ac54e6c8ff6c071c0960ca1b00e9735f43a"</span>,</span><br><span class="line">  <span class="string">"build_snapshot"</span> : <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="pipeline-指标"><a href="#pipeline-指标" class="headerlink" title="pipeline 指标"></a>pipeline 指标</h3><h4 id="工作程序数量，批处理大小和批处理延迟"><a href="#工作程序数量，批处理大小和批处理延迟" class="headerlink" title="工作程序数量，批处理大小和批处理延迟"></a>工作程序数量，批处理大小和批处理延迟</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/pipelines?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"pipelines"</span> : &#123;</span><br><span class="line">    <span class="string">"main"</span> : &#123;</span><br><span class="line">      <span class="string">"workers"</span> : 4,</span><br><span class="line">      <span class="string">"batch_size"</span> : 125,</span><br><span class="line">      <span class="string">"batch_delay"</span> : 50,</span><br><span class="line">      <span class="string">"config_reload_automatic"</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"config_reload_interval"</span> : 3000000000,</span><br><span class="line">      <span class="string">"dead_letter_queue_enabled"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="特定管道的信息"><a href="#特定管道的信息" class="headerlink" title="特定管道的信息"></a>特定管道的信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/pipelines/main?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"pipelines"</span> : &#123;</span><br><span class="line">    <span class="string">"main"</span> : &#123;</span><br><span class="line">      <span class="string">"workers"</span> : 4,</span><br><span class="line">      <span class="string">"batch_size"</span> : 125,</span><br><span class="line">      <span class="string">"batch_delay"</span> : 50,</span><br><span class="line">      <span class="string">"config_reload_automatic"</span> : <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"config_reload_interval"</span> : 3000000000,</span><br><span class="line">      <span class="string">"dead_letter_queue_enabled"</span> : <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="OS-信息"><a href="#OS-信息" class="headerlink" title="OS 信息"></a>OS 信息</h3><h4 id="显示了操作系统名称，体系结构，版本和可用处理器"><a href="#显示了操作系统名称，体系结构，版本和可用处理器" class="headerlink" title="显示了操作系统名称，体系结构，版本和可用处理器"></a>显示了操作系统名称，体系结构，版本和可用处理器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/os?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"os"</span> : &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"Linux"</span>,</span><br><span class="line">    <span class="string">"arch"</span> : <span class="string">"amd64"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.10.0-693.11.1.el7.x86_64"</span>,</span><br><span class="line">    <span class="string">"available_processors"</span> : 4</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="jvm-信息"><a href="#jvm-信息" class="headerlink" title="jvm 信息"></a>jvm 信息</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示节点级别的JVM统计信息，例如JVM进程ID，版本，VM信息，内存使用情况以及有关垃圾收集器的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/jvm?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"jvm"</span> : &#123;</span><br><span class="line">    <span class="string">"pid"</span> : 20827,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"1.8.0_144"</span>,</span><br><span class="line">    <span class="string">"vm_version"</span> : <span class="string">"1.8.0_144"</span>,</span><br><span class="line">    <span class="string">"vm_vendor"</span> : <span class="string">"Oracle Corporation"</span>,</span><br><span class="line">    <span class="string">"vm_name"</span> : <span class="string">"Java HotSpot(TM) 64-Bit Server VM"</span>,</span><br><span class="line">    <span class="string">"start_time_in_millis"</span> : 1574066157917,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"heap_init_in_bytes"</span> : 3221225472,</span><br><span class="line">      <span class="string">"heap_max_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"non_heap_init_in_bytes"</span> : 2555904,</span><br><span class="line">      <span class="string">"non_heap_max_in_bytes"</span> : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"gc_collectors"</span> : [ <span class="string">"ParNew"</span>, <span class="string">"ConcurrentMarkSweep"</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插件信息"><a href="#插件信息" class="headerlink" title="插件信息"></a>插件信息</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件信息API获取有关当前安装的所有Logstash插件的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/plugins?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"total"</span> : 98,</span><br><span class="line">  <span class="string">"plugins"</span> : [ &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-cef"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"5.0.3"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-collectd"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.8"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-dots"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.6"</span></span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"logstash-codec-edn"</span>,</span><br><span class="line">    <span class="string">"version"</span> : <span class="string">"3.0.6"</span></span><br><span class="line">  &#125;,……………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="节点统计指表"><a href="#节点统计指表" class="headerlink" title="节点统计指表"></a>节点统计指表</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;节点统计信息API检索有关Logstash的运行时统计信息。</p><h4 id="jvm统计"><a href="#jvm统计" class="headerlink" title="jvm统计"></a>jvm统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/jvm?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"jvm"</span> : &#123;</span><br><span class="line">    <span class="string">"threads"</span> : &#123;</span><br><span class="line">      <span class="string">"count"</span> : 55,</span><br><span class="line">      <span class="string">"peak_count"</span> : 56</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"heap_used_percent"</span> : 10,</span><br><span class="line">      <span class="string">"heap_committed_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"heap_max_in_bytes"</span> : 3186360320,</span><br><span class="line">      <span class="string">"heap_used_in_bytes"</span> : 348033216,</span><br><span class="line">      <span class="string">"non_heap_used_in_bytes"</span> : 170512848,</span><br><span class="line">      <span class="string">"non_heap_committed_in_bytes"</span> : 201850880,</span><br><span class="line">      <span class="string">"pools"</span> : &#123;</span><br><span class="line">        <span class="string">"survivor"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 1629704,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 34865152,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 34865152</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"old"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 230612312,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 230612312,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 2872311808,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 2872311808,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 2872311808</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"young"</span> : &#123;</span><br><span class="line">          <span class="string">"peak_used_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"used_in_bytes"</span> : 115791200,</span><br><span class="line">          <span class="string">"peak_max_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"max_in_bytes"</span> : 279183360,</span><br><span class="line">          <span class="string">"committed_in_bytes"</span> : 279183360</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"gc"</span> : &#123;</span><br><span class="line">      <span class="string">"collectors"</span> : &#123;</span><br><span class="line">        <span class="string">"old"</span> : &#123;</span><br><span class="line">          <span class="string">"collection_time_in_millis"</span> : 301,</span><br><span class="line">          <span class="string">"collection_count"</span> : 2</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"young"</span> : &#123;</span><br><span class="line">          <span class="string">"collection_time_in_millis"</span> : 2536,</span><br><span class="line">          <span class="string">"collection_count"</span> : 98</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"uptime_in_millis"</span> : 66149287</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="进程统计"><a href="#进程统计" class="headerlink" title="进程统计"></a>进程统计</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/process?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"process"</span> : &#123;</span><br><span class="line">    <span class="string">"open_file_descriptors"</span> : 169,</span><br><span class="line">    <span class="string">"peak_open_file_descriptors"</span> : 170,</span><br><span class="line">    <span class="string">"max_file_descriptors"</span> : 16384,</span><br><span class="line">    <span class="string">"mem"</span> : &#123;</span><br><span class="line">      <span class="string">"total_virtual_in_bytes"</span> : 7337734144</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"cpu"</span> : &#123;</span><br><span class="line">      <span class="string">"total_in_millis"</span> : 593350,</span><br><span class="line">      <span class="string">"percent"</span> : 0,</span><br><span class="line">      <span class="string">"load_average"</span> : &#123;</span><br><span class="line">        <span class="string">"1m"</span> : 0.01,</span><br><span class="line">        <span class="string">"5m"</span> : 0.07,</span><br><span class="line">        <span class="string">"15m"</span> : 0.1</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="events"><a href="#events" class="headerlink" title="events"></a>events</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ curl -s localhost:9600/_node/stats/events?pretty=<span class="literal">true</span></span><br><span class="line">&#123; </span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"events"</span> : &#123;</span><br><span class="line">    <span class="string">"in"</span> : 103628,</span><br><span class="line">    <span class="string">"filtered"</span> : 103628,</span><br><span class="line">    <span class="string">"out"</span> : 103628,</span><br><span class="line">    <span class="string">"duration_in_millis"</span> : 96810,</span><br><span class="line">    <span class="string">"queue_push_duration_in_millis"</span> : 5104</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="管道统计"><a href="#管道统计" class="headerlink" title="管道统计"></a>管道统计</h3><ul><li>每个管道输入，过滤或输出的事件数</li><li>每个已配置的滤波器或输出级的统计信息</li><li>有关配置重新加载成功和失败的信息（启用配置重新加载时）</li><li>关于持久性队列信息（当 永久队列被启用）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/pipelines?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过包含管道ID来查看特定管道的统计信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/pipelines/main?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">………………</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="刷新统计"><a href="#刷新统计" class="headerlink" title="刷新统计"></a>刷新统计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;显示有关配置重新加载成功和失败的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/reloads?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"reloads"</span> : &#123;</span><br><span class="line">    <span class="string">"successes"</span> : 0,</span><br><span class="line">    <span class="string">"failures"</span> : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="os-统计"><a href="#os-统计" class="headerlink" title="os 统计"></a>os 统计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当Logstash在容器中运行时，请求将返回一个包含cgroup信息的JSON文档，提供CPU负载的更准确视图，包括是否对容器进行了限制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/stats/os?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"os"</span> : &#123;</span><br><span class="line">    <span class="string">"cgroup"</span> : &#123;</span><br><span class="line">      <span class="string">"cpuacct"</span> : &#123;</span><br><span class="line">        <span class="string">"usage_nanos"</span> : 20928023701495776,</span><br><span class="line">        <span class="string">"control_group"</span> : <span class="string">"/"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"cpu"</span> : &#123;</span><br><span class="line">        <span class="string">"cfs_quota_micros"</span> : -1,</span><br><span class="line">        <span class="string">"control_group"</span> : <span class="string">"/"</span>,</span><br><span class="line">        <span class="string">"stat"</span> : &#123;</span><br><span class="line">          <span class="string">"number_of_times_throttled"</span> : 0,</span><br><span class="line">          <span class="string">"time_throttled_nanos"</span> : 0,</span><br><span class="line">          <span class="string">"number_of_elapsed_periods"</span> : 0</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"cfs_period_micros"</span> : 100000</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="热线程api"><a href="#热线程api" class="headerlink" title="热线程api"></a>热线程api</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;热线程API获取Logstash的当前热线程。热线程是Java线程，具有很高的CPU使用率，并且执行时间比正常时间长。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/hot_threads?pretty'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"host"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"version"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">  <span class="string">"http_address"</span> : <span class="string">"127.0.0.1:9600"</span>,</span><br><span class="line">  <span class="string">"id"</span> : <span class="string">"57c08022-8064-4bce-8c9b-e6db6e005479"</span>,</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"prod-elk-logstash-02"</span>,</span><br><span class="line">  <span class="string">"hot_threads"</span> : &#123;</span><br><span class="line">    <span class="string">"time"</span> : <span class="string">"2019-11-19T11:07:05+08:00"</span>,</span><br><span class="line">    <span class="string">"busiest_threads"</span> : 3,</span><br><span class="line">    <span class="string">"threads"</span> : [ &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-23@[main]&gt;worker1"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 42,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.1,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-24@[main]&gt;worker2"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 43,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.06,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">      <span class="string">"name"</span> : <span class="string">"Ruby-0-Thread-22@[main]&gt;worker0"</span>,</span><br><span class="line">      <span class="string">"thread_id"</span> : 41,</span><br><span class="line">      <span class="string">"percent_of_cpu_time"</span> : 0.06,</span><br><span class="line">      <span class="string">"state"</span> : <span class="string">"timed_waiting"</span>,</span><br><span class="line">      <span class="string">"path"</span> : <span class="string">":1"</span>,</span><br><span class="line">      <span class="string">"traces"</span> : [ <span class="string">"sun.misc.Unsafe.park(Native Method)"</span>, <span class="string">"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)"</span>, <span class="string">"java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)"</span> ]</span><br><span class="line">    &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可执行的参数:</p><ul><li>threads: 返回的热线程数。预设值为10。</li><li>stacktrace_size: 要为每个线程报告的堆栈跟踪的深度。默认值为50。</li><li>human: 如果为true，则返回纯文本而不是JSON格式。默认为false。</li><li>ignore_idle_threads: 如果为true，则不返回空闲线程。默认值为true。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XGET <span class="string">'localhost:9600/_node/hot_threads?human=true'</span></span><br><span class="line">Hot threads at 2019-11-19T11:07:43+08:00, busiestThreads=3:</span><br><span class="line">================================================================================</span><br><span class="line">0.1 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-23@[main]&gt;worker1'</span>, thread id: 42</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0.06 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-24@[main]&gt;worker2'</span>, thread id: 43</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">0.06 % of cpu usage, state: timed_waiting, thread name: <span class="string">'Ruby-0-Thread-22@[main]&gt;worker0'</span>, thread id: 41</span><br><span class="line">:1</span><br><span class="line">        sun.misc.Unsafe.park(Native Method)</span><br><span class="line">        java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)</span><br><span class="line">        java.util.concurrent.locks.AbstractQueuedSynchronizer<span class="variable">$ConditionObject</span>.awaitNanos(AbstractQueuedSynchronizer.java:2078)</span><br><span class="line">--------------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的一些api监控，可以写成脚本的形式，使用zabbix来进行监控。除了使用zabbix来监控logstash外，我们还可以使用自带的x-pack来进行监控，<a href="https://www.elastic.co/guide/en/logstash/6.6/logstash-monitoring-overview.html" target="_blank" rel="noopener">介绍可以参考官方</a>。</p><h3 id="X-Pack监视概述"><a href="#X-Pack监视概述" class="headerlink" title="X-Pack监视概述"></a>X-Pack监视概述</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;修改logstash.yml配置文件，在配置文件里面只需要修改两个参数即可 <code>xpack.monitoring.enabled</code> 、<code>xpack.monitoring.elasticsearch.url</code>。监控Elasticsearch的是启用 <code>xpack.monitoring.collection.enabled</code></p><h4 id="修改logstash-yml"><a href="#修改logstash-yml" class="headerlink" title="修改logstash.yml"></a>修改logstash.yml</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cat logstash.yml</span><br><span class="line">xpack.monitoring.enabled: <span class="literal">true</span></span><br><span class="line">xpack.monitoring.elasticsearch.url: [<span class="string">"http://es1:9200"</span>,<span class="string">"http://es2:9200"</span>,<span class="string">"http://es3:9200"</span>]</span><br></pre></td></tr></table></figure><h4 id="重启logstash"><a href="#重启logstash" class="headerlink" title="重启logstash"></a>重启logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo  systemctl  restart logstash</span><br></pre></td></tr></table></figure><h4 id="kibana-查看"><a href="#kibana-查看" class="headerlink" title="kibana 查看"></a>kibana 查看</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录kibana进行查看<br><img src="https://img.xxlaila.cn/1574146864906.jpg" alt="img"></p><p>点击node查看<br><img src="https://img.xxlaila.cn/1574146937095.jpg" alt="img"></p><p>这里顺道点考kibana<br><img src="https://img.xxlaila.cn/1574147026997.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;logstash-api-监控&quot;&gt;&lt;a href=&quot;#logstash-api-监控&quot; class=&quot;headerlink&quot; title=&quot;logstash api 监控&quot;&gt;&lt;/a&gt;logstash api 监控&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Logstash 5.0 开始，提供了输出自身进程的指标和状态监控的 API。这大大降低了我们监控 Logstash 的难度。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="logstash" scheme="https://www.xxlaila.cn/tags/logstash/"/>
    
  </entry>
  
  <entry>
    <title>elk部署</title>
    <link href="https://www.xxlaila.cn/2019/11/15/elk%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/11/15/elk部署/</id>
    <published>2019-11-15T07:46:03.000Z</published>
    <updated>2019-11-21T09:21:53.487Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;公司重新设定了日志的标准格式，日志打印格式均为json格式，之前是用filebeat进行收集的，没任何问题，但是这次的这个标准日志推的时候出现了，在日志显示和多行收集的时候出现了问题。<a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;java应用在报错的时候一般会提示一个很长的错误信息，如果在日志标准里面加入堆内存的错误，那信息就更长，一条日志就更大了，所以这里就得考量这个堆内存错误要打印多少问题。在显示的时候也遇到一个问题就是内容没有被索引，google一下查询是<code>not_analyzed</code>字符串默认设置导致的。查询得知对超过ignore_above的字符串，analyzer 不会进行处理。所以就不会索引，导致的结果就是最终搜索引擎搜索不到。这个选项主要对 not_analyzed 字段有用，这些字段通常用来进行过滤、聚合和排序。而且这些字段都是结构化的，所以一般不会允许在这些字段中索引过长的项。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;针对这些问题，和研发达成如协议，研发限制一条日志的message输出的长度，日志格式采用json，里面的字段不管。与似乎就要重置一下filebeat的参数，以及需要单独的建立自定义es模版，在logstash建立索引的时候需要用我们自定义的模版来建立索引。</p><h3 id="filebeat"><a href="#filebeat" class="headerlink" title="filebeat"></a>filebeat</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filebeat安装不阐述</p><h4 id="filebeat配置文件"><a href="#filebeat配置文件" class="headerlink" title="filebeat配置文件"></a>filebeat配置文件</h4><ul><li>filebeat.yml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat filebeat.yml </span></span><br><span class="line">filebeat.inputs:</span><br><span class="line">  - <span class="built_in">type</span>: <span class="built_in">log</span></span><br><span class="line">    enabled: <span class="literal">true</span></span><br><span class="line">    paths:</span><br><span class="line">      - /opt/logs/*/*.<span class="built_in">log</span></span><br><span class="line">  tags: [<span class="string">"system"</span>]</span><br><span class="line">  exclude_files: [<span class="string">'.gz$'</span>]</span><br><span class="line">  fields:</span><br><span class="line">    env: dev</span><br><span class="line">    logtype: system-java</span><br><span class="line">  queue_size: 3000</span><br><span class="line">  multiline.pattern: <span class="string">'^[[:space:]]'</span></span><br><span class="line">  multiline.negate: <span class="literal">false</span></span><br><span class="line">  multiline.match: after</span><br><span class="line">  multiline.max_lines: 500</span><br><span class="line">  multiline.timeout: 5s</span><br><span class="line">  registry_file: /var/lib/filebeat/registry</span><br><span class="line">  harvester_buffer_sizeedit: 16384</span><br><span class="line">  max_bytes: 10485760</span><br><span class="line">  max_message_bytes: 1000000</span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: <span class="variable">$&#123;path.config&#125;</span>/modules.d/*.yml</span><br><span class="line">  reload.enabled: <span class="literal">false</span></span><br><span class="line">output.logstash:</span><br><span class="line">  hosts: [<span class="string">"logstash:5555"</span>,<span class="string">"logstash:5556"</span>]</span><br><span class="line">  loadbalance: <span class="literal">true</span></span><br><span class="line">  worker: 1</span><br></pre></td></tr></table></figure></li></ul><h5 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h5><ul><li>input.type: 默认log，从日志文件读取每一行。stdin，从标准输入读取</li><li>paths: 日志文件路径列表，可用通配符，不递归</li><li>tags: 标记tag，可用于分组</li><li>exclude_files: 排除文件，后接一个正则表达式的列表，默认无</li><li>fields: 添加附件字段，可以使values，arrays，dictionaries或者任何嵌套数据<ul><li>env: 设置环境环境</li><li>logtype: 设置类别，在logstash里面判断，可用于建设不通的索引或者到不通的es集群里面</li></ul></li><li>queue_size: 处理管道中单个事件内的队列大小，默认1000</li><li>multiline.pattern: 多行匹配模式，后接正则表达式，默认无</li><li>multiline.negate: 多行匹配模式后配置的模式是否取反，默认false</li><li>multiline.match: 定义多行内容被添加到模式匹配行之后还是之前，默认无，可以被设置为after或者before</li><li>multiline.max_lines: 单一多行匹配聚合的最大行数，超过定义行数后的行会被丢弃，默认500</li><li>multiline.timeout: 多行匹配超时时间，超过超时时间后的当前多行匹配事件将停止并发送，然后开始一个新的多行匹配事件，默认5秒</li><li>registry_file: 指定 注册表文件，用于记录上次读取的位置，默认位于filebeat下的data目录</li><li>harvester_buffer_sizeedit: 每个采集器在获取文件时使用的缓冲区的大小（以字节为单位）。默认是16384</li><li>max_bytes: 单个日志消息可以拥有的最大字节数。之后的所有字节max_bytes被丢弃并且不被发送。此设置对于可能变大的多行日志消息特别有用。默认值是10MB（10485760）</li><li>max_message_bytes: 允许的最大json消息大小，默认为1000000，超出的会被丢弃，应该小于broker的  message.max.bytes（broker能接收消息的最大字节数）</li><li>output.logstash: 输出到logstash，从节点列表中选取不同的节点发送数据，达到 Round-Robin 负载均衡的效果。<ul><li>worker: 配置每个主机发布事件的worker数量。在负载均衡模式下最好启用。</li></ul></li></ul><h3 id="logstash-部署"><a href="#logstash-部署" class="headerlink" title="logstash 部署"></a>logstash 部署</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装不阐述，这里使用的自定义elasticsearch模版，可参考</p><h4 id="elasticsearch-模版"><a href="#elasticsearch-模版" class="headerlink" title="elasticsearch 模版"></a>elasticsearch 模版</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Json日志文件中的KEY的位置不固定、或字段数不明确时使用动态映射模板。这里创建一个动态模版，模版是拷贝默认的 <code>logstash-*</code>模版来进行稍加修改的，<code>index_patterns</code> 该模版参数指定任意索引名称，并且指定允许添加新字段，匹配所有string类型的新字段会创建一个raw的嵌套字段，raw嵌套字段类型text，使用 <code>ignore_above</code>改变默认的长度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">$ cat dev-java-template.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"order"</span>: 5,</span><br><span class="line">  <span class="string">"index_patterns"</span>: [</span><br><span class="line">    <span class="string">"*"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"settings"</span>: &#123;</span><br><span class="line">    <span class="string">"index"</span>: &#123;</span><br><span class="line">      <span class="string">"number_of_shards"</span>: <span class="string">"5"</span>,</span><br><span class="line">      <span class="string">"number_of_replicas"</span>: <span class="string">"1"</span>,</span><br><span class="line">      <span class="string">"refresh_interval"</span>: <span class="string">"10s"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"mappings"</span>: &#123;</span><br><span class="line">    <span class="string">"_default_"</span>: &#123;</span><br><span class="line">      <span class="string">"dynamic_templates"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"message_field"</span>: &#123;</span><br><span class="line">            <span class="string">"match"</span>: <span class="string">"message"</span>,</span><br><span class="line">            <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"mapping"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">              <span class="string">"norms"</span> : <span class="literal">false</span>,</span><br><span class="line">              <span class="string">"fields"</span>: &#123;</span><br><span class="line">                <span class="string">"raw"</span>: &#123;</span><br><span class="line">                  <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                  <span class="string">"ignore_above"</span>: 10922</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">"strings_fields"</span>: &#123;</span><br><span class="line">            <span class="string">"match"</span>: <span class="string">"*"</span>,</span><br><span class="line">            <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span>,</span><br><span class="line">            <span class="string">"mapping"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"text"</span>,</span><br><span class="line">              <span class="string">"norms"</span>: <span class="literal">false</span>,</span><br><span class="line">              <span class="string">"fields"</span>: &#123;</span><br><span class="line">                <span class="string">"raw"</span>: &#123;</span><br><span class="line">                  <span class="string">"type"</span>: <span class="string">"keyword"</span>,</span><br><span class="line">                  <span class="string">"ignore_above"</span>: 10922</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="string">"properties"</span>:&#123;</span><br><span class="line">        <span class="string">"@timestamp"</span>: &#123;</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"date"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"@version"</span>: &#123;</span><br><span class="line">          <span class="string">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"geoip"</span>: &#123;</span><br><span class="line">          <span class="string">"dynamic"</span>: <span class="literal">true</span>,</span><br><span class="line">          <span class="string">"properties"</span>: &#123;</span><br><span class="line">            <span class="string">"ip"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"ip"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"location"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"geo_point"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"latitude"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"longitude"</span>: &#123;</span><br><span class="line">              <span class="string">"type"</span>: <span class="string">"half_float"</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"aliases"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注</strong>:</p><ul><li>dynamic_templates: 配置具体的动态模板匹配项</li><li>match_mapping_type: “string” 是匹配固定的类型</li><li>match: message 匹配字段名为message的数据</li><li>mapping: 将匹配的数据项映射为定义的数据类型</li></ul><h4 id="logstash-配置文件"><a href="#logstash-配置文件" class="headerlink" title="logstash 配置文件"></a>logstash 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">$ cat java.conf</span><br><span class="line">input  &#123;</span><br><span class="line">        beats &#123;</span><br><span class="line">                port =&gt; 5555</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">filter &#123;</span><br><span class="line">        <span class="comment"># application system logs</span></span><br><span class="line">        <span class="keyword">if</span> [fields][logtype] == <span class="string">"system-java"</span> &#123;</span><br><span class="line">                json &#123;</span><br><span class="line">                    <span class="built_in">source</span> =&gt; <span class="string">"message"</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># application business logs</span></span><br><span class="line">        <span class="keyword">if</span> [fileds][logtype] == <span class="string">"business-java"</span> &#123;</span><br><span class="line">json &#123;</span><br><span class="line"><span class="built_in">source</span> =&gt; <span class="string">"message"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">        <span class="comment"># application system logs</span></span><br><span class="line">        <span class="keyword">if</span> [fields][logtype] == <span class="string">"system-java"</span> &#123;</span><br><span class="line">                elasticsearch &#123;</span><br><span class="line">codec =&gt; <span class="string">"json"</span></span><br><span class="line">                        hosts =&gt; [<span class="string">"es1:9200"</span>,<span class="string">"es2:9200"</span>,<span class="string">"es3:9200"</span>]</span><br><span class="line">                        index =&gt; <span class="string">"%&#123;[fields][kxlenv]&#125;-%&#123;[projectName]&#125;-%&#123;[logType]&#125;-%&#123;+YYYY-MM&#125;"</span></span><br><span class="line">                        template_overwrite =&gt; <span class="literal">true</span></span><br><span class="line">                        template_name =&gt; <span class="string">"system-java"</span></span><br><span class="line">                        template =&gt; <span class="string">"/opt/templates/java.template"</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment"># applicatio business logs</span></span><br><span class="line"><span class="keyword">if</span> [fields][logtype] == <span class="string">"business-java"</span> &#123;</span><br><span class="line">elasticsearch &#123;</span><br><span class="line">                        action =&gt; <span class="string">"index"</span></span><br><span class="line">hosts =&gt; [<span class="string">"es1:9200"</span>,<span class="string">"es2:9200"</span>,<span class="string">"es3:9200"</span>]</span><br><span class="line">index =&gt; <span class="string">"%&#123;[fields][kxlenv]&#125;-%&#123;[projectName]&#125;-%&#123;[logType]&#125;-%&#123;+YYYY-MM&#125;"</span></span><br><span class="line">template_overwrite =&gt; <span class="literal">true</span></span><br><span class="line">                        template =&gt; <span class="string">"/opt/templates/dev-java-template.json"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>** 注 **:</p><ul><li>template : 指定template模板文件</li><li>template_overwrite : 是否覆盖ES中的template，默认是false</li><li>index: 是提取变量来进行创建索引，对应动态模版的里面 <code>index_patterns</code></li></ul><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><h4 id="重启logstash"><a href="#重启logstash" class="headerlink" title="重启logstash"></a>重启logstash</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart logstash</span><br></pre></td></tr></table></figure><h4 id="重启filebeat"><a href="#重启filebeat" class="headerlink" title="重启filebeat"></a>重启filebeat</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart filebeat</span><br></pre></td></tr></table></figure><h4 id="打开kibana验证"><a href="#打开kibana验证" class="headerlink" title="打开kibana验证"></a>打开kibana验证</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里我们打开kibana进行验证，看看自动创建的索引是否引用了自定义模版</p><ul><li><p>自定义模版<br><img src="https://img.xxlaila.cn/1574308152194.jpg" alt="img"></p></li><li><p>默认模版<br><img src="https://img.xxlaila.cn/1574308234494.jpg" alt="img"></p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;公司重新设定了日志的标准格式，日志打印格式均为json格式，之前是用filebeat进行收集的，没任何问题，但是这次的这个标准日志推的时候出现了，在日志显示和多行收集的时候出现了问题。
    
    </summary>
    
      <category term="elk" scheme="https://www.xxlaila.cn/categories/elk/"/>
    
    
      <category term="elk" scheme="https://www.xxlaila.cn/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>mongodb语法实践</title>
    <link href="https://www.xxlaila.cn/2019/11/14/mongodb%E8%AF%AD%E6%B3%95%E5%AE%9E%E8%B7%B5/"/>
    <id>https://www.xxlaila.cn/2019/11/14/mongodb语法实践/</id>
    <published>2019-11-14T01:12:09.000Z</published>
    <updated>2019-11-19T07:19:43.652Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="Days-11-14"><a href="#Days-11-14" class="headerlink" title="Days(11.14)"></a>Days(11.14)</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mongodb之前都是负责搭建、维护、备份、监控等操作。闲时来总结一下语法。<a id="more"></a></p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><h4 id="根据条件查询数据量"><a href="#根据条件查询数据量" class="headerlink" title="根据条件查询数据量"></a>根据条件查询数据量</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录数据库操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.getCollection(<span class="string">'Tables'</span>).find(&#123;<span class="string">"字段"</span>:<span class="string">"条件"</span>,<span class="string">"字段"</span>:<span class="string">"条件"</span>&#125;).count();</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看数据库表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; show collections</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看mongodb的连接数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.serverStatus().connections</span><br></pre></td></tr></table></figure><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><h4 id="创建用户、数据库"><a href="#创建用户、数据库" class="headerlink" title="创建用户、数据库"></a>创建用户、数据库</h4><ul><li><p>创建数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; use xxx</span><br></pre></td></tr></table></figure></li><li><p>创建一个用户，拥有基本的读写权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createUser(&#123;user:<span class="string">"xxx"</span>,<span class="built_in">pwd</span>:<span class="string">"xxx"</span>,roles:[&#123;role:<span class="string">"readWrite"</span>,db:<span class="string">"xxx"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure></li><li><p>创建用户需要赋予dbAdmin权限</p></li></ul><p><strong>dbAdmin</strong>: 允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createUser(&#123;user:<span class="string">"demo"</span>,<span class="built_in">pwd</span>:<span class="string">"demo"</span>,roles:[&#123;role:<span class="string">"readWrite"</span>,db:<span class="string">"kxlChannel"</span>&#125;,&#123;role:<span class="string">"dbAdmin"</span>,db:<span class="string">"kxlChannel"</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure><p><strong>注</strong>: role 权限要是readWrite,不能赋予dbadmin，否则不能操作数据库</p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><h4 id="删除账户和数据库"><a href="#删除账户和数据库" class="headerlink" title="删除账户和数据库"></a>删除账户和数据库</h4><ul><li><p>删除账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropUser(<span class="string">"xxx"</span>)</span><br></pre></td></tr></table></figure></li><li><p>删除数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropDatabase(<span class="string">"xxx"</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><h4 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.ensureIndex(&#123;<span class="string">"字段"</span>:1&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br><span class="line">&gt; db.表.ensureIndex(&#123;<span class="string">"字段"</span>:1&#125;,&#123;<span class="string">"unique"</span>:<span class="literal">true</span>&#125;)</span><br></pre></td></tr></table></figure><h4 id="查看索引"><a href="#查看索引" class="headerlink" title="查看索引"></a>查看索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.getIndexes()</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看表数据是否引用了索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.find(&#123;<span class="string">"字段"</span>:<span class="string">"值"</span>&#125;).explain()</span><br></pre></td></tr></table></figure><h4 id="删除指定索引"><a href="#删除指定索引" class="headerlink" title="删除指定索引"></a>删除指定索引</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.dropIndex(<span class="string">"索引"</span>)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;删除表全部索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.表.dropIndexes()</span><br></pre></td></tr></table></figure><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><h4 id="根据条件导出部分数据"><a href="#根据条件导出部分数据" class="headerlink" title="根据条件导出部分数据"></a>根据条件导出部分数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  mongoexport --db=数据库 --collection=表 --username=账户 --password=密码 --authenticationDatabase=认证的数据库  --query=<span class="string">'&#123;"条件","条件"&#125;'</span> --fields=<span class="string">"导出的字段"</span> --<span class="built_in">type</span>=csv --out=/home/ll</span><br></pre></td></tr></table></figure><ul><li>参数介绍:<br>–db: 数据库<br>–collection: 表<br>–username: 账户<br>–password: 密码<br>–authenticationDatabase: 需要认证的数据库<br>–query: 条件<br>–fields: 导出的字段<br>–type: 导出的格式，默认是json，这里导出为csv，支持两种json和csv格式<br>–out: 导出路径文件</li></ul><p>更多参数参考 –help</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">general options:</span><br><span class="line">      --<span class="built_in">help</span>                                      <span class="built_in">print</span> usage</span><br><span class="line">      --version                                   <span class="built_in">print</span> the tool version and <span class="built_in">exit</span></span><br><span class="line">verbosity options:</span><br><span class="line">  -v, --verbose=&lt;level&gt;                           more detailed <span class="built_in">log</span> output (include multiple <span class="built_in">times</span> <span class="keyword">for</span> more verbosity, e.g. -vvvvv, or specify a numeric value, e.g. --verbose=N)</span><br><span class="line">      --quiet                                     hide all <span class="built_in">log</span> output</span><br><span class="line">connection options:</span><br><span class="line">  -h, --host=&lt;hostname&gt;                           mongodb host to connect to (setname/host1,host2 <span class="keyword">for</span> replica sets)</span><br><span class="line">      --port=&lt;port&gt;                               server port (can also use --host hostname:port)</span><br><span class="line">kerberos options:</span><br><span class="line">      --gssapiServiceName=&lt;service-name&gt;          service name to use when authenticating using GSSAPI/Kerberos (<span class="string">'mongodb'</span> by default)</span><br><span class="line">      --gssapiHostName=&lt;host-name&gt;                hostname to use when authenticating using GSSAPI/Kerberos (remote server<span class="string">'s address by default)</span></span><br><span class="line"><span class="string">ssl options:</span></span><br><span class="line"><span class="string">      --ssl                                       connect to a mongod or mongos that has ssl enabled</span></span><br><span class="line"><span class="string">      --sslCAFile=&lt;filename&gt;                      the .pem file containing the root certificate chain from the certificate authority</span></span><br><span class="line"><span class="string">      --sslPEMKeyFile=&lt;filename&gt;                  the .pem file containing the certificate and key</span></span><br><span class="line"><span class="string">      --sslPEMKeyPassword=&lt;password&gt;              the password to decrypt the sslPEMKeyFile, if necessary</span></span><br><span class="line"><span class="string">      --sslCRLFile=&lt;filename&gt;                     the .pem file containing the certificate revocation list</span></span><br><span class="line"><span class="string">      --sslAllowInvalidCertificates               bypass the validation for server certificates</span></span><br><span class="line"><span class="string">      --sslAllowInvalidHostnames                  bypass the validation for server name</span></span><br><span class="line"><span class="string">      --sslFIPSMode                               use FIPS mode of the installed openssl library</span></span><br><span class="line"><span class="string">authentication options:</span></span><br><span class="line"><span class="string">  -u, --username=&lt;username&gt;                       username for authentication</span></span><br><span class="line"><span class="string">  -p, --password=&lt;password&gt;                       password for authentication</span></span><br><span class="line"><span class="string">      --authenticationDatabase=&lt;database-name&gt;    database that holds the user'</span>s credentials</span><br><span class="line">      --authenticationMechanism=&lt;mechanism&gt;       authentication mechanism to use</span><br><span class="line">namespace options:</span><br><span class="line">  -d, --db=&lt;database-name&gt;                        database to use</span><br><span class="line">  -c, --collection=&lt;collection-name&gt;              collection to use</span><br><span class="line">uri options:</span><br><span class="line">      --uri=mongodb-uri                           mongodb uri connection string</span><br><span class="line">output options:</span><br><span class="line">  -f, --fields=&lt;field&gt;[,&lt;field&gt;]*                 comma separated list of field names (required <span class="keyword">for</span> exporting CSV) e.g. -f <span class="string">"name,age"</span></span><br><span class="line">      --fieldFile=&lt;filename&gt;                      file with field names - 1 per line</span><br><span class="line">      --<span class="built_in">type</span>=&lt;<span class="built_in">type</span>&gt;                               the output format, either json or csv (defaults to <span class="string">'json'</span>) (default: json)</span><br><span class="line">  -o, --out=&lt;filename&gt;                            output file; <span class="keyword">if</span> not specified, stdout is used</span><br><span class="line">      --jsonArray                                 output to a JSON array rather than one object per line</span><br><span class="line">      --pretty                                    output JSON formatted to be human-readable</span><br><span class="line">      --noHeaderLine                              <span class="built_in">export</span> CSV data without a list of field names at the first line</span><br><span class="line">querying options:</span><br><span class="line">  -q, --query=&lt;json&gt;                              query filter, as a JSON string, e.g., <span class="string">'&#123;x:&#123;$gt:1&#125;&#125;'</span></span><br><span class="line">      --queryFile=&lt;filename&gt;                      path to a file containing a query filter (JSON)</span><br><span class="line">  -k, --slaveOk                                   allow secondary reads <span class="keyword">if</span> available (default <span class="literal">true</span>) (default: <span class="literal">false</span>)</span><br><span class="line">      --readPreference=&lt;string&gt;|&lt;json&gt;            specify either a preference name or a preference json object</span><br><span class="line">      --forceTableScan                            force a table scan (<span class="keyword">do</span> not use <span class="variable">$snapshot</span>)</span><br><span class="line">      --skip=&lt;count&gt;                              number of documents to skip</span><br><span class="line">      --<span class="built_in">limit</span>=&lt;count&gt;                             <span class="built_in">limit</span> the number of documents to <span class="built_in">export</span></span><br><span class="line">      --sort=&lt;json&gt;                               sort order, as a JSON string, e.g. <span class="string">'&#123;x:1&#125;'</span></span><br><span class="line">      --assertExists                              <span class="keyword">if</span> specified, <span class="built_in">export</span> fails <span class="keyword">if</span> the collection does not exist (default: <span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>mongodb 备份脚本可以<a href="https://github.com/xxlaila/backup-monitoring/tree/master/backup" target="_blank" rel="noopener">参考</a>本人写的</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;Days-11-14&quot;&gt;&lt;a href=&quot;#Days-11-14&quot; class=&quot;headerlink&quot; title=&quot;Days(11.14)&quot;&gt;&lt;/a&gt;Days(11.14)&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mongodb之前都是负责搭建、维护、备份、监控等操作。闲时来总结一下语法。
    
    </summary>
    
      <category term="数据库" scheme="https://www.xxlaila.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mongodb" scheme="https://www.xxlaila.cn/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>mysql8.0 错误</title>
    <link href="https://www.xxlaila.cn/2019/11/07/mysql8.0%E9%94%99%E8%AF%AF/"/>
    <id>https://www.xxlaila.cn/2019/11/07/mysql8.0错误/</id>
    <published>2019-11-07T01:36:43.000Z</published>
    <updated>2019-11-15T06:24:23.442Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h4 id="mysql-8-0-倒入数据报错"><a href="#mysql-8-0-倒入数据报错" class="headerlink" title="mysql 8.0 倒入数据报错"></a>mysql 8.0 倒入数据报错</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天数据库从5.6切换到8.0测试的时候，倒入数据到8.0版本报错，错误提示：2006 mysql server has gone away。<a id="more"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;经过查询得知，导入SQL数据库结构+数据时，如果sql操作时间过长；或者是传送的数据太大（咧如使用insert…values的语句过长）；就会报这个错误。登录服务器查看了数据库连接超时的时间默认是8小时，问题应该不是出现在这里。登录老版本数据查看该数据库表的数据，发现该表存放是json的数据格式数据，而且很大，很长。根据这点消息，可以简单的知道问题</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种情况可以通过修改max_allowed_packed的配置参数来避免，修改my.cnf加大max_allowed_packet的值即可。</p><ul><li>解决办法<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;找到mysql目录下的my.ini配置文件，加入以下配置或者修改以下配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max_allowed_packet=300M</span><br></pre></td></tr></table></figure></li></ul><h4 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h4><ul><li><strong>max_allowed_packet</strong>: mysql根据配置文件会限制server接受的数据包大小。如果一次插入数据库中的数据太大的话就会失败，<a href="https://dev.mysql.com/doc/refman/8.0/en/packet-too-large.html" target="_blank" rel="noopener">官方介绍</a>，<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里我刚开始修改的是200M，还是出现这个错误，然后我看了一下sql文件大小是在260多M，索性我就把这个参数调整为300M，在执行倒入数据ok。这个参数调大不会影响服务器的性能，可以参考官方说明。</li></ul><h4 id="mysql-1067-Invalid-default-value-for"><a href="#mysql-1067-Invalid-default-value-for" class="headerlink" title="mysql 1067 - Invalid default value for"></a>mysql 1067 - Invalid default value for</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql 8.0 在倒入数据的时候提示: 1067 - Invalid default value for ‘xxx_date’。查询结果得知跨版本升级引起的默认值不兼容问题，登录老服务器查看该字段是一个时间字段，是一个datetime类型，而且默认是0，然后看了一下导出的数据数据格式居然是0000-00-00，该类型可能是默认值被限制了，查看 sql_mode。</p><h5 id="查看-sql-mode"><a href="#查看-sql-mode" class="headerlink" title="查看 sql_mode"></a>查看 sql_mode</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'sql_mode'</span>;</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| Variable_name | Value                                                                                                                 |</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">| sql_mode      | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION |</span><br><span class="line">+---------------+-----------------------------------------------------------------------------------------------------------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.02 sec)</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NO_ZERO_IN_DATE,NO_ZERO_DATE这两个参数限制时间不能为0</p><h5 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> session sql_mode=<span class="string">'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure><p>这个我操作了，没成功，我用的永久修改成功导入的。不知道为啥，可能是姿势不对</p><h5 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改"></a>永久修改</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以直接修改my.cnf文件，在[mysqld]下面添加如下列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql_mode=ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h4 id=&quot;mysql-8-0-倒入数据报错&quot;&gt;&lt;a href=&quot;#mysql-8-0-倒入数据报错&quot; class=&quot;headerlink&quot; title=&quot;mysql 8.0 倒入数据报错&quot;&gt;&lt;/a&gt;mysql 8.0 倒入数据报错&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;今天数据库从5.6切换到8.0测试的时候，倒入数据到8.0版本报错，错误提示：2006 mysql server has gone away。
    
    </summary>
    
      <category term="数据库" scheme="https://www.xxlaila.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="https://www.xxlaila.cn/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>istio部署</title>
    <link href="https://www.xxlaila.cn/2019/10/29/istio%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.xxlaila.cn/2019/10/29/istio部署/</id>
    <published>2019-10-29T08:21:08.000Z</published>
    <updated>2019-12-13T09:16:04.899Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:14 GMT+0800 (China Standard Time) --><h3 id="Istio介绍"><a href="#Istio介绍" class="headerlink" title="Istio介绍"></a>Istio介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio代表的是Service Mesh的方案实现，Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。提供一种简单的方式来为已部署的服务建立网络，且提供具有负载均衡、服务间认证、监控、流量管理等功能。</p><a id="more"></a><h3 id="服务网格（Service-Mesh）"><a href="#服务网格（Service-Mesh）" class="headerlink" title="服务网格（Service Mesh）"></a>服务网格（Service Mesh）</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;服务网格（Service Mesh）用于描述构成这些应用程序的微服务网络以及应用之间的交互。随着规模和复杂性的增长，服务网格越来越难以理解和管理。它的需求包括服务发现、负载均衡、故障恢复、指标收集和监控以及通常更加复杂的运维需求，例如 A/B 测试、金丝雀发布、限流、访问控制和端到端认证等。而istio刚好提供了一套完整的解决方案，通过控制整个服务器网格提供行为洞察和操作控制来满足微服务应用的多样化</p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 服务网格逻辑上分为数据平面和控制平面。</p><ul><li>数据平面由一组以 sidecar 方式部署的智能代理（Envoy）组成。这些代理可以调节和控制微服务及 Mixer 之间所有的网络通信。</li><li>控制平面负责管理和配置代理来路由流量。此外控制平面配置 Mixer 以实施策略和收集遥测数据。</li></ul><p>构成每个面板的不同组件:<br><img src="https://img.xxlaila.cn/1567136153850.jpg" alt="img"></p><h4 id="istio-组件"><a href="#istio-组件" class="headerlink" title="istio 组件"></a>istio 组件</h4><ul><li>Envoy: Istio 使用 Envoy 代理的扩展版本，用于调解服务网格中所有服务的所有入站和出站流量，属于数据层面。Istio利用Envoy的内置功能实现如下指标:<ul><li>动态服务发现</li><li>负载均衡</li><li>TLS终止</li><li>HTTP/2和gRPC代理</li><li>断路器</li><li>健康检查</li><li>分阶段推出，按百分比分配流量</li><li>故障注入</li><li>丰富的指标</li></ul></li><li>Mixer: 是一个独立于平台的组件，负责在服务网格上执行访问控制和使用策略，并从 Envoy 代理和其他服务收集遥测数据</li><li>Pilot: 为 Envoy sidecar 提供服务发现功能，为智能路由（例如 A/B 测试、金丝雀部署等）和弹性（超时、重试、熔断器等）提供流量管理功能</li><li>Citadel: 通过内置身份和凭证管理赋能强大的服务间和最终用户身份验证。可用于升级服务网格中未加密的流量，并为运维人员提供基于服务标识而不是网络控制的强制执行策略的能力</li><li>Galley: 代表其他的 Istio 控制平面组件，用来验证用户编写的 Istio API 配置。随着时间的推移，Galley 将接管 Istio 获取配置、 处理和分配组件的顶级责任</li></ul><h3 id="Istion-安装"><a href="#Istion-安装" class="headerlink" title="Istion 安装"></a>Istion 安装</h3><h4 id="下载istio包"><a href="#下载istio包" class="headerlink" title="下载istio包"></a>下载istio包</h4><p>执行下载和自动解压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -L https://git.io/getLatestIstio | ISTIO_VERSION=1.4.0 sh -</span></span><br><span class="line"><span class="comment"># cd istio-1.4.0/bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cp istioctl /usr/bin/</span></span><br></pre></td></tr></table></figure><p>安装目录中包含：</p><ul><li><code>在 install/</code>: 目录中包含了 Kubernetes 安装所需的 .yaml 文件</li><li><code>samples/</code>: 目录中是示例应用</li><li><code>istioctl</code>: istioctl客户端二进制文件。手动将Envoy作为Sidecar代理注入并创建路由规则和策略时，将使用此工具。</li><li><code>istio.VERSION</code>: 配置文件</li></ul><h3 id="在kubernetes-集群中安装"><a href="#在kubernetes-集群中安装" class="headerlink" title="在kubernetes 集群中安装"></a>在kubernetes 集群中安装</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 会被安装到自己的 istio-system 命名空间，并且能够对所有其他命名空间的服务进行管理。这里采用helm进行安装，<a href="https://xxlaila.github.io/2019/09/04/k8s-helm/" target="_blank" rel="noopener">helm安装参考</a>，我们需要为Kiali设置身份验证凭据（监视）。用于后面的登录认证</p><h4 id="设置用户名和密码的环境变量"><a href="#设置用户名和密码的环境变量" class="headerlink" title="设置用户名和密码的环境变量"></a>设置用户名和密码的环境变量</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># KIALI_USERNAME=$(read -p 'Kiali Username: ' uval &amp;&amp; echo -n $uval | base64)</span></span><br><span class="line"><span class="comment"># KIALI_PASSPHRASE=$(read -sp 'Kiali Passphrase: ' pval &amp;&amp; echo -n $pval | base64)</span></span><br></pre></td></tr></table></figure><h4 id="创建命名空间"><a href="#创建命名空间" class="headerlink" title="创建命名空间"></a>创建命名空间</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># NAMESPACE=istio-system</span></span><br><span class="line"><span class="comment"># kubectl create namespace $NAMESPACE</span></span><br></pre></td></tr></table></figure><ul><li>创建用于存储上面设置的用户名/密码的机密<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF | kubectl apply -f -</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: kiali</span><br><span class="line">  namespace: <span class="variable">$NAMESPACE</span></span><br><span class="line">  labels:</span><br><span class="line">    app: kiali</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">data:</span><br><span class="line">  username: <span class="variable">$KIALI_USERNAME</span></span><br><span class="line">  passphrase: <span class="variable">$KIALI_PASSPHRASE</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用helm安装istio-CRD"><a href="#使用helm安装istio-CRD" class="headerlink" title="使用helm安装istio CRD"></a>使用helm安装istio CRD</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># helm install install/kubernetes/helm/istio-init --name istio-init --namespace istio-system</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl -n istio-system wait --for=condition=complete job --all</span></span><br><span class="line">job.batch/istio-init-crd-10-1.4.0 condition met</span><br><span class="line">job.batch/istio-init-crd-11-1.4.0 condition met</span><br><span class="line">job.batch/istio-init-crd-14-1.4.0 condition met</span><br></pre></td></tr></table></figure><h5 id="查看安装的CRD和pod"><a href="#查看安装的CRD和pod" class="headerlink" title="查看安装的CRD和pod"></a>查看安装的CRD和pod</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上述安装会把istio的23个crd都提交给kubernetes api 服务器。如果启用了证书管理，crd计数器为28个。我这里未启用证书管理，只有23个。还生成三个pod</p><ul><li><p>CRD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get CustomResourceDefinition</span></span><br><span class="line">NAME                                   CREATED AT</span><br><span class="line">adapters.config.istio.io               2019-10-29T08:41:31Z</span><br><span class="line">attributemanifests.config.istio.io     2019-10-29T08:41:30Z</span><br><span class="line">authorizationpolicies.rbac.istio.io    2019-10-29T08:41:36Z</span><br><span class="line">certificates.certmanager.k8s.io        2019-10-29T08:41:38Z</span><br><span class="line">challenges.certmanager.k8s.io          2019-10-29T08:41:40Z</span><br><span class="line">clusterissuers.certmanager.k8s.io      2019-10-29T08:41:37Z</span><br><span class="line">clusterrbacconfigs.rbac.istio.io       2019-10-29T08:41:26Z</span><br><span class="line">destinationrules.networking.istio.io   2019-10-29T08:41:25Z</span><br><span class="line">envoyfilters.networking.istio.io       2019-10-29T08:41:26Z</span><br><span class="line">gateways.networking.istio.io           2019-10-29T08:41:26Z</span><br><span class="line">handlers.config.istio.io               2019-10-29T08:41:33Z</span><br><span class="line">httpapispecbindings.config.istio.io    2019-10-29T08:41:27Z</span><br><span class="line">httpapispecs.config.istio.io           2019-10-29T08:41:28Z</span><br><span class="line">instances.config.istio.io              2019-10-29T08:41:32Z</span><br><span class="line">issuers.certmanager.k8s.io             2019-10-29T08:41:37Z</span><br><span class="line">meshpolicies.authentication.istio.io   2019-10-29T08:41:27Z</span><br><span class="line">orders.certmanager.k8s.io              2019-10-29T08:41:40Z</span><br><span class="line">policies.authentication.istio.io       2019-10-29T08:41:27Z</span><br><span class="line">quotaspecbindings.config.istio.io      2019-10-29T08:41:28Z</span><br><span class="line">quotaspecs.config.istio.io             2019-10-29T08:41:29Z</span><br><span class="line">rbacconfigs.rbac.istio.io              2019-10-29T08:41:31Z</span><br><span class="line">rules.config.istio.io                  2019-10-29T08:41:30Z</span><br><span class="line">serviceentries.networking.istio.io     2019-10-29T08:41:25Z</span><br><span class="line">servicerolebindings.rbac.istio.io      2019-10-29T08:41:31Z</span><br><span class="line">serviceroles.rbac.istio.io             2019-10-29T08:41:31Z</span><br><span class="line">sidecars.networking.istio.io           2019-10-29T08:41:34Z</span><br><span class="line">templates.config.istio.io              2019-10-29T08:41:32Z</span><br><span class="line">virtualservices.networking.istio.io    2019-10-29T08:41:25Z</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get crds | grep 'istio.io\|certmanager.k8s.io' | wc -l</span></span><br><span class="line">23</span><br></pre></td></tr></table></figure></li><li><p>pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods -n istio-system</span></span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">NAME                            READY   STATUS      RESTARTS   AGE</span><br><span class="line">istio-init-crd-10-1.4.0-pbtb8   0/1     Completed   0          47s</span><br><span class="line">istio-init-crd-11-1.4.0-shx6q   0/1     Completed   0          47s</span><br><span class="line">istio-init-crd-12-1.4.0-zmh2w   0/1     Completed   0          47s</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用helm安装各个组件"><a href="#使用helm安装各个组件" class="headerlink" title="使用helm安装各个组件"></a>使用helm安装各个组件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">helm install install/kubernetes/helm/istio --<span class="built_in">wait</span> \</span><br><span class="line">    --name istio \</span><br><span class="line">    --namespace istio-system \</span><br><span class="line">    --<span class="built_in">set</span> global.mtls.enabled=<span class="literal">false</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> tracing.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> servicegraph.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> global.k8sIngress.gatewayName=ingressgateway \</span><br><span class="line">    --<span class="built_in">set</span> grafana.enabled=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.createDemoSecret=<span class="literal">true</span> \</span><br><span class="line">    --<span class="built_in">set</span> kiali.contextPath=/ \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.jaegerURL=http://jaeger-query:16686"</span> \</span><br><span class="line">    --<span class="built_in">set</span> <span class="string">"kiali.dashboard.grafanaURL=http://grafana:3000"</span> \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-ingressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> gateways.istio-egressgateway.type=NodePort \</span><br><span class="line">    --<span class="built_in">set</span> sidecarInjectorWebhook.enabled=<span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;验证文件里面的服务是否都部署在kubernetes 服务中。确保部署的pod 在对应的kubernetes namespace 里面，并正常启动。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这期间将创建所需的RBAC权限，并部署Istio-Pilot，Istio-Mixer，Istio-Ingress，Istio-Egress和Istio-CA（证书颁发机构）。</p><h5 id="服务器验证"><a href="#服务器验证" class="headerlink" title="服务器验证"></a>服务器验证</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确保部署了以下Kubernetes服务：istio-pilot，istio-mixer，istio-ingress。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get svc -n istio-system</span></span><br><span class="line">NAME                     TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                                                                                                                                      AGE</span><br><span class="line">grafana                  ClusterIP   10.254.113.150   &lt;none&gt;        3000/TCP                                                                                                                                     3h22m</span><br><span class="line">istio-citadel            ClusterIP   10.254.27.143    &lt;none&gt;        8060/TCP,15014/TCP                                                                                                                           3h22m</span><br><span class="line">istio-galley             ClusterIP   10.254.155.177   &lt;none&gt;        443/TCP,15014/TCP,9901/TCP                                                                                                                   3h22m</span><br><span class="line">istio-ingressgateway     NodePort    10.254.170.109   &lt;none&gt;        15020:31952/TCP,80:31380/TCP,443:31390/TCP,31400:31400/TCP,15029:32532/TCP,15030:31518/TCP,15031:31525/TCP,15032:30404/TCP,15443:30309/TCP   3h22m</span><br><span class="line">istio-pilot              ClusterIP   10.254.228.182   &lt;none&gt;        15010/TCP,15011/TCP,8080/TCP,15014/TCP                                                                                                       3h22m</span><br><span class="line">istio-policy             ClusterIP   10.254.13.184    &lt;none&gt;        9091/TCP,15004/TCP,15014/TCP                                                                                                                 3h22m</span><br><span class="line">istio-sidecar-injector   ClusterIP   10.254.154.169   &lt;none&gt;        443/TCP                                                                                                                                      3h22m</span><br><span class="line">istio-telemetry          ClusterIP   10.254.71.72     &lt;none&gt;        9091/TCP,15004/TCP,15014/TCP,42422/TCP                                                                                                       3h22m</span><br><span class="line">jaeger-agent             ClusterIP   None             &lt;none&gt;        5775/UDP,6831/UDP,6832/UDP                                                                                                                   3h22m</span><br><span class="line">jaeger-collector         ClusterIP   10.254.100.29    &lt;none&gt;        14267/TCP,14268/TCP                                                                                                                          3h22m</span><br><span class="line">jaeger-query             ClusterIP   10.254.18.117    &lt;none&gt;        16686/TCP                                                                                                                                    3h22m</span><br><span class="line">kiali                    ClusterIP   10.254.156.117   &lt;none&gt;        20001/TCP                                                                                                                                    3h22m</span><br><span class="line">prometheus               ClusterIP   10.254.145.181   &lt;none&gt;        9090/TCP                                                                                                                                     3h22m</span><br><span class="line">tracing                  ClusterIP   10.254.87.72     &lt;none&gt;        80/TCP                                                                                                                                       3h22m</span><br><span class="line">zipkin                   ClusterIP   10.254.39.22     &lt;none&gt;        9411/TCP                                                                                                                                     3h22m</span><br></pre></td></tr></table></figure><h5 id="pod-验证"><a href="#pod-验证" class="headerlink" title="pod 验证"></a>pod 验证</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确保已部署相应的Kubernetes Pod，并且所有容器都已启动并正在运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods -n istio-system</span></span><br><span class="line">NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class="line">grafana-6fb9f8c5c7-n2plk                  1/1     Running     0          3h19m</span><br><span class="line">istio-citadel-7c9b84ddb6-n5h2n            1/1     Running     0          3h19m</span><br><span class="line">istio-galley-64f7d8cc97-zdbb6             1/1     Running     0          3h19m</span><br><span class="line">istio-grafana-post-install-1.2.8-98grv    0/1     Completed   0          3h19m</span><br><span class="line">istio-ingressgateway-65c7498b78-dfmfp     1/1     Running     0          3h19m</span><br><span class="line">istio-init-crd-10-1.2.8-wxxjn             0/1     Completed   0          3h20m</span><br><span class="line">istio-init-crd-11-1.2.8-brjhh             0/1     Completed   0          3h20m</span><br><span class="line">istio-init-crd-12-1.2.8-w8wnc             0/1     Completed   0          3h20m</span><br><span class="line">istio-pilot-569499d666-vhgn5              2/2     Running     0          3h19m</span><br><span class="line">istio-policy-5dbbc56db5-dmr4p             2/2     Running     3          3h19m</span><br><span class="line">istio-sidecar-injector-747cf74498-99drh   1/1     Running     0          3h19m</span><br><span class="line">istio-telemetry-7db5dd4c57-zngq7          2/2     Running     4          3h19m</span><br><span class="line">istio-tracing-5d8f57c8ff-vt2kn            1/1     Running     0          3h19m</span><br><span class="line">kiali-7d749f9dcb-68tlt                    1/1     Running     0          3h19m</span><br><span class="line">prometheus-776fdf7479-zbrxl               1/1     Running     0          3h19m</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 以一个项目的形式部署到 Kubernetes 集群中。我们可以看到，部署好的 pods 中，除了有 istio-citadel、、istio-ingressgateway、istio-pilot 等 Istio 本身的功能组件，还集成了微服务相关的监控工具，，如：grafana、jaeger-query、kiali、prometheus。这些功能丰富且强大的监控工具，帮助 Istio实现了微服务的可视化管理。</p><h3 id="部署BookInfo用程序"><a href="#部署BookInfo用程序" class="headerlink" title="部署BookInfo用程序"></a>部署BookInfo用程序</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;现在开始部署 Bookinfo 示例程序。部署Bookinfo条件是集群中至少有4个节点，而且每个节点的内存不得低于4G。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以部署安装随附的示例应用程序之一-BookInfo。这是一个简单的模拟书店应用程序，由四个服务组成，这些服务提供一个Web产品页面，书籍详细信息，评论（带有多个版本的评论服务）和评分-所有这些都使用Istio进行管理。</p><ul><li><p>BookInfo应用程序分为四个单独的微服务:</p><ul><li>productpage ：productpage 微服务会调用 details 和 reviews 两个微服务，用来生成页面。</li><li>details ：这个微服务包含了书籍的信息。</li><li>reviews ：这个微服务包含了书籍相关的评论。它还会调用 ratings 微服务。</li><li>ratings ：ratings 微服务中包含了由书籍评价组成的评级信息。</li></ul></li><li><p>reviews 微服务有 3 个版本：</p><ul><li>v1 版本不会调用 ratings 服务.</li><li>v2 版本会调用 ratings 服务，并使用 1 到 5 个黑色星形图标来显示评分信息</li><li>v3 版本会调用 ratings 服务，并使用 1 到 5 个红色星形图标来显示评分信息</li></ul></li><li><p>下图展示了这个应用的端到端架构<br><img src="https://img.xxlaila.cn/1572576628250.jpg" alt="img"></p></li></ul><h4 id="打标签"><a href="#打标签" class="headerlink" title="打标签"></a>打标签</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;为 default 命名空间打上标签 istio-injection=enabled，实现 Sidecar 自动注入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl label namespace default istio-injection=enabled</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get namespace --show-labels</span></span><br><span class="line">NAME              STATUS   AGE   LABELS</span><br><span class="line">default           Active   43d   istio-injection=enabled</span><br><span class="line">istio-system      Active   29m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   43d   &lt;none&gt;</span><br><span class="line">kube-public       Active   43d   &lt;none&gt;</span><br><span class="line">kube-system       Active   43d   &lt;none&gt;</span><br><span class="line">monitoring        Active   35d   &lt;none&gt;</span><br><span class="line">weave             Active   35d   &lt;none&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>注意:</strong> 此步骤先不执行，如果这这个执行了，在后面部署Bookinfo的时候会提示如下错误<code>Error creating: Internal error occurred: failed calling webhook &quot;sidecar-injector.istio.io&quot;: Post https://istio-sidecar-injector.istio-system.svc:443/inject?timeout=30s: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</code>这一步有执行的可以执行以下命令进行删除。该错误已解决，<a href="https://www.xxlaila.cn/2019/12/13/istio%E9%83%A8%E7%BD%B2%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3/">详情参考</a></li></ul><ul><li>删除ns的label<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get ns --show-labels</span></span><br><span class="line">NAME              STATUS   AGE    LABELS</span><br><span class="line">default           Active   2d4h   istio-injection=enabled</span><br><span class="line">istio-system      Active   174m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-public       Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-system       Active   2d4h   &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl label namespace default istio-injection-</span></span><br><span class="line">namespace/default labeled</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubectl get ns --show-labels</span></span><br><span class="line">NAME              STATUS   AGE    LABELS</span><br><span class="line">default           Active   2d4h   &lt;none&gt;</span><br><span class="line">istio-system      Active   175m   &lt;none&gt;</span><br><span class="line">kube-node-lease   Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-public       Active   2d4h   &lt;none&gt;</span><br><span class="line">kube-system       Active   2d4h   &lt;none&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="部署Bookinfo"><a href="#部署Bookinfo" class="headerlink" title="部署Bookinfo"></a>部署Bookinfo</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;直接使用kubectl create其常规的YAML部署文件来部署我们的应用程序。将使用istioctl将Envoy容器注入到应用程序容器中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl create -f &lt;(istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml)</span></span><br><span class="line">service/details created</span><br><span class="line">serviceaccount/bookinfo-details created</span><br><span class="line">deployment.apps/details-v1 created</span><br><span class="line">service/ratings created</span><br><span class="line">serviceaccount/bookinfo-ratings created</span><br><span class="line">deployment.apps/ratings-v1 created</span><br><span class="line">service/reviews created</span><br><span class="line">serviceaccount/bookinfo-reviews created</span><br><span class="line">deployment.apps/reviews-v1 created</span><br><span class="line">deployment.apps/reviews-v2 created</span><br><span class="line">deployment.apps/reviews-v3 created</span><br><span class="line">service/productpage created</span><br><span class="line">serviceaccount/bookinfo-productpage created</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该命令将启动bookinfo应用程序体系结构图中显示的所有四个服务。已启动评论服务的所有3个版本，即v1，v2和v3。而在实际部署中，随着时间的推移会部署新版本的微服务，而不是同时部署所有版本。</p><h4 id="检查部署"><a href="#检查部署" class="headerlink" title="检查部署"></a>检查部署</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;确认所有服务和Pod均已正确定义并正在运行。</p><ul><li><p>检查 services</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get services</span></span><br><span class="line">NAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">details       ClusterIP   10.254.61.113    &lt;none&gt;        9080/TCP   2m27s</span><br><span class="line">kubernetes    ClusterIP   10.254.0.1       &lt;none&gt;        443/TCP    43d</span><br><span class="line">productpage   ClusterIP   10.254.130.5     &lt;none&gt;        9080/TCP   2m23s</span><br><span class="line">ratings       ClusterIP   10.254.186.181   &lt;none&gt;        9080/TCP   2m26s</span><br><span class="line">reviews       ClusterIP   10.254.200.107   &lt;none&gt;        9080/TCP   2m25s</span><br></pre></td></tr></table></figure></li><li><p>检查 pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                              READY   STATUS    RESTARTS   AGE</span><br><span class="line">details-v1-c5b5f496d-lphgd        1/1     Running   0          15h</span><br><span class="line">load-generator-7fbcc7489f-vbpnx   1/1     Running   2          20d</span><br><span class="line">nginx-deploy-d494b9564-vx97s      1/1     Running   1          20d</span><br><span class="line">productpage-v1-c7765c886-97spj    1/1     Running   0          15h</span><br><span class="line">ratings-v1-f745cf57b-mdgxr        1/1     Running   0          15h</span><br><span class="line">reviews-v1-75b979578c-ghqqm       1/1     Running   0          15h</span><br><span class="line">reviews-v2-597bf96c8f-r659w       1/1     Running   0          15h</span><br><span class="line">reviews-v3-54c6c64795-tvsmq       1/1     Running   0          15h</span><br></pre></td></tr></table></figure></li><li><p>确认Bookinfo应用程序正在运行，请通过curl某个pod中的命令向其发送请求</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl exec -it $(kubectl get pod -l app=ratings -o jsonpath='&#123;.items[0].metadata.name&#125;') -c ratings -- curl productpage:9080/productpage | grep -o "&lt;title&gt;.*&lt;/title&gt;"</span></span><br><span class="line">&lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在每个服务旁边都注入了Envoy，架构将如下<br><img src="https://img.xxlaila.cn/1572577460804.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bookinfo服务已启动并正在运行，您需要使该应用程序可以从Kubernetes集群外部访问，例如，从浏览器访问。Istio网关用于此目的。但是我在部署 bookinfo-gateway 的时候出现错误，错误如下；然后看了一下 bookinfo-gateway就是提供一个web访问的程序，既然是提供的一个web访问，我就使用了Traefix来提供这个服务。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">Error</span> <span class="keyword">from</span><span class="built_in"> server </span>(Timeout): <span class="builtin-name">error</span> when creating <span class="string">"samples/bookinfo/networking/bookinfo-gateway.yaml"</span>: Timeout: request did <span class="keyword">not</span> complete within requested timeout 30s</span><br><span class="line"><span class="builtin-name">Error</span> <span class="keyword">from</span><span class="built_in"> server </span>(Timeout): <span class="builtin-name">error</span> when creating <span class="string">"samples/bookinfo/networking/bookinfo-gateway.yaml"</span>: Timeout: request did <span class="keyword">not</span> complete within requested timeout 30s</span><br></pre></td></tr></table></figure><h4 id="创建-bookinfo-gateway"><a href="#创建-bookinfo-gateway" class="headerlink" title="创建 bookinfo-gateway"></a>创建 bookinfo-gateway</h4><ul><li>istio-Ingress.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: istio-web-ui</span><br><span class="line">  namespace: </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: productpage</span><br><span class="line">          servicePort: 9080</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器输入<code>http://istio.xxlaila.cn</code> 来访问。用 productpage以查看BookInfo网页。如果您多次刷新页面，您应该会看到产品页面上显示的评论版本不同，并以循环方式显示（红色星星，黑色星星，无星星），因为我们尚未使用Istio来控制版本路由<br><img src="https://img.xxlaila.cn/1572578398765.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1572578189667.jpg" alt="img"></p><p>基本道这里，动态更改请求路由学习中，😂😂😂</p><h3 id="监控方式"><a href="#监控方式" class="headerlink" title="监控方式"></a>监控方式</h3><h4 id="生成服务图"><a href="#生成服务图" class="headerlink" title="生成服务图"></a>生成服务图</h4><p>要验证Kiali是否在您的集群中运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n istio-system get svc kiali</span></span><br><span class="line">NAME    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)     AGE</span><br><span class="line">kiali   ClusterIP   10.254.156.117   &lt;none&gt;        20001/TCP   4h38m</span><br></pre></td></tr></table></figure><p>流量发送到网格，有三种选择:<br>1.在网络浏览器中访问<a href="http://istio.xxlaila.cn/productpage" target="_blank" rel="noopener">http://istio.xxlaila.cn/productpage</a><br>2.多次使用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl http://istio.xxlaila.cn/productpage</span></span><br></pre></td></tr></table></figure><p>3.使用以下watch命令连续发送请求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># watch -n 1 curl -o /dev/null -s -w %&#123;http_code&#125; http://istio.xxlaila.cn/productpage</span></span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里需要配置Kiali UI，我们同样适用Traefix来进行配置</p><ul><li>kiali–Ingress.yaml<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; kiali--Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: kiali-web-ui</span><br><span class="line">  namespace: istio-system </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: istio-kiali.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: kiali</span><br><span class="line">          servicePort: 20001</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://istio-kiali.xxlaila.cn" target="_blank" rel="noopener">http://istio-kiali.xxlaila.cn</a> ， 要登录Kiali UI，请转到Kiali登录屏幕，然后输入存储在Kiali机密中的用户名和密码。账户密码是前面我们设置的</p><h4 id="1-网格概述"><a href="#1-网格概述" class="headerlink" title="1.网格概述"></a>1.网格概述</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录后立即显示的“概述”页面中查看网格的概述。“概述”页面显示了网格中具有服务的所有名称空间。以下屏幕截图显示了类似的页面<br><img src="https://img.xxlaila.cn/1572578943386.jpg" alt="img"></p><h4 id="2-空间图"><a href="#2-空间图" class="headerlink" title="2.空间图"></a>2.空间图</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;要查看名称空间图，请在bookinfoBookinfo名称空间卡中单击图图标。图形图标位于名称空间卡的左下方，看起来像是一组相连的圈子。该页面类似于<br><img src="https://img.xxlaila.cn/1572579048298.jpg" alt="img"></p><h3 id="分布式跟踪系统"><a href="#分布式跟踪系统" class="headerlink" title="分布式跟踪系统"></a>分布式跟踪系统</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;启用Istio的应用程序可以配置为使用流行的Jaeger分布式跟踪系统来收集跟踪范围。分布式跟踪使您可以查看用户在系统中发出的请求流，而Istio的模型则允许这样做，而与构建应用程序所使用的语言/框架/平台无关。使用Traefix来提供这个服务。</p><ul><li><p>Jaeger-Ingress.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; Jaeger-Ingress.yaml  &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: jaeger-web-ui</span><br><span class="line">  namespace: istio-system </span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: jaeger.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: jaeger-query</span><br><span class="line">          servicePort: 16686</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f Jaeger-Ingress.yaml </span></span><br><span class="line">ingress.extensions/jaeger-web-ui unchanged</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://jaeger.xxlaila.cn" target="_blank" rel="noopener">http://jaeger.xxlaila.cn</a> ， 使用Bookinfo示例生成跟踪，要查看跟踪数据，必须将请求发送到服务。请求数量取决于Istio的采样率。您在安装Istio时设置此速率。默认采样率为1％。您需要至少发送100个请求，才能显示第一条跟踪。要将100个请求发送到productpage服务，请使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for i in `seq 1 100`; do curl -s -o /dev/null http://istio.xxlaila.cn/productpage; done</span></span><br></pre></td></tr></table></figure><ul><li><p>在仪表板的左侧窗格中，从“服务”下拉列表中选择productpage.default，然后单击“查找跟踪”<br><img src="https://img.xxlaila.cn/1572592255728.jpg" alt="img"></p></li><li><p>单击顶部的最新跟踪以查看与对/ productpage的最新请求相对应的详细信息<br><img src="https://img.xxlaila.cn/1572592385675.jpg" alt="img"></p></li></ul><h3 id="监视Istio"><a href="#监视Istio" class="headerlink" title="监视Istio"></a>监视Istio</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如何设置和使用Istio仪表板监视网格流量。作为监控的一部分，需要将安装Grafana Istio插件，并使用基于Web的界面查看服务网格流量数据。Grafana将用于可视化普罗米修斯数据。在执行部署的时候也部署了这两个服务。</p><h4 id="创建grafana-Ingress"><a href="#创建grafana-Ingress" class="headerlink" title="创建grafana Ingress"></a>创建grafana Ingress</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt;grafana-istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana-istio-web-ui</span><br><span class="line">  namespace: istio-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: grafana-istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: grafana</span><br><span class="line">          servicePort: 3000</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>执行创建，这里我们可以在以前的grafana里面添加数据库源，就不用在新起一个域名来进行访问<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;再次加载Bookinfo应用程序（<a href="http://istio.xxlaila.cn/productpage）" target="_blank" rel="noopener">http://istio.xxlaila.cn/productpage）</a> ， 刷新页面几次（或发送命令几次）以产生少量流量。再次查看Istio仪表板。它应该反映所产生的流量。<br><img src="https://img.xxlaila.cn/1572593852626.jpg" alt="img"></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;istio 还提供了网格的全局视图以及网格中的服务和工作负载。您可以通过导航到特定的仪表板来获取有关服务和工作负载的更多详细信息。<br><img src="https://img.xxlaila.cn/1572594150893.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;提供了有关服务指标的详细信息，然后是该服务的客户端工作负载（正在调用此服务的工作负载）和服务工作负载（正在提供该服务的工作负载）。<br><img src="https://img.xxlaila.cn/1572594261333.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio 在grafana 提供了很多的监控指标，可以分别点击看看<br><img src="https://img.xxlaila.cn/1572594330246.jpg" alt="img"></p><h3 id="查询Istio指标"><a href="#查询Istio指标" class="headerlink" title="查询Istio指标"></a>查询Istio指标</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Istio的数据是存储在prometheus里面的，这里我们通过prometheus进行直接数据的查询</p><h4 id="查看prometheus服务"><a href="#查看prometheus服务" class="headerlink" title="查看prometheus服务"></a>查看prometheus服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl -n istio-system get svc prometheus</span></span><br><span class="line">NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE</span><br><span class="line">prometheus   ClusterIP   10.254.145.181   &lt;none&gt;        9090/TCP   5h35m</span><br></pre></td></tr></table></figure><h4 id="prometheus-traefix"><a href="#prometheus-traefix" class="headerlink" title="prometheus traefix"></a>prometheus traefix</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过traefix 来代理prometheus，然后我们将流量发送到网格。</p><ul><li><p>prometheus-istio.yaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat &gt; prometheus-istio-Ingress.yaml &lt;&lt;EOF</span></span><br><span class="line">---</span><br><span class="line">apiVersion: extensions/v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-istio-web-ui</span><br><span class="line">  namespace: istio-system</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io/ingress.class: traefik</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: prometheus-istio.xxlaila.cn</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: /</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: prometheus</span><br><span class="line">          servicePort: 9090</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>执行创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kubectl apply -f prometheus-istio-Ingress.yaml </span></span><br><span class="line">ingress.extensions/prometheus-istio-web-ui created</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在浏览器打开<a href="http://prometheus-istio.xxlaila.cn" target="_blank" rel="noopener">http://prometheus-istio.xxlaila.cn</a> ，可以在输入框里面输入表达式来获取指，输入文本：istio_requests_total<br><img src="https://img.xxlaila.cn/1572594888435.jpg" alt="img"></p><ul><li><p>其他查询尝试：</p><ul><li><p>对productpage服务的所有请求总数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istio_requests_total&#123;destination_service=<span class="string">"productpage.default.svc.cluster.local"</span>&#125;</span><br></pre></td></tr></table></figure></li><li><p>对v3版本的评论服务的所有请求总数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">istio_requests_total&#123;destination_service=<span class="string">"reviews.default.svc.cluster.local"</span>, destination_version=<span class="string">"v3"</span>&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>该查询将所有请求的当前总数返回到评论服务的v3。</p><ul><li>过去5分钟内对productpage服务所有实例的请求率：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rate(istio_requests_total&#123;destination_service=~<span class="string">"productpage.*"</span>, response_code=<span class="string">"200"</span>&#125;[5m])</span><br></pre></td></tr></table></figure></li></ul></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:14 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;Istio介绍&quot;&gt;&lt;a href=&quot;#Istio介绍&quot; class=&quot;headerlink&quot; title=&quot;Istio介绍&quot;&gt;&lt;/a&gt;Istio介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;istio代表的是Service Mesh的方案实现，Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。提供一种简单的方式来为已部署的服务建立网络，且提供具有负载均衡、服务间认证、监控、流量管理等功能。&lt;/p&gt;
    
    </summary>
    
      <category term="kubernetes" scheme="https://www.xxlaila.cn/categories/kubernetes/"/>
    
    
      <category term="istio" scheme="https://www.xxlaila.cn/tags/istio/"/>
    
  </entry>
  
  <entry>
    <title>pipeline核心高级篇</title>
    <link href="https://www.xxlaila.cn/2019/10/26/pipeline%E9%AB%98%E7%BA%A7%E7%AF%87/"/>
    <id>https://www.xxlaila.cn/2019/10/26/pipeline高级篇/</id>
    <published>2019-10-26T01:59:01.000Z</published>
    <updated>2019-10-28T02:40:59.762Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;前面的两篇文章介绍了pipeline的基本使用和一些实际使用的例子，看似很不错，但是在实际应用也会出现很多的不足和问题，随之系统的庞大、服务的增加、人员的参差不齐会导致很多的问题。<a id="more"></a>届时会带来很大的维护成本和一些改动，所以我们在做事情之前就要考虑进去，一些意外事件的发生、或者是在将来即将会发生和需要改变的事情我们都要想到或者是预留口子，这样才在今后扩展、修改、引入都能有很好可塑性。</p><h3 id="jenkins-job介绍"><a href="#jenkins-job介绍" class="headerlink" title="jenkins job介绍"></a>jenkins job介绍</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大多数情况下我们都是使用jenkins的普通job，普通的job好处是配置简单，结构化可以复杂，也可以单一。在使用jenkins job的时候我们分为两种：一种是单一job，一种是具有耦合性的。下面对两种情况进行对比和比较。</p><h4 id="jenkins-单一job"><a href="#jenkins-单一job" class="headerlink" title="jenkins 单一job"></a>jenkins 单一job</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在jenkins的传统模式下，单一的的job可以让维护人员可以很好的查看里面的逻辑步骤，job里面所有的任务都在这个所属的空间里面执行，它里面包含了：代码pull、编译、打包、复制包、发布包（使用内置的shell模块来写shell，这种应该不存在）。种单一job服务算得上是服务周到，不影响其他人，自己管理好自己的一亩三分地。好处是当出错以后影响范围小，容易控制。如下图：<br><img src="https://img.xxlaila.cn/1572064519037.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在这中模式下，维护人员前期用看似比较轻松的工作建立起了整个发布流程。但是到了后期就不行了。之前我在的这家公司前期也是这么这么做的。开发完成后提交git，然后自动触发、构建、制品库、发布，在一个job里面就完成了。后来我们准备推行更好的devops方案的时候；发现以前的这个job建立有问题，一想到几百个微服务，几百个job需要去进行改造。顿时我们运维脸线一黑，虽然我们自己写了一个快速在jenkins上建立job，但是一想到几百个还是不好。为了解决这个问题，我们使用了job之间的任务关联，然后通过参数传递完成整个流程服务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这种模式下的弊端就如上面所说的一样，但什么时候好的服务呢？好的服务又是什么样子的呢？这里也可以嵌套一些微服务的概念理论。如果我们要做到什么时候好的服务，我们得了解了解一下: 低耦合和高内聚。了解这个东西有助于我们在接下来的pipeline 流水线的设计，包括在后期devops的设计以及撸码都有很大的帮助。</p><h3 id="耦合性"><a href="#耦合性" class="headerlink" title="耦合性"></a>耦合性</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首先我们来了解这一概念: “高内聚低耦合”。在软件设计中通常用耦合度和内聚度作为衡量模块独立程度的标准。划分模块的一个准则是高内聚低耦合。从模块粒度来看，高内聚：尽可能类的每个成员方法只完成一件事（最大限度的聚合）；低耦合：减少类内部，一个成员方法调用另一个成员方法。从类角度来看，高内聚低耦合：减少类内部，对其他类的调用；从功能块来看，高内聚低耦合：减少模块之间的交互复杂度（接口数量，参数数据）即横向：类与类之间、模块与模块之间；纵向：层次之间；尽可能，内容内聚，数据耦合。</p><h4 id="低耦合"><a href="#低耦合" class="headerlink" title="低耦合"></a>低耦合</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不同模块相互依赖多少？模块应尽可能独立于其他模块，以使对模块的更改不会严重影响其他模块。</p><h4 id="高耦合"><a href="#高耦合" class="headerlink" title="高耦合"></a>高耦合</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;高耦合将意味着您的模块对其他模块的内部运作了解太多。对其他模块了解太多的模块会使更改难以协调，并使模块能力变弱。如果模块A对模块B的了解过多，则对模块B内部的更改可能会破坏模块A的功能。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通过实现低耦合，可以轻松更改模块内部，不必担心它们对系统中其他模块的影响。低耦合还使我们的模块彼此之间不相互依赖，因此更易于设计，编写和测试代码。我们还获得了易于重用和可组合的模块的优势。问题也被隔离到小的，独立的代码单元中。</p><p><strong>好处:</strong></p><ul><li>可维护性: 更改限制在一个模块中</li><li>可测试性: 单元测试中涉及的模块可以限制在最低限度</li><li>可读性: 需要分析的类减少</li></ul><h4 id="高内聚"><a href="#高内聚" class="headerlink" title="高内聚"></a>高内聚</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内聚性通常是指模块的元素如何相互组合。相关代码应彼此接近，以使其具有高度的凝聚力。易于维护的代码通常具有很高的内聚性。模块中的元素与该模块要提供的功能直接相关。如果需要修改一个功能，最好是在一个地方进行修改，然后可以尽快的发布。如果很多不同的地方要进行修改，就有可能需要发布多个微服务才能交互这个功能。在很多地方进行修改，不仅修改速度很慢，同时部署多个微服务也提高了风险。所以在找到问题域的边界域后可以确保相关的行为能放在同一个地方，并且它们会和其它边界以尽量低耦合的形式进行通信。</p><p><strong>好处:</strong></p><ul><li>可读性: 功能包含在单个模块中</li><li>可维护性: 调试往往包含在单个模块中</li><li>可重用性: 具有集中功能不会被无用的干扰</li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;内聚性低意味着组成某些功能的代码会散布在您的整个代码库中。不仅很难发现与您的模块相关的代码，而且很难在不同的模块之间跳转并跟踪的所有代码。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通俗的来讲，内聚是从功能角度来度量模块内的联系，好的内聚模块应恰好做一件事。描述的是模块内的功能联系。耦合是软件结构中各模块之间相互连接的一种度量，耦合强弱取决于模块间接口的复杂程度、进入或访问一个模块点以及通过接口的数据。</p><h4 id="可维护的代码"><a href="#可维护的代码" class="headerlink" title="可维护的代码"></a>可维护的代码</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般在编写可维护的代码有助于提高开发人员的生产力。具有高度可维护的代码使设计新功能和编写代码变得更加容易。模块化，基于组件的分层代码可提高生产率并降低进行更改时的风险。通过使代码保持松散耦合，可以在一个模块内编写代码，而不会影响其他模块。通过保持代码的内聚性，我们可以更轻松地编写易于使用的DRY代码。</p><p><strong>问题</strong>: 当我们遇到问题时，请评估修复、修改程序的程度。是更改一个模块，还是更改分散在整个系统中？在进行更改时，它是否可以解决所有的问题，还是会产生其他一些不可预知的问题？</p><p>在编写和使用代码库时:</p><ul><li>我要修复和创建的此功能模块是多少？</li><li>此更改是要在几个不同的地方进行？</li><li>我能否独立测试代码，测试整个代码有多难？</li><li>我们是否可以使代码更松散地耦合来改善？可以使用高内聚来改善我们的代码吗？</li></ul><h3 id="Jenkins-设计"><a href="#Jenkins-设计" class="headerlink" title="Jenkins 设计"></a>Jenkins 设计</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有了上面的的理论与概念。根据这里理论和概念我们就可以设计出一套更好的devops流程。本文将kubernetes平台上来做这一套设计，并在实际的环境中应用。涉及的功能如下: 服务 Job、Code Job、Release、Notice四个功能任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每一个环境有错误，就会执行告警任务模块，告警目前使用的是<a href="https://github.com/xxlaila/jenkins-wechat-notice" target="_blank" rel="noopener">企业微信</a>。job之间需要传递JOB_NAME，env，version三个参数。在之前的devops设计里面整个job的调用设计还要多。形成了一个通用体系。在这个设计里面，当还需要增加一个任务流程，我们只需要修改pipeline，然后增加一个job，在下次构建的时候就会把我们新增加的流程给加进去，非常的方便。设计图如下：<br><img src="https://img.xxlaila.cn/1572081425995.jpg" alt="img"></p><h4 id="Project-Name"><a href="#Project-Name" class="headerlink" title="Project Name"></a>Project Name</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此job一般就是服务，job名称以服务的名称进行命名。里面包含了四个功能.</p><ul><li>Clone Code: clone 代码。</li><li>Build Code: 就是对开发提交的代码进行编译。</li><li>Env Version: 获取本次提交的hash，以hash为版本，结合环境来做一个版本记录，这里需要进行判断。uat/prod环境不需要env前缀。</li><li>Build Docker: 把编译完成后的二进制文件，打包成一个docker镜像。</li></ul><h4 id="Code-Test"><a href="#Code-Test" class="headerlink" title="Code Test"></a>Code Test</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;用于测试进行对代码的自动化测试；自动化流程、性能等测试</p><h4 id="Release"><a href="#Release" class="headerlink" title="Release"></a>Release</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;主要是进行发布服务。当接受到上游job传递来的参数信息后，结合参数信息来进行对应的发布到kubernetes中namespace中，主要包含了以下功能</p><ul><li>Push Docker: 把前面打包的docker镜像推送到harbor</li><li>Edit Files: 修改发布的脚本</li><li>Release: 执行<code>kubectl</code>进行发布<ul><li>当发布到kubernetes中，kubernetes 会执行<a href="https://xxlaila.github.io/2019/09/27/k8s-pod%E5%81%A5%E5%BA%B7%E6%A3%80%E6%B5%8B/" target="_blank" rel="noopener">health检测</a>，如果启动失败，会进行通知</li></ul></li></ul><h4 id="Notice"><a href="#Notice" class="headerlink" title="Notice"></a>Notice</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此job主要用于通知。当接受到规则的告警通知以后，就会进行触发通知相关的人员。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;前面的两篇文章介绍了pipeline的基本使用和一些实际使用的例子，看似很不错，但是在实际应用也会出现很多的不足和问题，随之系统的庞大、服务的增加、人员的参差不齐会导致很多的问题。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>pipeline多分支gitlab触发</title>
    <link href="https://www.xxlaila.cn/2019/10/25/pipeline%E5%A4%9A%E5%88%86%E6%94%AFgitlab%E8%A7%A6%E5%8F%91/"/>
    <id>https://www.xxlaila.cn/2019/10/25/pipeline多分支gitlab触发/</id>
    <published>2019-10-25T09:20:15.000Z</published>
    <updated>2019-10-28T08:42:04.528Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="enter password to read." />    <label for="hbePass">enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3bd4dd31bd16100ac8c8899e4a1d72657d4fe67887af2ad7256f6f8f0ba2076d"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇未公开文章。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>jenkins运维篇</title>
    <link href="https://www.xxlaila.cn/2019/10/22/jenkins%E8%BF%90%E7%BB%B4%E7%AF%87/"/>
    <id>https://www.xxlaila.cn/2019/10/22/jenkins运维篇/</id>
    <published>2019-10-22T01:22:52.000Z</published>
    <updated>2019-10-28T13:57:20.321Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="jenkins-可视化构建"><a href="#jenkins-可视化构建" class="headerlink" title="jenkins 可视化构建"></a>jenkins 可视化构建</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在之前遇到过开发提交代码后，完全不管提交的代码是否发布成功，及时后来加入了企业微信的告警机制，但是依然有人不会去关注这个。<a id="more"></a> 只有在测试人员在反馈xxx你的代码提交了没有，这时候研发人员才回去看，有时候一个触发构建失败了，摆在那里很久，如有下一个开发人员要对这个工程修改提交的时候发现过不了，这时候再来解决，成本就有点大。这里可以借助看板的形式让研发人员可以随时关注到自己的提交的工程，结合告警来做，效果还是不错的。</p><h4 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;安装Build Monitor View 插件，然后在主页面添加<code>+</code>一个视图<br><img src="https://img.xxlaila.cn/1571707794737.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以根据job的类型或者根据自己的条件进行<a href="https://xxlaila.github.io/2019/08/09/jenkins-job%E7%AE%A1%E7%90%86/" target="_blank" rel="noopener">过滤job</a>来生成看板。</p><ul><li>Build Monitor - View Settings: 根据job的一些状态来进行排序<br><img src="https://img.xxlaila.cn/1571708048469.jpg" alt="img"></li></ul><h3 id="jenkins-监控"><a href="#jenkins-监控" class="headerlink" title="jenkins 监控"></a>jenkins 监控</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;有时候我们没有监控，但是有时候需要看看jenkins的一些监控信息，如：内存、cpu、系统负债、http响应时间、系统进程数、线程数等，有懒得安装监控，这时候我们可以借助jenkins自带的一个插件<code>Monitoring</code>。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;插件安装完成后，我们可以在系统管理菜单下面看到<code>Monitoring of Jenkins master</code><br><img src="https://img.xxlaila.cn/1571708499625.jpg" alt="img"></p><p>点击进入以后我们可以看到<br><img src="https://img.xxlaila.cn/1571708561404.jpg" alt="img"><br>页面显示乱码，这个可以自己google解决</p><h3 id="Build-Trigger-Badge"><a href="#Build-Trigger-Badge" class="headerlink" title="Build Trigger Badge"></a>Build Trigger Badge</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此插件直接在构建历史记录中显示代表构建原因的图标。它可以让您快速知道是哪个原因触发了构建。如果没有此插件，您有时可能会想知道是什么触发了构建历史中显示的&gt;&gt;特定构建。要知道这一点，您必须单独打开每个链接，这可能很麻烦。<br><img src="https://img.xxlaila.cn/1572059619062.jpg" alt="img"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;jenkins-可视化构建&quot;&gt;&lt;a href=&quot;#jenkins-可视化构建&quot; class=&quot;headerlink&quot; title=&quot;jenkins 可视化构建&quot;&gt;&lt;/a&gt;jenkins 可视化构建&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在之前遇到过开发提交代码后，完全不管提交的代码是否发布成功，及时后来加入了企业微信的告警机制，但是依然有人不会去关注这个。
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>pipeline语法</title>
    <link href="https://www.xxlaila.cn/2019/10/21/pipeline%E8%AF%AD%E6%B3%95/"/>
    <id>https://www.xxlaila.cn/2019/10/21/pipeline语法/</id>
    <published>2019-10-21T07:26:19.000Z</published>
    <updated>2019-10-28T03:35:08.785Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:14 GMT+0800 (China Standard Time) --><h3 id="pipeline"><a href="#pipeline" class="headerlink" title="pipeline"></a>pipeline</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近在测试k8s上的ci/cd，之前的ci/cd其实也能满足目前先业务的需求，但是想尝试改进一下，优化以前的job，希望在登录ci的时候更加的简洁，<a id="more"></a> 而且查找job的时候，点击一个job就能查看完整的信息，不需要job之间的来回切换，等等各种理由，😁😁。这里使用jenkins pipeline，起初测试的时候使用pipeline，没问题以后，使用jenkinsfile。</p><h3 id="pipeline-常用介绍"><a href="#pipeline-常用介绍" class="headerlink" title="pipeline 常用介绍"></a>pipeline 常用介绍</h3><h4 id="清理历史build"><a href="#清理历史build" class="headerlink" title="清理历史build"></a>清理历史build</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;普通job的时候清理和保留历史job的build 很简单，勾勾就可以啦，但是pipeline就的使用一下方式，而且还的写在最前面，不然识别不了，会报错的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">options &#123;</span><br><span class="line">        buildDiscarder(logRotar(numToKeepStr: <span class="string">'8'</span>))</span><br><span class="line">        disableConcurrentBuilds()</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>buildDiscarder: 保持构建的最大个数</li><li>disableConcurrentBuilds: 禁止并发构建</li></ul><p>详细参数:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buildDiscarder(logRotator(numToKeepStr: <span class="string">'8'</span>, artifactNumToKeepStr: <span class="string">'8'</span>, daysToKeepStr: <span class="string">'8'</span>, artifactDaysToKeepStr: <span class="string">'7'</span>))</span><br></pre></td></tr></table></figure><ul><li>artifactDaysToKeepStr: 发布包保留天数</li><li>artifactNumToKeepStr: 发布包最大保留#个构建</li><li>daysToKeepStr: 保持构建的天数</li><li>numToKeepStr: 保持构建的最大个数</li></ul><h4 id="gitlab事件触发"><a href="#gitlab事件触发" class="headerlink" title="gitlab事件触发"></a>gitlab事件触发</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;之前的我们的ci/cd都是开发提交到某一个分支，然后jenkins会自动触发编译、发布，而且配置这个步骤也需要好几步才能实现，但在pipeline中也可以通过代码形式最这种触发器(勾子)进行配置。这样让每个项目都和jenkins进行耦合；运维人员只需要专注的维护Jenkinsfile，创建对应的项目即可。gitlab触发jenkins的构建需要依赖Gitlab插件。这里需要自行安装</p><ul><li><p>接受固定的分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">        gitlab(triggersOnPush: <span class="literal">true</span>,</span><br><span class="line">              triggersOnMergeRequest: <span class="literal">true</span>,</span><br><span class="line">              branchFilterType: <span class="string">"NameBasedFilter"</span>,</span><br><span class="line">              includeBranchesSpec: <span class="string">"dev,test,master"</span>,</span><br><span class="line">              secretToken: <span class="string">"<span class="variable">$&#123;env.git_token&#125;</span>"</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>triggerOnPush: 当Gitlab触发push事件时，是否执行构建</p></li><li><p>triggerOnMergeRequest: 当Gitlab触发mergeRequest事件时，是否执行构建</p></li><li><p>branchFilterType: 只有符合条件的分支才会触发构建，必选，否则无法实现触发。</p><ul><li>All: 所有分支</li><li>NameBasedFilter: 基于分支名进行过滤，多个分支名使用逗号分隔<ul><li>includeBranchesSpec: 基于branchFilterType值，输入期望包括的分支的规则</li><li>excludeBranchesSpec: 基于branchFilterType值，输入期望排除的分支的规则</li></ul></li><li>RegexBasedFilter: 基于正则表达式对分支名进行过滤<ul><li>sourceBranchRegex: 定义期望的通过正则表达式限制的分支规则</li></ul></li></ul></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;所以分支不阐述，其他的两个选项是最实用的，我们在正式使用的时候一定会用到这个，上面的例子是一个接受固定的几个分支</p><ul><li>匹配的方式<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">        gitlab(triggersOnPush: <span class="literal">true</span>,</span><br><span class="line">              triggersOnMergeRequest: <span class="literal">true</span>,</span><br><span class="line">              branchFilterType: <span class="string">"RegexBasedFilter"</span>,</span><br><span class="line">              sourceBranchRegex: <span class="string">"dev.*"</span>,</span><br><span class="line">              secretToken: <span class="string">"<span class="variable">$&#123;env.git_token&#125;</span>"</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里的git_token需要在jenkins的全局变量里面添加一个<code>Environment variables</code>对应的一个键值即可。</p><p><strong>注</strong>: 所有的触发器都需要先手动执行一次，让jenkins家在其中的配置，对应的指令才会生效。</p><ul><li><p>jenkins 验证<br><img src="https://img.xxlaila.cn/1571644117201.jpg" alt="img"></p></li><li><p>gitlab验证<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;需要将项目回调地址写入到Gitlab钩子当中才可以。经过测试一个pipeline的job可以管理多个分支的触发，避免之前的每一个分支的job进行触发。</p></li></ul><h4 id="parameters-模块"><a href="#parameters-模块" class="headerlink" title="parameters 模块"></a>parameters 模块</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该模块需要安装，parameters指令提供用户在触发Pipeline时应提供的参数列表。这些用户指定的参数的值通过该params对象可用于Pipeline步骤。研发经常会有打出一个特性分支，这个分支用于hotfix，这个时候就要给研发提交一个可以选择的分支，然他们去部署到对应的环境。</p><ul><li><p>字符串参数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;定义一个字符串参数，用户可以在Jenkins UI上输入字符串，常见使用这个参数的场景有，用户名，收件人邮箱，文件网络路径，主机名称的或者url等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    string(name: <span class="string">'DEPLOY_ENV'</span>, defaultValue: <span class="string">'staging'</span>, description: <span class="string">''</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>布尔值参数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;定义一个布尔类型参数，用户可以在Jenkins UI上选择是还是否，选择是表示代码会执行这部分，如果选择否，会跳过这部分。一般需要使用布尔值的场景有，执行一些特定集成的脚本或则工作，或者事后清除环境，例如清楚Jenkins的workspace这样的动作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    booleanParam(name: <span class="string">'DEBUG_BUILD'</span>, defaultValue: <span class="literal">true</span>, description: <span class="string">''</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>选择参数<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;选择（choice）的参数就是支持用户从多个选择项中，选择一个值用来表示这个变量的值。工作中常用的场景，有选择服务器类型，选择版本号等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    choice(name: <span class="string">'ENV_TYPE'</span>, choices: [<span class="string">'dev'</span>, <span class="string">'test'</span>, <span class="string">'product'</span>], description: <span class="string">'dev env test'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当然parameters模块我们用的最多的是在手动的时候我们可以手动点击进行构建部署，至于其他的目前我暂时未用到</p><ul><li>选择分支部署<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent &#123;label <span class="string">'agent-node'</span>&#125;</span><br><span class="line">    parameters &#123;</span><br><span class="line">        gitParameter branchFilter: <span class="string">'origin/(.*)'</span>, defaultValue: <span class="string">'dev'</span>, name: <span class="string">'BRANCH'</span>, <span class="built_in">type</span>: <span class="string">'PT_BRANCH'</span></span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">'gitlib code'</span>) &#123;</span><br><span class="line">            steps&#123;</span><br><span class="line">                git branch:<span class="string">"<span class="variable">$&#123;params.BRANCH&#125;</span>"</span>, credentialsId:<span class="string">'gitlabUser'</span>, url: <span class="string">"http://gitlab.xxlaila.cn/xxx/kxl-eureka.git"</span></span><br><span class="line">                script &#123;</span><br><span class="line">                    build_tag = sh(returnStdout: <span class="literal">true</span>, script: <span class="string">'git rev-parse --short HEAD'</span>).trim()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>parameters<a href="https://wiki.jenkins.io/display/JENKINS/Git+Parameter+Plugin" target="_blank" rel="noopener">官方参考</a>，介绍得挺详细的，<a href="https://mohamicorp.atlassian.net/wiki/spaces/DOC/pages/136740885/Triggering+Jenkins+Based+on+New+Tags" target="_blank" rel="noopener">辅助参考</a><br><img src="https://img.xxlaila.cn/1571651950634.jpg" alt="img"></p><ul><li>还可以写成<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">parameters &#123;</span><br><span class="line">    gitParameter(</span><br><span class="line">        branch: <span class="string">''</span>,</span><br><span class="line">        branchFilter: <span class="string">'origin/(.*)'</span>,</span><br><span class="line">        defaultValue: <span class="string">'dev'</span>,</span><br><span class="line">        description: <span class="string">'test code'</span>,</span><br><span class="line">        name: <span class="string">'BRANCH'</span>,</span><br><span class="line">        quickFilterEnabled: <span class="literal">false</span>,</span><br><span class="line">        selectedValue: <span class="string">'NONE'</span>,</span><br><span class="line">        sortMode: <span class="string">'NONE'</span>,</span><br><span class="line">        tagFilter: <span class="string">'*'</span>,</span><br><span class="line">        <span class="built_in">type</span>: <span class="string">'PT_BRANCH'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里有一个问题：当这里设置了可以选择分支的时候，然后在之前的自动触发就会有问题，就是在去分支拉去代码的时候就一只是dev分支，而不是其他的分支，这里仍然在探索的测试中。<br>编辑job可以看到<br><img src="https://img.xxlaila.cn/1571903055002.jpg" alt="img"></p><h3 id="多分支pipeline"><a href="#多分支pipeline" class="headerlink" title="多分支pipeline"></a>多分支pipeline</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;按照上面的又要支持用户可以选择分支，又要适合自动触发功能。用单分支pipeline来管理项目，又要回到我们最初的模式，而在实际过程中，我们可以用到多分支同时进行开发。这样就满足了我们的实际需求。多分支任务这里不做过多的详细介绍，这里阐述两个功能点；分别是分支的扫描策略和孤儿项策略(Orphaned Item)。</p><h4 id="分支的扫描策略"><a href="#分支的扫描策略" class="headerlink" title="分支的扫描策略"></a>分支的扫描策略</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分支扫描是jenkins根据一定的策略去代码仓库扫描分支，如果有新分支就创建一个以新分支命名的任务，如果发现分支被删除，就删除对应的jenkins任务。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在”扫描多分支流水线触发器(Scan Multibranch Pipeline Triggers)”下有一个: Periodically if not otherwise run（没有手动触发，就定期扫描分支）。选择此项，设置一个扫描间隔时长。可以根据项目分支的频繁程度设置周期的长短，也可以在任务页面手动触发jenkins进行扫描。<br><img src="https://img.xxlaila.cn/1571973819297.jpg" alt="img"></p><h4 id="孤儿项策略-Orphaned-Item"><a href="#孤儿项策略-Orphaned-Item" class="headerlink" title="孤儿项策略(Orphaned Item)"></a>孤儿项策略(Orphaned Item)</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;该功能是在代码仓库中删除了release分支，那么在多任务页面上，该分支在jenkins上的任务也应该对应删除。什么时候删除，取决于下次分支扫描时间。如果代码仓库中的分支被删除，而jenkins上响应的任务没有被删除，那么这个任务就是所说的孤儿任务。对于分支任务的历史记录，保存多长时间设置</p><ul><li><p>界面配置<br><img src="https://img.xxlaila.cn/1571974190710.jpg" alt="img"></p></li><li><p>pipeline 写法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">orphanedItemStrategy &#123;</span><br><span class="line">    discardolditems &#123;</span><br><span class="line">        daysTokeep(10)</span><br><span class="line">        numToKeep(5)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>注</strong>: 这里孤儿策略pipeline 需要另外一种方式来支持，<a href="https://gitee.com/jenkins-zh/gitlab-branch-source-plugin" target="_blank" rel="noopener">Setting up GitLab Server Configuration on Jenkins</a>，这里没有用到这个，不做过多的阐述。<a href="https://github.com/jenkinsci/job-dsl-plugin/wiki/Migration" target="_blank" rel="noopener">github参考</a></p><h3 id="多分支的自动触发"><a href="#多分支的自动触发" class="headerlink" title="多分支的自动触发"></a>多分支的自动触发</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;分支的触好处是多多的，自然在多分支面前自动触发肯定也少不了。多分支的触发有两种模式，分别是前面提到的Gitlab trigger和Generic Webhook Trigger。下面分别对两种模式进行阐述和实际的测试</p><h4 id="Generic-Webhook-Trigger"><a href="#Generic-Webhook-Trigger" class="headerlink" title="Generic Webhook Trigger"></a>Generic Webhook Trigger</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generic Webhook Trigger 插件需要提前安装，GenericTrigger触发条件是由GWT插件提供，GenericTrigger触发的条件分为5个部分。<a href="https://wiki.jenkins.io/display/JENKINS/Generic+Webhook+Trigger+Plugin" target="_blank" rel="noopener">GenericTrigger官方参考</a></p><ul><li>从HTTP POST请求中提取参数</li><li>token，GWT插件用于标识jenkins项目的唯一性</li><li>根据请求参数值判断是否触发Jenkins项目执行</li><li>日志控制打印</li><li>webhook响应控制</li></ul><h4 id="GerenericTrigger-的写法"><a href="#GerenericTrigger-的写法" class="headerlink" title="GerenericTrigger 的写法"></a>GerenericTrigger 的写法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">    GenericTrigger(</span><br><span class="line">        genericVariables:[</span><br><span class="line">            [key: <span class="string">'ref'</span>, value: <span class="string">'$.ref'</span>]</span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        token: env.JOB_NAME,</span><br><span class="line">        regexpFilterText: <span class="string">'$ref'</span>,</span><br><span class="line">        regexpFilterExpression: <span class="string">'refs/heads/'</span> + env.BRANCH_NAME</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;env.BRANCH_NAME 这里指的是分支名。当然这样修改以后是不行的，是达不到自动触发的，需要自行去gitlab上添加钩子，这里经过测试流程：用户修改dev分支，push到gitlab dev分支可以触发任务的dev分支自动构建；合并到test分支，也可以触发test分支自动构建；在合并到master分支也能自动触发任务的master分支自动构建。<br><img src="https://img.xxlaila.cn/1571984557618.jpg" alt="img"></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我们要实现这块，要理解知道这个东西，首先要知道gitlab push 数据的格式，知道了gitlab push格式，我们才知道应该怎么操作，<a href="https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#webhooks" target="_blank" rel="noopener">gitlab push数据的格式参考</a>，</p><ul><li>参考<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"object_kind"</span>: <span class="string">"push"</span>,</span><br><span class="line">  <span class="string">"before"</span>: <span class="string">"95790bf891e76fee5e1747ab589903a6a1f80f22"</span>,</span><br><span class="line">  <span class="string">"after"</span>: <span class="string">"da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">  <span class="string">"ref"</span>: <span class="string">"refs/heads/master"</span>,</span><br><span class="line">  <span class="string">"checkout_sha"</span>: <span class="string">"da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">  <span class="string">"user_id"</span>: 4,</span><br><span class="line">  <span class="string">"user_name"</span>: <span class="string">"John Smith"</span>,</span><br><span class="line">  <span class="string">"user_username"</span>: <span class="string">"jsmith"</span>,</span><br><span class="line">  <span class="string">"user_email"</span>: <span class="string">"john@example.com"</span>,</span><br><span class="line">  <span class="string">"user_avatar"</span>: <span class="string">"https://s.gravatar.com/avatar/d4c74594d841139328695756648b6bd6?s=8://s.gravatar.com/avatar/d4c74594d841139328695756648b6bd6?s=80"</span>,</span><br><span class="line">  <span class="string">"project_id"</span>: 15,</span><br><span class="line">  <span class="string">"project"</span>:&#123;</span><br><span class="line">    <span class="string">"id"</span>: 15,</span><br><span class="line">    <span class="string">"name"</span>:<span class="string">"Diaspora"</span>,</span><br><span class="line">    <span class="string">"description"</span>:<span class="string">""</span>,</span><br><span class="line">    <span class="string">"web_url"</span>:<span class="string">"http://example.com/mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"avatar_url"</span>:null,</span><br><span class="line">    <span class="string">"git_ssh_url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"git_http_url"</span>:<span class="string">"http://example.com/mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"namespace"</span>:<span class="string">"Mike"</span>,</span><br><span class="line">    <span class="string">"visibility_level"</span>:0,</span><br><span class="line">    <span class="string">"path_with_namespace"</span>:<span class="string">"mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"default_branch"</span>:<span class="string">"master"</span>,</span><br><span class="line">    <span class="string">"homepage"</span>:<span class="string">"http://example.com/mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"ssh_url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"http_url"</span>:<span class="string">"http://example.com/mike/diaspora.git"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"repository"</span>:&#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"Diaspora"</span>,</span><br><span class="line">    <span class="string">"url"</span>: <span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"homepage"</span>: <span class="string">"http://example.com/mike/diaspora"</span>,</span><br><span class="line">    <span class="string">"git_http_url"</span>:<span class="string">"http://example.com/mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"git_ssh_url"</span>:<span class="string">"git@example.com:mike/diaspora.git"</span>,</span><br><span class="line">    <span class="string">"visibility_level"</span>:0</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"commits"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"id"</span>: <span class="string">"b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327"</span>,</span><br><span class="line">      <span class="string">"message"</span>: <span class="string">"Update Catalan translation to e38cb41."</span>,</span><br><span class="line">      <span class="string">"timestamp"</span>: <span class="string">"2011-12-12T14:27:31+02:00"</span>,</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"http://example.com/mike/diaspora/commit/b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327"</span>,</span><br><span class="line">      <span class="string">"author"</span>: &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"Jordi Mallach"</span>,</span><br><span class="line">        <span class="string">"email"</span>: <span class="string">"jordi@softcatala.org"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"added"</span>: [<span class="string">"CHANGELOG"</span>],</span><br><span class="line">      <span class="string">"modified"</span>: [<span class="string">"app/controller/application.rb"</span>],</span><br><span class="line">      <span class="string">"removed"</span>: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"id"</span>: <span class="string">"da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">      <span class="string">"message"</span>: <span class="string">"fixed readme"</span>,</span><br><span class="line">      <span class="string">"timestamp"</span>: <span class="string">"2012-01-03T23:36:29+02:00"</span>,</span><br><span class="line">      <span class="string">"url"</span>: <span class="string">"http://example.com/mike/diaspora/commit/da1560886d4f094c3e6c9ef40349f7d38b5d27d7"</span>,</span><br><span class="line">      <span class="string">"author"</span>: &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"GitLab dev user"</span>,</span><br><span class="line">        <span class="string">"email"</span>: <span class="string">"gitlabdev@dv6700.(none)"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"added"</span>: [<span class="string">"CHANGELOG"</span>],</span><br><span class="line">      <span class="string">"modified"</span>: [<span class="string">"app/controller/application.rb"</span>],</span><br><span class="line">      <span class="string">"removed"</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"total_commits_count"</span>: 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;如果我们想根据不同的分支提交来触发jenkins的构建，那就应该知道post数据哪一个属性代表了不同的分支，我们可以在第四行看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"ref"</span>: <span class="string">"refs/heads/master"</span>,</span><br></pre></td></tr></table></figure><p><strong>注释</strong>: 也可以通过IDEA工具提交的时候看到提交的选项。可以看到我们用ref可以很好的区分不同分支，这里就是为什么要填写ref的原因。我们可以通过pipeline代码的生成器来生成</p><ul><li>pipeline 代码生成器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">  GenericTrigger causeString: <span class="string">'Generic Cause'</span>, genericVariables: [[defaultValue: <span class="string">''</span>, key: <span class="string">'ref'</span>, regexpFilter: <span class="string">''</span>, value: <span class="string">'$.ref'</span>]], printContributedVariables: <span class="literal">true</span>, printPostContent: <span class="literal">true</span>, regexpFilterExpression: <span class="string">'\'</span>refs/heads/\<span class="string">' + evn.BRANCH_NAME'</span>, regexpFilterText: <span class="string">'$ref'</span>, token: <span class="string">'env.JOB_NAME'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img.xxlaila.cn/1571982583457.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571982622070.jpg" alt="img"></p><p><strong>注</strong>: token参数的作用是标识一个pipeline在jenkins中的唯一性，这个参数的重要性就得提起GWT插件的原理。当jenkins收到generic-webhook-trgger/invoke接口的请求时，会将请求代理给GWT插件处理，GWT插件内容会从jenkins实例对象中取出所有的参数化jenkins项目，包括pipeline，然后进行遍历。如果我们在参数化项目中Generic Trigger配置token的值与webhook请求时的token一致，就会触发改项目。如果多个参数化项目的token一样，则都会进行触发，所以这里的token最好时JOB_NAME项目名，因为这个是在项目或者是在为服务领域他都是唯一的。</p><ul><li>参数介绍:<ul><li>regexpFilterText: 需要进行匹配的key，例子中，使用从post body中提取的ref变量值。</li><li>regexpFilterExpression: <a href="https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html" target="_blank" rel="noopener">正则表达式</a>；如果regexpFilterText参数符合regexpFilterExpression参数的正则表达式，则触发执行。</li><li>printPostContent: 布尔值，将webhook请求信息打印到日志上</li><li>printContributedVariables: 布尔值，将提取后的变量名及变量值打印出来</li><li>causeString: 字符串型，触发原因，可以直接应用提取后的变量，如 causeString: ‘Triggered on $msg’</li><li>Silent response: 布尔型，在正常情况下，当webhook请求成功后，GWT插件会返回HTTP 200状态码和触发结果给对方调用，但是当Silentresponse设置为true时，就只返回HTTP 200状态码，不反悔触发结果</li></ul></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上面的看的出来，我们只要是提交了分支都可以进行触发构建，但是呢，在实际生产中，我们定义了dev——&gt;test——master 分支，就是只想要这几个进行触发构建，其他的不进行触发，让开发自己去点击。</p><ul><li><p>指定分支构建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">triggers &#123;</span><br><span class="line">  GenericTrigger causeString: <span class="string">'Triggered on $msg'</span>, genericVariables: [[defaultValue: <span class="string">''</span>, key: <span class="string">'ref'</span>, regexpFilter: <span class="string">''</span>, value: <span class="string">'$.ref'</span>]], printContributedVariables: <span class="literal">true</span>, printPostContent: <span class="literal">true</span>, regexpFilterExpression: <span class="string">'\'</span>refs/heads/(dev|<span class="built_in">test</span>|master)\<span class="string">''</span>, regexpFilterText: <span class="string">'$ref'</span>, token: <span class="string">'env.JOB_NAME'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>多分支Gitlab trigger<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;多分支的Gitlab trigger和我们前面介绍的gitlab事件触发一样的，没有任何区别，这里我测试了一个job，没有任何问题。同时新建了一个分支，jenkins会自动的扫描新建一个以分支为名的任务，进行自动触发。当我删除了某一个分支，就会触发自动扫描，然后查看分支为删除。</p></li><li><p>删除分支<br><img src="https://img.xxlaila.cn/1571996378764.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571996257688.jpg" alt="img"></p></li><li><p>整体效果图<br><img src="https://img.xxlaila.cn/1571990331005.jpg" alt="img"></p></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里介绍一下部署这块，根据branch来进行判断，不同的branch部署到不同的环境，当设定的值不在branch范围内，就需要人为的制定部署环境。当人员三分钟内没有来进行环境部署的选择，系统就会断开，对该分支标记为结束。</p><p><a href="http://xxlaila.github.io/2019/10/25/pipeline%E5%A4%9A%E5%88%86%E6%94%AFgitlab%E8%A7%A6%E5%8F%91/" target="_blank" rel="noopener">完整文件</a><br><a href="https://jenkinsci.github.io/job-dsl-plugin/#path/buildPipelineView" target="_blank" rel="noopener">推荐学习参考地址</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:14 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;pipeline&quot;&gt;&lt;a href=&quot;#pipeline&quot; class=&quot;headerlink&quot; title=&quot;pipeline&quot;&gt;&lt;/a&gt;pipeline&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最近在测试k8s上的ci/cd，之前的ci/cd其实也能满足目前先业务的需求，但是想尝试改进一下，优化以前的job，希望在登录ci的时候更加的简洁，
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="pipeline" scheme="https://www.xxlaila.cn/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>elasticserch</title>
    <link href="https://www.xxlaila.cn/2019/10/17/elasticserch%E6%97%A5%E5%B8%B8%E7%BB%B4%E6%8A%A4/"/>
    <id>https://www.xxlaila.cn/2019/10/17/elasticserch日常维护/</id>
    <published>2019-10-17T03:23:17.000Z</published>
    <updated>2019-10-26T01:31:46.569Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="days-1"><a href="#days-1" class="headerlink" title="days 1"></a>days 1</h3><a id="more"></a><h4 id="elasticserch-索引和数据操作"><a href="#elasticserch-索引和数据操作" class="headerlink" title="elasticserch 索引和数据操作"></a>elasticserch 索引和数据操作</h4><ul><li><p>查看索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET 'http://127.0.0.1:9200/_cat/indices?v'</span></span><br></pre></td></tr></table></figure></li><li><p>删除索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET 'http://127.0.0.1:9200/_cat/indices?v' |grep "red"|awk '&#123;print $3&#125;'|uniq &gt;l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in `cat a`;do  curl -XDELETE http://127.0.0.1:9200/$&#123;i&#125;;done</span></span><br></pre></td></tr></table></figure></li><li><p>查看shards</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET http://127.0.0.1:9200/_cat/shards</span></span><br></pre></td></tr></table></figure></li></ul><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shards 有几种类型，这里说一下<code>UNASSIGNED</code>，es 集群里面的分片是分配在多台node上的，为的就是高可用，比如你的某台机器crash了，那么集群就会让其他副本顶上来，避免出现某个分片不能提供服务的情况，但是难免还是会出现 UNASSIGNED shards 的错误。</p><ul><li>删除shards UNASSIGNED<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># curl -XGET 'http://127.0.0.1:9200/_cat/shards'|grep "UNASSIGNED"|awk '&#123;print $1&#125;'|uniq &gt;l</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in `cat l`;do curl -XDELETE http://127.0.0.1:9200/$i;done</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="elasticserch验证集群"><a href="#elasticserch验证集群" class="headerlink" title="elasticserch验证集群"></a>elasticserch验证集群</h4><ul><li><p>集群相关API</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat</span><br><span class="line">=^.^=</span><br><span class="line">/_cat/allocation</span><br><span class="line">/_cat/shards</span><br><span class="line">/_cat/shards/&#123;index&#125;</span><br><span class="line">/_cat/master</span><br><span class="line">/_cat/nodes</span><br><span class="line">/_cat/tasks</span><br><span class="line">/_cat/indices</span><br><span class="line">/_cat/indices/&#123;index&#125;</span><br><span class="line">/_cat/segments</span><br><span class="line">/_cat/segments/&#123;index&#125;</span><br><span class="line">/_cat/count</span><br><span class="line">/_cat/count/&#123;index&#125;</span><br><span class="line">/_cat/recovery</span><br><span class="line">/_cat/recovery/&#123;index&#125;</span><br><span class="line">/_cat/health</span><br><span class="line">/_cat/pending_tasks</span><br><span class="line">/_cat/aliases</span><br><span class="line">/_cat/aliases/&#123;<span class="built_in">alias</span>&#125;</span><br><span class="line">/_cat/thread_pool</span><br><span class="line">/_cat/thread_pool/&#123;thread_pools&#125;</span><br><span class="line">/_cat/plugins</span><br><span class="line">/_cat/fielddata</span><br><span class="line">/_cat/fielddata/&#123;fields&#125;</span><br><span class="line">/_cat/nodeattrs</span><br><span class="line">/_cat/repositories</span><br><span class="line">/_cat/snapshots/&#123;repository&#125;</span><br><span class="line">/_cat/templates</span><br></pre></td></tr></table></figure></li><li><p>查看集群名称等信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"elk_elasticsearch_data_2"</span>,</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elk_elasticsearch"</span>,</span><br><span class="line">  <span class="string">"cluster_uuid"</span> : <span class="string">"T47wQwa6TT-6MHJVFM40Tw"</span>,</span><br><span class="line">  <span class="string">"version"</span> : &#123;</span><br><span class="line">    <span class="string">"number"</span> : <span class="string">"6.4.0"</span>,</span><br><span class="line">    <span class="string">"build_flavor"</span> : <span class="string">"default"</span>,</span><br><span class="line">    <span class="string">"build_type"</span> : <span class="string">"rpm"</span>,</span><br><span class="line">    <span class="string">"build_hash"</span> : <span class="string">"595516e"</span>,</span><br><span class="line">    <span class="string">"build_date"</span> : <span class="string">"2018-08-17T23:18:47.308994Z"</span>,</span><br><span class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"lucene_version"</span> : <span class="string">"7.4.0"</span>,</span><br><span class="line">    <span class="string">"minimum_wire_compatibility_version"</span> : <span class="string">"5.6.0"</span>,</span><br><span class="line">    <span class="string">"minimum_index_compatibility_version"</span> : <span class="string">"5.0.0"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>查看集群节点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/nodes?v</span><br><span class="line">ip            heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name</span><br><span class="line">172.21.16.198           29          85   0    0.10    0.04     0.05 mdi       -      elk_elasticsearch_data_2</span><br><span class="line">172.21.16.187           48          85   0    0.00    0.01     0.05 mdi       *      elk_elasticsearch_master</span><br><span class="line">172.21.16.206           25          86   0    0.08    0.03     0.05 mdi       -      elk_elasticsearch_data_3</span><br></pre></td></tr></table></figure></li><li><p>验证集群磁盘分配情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/allocation?v</span><br><span class="line">shards disk.indices disk.used disk.avail disk.total disk.percent host          ip            node</span><br><span class="line">    98          1gb     3.6gb     96.3gb     99.9gb            3 172.21.16.198 172.21.16.198 elk_elasticsearch_data_2</span><br><span class="line">    99      887.1mb     4.5gb     95.4gb     99.9gb            4 172.21.16.187 172.21.16.187 elk_elasticsearch_master</span><br><span class="line">    99        957mb     3.5gb     96.4gb     99.9gb            3 172.21.16.206 172.21.16.206 elk_elasticsearch_data_3</span><br></pre></td></tr></table></figure></li><li><p>验证集群健康状况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/health?v </span><br><span class="line">epoch      timestamp cluster           status node.total node.data shards pri relo init unassign pending_tasks max_task_wait_time active_shards_percent</span><br><span class="line">1571648406 17:00:06  elk_elasticsearch green           3         3    296 148    0    0        0             0                  -                100.0%</span><br><span class="line"></span><br><span class="line">$</span><br></pre></td></tr></table></figure></li><li><p>查看每个数据节点上被fielddata所使用的堆内存大小。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ curl http://127.0.0.1:9200/_cat/fielddata?v</span><br><span class="line">id                     host          ip            node                     field                    size</span><br><span class="line">VNcRqM30T3axzVjiPkDTmA 172.21.16.187 172.21.16.187 elk_elasticsearch_master event.resultCode.keyword 352b</span><br><span class="line">VNcRqM30T3axzVjiPkDTmA 172.21.16.187 172.21.16.187 elk_elasticsearch_master <span class="built_in">type</span>                     720b</span><br><span class="line">HNc5BrMWQcummBeAskQc4A 172.21.16.206 172.21.16.206 elk_elasticsearch_data_3 event.resultCode.keyword 704b</span><br><span class="line">z3zUA8KxTH6B7C8CmVRUIQ 172.21.16.198 172.21.16.198 elk_elasticsearch_data_2 <span class="built_in">type</span>                     720b</span><br><span class="line">z3zUA8KxTH6B7C8CmVRUIQ 172.21.16.198 172.21.16.198 elk_elasticsearch_data_2 event.resultCode.keyword 704b</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;days-1&quot;&gt;&lt;a href=&quot;#days-1&quot; class=&quot;headerlink&quot; title=&quot;days 1&quot;&gt;&lt;/a&gt;days 1&lt;/h3&gt;
    
    </summary>
    
      <category term="elasticserch" scheme="https://www.xxlaila.cn/categories/elasticserch/"/>
    
    
      <category term="elasticserch" scheme="https://www.xxlaila.cn/tags/elasticserch/"/>
    
  </entry>
  
  <entry>
    <title>nexus配置ldap</title>
    <link href="https://www.xxlaila.cn/2019/10/15/nexus%E9%85%8D%E7%BD%AEldap/"/>
    <id>https://www.xxlaila.cn/2019/10/15/nexus配置ldap/</id>
    <published>2019-10-15T09:28:34.000Z</published>
    <updated>2019-10-29T01:44:21.623Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="配置nexus"><a href="#配置nexus" class="headerlink" title="配置nexus"></a>配置nexus</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录nexus在设置页，点击ldap，</p><a id="more"></a><p><img src="https://img.xxlaila.cn/1571131890608.jpg" alt="img"><br>参数介绍:</p><ul><li>Name: 随便写</li><li>LDAP server address: 支持ldaps和ldap,而端口则取决于配置。 如果没有特殊配置，ldap默认端口是389</li><li>Search base: 只需要填DC即可，比如DC=example,DC=com。 其它内容，比如CN、OU等，不需要填写</li><li>Authentication method有以下选项:<ul><li>Simple Authentication</li><li>Anonymous Authentication</li><li>DIGEST-MD5</li><li>CRAM-MD5<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;通常选择Simple Authentication即可。Username or DN、Password里填写账户、密码，而 Connection rules无需修改。填写完毕后，点击【Verify connection】按钮，可以验证信息。 如果成功，即可保存。</li></ul></li></ul><h4 id="Choose-Users-and-Groups"><a href="#Choose-Users-and-Groups" class="headerlink" title="Choose Users and Groups"></a>Choose Users and Groups</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这项故名思义就是配置用户和组的，在最开头的Configuration template中，有四种模板可选：</p><ul><li>Active Directory</li><li>Generic Ldap Server</li><li>Posix with Dynamic Groups</li><li>Posix with Static Groups</li></ul><p>这里选择<code>Generic Ldap Server</code></p><ul><li>Base DN 在LDAP中找到用户的基本位置。这是相对于搜索基础的（例如ou = people）。</li><li>User subtree通常需要勾选。 如果把LDAP的Tree比作目录的话，勾选以后相当于递归查找子目录。</li><li>User filter通过过滤规则，减少搜索信息，用于提升性能。 仅仅只是提升性能，所以，如果不懂它特殊的匹配规则，也可以不填。</li><li>之前选择了<code>Generic Ldap Server</code>模版后，User ID attribute默认为uid，Real name attribute默认为cn、Email attribute默认为mail、Password attribute为空。</li><li>Map LDAP groups as roles如果不勾选，就不会同步用户组信息。 如果勾选，则可以选择Group type和Group member of attribute。 若无必要，保持默认即可，默认是勾选的。<br><img src="https://img.xxlaila.cn/1571133103461.jpg" alt="img"></li><li>填写完成后，通过【Verify user mapping】可以验证查询结果<br><img src="https://img.xxlaila.cn/1571133221971.jpg" alt="img"><br>点击创建<br><img src="https://img.xxlaila.cn/1571133286829.jpg" alt="img"></li></ul><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;新起一个窗口利用ldap里面的账号进行登录，可以登录，没有问题，但是登录之后用户没有任何权限，这对于研发来说又是一个不可接受的事情。接下来配置权限</p><h5 id="禁止匿名访问"><a href="#禁止匿名访问" class="headerlink" title="禁止匿名访问"></a>禁止匿名访问</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在实际应用中，是不允许匿名用户不可以登录就能访问的，这样我们ldap就没有任何意义了<br><img src="https://img.xxlaila.cn/1571133691247.jpg" alt="img"></p><ul><li>禁止匿名用户<br><img src="https://img.xxlaila.cn/1571133811908.jpg" alt="img"></li></ul><h5 id="创建角色"><a href="#创建角色" class="headerlink" title="创建角色"></a>创建角色</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Security——&gt;Roles——&gt;Create role，这里创建角色有两种。一种是nexus relos本地角色，一种是External roles mapping外部映射的形式。为了满足我们ldap账户登录进来有浏览库的权限，研发又可以上传第三方依赖库的权限，但是不能删除和私下增加库Repositories。所以这里我们需要单独建立一个本地的relos，然后在映射外部的ldap到这个本地的roles，这样ldap账户登录进来就能实现日常的基本操作。</p><ul><li><p>创建nexus relos本地角色<br><img src="https://img.xxlaila.cn/1571296771150.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创建完成后，我们需要对他赋予权限，对用户进行权限控制，没有权限控制，就没办法达成我们上面的目标。下面是我赋予的权限，可以结合实际需求来进行赋予。</p></li><li><p>权限介绍:</p><ul><li>ng-component-upload: 有上传的权限，比如java依赖的一些第三方库，研发可以自己进行上传</li><li>ng-repository-admin-<em>-</em>-browse: 浏览所有的repository</li><li>ng-repository-admin-<em>-</em>-read: 可以所有读取repository的配置信息</li><li>ng-repository-view-maven2-maven-central-browse: 具有浏览maven-central内容</li><li>ng-repository-view-maven2-maven-central-read: 读取maven-central内容，在maven编译的时候具有下载的权限，(后面不一一介绍)</li><li>ng-repository-view-maven2-maven-public-browse</li><li>ng-repository-view-maven2-maven-public-read</li><li>ng-repository-view-maven2-maven-releases-browse</li><li>ng-repository-view-maven2-maven-releases-read</li><li>ng-repository-view-maven2-maven-snapshots-browse</li><li>ng-repository-view-maven2-maven-snapshots-read</li><li>ng-repository-view-npm-npm-kxl-all-browse: 以下是自己做的npm代理缓存，可以参考之前的<a href="https://xxlaila.github.io/2019/08/23/nexus3搭建npm私服/" target="_blank" rel="noopener">nexus3搭建npm私服</a></li><li>ng-repository-view-npm-npm-kxl-all-read</li><li>ng-repository-view-npm-npm-external-browse</li><li>ng-repository-view-npm-npm-external-read</li><li>ng-repository-view-npm-npm-internal-browse</li><li>ng-repository-view-npm-npm-internal-read</li><li>ng-search-read: 让用户具有所有权限，没有此权限，研发查找一个包，估计会死</li></ul></li><li><p>创建是External roles mapping外部映射<br><img src="https://img.xxlaila.cn/1571134166780.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571297568491.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在进行Roles ID 这栏目，需要填写的是Users，这个Users会在ldap上同步Users的一个用户组。根据自己的ldap账户组设置来进行填写。下图是ldap的组设置<br><img src="https://img.xxlaila.cn/1571298567078.jpg" alt="img"></p></li></ul><p><strong>注</strong>: 其实在这里我们也可以进行Privileges的权限赋予，但是我选择的是先创建一个本地的nexus relos。然后我们在Roles栏关联之前创建的<code>Developer</code>，完成以后通过ldap账户登录进行测试</p><h5 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这里主要是从四个方面来测试ldap账户。分别是: 登录默认的权限、浏览所有库的权限、Browse的浏览、Browse库的上传</p><ul><li><p>登录默认的权限<br><img src="https://img.xxlaila.cn/1571297962563.jpg" alt="img"></p></li><li><p>浏览所有库的权限<br><img src="https://img.xxlaila.cn/1571298121188.jpg" alt="img"></p></li><li><p>Browse的浏<br><img src="https://img.xxlaila.cn/1571298018356.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571298167348.jpg" alt="img"></p></li><li><p>Browse库的上传<br><img src="https://img.xxlaila.cn/1571298224331.jpg" alt="img"><br><img src="https://img.xxlaila.cn/1571298260091.jpg" alt="img"></p></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;配置nexus&quot;&gt;&lt;a href=&quot;#配置nexus&quot; class=&quot;headerlink&quot; title=&quot;配置nexus&quot;&gt;&lt;/a&gt;配置nexus&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;登录nexus在设置页，点击ldap，&lt;/p&gt;
    
    </summary>
    
      <category term="nexus" scheme="https://www.xxlaila.cn/categories/nexus/"/>
    
    
      <category term="ldap" scheme="https://www.xxlaila.cn/tags/ldap/"/>
    
  </entry>
  
  <entry>
    <title>jenkins配置备份</title>
    <link href="https://www.xxlaila.cn/2019/10/15/jenkins%E9%85%8D%E7%BD%AE%E5%A4%87%E4%BB%BD/"/>
    <id>https://www.xxlaila.cn/2019/10/15/jenkins配置备份/</id>
    <published>2019-10-15T00:55:19.000Z</published>
    <updated>2019-10-28T03:36:02.239Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --><h3 id="jenkins-备份"><a href="#jenkins-备份" class="headerlink" title="jenkins 备份"></a>jenkins 备份</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当jenkins在用起来的时候，我们难保他不会出故障，但是出了故障我们怎么做到快速的恢复呢，这时备份就显得尤为重要了。但jenkins本身不提供备份的功能，<a id="more"></a> 所以这里就需要借助外力。备份可以多样化，一种是我们直接到jenkins的目录下面手动备份jenkins目录。一种是我们就jenkins自带的插件<code>thinBackup</code>和<code>Periodic Backup</code>进行备份恢复，下面进行分别介绍</p><h3 id="thinBackup备份"><a href="#thinBackup备份" class="headerlink" title="thinBackup备份"></a>thinBackup备份</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;登录jenkins——&gt;系统管理——&gt;插件管理<br><img src="https://img.xxlaila.cn/1571101180571.jpg" alt="img"><br>安装完成之后重启jenkins服务，登录jenkins在系统管理界面可以看到<br><img src="https://img.xxlaila.cn/1571101557754.jpg" alt="img"></p><h4 id="配置ThinBackup"><a href="#配置ThinBackup" class="headerlink" title="配置ThinBackup"></a>配置ThinBackup</h4><ul><li>点击ThinBackup<br><img src="https://img.xxlaila.cn/1571101640273.jpg" alt="img"><br>可以看到有三个选项:</li><li>Backup Now: 手动立即备份</li><li>Restore: 恢复备份</li><li>Settings: 备份参数的设置</li></ul><h5 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下面是我的备份参数，可以根据自己的需要自己设定备份参数，设置好友save即可，<code>Backup schedule for full backups</code>意思是周一到周五每天凌晨两点进行备份<br><img src="https://img.xxlaila.cn/1571102057919.jpg" alt="img"></p><h5 id="Restore"><a href="#Restore" class="headerlink" title="Restore"></a>Restore</h5><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;备份文件是以日期+时间节点组成的文件名，我们恢复什么时间段的，点击进行恢复，<br><img src="https://img.xxlaila.cn/1571102188007.jpg" alt="img"></p><h3 id="Periodic-Backup"><a href="#Periodic-Backup" class="headerlink" title="Periodic Backup"></a>Periodic Backup</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;备份除了上面提到的插件还有一个插件是<code>Periodic Backup</code>，安装<code>Periodic Backup</code>不阐述，安装完成后可以在系统管理菜单下面有一个<code>Periodic Backup Manager</code>菜单<br><img src="https://img.xxlaila.cn/1571709136813.jpg" alt="img"><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;打开<code>Periodic Backup Manager</code>，第一次打开是没有任何东西的，需要我们自己去建立一个规则，点击<code>Configure</code><br><img src="https://img.xxlaila.cn/1571709270639.jpg" alt="img"></p><p>配置项很简单:</p><ul><li>Temporary Directory: 临时目录</li><li>Backup schedule (cron): 进行备份cron的表达式，填写完成后点击<code>Validate cron syntax</code>进行验证</li><li>Maximum backups in location: 最大位置备份，保留多少个备份文件</li><li>Store no older than (days): 保留的时间</li><li>File Management Strategy: 备份策略<ul><li>ConfigOnly: 只备份配置文件</li><li>FullBackup: 进行全量备份，可以通过Excludes list中填入Ant风格表达式，排除不希望备份的文件，多个表达式使用分号分隔</li></ul></li><li>Storage Strategy: 存储策略，就是是否需要进行压缩存储</li><li>Backup Location: 备份的位置，都是本地目录<br><img src="https://img.xxlaila.cn/1571709879768.jpg" alt="img"></li></ul><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri Dec 13 2019 17:23:13 GMT+0800 (China Standard Time) --&gt;&lt;h3 id=&quot;jenkins-备份&quot;&gt;&lt;a href=&quot;#jenkins-备份&quot; class=&quot;headerlink&quot; title=&quot;jenkins 备份&quot;&gt;&lt;/a&gt;jenkins 备份&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;当jenkins在用起来的时候，我们难保他不会出故障，但是出了故障我们怎么做到快速的恢复呢，这时备份就显得尤为重要了。但jenkins本身不提供备份的功能，
    
    </summary>
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://www.xxlaila.cn/tags/jenkins/"/>
    
  </entry>
  
</feed>
