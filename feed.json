{"title":"懒羊羊","description":"星际拾荒者","language":"zh-CN","link":"https://xxlaila.github.io","pubDate":"Sat, 10 Aug 2019 23:42:34 GMT","lastBuildDate":"Mon, 12 Aug 2019 01:46:51 GMT","generator":"hexo-generator-json-feed","webMaster":"xxlaila","items":[{"title":"Centos 5.5 安装DRBD","link":"https://xxlaila.github.io/2019/08/11/Centos-5-5-安装DRBD/","description":"Centos5.5 32bit安装DRBD 安装前准备 节点类型 IP地址规划 主机名 主用节点 192.168.1.101 node2 备用节点 192.168.1.102 node1 磁盘 两台10G磁盘 在主节点安装DRBD1[root@node2 ~]# yum -y install kmod-drbd83 drbd83 安装成功之后/sbin目录下面有drbdadm，drbdmeta，drbdsetup命令，以及/etc /init.d/drbd启动脚本。 备用节点安装DRBD 1[root@node1 ~]# yum -y install kmod-drbd83 drbd83 安装完成后。默认配置文件/etc/drbd.conf，以下是两台的主机配置实例:","pubDate":"Sat, 10 Aug 2019 23:42:34 GMT","guid":"https://xxlaila.github.io/2019/08/11/Centos-5-5-安装DRBD/","category":"DRBD"},{"title":"oracle ORA-12519","link":"https://xxlaila.github.io/2019/08/10/oracle-ORA-12519/","description":"oracle ORA-12519错误解决今天遇到做系统压力测试的时候，系统报了一个错误OERR: ORA-12519 TNS:no appropriate service handler found 在网上搜索了一下oralc的错误信息ORA-12519，解决办法挺多的，这里记录一下 登陆oracle的服务器，在登陆oracle数据库1sqlplus \"/as sysdba\" 首先检查process和session的使用情况","pubDate":"Sat, 10 Aug 2019 09:01:07 GMT","guid":"https://xxlaila.github.io/2019/08/10/oracle-ORA-12519/","category":"ORA-12519"},{"title":"nginx https","link":"https://xxlaila.github.io/2019/08/10/nginx-https/","description":"nginx http 强制跳转到https 方法一123if ($scheme = http ) &#123; return 301 https://$host$request_uri;&#125; 列子 123456789server &#123; listen 80; listen 443; server_name xxx.test.com; index index.html index.php index.htm; if ($scheme = http ) &#123; return 301 https://$host$request_uri; &#125;&#125; 方法二123if ($server_port = 80 ) &#123; return 301 https://$host$request_uri;&#125; 列子","pubDate":"Sat, 10 Aug 2019 08:00:14 GMT","guid":"https://xxlaila.github.io/2019/08/10/nginx-https/","category":"nginx"},{"title":"haproxy keepalived ","link":"https://xxlaila.github.io/2019/08/10/haproxy-keepalived/","description":"本文主要是代理kubernetes master的高可用。 安装haproxy和keepalived12# yum -y install keepalived.x86_64# yum -y install haproxy18u.x86_64 2、配置haproxy12345678910111213141516171819202122232425262728293031323334353637383940414243# cat /etc/haproxy/haproxy.cfgglobal log 127.0.0.1 local0 err maxconn 50000 uid 99 gid 99 #daemon nbproc 1 pidfile haproxy.piddefaults mode http log 127.0.0.1 local0 err maxconn 50000 retries 3 timeout connect 5s timeout client 30s timeout server 30s timeout check 2slisten admin_stats mode http bind 0.0.0.0:1080 log 127.0.0.1 local0 err stats refresh 30s stats uri /haproxy-status stats realm Haproxy\\ Statistics stats auth admin:admin1 stats hide-version stats admin if TRUEfrontend k8s-https bind 0.0.0.0:8443 mode tcp #maxconn 50000 default_backend k8s-httpsbackend k8s-https mode tcp balance roundrobin server k8s-master-01 172.21.17.4:6443 weight 1 maxconn 1000 check inter 2000 rise 2 fall 3 server k8s-master-02 172.21.16.231:6443 weight 1 maxconn 1000 check inter 2000 rise 2 fall 3 server k8s-master-03 172.21.16.240:6443 weight 1 maxconn 1000 check inter 2000 rise 2 fall 3","pubDate":"Sat, 10 Aug 2019 03:52:00 GMT","guid":"https://xxlaila.github.io/2019/08/10/haproxy-keepalived/","category":"haproxy,keepalived, haproxy+keepalived,kubernetes"},{"title":"k8s-prometheus","link":"https://xxlaila.github.io/2019/08/10/k8s-prometheus/","description":"Prometheus是一个集数据收集存储、数据查询和数据图表显示于一身的开源监控组件。本文主要讲解如何搭建Prometheus，并使用它监控Kubernetes集群。 1、下载相关yaml1234567891011# https://github.com/xxlaila/kubernetes-yaml/tree/master/prometheus-grafana# ls -lconfigmap.yamlgrafana-deploy.yamlgrafana-ingress.yamlgrafana-svc.yamlnode-exporter.yamlprometheus-deploy.yamlprometheus-svc.yamlrbac-setup.yamlprometheus-ingress.yaml 2、开始部署2.1、采用daemonset方式部署node-exporter组件1# kubectl create -f node-exporter.yaml","pubDate":"Sat, 10 Aug 2019 03:37:34 GMT","guid":"https://xxlaila.github.io/2019/08/10/k8s-prometheus/","category":"Prometheus, kubernetes"},{"title":"kubedns插件配置","link":"https://xxlaila.github.io/2019/08/10/kubedns插件配置/","description":"安装和配置kubedns插件1、配置文件准备下载官方的yaml文件目录：kubernetes/cluster/addons/dns。该插件直接使用kubernetes部署,yaml文件经过修改完成部署 1234567891011121314151617# git clone https://github.com/xxlaila/kubernetes-yaml.git# cd kubernetes-yaml/coredns# sed -i 's/10.96.0.10/10.254.0.2/g' coredns-service.yaml# kubectl create -f ./# kubectl get pods,svc,rs -n kube-systemNAME READY STATUS RESTARTS AGEpod/coredns-68676b6b88-l7b5g 1/1 Running 0 16mNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGEservice/coredns ClusterIP 10.254.0.2 &lt;none&gt; 53/UDP,53/TCP 16mNAME DESIRED CURRENT READY AGEreplicaset.extensions/coredns-68676b6b88 1 1 1 16m# kubectl get pods -o wide -n kube-systemNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATEScoredns-68676b6b88-l7b5g 1/1 Running 0 40m 10.254.28.2 172.21.16.248 &lt;none&gt; &lt;none&gt; 2、安装和配置dashboard官方配置文件kubernetes/cluster/addons/dashboard，这里已经修改过了，经过测试部署，直接进入dashboard目录，修改inages参数进行部署","pubDate":"Sat, 10 Aug 2019 03:25:12 GMT","guid":"https://xxlaila.github.io/2019/08/10/kubedns插件配置/","category":"kube-dns,kubernetes, dashboard, kube-dashboard"},{"title":"kubernetes node节点安装","link":"https://xxlaila.github.io/2019/08/10/kubernetes-node节点安装/","description":"More: master节点安装请参考 1、部署kubernetes node节点Kubernetes node节点包含如下组件： Flanneld: 之前单机节点安装没有配置TLS，现在需要在service配置文件中增加TLS配置 Docker: version 18.06.2-ce kubelet kube-proxy node节点需要的文件 1234# ls /etc/kubernetes/sslbootstrap.kubeconfig kube-proxy.kubeconfig ssl token.csv# ls /etc/kubernetesadmin-key.pem admin.pem ca-key.pem ca.pem kube-proxy-key.pem kube-proxy.pem kubernetes-csr.json kubernetes-key.pem kubernetes.pem 1.1、安装flanneld123# mv kubernetes /etc/ &amp;&amp; chown -R root: /etc/kubernetes# wget https://github.com/coreos/flannel/releases/download/v0.11.0/flannel-v0.11.0-linux-amd64.tar.gz# tar zxf flannel-v0.11.0-linux-amd64.tar.gz &amp;&amp; mv flanneld mk-docker-opts.sh /usr/bin/ &amp;&amp; rm -rf flannel-v0.11.0-linux-amd64.tar.gz 1.1.1、flanneld启动配置文件1234567891011121314151617# cat /lib/systemd/system/flanneld.service[Unit]Description=Flanneld overlay address etcd agentAfter=network.targetAfter=network-online.targetWants=network-online.targetAfter=etcd.serviceBefore=docker.service[Service]Type=notifyEnvironmentFile=/etc/sysconfig/flanneldExecStart=/usr/bin/flanneld -etcd-endpoints=$&#123;FLANNEL_ETCD&#125; $FLANNEL_OPTIONSExecStartPost=/usr/bin/mk-docker-opts.sh -k DOCKER_NETWORK_OPTIONS -d /run/flannel/subnet.envRestart=on-failure[Install]WantedBy=multi-user.targetRequiredBy=docker.service","pubDate":"Fri, 09 Aug 2019 22:56:05 GMT","guid":"https://xxlaila.github.io/2019/08/10/kubernetes-node节点安装/","category":"kubernetes, kubernetes v13.3安装"},{"title":"kubernetes v1.13.3安装","link":"https://xxlaila.github.io/2019/08/09/kubernetes-v1-13-3安装/","description":"1、 环境准备 ip type docker os k8s version 172.21.17.4 master,etcd CentOS Linux release 7.4.1708 v1.13.3 172.21.16.230 master,etcd CentOS Linux release 7.4.1708 172.21.16.240 master,etcd CentOS Linux release 7.4.1708 172.21.16.244 node,flanneld,ha+kee 18.06.2-ce CentOS Linux release 7.4.1708 172.21.16.248 node,flanneld,ha+kee 18.06.2-ce CentOS Linux release 7.4.1708 172.21.16.45 vip CentOS Linux release 7.4.1708 2、增加docker 源123# yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo 2.1、根据实际查找当前版本 (可选) 1# yum list docker-ce --showduplicates | sort -r 2.2.如果确定了版本,直接安装,如果要装17。03直接修改下面数字即可 1# yum -y install docker-ce-18.06.2.ce-3.el7 # 主意版本填写包名的格式. 2.3 开启docker服务,和开机启动1# systemctl start docker &amp;&amp; systemctl enable docker 3、部署ETC集群","pubDate":"Fri, 09 Aug 2019 14:18:30 GMT","guid":"https://xxlaila.github.io/2019/08/09/kubernetes-v1-13-3安装/","category":"kubernetes"},{"title":"vsftpd安装","link":"https://xxlaila.github.io/2019/08/09/vsftpd安装/","description":"Centos下ftp的安装一般采用的是vsftpd，但是在ftp的模式中又有几个用户配置项需要注意，有些人喜欢用本地用户去登陆FTP，虽然在建立本地用户的时候加了/sbin/nologin参数，但是这个还是不够安全，而且这样权限控制也不是很好，他们都是统一的控制权限，这里采用虚拟用户前来配置。虚拟用户配合防火墙selinux还有单个用户的权限，这使得FTP有着足够的安全。而且权限控制特别灵活，修改一个用户的权限不会影响到其他用户。centos 系统版本(5.5、5.3、6.0、6.5) 首先我们安装vsftpd1[root@RAID1 ~]# yum –y install vsftpd 2、启动和加载vsftp12[root@RAID1 ~]# service vsftpd restart[root@RAID1 ~]# chkconfig –level 35 vsftpd on 3、开始配置vsftpdVsftpd的配置文件在/etc/vsftpd下面，在配置之前我们先cp一份做备份用以免发生意外(做什么都要随手备份，因为没有一万，只有万一。) 12[root@RAID1 ~]# cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak[root@RAID1 ~]# vim /etc/vsftpd/vsftpd.conf vsftpd的参数介绍","pubDate":"Fri, 09 Aug 2019 13:52:47 GMT","guid":"https://xxlaila.github.io/2019/08/09/vsftpd安装/","category":"vsftpd"},{"title":"TeamViewer mac破解","link":"https://xxlaila.github.io/2019/08/09/TeamViewer-mac破解/","description":"TeamViewer14.4 MAC破解在终端执行以下命令12sudo python TeamViewer-id-changer.py使用mac自带python2.7 执行即可","pubDate":"Fri, 09 Aug 2019 12:25:56 GMT","guid":"https://xxlaila.github.io/2019/08/09/TeamViewer-mac破解/","category":"TeamViewer"},{"title":"jenkins job管理","link":"https://xxlaila.github.io/2019/08/09/jenkins-job管理/","description":"需求 介绍: 由于公司的ci用于编译的环境比较多，为了更好的区分，为每一个环境建立了一个view 痛点: 运维人员在建立job的时候需要到对应的view下面建立，虽然这不是狠痛苦，但是还是不太方便。 解决: 人员登陆默认是在all view下面，每个运维人员在这下面建立job，然后每个view根据自己的规则吧对应的job添加进来。job规则自己提前定义好 1、安装jenkins插件view job 过滤插件view-job-filters，安装过程不累赘 2、配置view规则这里设置两个前端和一个后端实例","pubDate":"Fri, 09 Aug 2019 11:36:49 GMT","guid":"https://xxlaila.github.io/2019/08/09/jenkins-job管理/","category":"jenkins, jenkins job,"},{"title":"jenkins用户权限配置","link":"https://xxlaila.github.io/2019/08/09/jenkins用户权限配置/","description":"1、jenkins用户权限 可以集成gitlab、jenkins专有账户、LDAP、Servlet容器代理、Unix用户/组数据库 2、授权策略 Gitlab Commiter Authorization Strategy Role-Based Strategy 任何用户可以做任何事(没有任何限制) 安全矩阵 登录用户可以做任何事 遗留模式 项目矩阵授权策略 3、插件安装安装插件：Role-based Authorization Strategy","pubDate":"Fri, 09 Aug 2019 08:05:59 GMT","guid":"https://xxlaila.github.io/2019/08/09/jenkins用户权限配置/","category":"jenkins, ci/cd"},{"title":"mongodb_replica","link":"https://xxlaila.github.io/2019/08/09/mongodb-replica/","description":"Mongodb replica set安装加认证，这里使用的是keyFile进行认证，之前看过很多文章，坑一大堆，这里是看了两天的官方文档进行的安装，并用户生产，配置文件参数贴一部分,三个带有数据集的节点组成的复制集拥有，架构图如下，参考官方 一个主节点，两个从节点，这两个从节点都可以在选举中升级为主节点 环境三台服务器 123primary: 192.168.32.7secaodray: 192.168.32.11secondary: 192.168.32.14 1、安装mongodb1.1、每个节点都需要操作123456789# sudo vim /etc/yum.repos.d/mongodb-enterprise.repo[mongodb-enterprise]name=MongoDB Enterprise Repositorybaseurl=https://repo.mongodb.com/yum/redhat/$releasever/mongodb-enterprise/3.4/$basearch/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc # sudo yum install -y mongodb-enterprise 注意：如果采用源码包方式安装需要安装一下插件","pubDate":"Fri, 09 Aug 2019 06:46:44 GMT","guid":"https://xxlaila.github.io/2019/08/09/mongodb-replica/","category":"数据库"},{"title":"Hello World","link":"https://xxlaila.github.io/2019/08/09/hello-world/","description":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","pubDate":"Fri, 09 Aug 2019 03:55:49 GMT","guid":"https://xxlaila.github.io/2019/08/09/hello-world/","category":""}]}