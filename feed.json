{"title":"懒羊羊","description":"运维","language":"zh-CN","link":"https://xxlaila.github.io","pubDate":"Fri, 09 Aug 2019 08:05:59 GMT","lastBuildDate":"Fri, 09 Aug 2019 08:13:20 GMT","generator":"hexo-generator-json-feed","webMaster":"xxlaila","items":[{"title":"jenkins用户权限配置","link":"https://xxlaila.github.io/2019/08/09/jenkins用户权限配置/","description":"1、jenkins用户权限可以集成gitlab、jenkins专有账户、LDAP、Servlet容器代理、Unix用户/组数据库 2、授权策略Gitlab Commiter Authorization StrategyRole-Based Strategy任何用户可以做任何事(没有任何限制)安全矩阵登录用户可以做任何事遗留模式项目矩阵授权策略 3、插件安装安装插件：Role-based Authorization Strategy 4、jenkins设置系统管理——&gt;全局安全配置——&gt; 回到系统管理界面，就可以看到多出来一个插件: Mangge and Assing Roles 权限设置进入Manager and Assign Roles——&gt;Manage Roles,这里建立了四个权限，分别来对应不同的人员 创建项目角色: 回到Manage and Assign Roles界面 6、配置角色选择Assign Roles,用户新建以后，根据用户不同类型的勾选不同的权限,","pubDate":"Fri, 09 Aug 2019 08:05:59 GMT","guid":"https://xxlaila.github.io/2019/08/09/jenkins用户权限配置/","category":"jenkins, ci/cd"},{"title":"mongodb_replica","link":"https://xxlaila.github.io/2019/08/09/mongodb-replica/","description":"Mongodb replica set安装加认证，这里使用的是keyFile进行认证，之前看过很多文章，坑一大堆，这里是看了两天的官方文档进行的安装，并用户生产，配置文件参数贴一部分,三个带有数据集的节点组成的复制集拥有，架构图如下，参考官方 一个主节点，两个从节点，这两个从节点都可以在选举中升级为主节点 环境三台服务器 123primary: 192.168.32.7secaodray: 192.168.32.11secondary: 192.168.32.14 1、安装mongodb1.1、每个节点都需要操作123456789# sudo vim /etc/yum.repos.d/mongodb-enterprise.repo[mongodb-enterprise]name=MongoDB Enterprise Repositorybaseurl=https://repo.mongodb.com/yum/redhat/$releasever/mongodb-enterprise/3.4/$basearch/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc # sudo yum install -y mongodb-enterprise 注意：如果采用源码包方式安装需要安装一下插件 1# sudo yum install cyrus-sasl cyrus-sasl-plain cyrus-sasl-gssapi krb5-libs lm_sensors-libs net-snmp-agent-libs net-snmp openssl rpm-libs tcp_wrappers-libs libcurl 2、修改mongodb的配置文件(每个节点均操作)自定义mongodb的目录12345678910111213141516# mkdir /opt/mongodb/&#123;data,conf,logs&#125; -p# sudo vim /etc/mongod.conf systemLog: destination: file logAppend: true path: /opt/mongodb/logs/mongod.logstorage: dbPath: /opt/mongodb/data journal: enabled: trueprocessManagement: fork: true pidFilePath: /opt/mongodb/logs/mongod.pidnet: port: 27017 bindIp: 0.0.0.0 3、生成密钥文件(在mong01上操作)1234# openssl rand -base64 756 &gt; ／opt/mongodb/conf/mongo-keyfile# sudo chmod 400 /opt/mongo/mongo-keyfile# scp –r mongo-keyfile user@192.168.32.11:/opt/mongodb/conf# scp –r mongo-keyfile user@192.168.32.14:/opt/mongodb/conf 4、修改mongodb的配置1234security: keyFile: /opt/mongodb/conf/mongo-keyfilereplication: replSetName: xxlaila01（可变化，自定义） 分别在三台服务器上启动mongodb 1# mongod --config /etc/mongod.conf 5、建立集群在你需要认为是主节点的服务器进行mongodb的登陆，和账户权限的建立，这里我选择的192.168.32.7 1mongo --shell --host 127.0.0.1 登陆进去以后可以进行一个简单的命令进行查看 6、把服务器加入副本集12MongoDB Enterprise &gt; config = &#123; _id:\"kxlprod01\",members:[ &#123;_id:0,host:\"192.168.32.7:27017\"&#125;,... &#123;_id:1,host:\"192.168.32.11:27017\"&#125; ,&#123;_id:2,host:\"192.168.32.14:27017\"&#125;] &#125; config = { _id:”kxlprod01”,members:[ {_id:0,host:”192.168.32.7:27017”},{_id:1,host:”192.168.32.11:27017”} ,{_id:2,host:”192.168.32.14:27017”}] }，增加内容 6.1 看当前副本集的状态利用rs.status()命令可以查看当前副本集的状态 1&gt; rs.status() 这里提示配置还没有加载到mongodb副本里面 6.2、加载配置到副本集1&gt; rs.initiate(config) 再次查看副本的状态就可以看到mongodb的副本集已建立，如果此时主节点未被选举出来，稍微等一会就成功 7、创建mongodb副本集认证下面两行我们可以看到第一次主节点没有选举成功，随即我们在回车PRIMARY节点选举成功了，下面我们创建一个管理员账户 12345678910111213141516MongoDB Enterprise xxlaila01:SECONDARY&gt; admin = db.getSiblingDB(\"admin\")MongoDB Enterprise xxlaila01:PRIMARY&gt;admin.createUser( &#123; user: \"root\", pwd: \"123456\", roles: [ &#123; role: \"userAdminAnyDatabase\", db: \"admin\" &#125; ] &#125;)db.getSiblingDB(\"admin\").auth(\"root\", \"123456\" ) 7.1、创建集群账户创建一个集群管理账户，集群账户具有管理整个副本集的 12345678910$ mongo -u \"root\" -p \"123456\" --authenticationDatabase \"admin\"db.getSiblingDB(\"admin\").createUser( &#123; \"user\" : \"manger\", \"pwd\" : \"123456\", roles: [ &#123; \"role\" : \"clusterAdmin\", \"db\" : \"admin\" &#125; ] &#125;) 7.2 创建一个程序连接的账户1234567db.getSiblingDB(\"admin\").createUser( &#123; \"user\" : \"systemprod\", \"pwd\" : \"123456\", roles: [ &#123; \"role\" : \"root\", \"db\" : \"admin\" &#125; ] &#125;) 至此mongodb的副本集创建完成。测试没有问题,登陆其中一台SECONDARY服务器进行测试,这里测试192.168.32.11服务器 1234567$ mongo&gt; rs.status() # 这里提示没有权限（登录进来以后如果不是主几点，mognodb就会默认显示未secondary）&gt; use admin #&gt; db.getSiblingDB(\"admin\").auth(\"manger\", \"123456\") 完成后我们在执行rs.status()就可以看到副本集的信息 7.3 测试程序连接账户12345MongoDB Enterprise xxlaila01:SECONDARY&gt; db.getSiblingDB(\"admin\").auth(\"systemprod\", \"123456\" )&gt; show dbs; #会提示 “not master and slaveok=false”&gt; db.getMongo().setSlaveOk()&gt; show dbs; #在次执行会显示出结果 副本集没有读的权限，需要执行db.getMongo().setSlaveOk()","pubDate":"Fri, 09 Aug 2019 06:46:44 GMT","guid":"https://xxlaila.github.io/2019/08/09/mongodb-replica/","category":"数据库"},{"title":"Hello World","link":"https://xxlaila.github.io/2019/08/09/hello-world/","description":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","pubDate":"Fri, 09 Aug 2019 03:55:49 GMT","guid":"https://xxlaila.github.io/2019/08/09/hello-world/","category":""}]}